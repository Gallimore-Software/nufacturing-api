"use strict";
(self.webpackChunknufacturing = self.webpackChunknufacturing || []).push([
  [179],
  {
    20: (ui, Zt, D) => {
      D.d(Zt, { e: () => $ });
      var s = D(5619),
        x = D(8504),
        C = D(9397),
        p = D(6306),
        at = D(4506),
        lt = D(5879),
        bt = D(9862),
        B = D(1896),
        kt = D(703);
      let $ = (() => {
        class _ {
          constructor(jt, gt, Jt) {
            (this.http = jt),
              (this.router = gt),
              (this.jwtHelper = Jt),
              (this.isAuthenticated = new s.X(this.checkToken())),
              (this.userRoleSubject = new s.X(this.getUserRoleFromStorage()));
          }
          login(jt, gt) {
            return this.http
              .post(`${at.N.apiUrl}/users/login`, { email: jt, password: gt })
              .pipe(
                (0, C.b)((De) => {
                  localStorage.setItem("authData", JSON.stringify(De)),
                    this.isAuthenticated.next(!0),
                    this.userRoleSubject.next(De.user.role),
                    this.router.navigate(["/dashboard"]);
                }),
                (0, p.K)(
                  (De) => (console.error("Login failed", De), (0, x._)(De)),
                ),
              );
          }
          logout() {
            localStorage.removeItem("authData"),
              this.isAuthenticated.next(!1),
              this.userRoleSubject.next(null),
              this.router.navigate(["/login"]);
          }
          checkToken() {
            const jt = localStorage.getItem("authData");
            if (!jt) return !1;
            const { token: gt } = JSON.parse(jt);
            return !this.jwtHelper.isTokenExpired(gt);
          }
          get isLoggedIn() {
            return this.isAuthenticated.asObservable();
          }
          get userRole() {
            return this.userRoleSubject.asObservable();
          }
          getUserRoleFromStorage() {
            const jt = localStorage.getItem("authData");
            if (!jt) return null;
            const { user: gt } = JSON.parse(jt);
            return gt.role;
          }
          static #t = (this.ɵfac = function (gt) {
            return new (gt || _)(lt.LFG(bt.eN), lt.LFG(B.F0), lt.LFG(kt.N0));
          });
          static #e = (this.ɵprov = lt.Yz7({
            token: _,
            factory: _.ɵfac,
            providedIn: "root",
          }));
        }
        return _;
      })();
    },
    1942: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { DashboardModule: () => He });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      let p = (() => {
        class We {
          static #t = (this.ɵfac = function (_t) {
            return new (_t || We)();
          });
          static #e = (this.ɵcmp = C.Xpm({
            type: We,
            selectors: [["app-dashboard"]],
            decls: 2,
            vars: 0,
            consts: [[1, "nufacturing_dashboard"]],
            template: function (_t, St) {
              1 & _t &&
                (C.TgZ(0, "section", 0), C._UZ(1, "router-outlet"), C.qZA());
            },
            dependencies: [x.lC],
            styles: [
              ".subnav[_ngcontent-%COMP%]{padding:10px;margin:auto;display:flex;justify-content:flex-start;align-items:center;flex-wrap:wrap;height:10vh;position:fixed;width:100%;z-index:1000;backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);box-shadow:#00000040 0 54px 55px,#0000001f 0 -12px 30px,#0000001f 0 4px 6px,#0000002b 0 12px 13px,#00000017 0 -3px 5px}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;align-items:center;margin:2%}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:10px;margin-bottom:10px;padding:10px 20px;font-size:1rem;font-weight:600;text-transform:uppercase;color:#fff;background-color:#023f1f;border:none;border-radius:4px;transition:background-color .3s ease,box-shadow .3s ease}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#303f9f}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{background-color:#283593}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 5px #3f51b580}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{margin-right:0}.nufacturing_dashboard[_ngcontent-%COMP%]{width:90%;padding:5%;height:calc(100vh - 80px);justify-content:space-between;align-items:flex-start}mat-card[_ngcontent-%COMP%]{margin:10px;width:100%}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%]{text-align:left;font-weight:700}td[_ngcontent-%COMP%]{padding:8px}",
            ],
          }));
        }
        return We;
      })();
      var at = D(8077),
        lt = D(2096);
      let bt = (() => {
        class We {
          getKeyMetrics() {
            return (0, lt.of)({
              totalOrders: 832,
              ordersInProcess: 200,
              totalQuotes: 450,
              activeQuotes: 300,
              expiredQuotes: 50,
            });
          }
          getRecentActivity() {
            return (0, lt.of)([
              { details: "Order #1234 - Status: In Process", date: new Date() },
              { details: "Quote #5678 - Status: Active", date: new Date() },
              { details: "Order #4321 - Status: Completed", date: new Date() },
              { details: "Quote #8765 - Status: Expired", date: new Date() },
            ]);
          }
          getAlerts() {
            return (0, lt.of)([
              { message: "Payment overdue for Order #1234", date: new Date() },
              {
                message: "New Quote #5678 awaiting approval",
                date: new Date(),
              },
              { message: "Inventory low for Product XYZ", date: new Date() },
              {
                message: "Order #4321 delivered successfully",
                date: new Date(),
              },
            ]);
          }
          static #t = (this.ɵfac = function (_t) {
            return new (_t || We)();
          });
          static #e = (this.ɵprov = C.Yz7({
            token: We,
            factory: We.ɵfac,
            providedIn: "root",
          }));
        }
        return We;
      })();
      var B = D(5195),
        kt = D(617);
      function $(We, Re) {
        if (
          (1 & We &&
            (C.TgZ(0, "mat-card", 12)(1, "mat-card-header")(2, "h3"),
            C._uU(3),
            C.qZA()(),
            C.TgZ(4, "mat-card-content"),
            C._uU(5),
            C.qZA()()),
          2 & We)
        ) {
          const wt = Re.$implicit;
          C.xp6(3), C.Oqu(wt.title), C.xp6(2), C.hij(" ", wt.value, " ");
        }
      }
      function _(We, Re) {
        if (
          (1 & We &&
            (C.TgZ(0, "div", 13)(1, "span"),
            C._uU(2),
            C.qZA(),
            C.TgZ(3, "span", 14),
            C._uU(4),
            C.ALo(5, "date"),
            C.qZA()()),
          2 & We)
        ) {
          const wt = Re.$implicit;
          C.xp6(2), C.Oqu(wt.details), C.xp6(2), C.Oqu(C.lcZ(5, 2, wt.date));
        }
      }
      function A(We, Re) {
        if (
          (1 & We &&
            (C.TgZ(0, "div", 13)(1, "span"),
            C._uU(2),
            C.qZA(),
            C.TgZ(3, "span", 15),
            C._uU(4),
            C.ALo(5, "date"),
            C.qZA(),
            C.TgZ(6, "mat-icon", 16),
            C._uU(7, "notifications"),
            C.qZA()()),
          2 & We)
        ) {
          const wt = Re.$implicit;
          C.xp6(2), C.Oqu(wt.message), C.xp6(2), C.Oqu(C.lcZ(5, 2, wt.date));
        }
      }
      const gt = [
        {
          path: "",
          component: p,
          children: [
            { path: "", redirectTo: "dashboard-page", pathMatch: "full" },
            {
              path: "dashboard-page",
              component: (() => {
                class We {
                  constructor(wt) {
                    (this.dashboardService = wt),
                      (this.keyMetrics = []),
                      (this.recentActivity = []),
                      (this.alerts = []),
                      at.kL.register(...at.zX);
                  }
                  ngOnInit() {
                    this.loadKeyMetrics(),
                      this.loadRecentActivity(),
                      this.loadAlerts(),
                      this.initializeCharts();
                  }
                  loadKeyMetrics() {
                    this.dashboardService.getKeyMetrics().subscribe((wt) => {
                      this.keyMetrics = [
                        { title: "Total Orders", value: wt.totalOrders },
                        {
                          title: "Orders In Process",
                          value: wt.ordersInProcess,
                        },
                        { title: "Total Quotes", value: wt.totalQuotes },
                        { title: "Active Quotes", value: wt.activeQuotes },
                        { title: "Expired Quotes", value: wt.expiredQuotes },
                      ];
                    });
                  }
                  loadRecentActivity() {
                    this.dashboardService
                      .getRecentActivity()
                      .subscribe((wt) => {
                        this.recentActivity = wt;
                      });
                  }
                  loadAlerts() {
                    this.dashboardService.getAlerts().subscribe((wt) => {
                      this.alerts = wt;
                    });
                  }
                  initializeCharts() {
                    const _t = document
                      .getElementById("salesPurchaseChart")
                      ?.getContext("2d");
                    _t &&
                      new at.kL(_t, {
                        type: "bar",
                        data: {
                          labels: [
                            "Jan",
                            "Feb",
                            "Mar",
                            "Apr",
                            "May",
                            "Jun",
                            "Jul",
                            "Aug",
                            "Sep",
                            "Oct",
                            "Nov",
                            "Dec",
                          ],
                          datasets: [
                            {
                              label: "Sales",
                              data: [
                                3e4, 4e4, 35e3, 5e4, 45e3, 6e4, 7e4, 8e4, 75e3,
                                9e4, 85e3, 1e5,
                              ],
                              backgroundColor: "rgba(54, 162, 235, 0.7)",
                              borderColor: "rgba(54, 162, 235, 1)",
                              borderWidth: 1,
                              barPercentage: 0.6,
                              categoryPercentage: 0.8,
                            },
                            {
                              label: "Purchase",
                              data: [
                                2e4, 3e4, 25e3, 4e4, 35e3, 5e4, 6e4, 7e4, 65e3,
                                8e4, 75e3, 9e4,
                              ],
                              backgroundColor: "rgba(75, 192, 192, 0.7)",
                              borderColor: "rgba(75, 192, 192, 1)",
                              borderWidth: 1,
                              barPercentage: 0.6,
                              categoryPercentage: 0.8,
                            },
                          ],
                        },
                        options: {
                          responsive: !0,
                          scales: { y: { beginAtZero: !0 } },
                        },
                      });
                    const Pt = document
                      .getElementById("orderSummaryChart")
                      ?.getContext("2d");
                    Pt &&
                      new at.kL(Pt, {
                        type: "line",
                        data: {
                          labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun"],
                          datasets: [
                            {
                              label: "Ordered",
                              data: [1e3, 2e3, 1500, 3e3, 2500, 4e3],
                              borderColor: "rgba(255, 159, 64, 1)",
                              backgroundColor: "rgba(255, 159, 64, 0.2)",
                              fill: !0,
                            },
                            {
                              label: "Delivered",
                              data: [800, 1800, 1200, 2500, 2300, 3500],
                              borderColor: "rgba(153, 102, 255, 1)",
                              backgroundColor: "rgba(153, 102, 255, 0.2)",
                              fill: !0,
                            },
                          ],
                        },
                        options: {
                          responsive: !0,
                          scales: { y: { beginAtZero: !0 } },
                        },
                      });
                  }
                  static #t = (this.ɵfac = function (_t) {
                    return new (_t || We)(C.Y36(bt));
                  });
                  static #e = (this.ɵcmp = C.Xpm({
                    type: We,
                    selectors: [["app-dashboard-page"]],
                    decls: 41,
                    vars: 3,
                    consts: [
                      [1, "dashboard-overview"],
                      [1, "metrics-dashboard"],
                      [1, "metrics-container"],
                      ["class", "metric-card", 4, "ngFor", "ngForOf"],
                      [
                        2,
                        "display",
                        "flex",
                        "justify-content",
                        "space-between",
                        "gap",
                        "20px",
                      ],
                      [2, "flex", "1"],
                      ["id", "salesPurchaseChart"],
                      ["id", "orderSummaryChart"],
                      [1, "recent-activity", 2, "flex", "1"],
                      [1, "alert-boxes"],
                      ["class", "alert-box", 4, "ngFor", "ngForOf"],
                      [1, "alerts", 2, "flex", "1"],
                      [1, "metric-card"],
                      [1, "alert-box"],
                      [1, "date", 2, "font-weight", "400", "font-size", "12px"],
                      [
                        1,
                        "alert-date",
                        2,
                        "font-weight",
                        "400",
                        "font-size",
                        "12px",
                      ],
                      [1, "bell-icon", 2, "color", "teal"],
                    ],
                    template: function (_t, St) {
                      1 & _t &&
                        (C.TgZ(0, "main")(1, "mat-card", 0)(
                          2,
                          "mat-card-header",
                        )(3, "mat-card-title"),
                        C._uU(4, "Dashboard Overview"),
                        C.qZA()(),
                        C.TgZ(5, "mat-card-content")(6, "p"),
                        C._uU(
                          7,
                          " Welcome to your business dashboard. Here, you can get a quick summary of your key business metrics, recent activities, and important alerts. ",
                        ),
                        C.qZA()()(),
                        C.TgZ(8, "mat-card", 1)(9, "mat-card-header")(
                          10,
                          "mat-card-title",
                        ),
                        C._uU(11, "Key Metrics"),
                        C.qZA()(),
                        C.TgZ(12, "mat-card-content")(13, "div", 2),
                        C.YNc(14, $, 6, 2, "mat-card", 3),
                        C.qZA()()(),
                        C.TgZ(15, "div", 4)(16, "mat-card", 5)(
                          17,
                          "mat-card-header",
                        )(18, "mat-card-title"),
                        C._uU(19, "Sales & Purchase Overview"),
                        C.qZA()(),
                        C.TgZ(20, "mat-card-content"),
                        C._UZ(21, "canvas", 6),
                        C.qZA()(),
                        C.TgZ(22, "mat-card", 5)(23, "mat-card-header")(
                          24,
                          "mat-card-title",
                        ),
                        C._uU(25, "Order Summary"),
                        C.qZA()(),
                        C.TgZ(26, "mat-card-content"),
                        C._UZ(27, "canvas", 7),
                        C.qZA()()(),
                        C.TgZ(28, "div", 4)(29, "mat-card", 8)(
                          30,
                          "mat-card-header",
                        )(31, "mat-card-title"),
                        C._uU(32, "Recent Activity"),
                        C.qZA()(),
                        C.TgZ(33, "mat-card-content", 9),
                        C.YNc(34, _, 6, 4, "div", 10),
                        C.qZA()(),
                        C.TgZ(35, "mat-card", 11)(36, "mat-card-header")(
                          37,
                          "mat-card-title",
                        ),
                        C._uU(38, "Alerts/Notifications"),
                        C.qZA()(),
                        C.TgZ(39, "mat-card-content", 9),
                        C.YNc(40, A, 8, 4, "div", 10),
                        C.qZA()()()()),
                        2 & _t &&
                          (C.xp6(14),
                          C.Q6J("ngForOf", St.keyMetrics),
                          C.xp6(20),
                          C.Q6J("ngForOf", St.recentActivity),
                          C.xp6(6),
                          C.Q6J("ngForOf", St.alerts));
                    },
                    dependencies: [s.sg, B.a8, B.dn, B.dk, B.n5, kt.Hw, s.uU],
                    styles: [
                      "main[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;padding:20px}.mat-card[_ngcontent-%COMP%]{box-shadow:0 4px 8px #0000001a;margin-bottom:20px}.mat-card-header[_ngcontent-%COMP%]{background-color:#f5f5f5}.mat-card-title[_ngcontent-%COMP%]{color:#333;font-size:20px}.mat-card-content[_ngcontent-%COMP%]{padding:15px}.metrics-dashboard[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-wrap:nowrap}.metrics-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.metric-card[_ngcontent-%COMP%]{flex:1;margin:5px;text-align:center;justify-content:center;align-items:center;padding:20px;width:160px;border-radius:8px}.visualizations[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:10px}.chart-container[_ngcontent-%COMP%]{flex:1;padding:10px;background:#fff;border-radius:8px}canvas[_ngcontent-%COMP%]{width:100%!important;height:auto!important}.recent-activity[_ngcontent-%COMP%], .alerts[_ngcontent-%COMP%]{display:flex;gap:10px}.mat-card[_ngcontent-%COMP%]{flex:1}@media (max-width: 1024px){.metrics-dashboard[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%], .visualizations[_ngcontent-%COMP%]{flex-direction:column}.chart-container[_ngcontent-%COMP%]{min-width:100%}.recent-activity[_ngcontent-%COMP%], .alerts[_ngcontent-%COMP%]{flex-direction:column}}@media (max-width: 768px){.metric-card[_ngcontent-%COMP%]{flex-basis:100%}.recent-activity[_ngcontent-%COMP%], .alerts[_ngcontent-%COMP%]{flex-direction:column}}.alert-boxes[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;flex-direction:column}.alert-box[_ngcontent-%COMP%]{box-shadow:#0000001a 0 4px 12px;margin:10px;padding:10px;border-radius:8px;display:flex;justify-content:space-between}",
                    ],
                  }));
                }
                return We;
              })(),
            },
          ],
        },
      ];
      let Jt = (() => {
        class We {
          static #t = (this.ɵfac = function (_t) {
            return new (_t || We)();
          });
          static #e = (this.ɵmod = C.oAB({ type: We }));
          static #i = (this.ɵinj = C.cJS({
            imports: [x.Bz.forChild(gt), x.Bz],
          }));
        }
        return We;
      })();
      var De = D(9038),
        Ve = D(5313);
      let He = (() => {
        class We {
          static #t = (this.ɵfac = function (_t) {
            return new (_t || We)();
          });
          static #e = (this.ɵmod = C.oAB({ type: We }));
          static #i = (this.ɵinj = C.cJS({
            imports: [s.ez, Jt, B.QW, De.ie, kt.Ps, Ve.p0],
          }));
        }
        return We;
      })();
    },
    1279: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { TrainingModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-training"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"), C._uU(1, "training works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    9087: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { UsersModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-users"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ && (C.TgZ(0, "p"), C._uU(1, "users works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    3648: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { HumanResourcesModule: () => kt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class $ {
              static #t = (this.ɵfac = function (jt) {
                return new (jt || $)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: $,
                selectors: [["app-human-resources"]],
                decls: 2,
                vars: 0,
                template: function (jt, gt) {
                  1 & jt &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "human-resources works!"),
                    C.qZA());
                },
              }));
            }
            return $;
          })(),
          pathMatch: "full",
        },
        {
          path: "training",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 1279))
              .then(($) => $.TrainingModule),
        },
        {
          path: "users",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 9087))
              .then(($) => $.UsersModule),
        },
      ];
      let lt = (() => {
        class $ {
          static #t = (this.ɵfac = function (jt) {
            return new (jt || $)();
          });
          static #e = (this.ɵmod = C.oAB({ type: $ }));
          static #i = (this.ɵinj = C.cJS({
            imports: [x.Bz.forChild(at), x.Bz],
          }));
        }
        return $;
      })();
      var bt = D(1279),
        B = D(9087);
      let kt = (() => {
        class $ {
          static #t = (this.ɵfac = function (jt) {
            return new (jt || $)();
          });
          static #e = (this.ɵmod = C.oAB({ type: $ }));
          static #i = (this.ɵinj = C.cJS({
            imports: [s.ez, lt, bt.TrainingModule, B.UsersModule],
          }));
        }
        return $;
      })();
    },
    2427: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { FormulasModule: () => yi });
      var s = D(6814),
        x = D(617),
        C = D(1896),
        p = D(5879);
      let at = (() => {
        class pt {
          constructor() {
            this.dock = !1;
          }
          toggleDock() {
            this.dock = !this.dock;
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)();
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: pt,
            selectors: [["app-formulas"]],
            decls: 2,
            vars: 2,
            consts: [[1, "nufacturing_formulas"]],
            template: function (j, ct) {
              1 & j &&
                (p.TgZ(0, "section", 0), p._UZ(1, "router-outlet"), p.qZA()),
                2 & j && p.ekj("expanded", ct.dock);
            },
            dependencies: [C.lC],
            styles: [
              ".subnav[_ngcontent-%COMP%]{position:fixed;top:25%;right:0;width:20%;height:50vh;display:flex;justify-content:center;margin:auto;align-items:center;background-color:#92929280;backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);border-left:1px solid #ddd;z-index:1000;overflow-y:scroll;padding:20px;box-shadow:-2px 0 5px #0003;transition:right .3s ease}.subnav.collapsed[_ngcontent-%COMP%]{right:-20%}.subnav[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{cursor:pointer;position:absolute;top:10px;left:10px}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin-bottom:10px;padding:10px 20px;font-size:12px;text-transform:uppercase;color:#fff;background-color:#023f1f;border:none;border-radius:4px;transition:background-color .3s ease,box-shadow .3s ease}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#303f9f}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{background-color:#283593}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 5px #3f51b580}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button.active-link[_ngcontent-%COMP%]{background-color:#1e88e5}.nufacturing_formulas[_ngcontent-%COMP%]{margin-right:20%;padding:20px;transition:margin-right .3s ease}.nufacturing_formulas.expanded[_ngcontent-%COMP%]{margin-right:0}mat-card[_ngcontent-%COMP%]{margin:10px;width:100%}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%]{text-align:left;font-weight:700}td[_ngcontent-%COMP%]{padding:8px}",
            ],
          }));
        }
        return pt;
      })();
      var lt = D(7700),
        bt = D(6223),
        B = D(5195),
        kt = D(9157),
        $ = D(2032),
        _ = D(8525),
        A = D(3680),
        jt = D(2296);
      function gt(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Formula Name is required "),
          p.qZA());
      }
      function Jt(pt, vt) {
        if (
          (1 & pt && (p.TgZ(0, "mat-option", 16), p._uU(1), p.qZA()), 2 & pt)
        ) {
          const U = vt.$implicit;
          p.Q6J("value", U), p.xp6(1), p.hij(" ", U, " ");
        }
      }
      function De(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Product Type is required "),
          p.qZA());
      }
      function Ve(pt, vt) {
        if (
          (1 & pt && (p.TgZ(0, "mat-option", 16), p._uU(1), p.qZA()), 2 & pt)
        ) {
          const U = vt.$implicit;
          p.Q6J("value", U), p.xp6(1), p.hij(" ", U, " ");
        }
      }
      function He(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Unit of Measurement is required "),
          p.qZA());
      }
      function We(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Name is required "), p.qZA());
      }
      function Re(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Scientific Name is required "),
          p.qZA());
      }
      function wt(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Per Unit must be a positive number "),
          p.qZA());
      }
      function _t(pt, vt) {
        if (1 & pt) {
          const U = p.EpF();
          p.TgZ(0, "div", 17)(1, "mat-form-field", 3)(2, "mat-label"),
            p._uU(3, "Name"),
            p.qZA(),
            p._UZ(4, "input", 18),
            p.YNc(5, We, 2, 0, "mat-error", 5),
            p.qZA(),
            p.TgZ(6, "mat-form-field", 3)(7, "mat-label"),
            p._uU(8, "Scientific Name"),
            p.qZA(),
            p._UZ(9, "input", 19),
            p.YNc(10, Re, 2, 0, "mat-error", 5),
            p.qZA(),
            p.TgZ(11, "mat-form-field", 3)(12, "mat-label"),
            p._uU(13, "Per Unit"),
            p.qZA(),
            p._UZ(14, "input", 20),
            p.YNc(15, wt, 2, 0, "mat-error", 5),
            p.qZA(),
            p.TgZ(16, "button", 21),
            p.NdJ("click", function () {
              const ue = p.CHM(U).index,
                Wt = p.oxw();
              return p.KtG(Wt.removeActiveIngredient(ue));
            }),
            p.TgZ(17, "mat-icon"),
            p._uU(18, "remove_circle"),
            p.qZA()()();
        }
        if (2 & pt) {
          const U = vt.$implicit;
          let ct, ue, Wt;
          p.Q6J("formGroupName", vt.index),
            p.xp6(5),
            p.Q6J(
              "ngIf",
              null == (ct = U.get("name")) ? null : ct.hasError("required"),
            ),
            p.xp6(5),
            p.Q6J(
              "ngIf",
              null == (ue = U.get("scientificName"))
                ? null
                : ue.hasError("required"),
            ),
            p.xp6(5),
            p.Q6J(
              "ngIf",
              (null == (Wt = U.get("perUnit"))
                ? null
                : Wt.hasError("required")) ||
                (null == (Wt = U.get("perUnit")) ? null : Wt.hasError("min")),
            );
        }
      }
      function St(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Name is required "), p.qZA());
      }
      function Pt(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Scientific Name is required "),
          p.qZA());
      }
      function ee(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Per Unit must be a positive number "),
          p.qZA());
      }
      function Kt(pt, vt) {
        if (1 & pt) {
          const U = p.EpF();
          p.TgZ(0, "div", 17)(1, "mat-form-field", 3)(2, "mat-label"),
            p._uU(3, "Name"),
            p.qZA(),
            p._UZ(4, "input", 18),
            p.YNc(5, St, 2, 0, "mat-error", 5),
            p.qZA(),
            p.TgZ(6, "mat-form-field", 3)(7, "mat-label"),
            p._uU(8, "Scientific Name"),
            p.qZA(),
            p._UZ(9, "input", 19),
            p.YNc(10, Pt, 2, 0, "mat-error", 5),
            p.qZA(),
            p.TgZ(11, "mat-form-field", 3)(12, "mat-label"),
            p._uU(13, "Per Unit"),
            p.qZA(),
            p._UZ(14, "input", 20),
            p.YNc(15, ee, 2, 0, "mat-error", 5),
            p.qZA(),
            p.TgZ(16, "button", 21),
            p.NdJ("click", function () {
              const ue = p.CHM(U).index,
                Wt = p.oxw();
              return p.KtG(Wt.removeInactiveIngredient(ue));
            }),
            p.TgZ(17, "mat-icon"),
            p._uU(18, "remove_circle"),
            p.qZA()()();
        }
        if (2 & pt) {
          const U = vt.$implicit;
          let ct, ue, Wt;
          p.Q6J("formGroupName", vt.index),
            p.xp6(5),
            p.Q6J(
              "ngIf",
              null == (ct = U.get("name")) ? null : ct.hasError("required"),
            ),
            p.xp6(5),
            p.Q6J(
              "ngIf",
              null == (ue = U.get("scientificName"))
                ? null
                : ue.hasError("required"),
            ),
            p.xp6(5),
            p.Q6J(
              "ngIf",
              (null == (Wt = U.get("perUnit"))
                ? null
                : Wt.hasError("required")) ||
                (null == (Wt = U.get("perUnit")) ? null : Wt.hasError("min")),
            );
        }
      }
      const ze = function () {
        return [];
      };
      let mi = (() => {
        class pt {
          constructor(U, j, ct) {
            (this.fb = U),
              (this.dialogRef = j),
              (this.data = ct),
              (this.productTypes = [
                "Capsules",
                "Powder",
                "Gummies",
                "Tinctures",
                "Powder Stickpacks",
                "Liquid Stickpacks",
                "Pouches",
              ]),
              (this.unitOptions = {
                Capsules: ["mg", "g", "kg"],
                Powder: ["mg", "g", "kg"],
                Gummies: [
                  "mcg",
                  "mg",
                  "g",
                  "kg",
                  "ml",
                  "liter",
                  "gallons",
                  "ounces",
                ],
                Tinctures: ["ml", "liter"],
                "Powder Stickpacks": ["mg", "g", "kg"],
                "Liquid Stickpacks": ["ml", "liter"],
                Pouches: ["mg", "g", "kg", "ml", "liter"],
              }),
              (this.formulaForm = this.fb.group({
                code: [ct?.code || ""],
                name: [ct?.name || "", bt.kI.required],
                productType: [ct?.productType || "", bt.kI.required],
                unitOfMeasurement: [
                  ct?.unitOfMeasurement || "",
                  bt.kI.required,
                ],
                activeIngredients: this.fb.array([]),
                inactiveIngredients: this.fb.array([]),
                createdAt: [ct?.createdAt || new Date()],
                updatedAt: [ct?.updatedAt || new Date()],
              })),
              this.populateIngredients(
                "activeIngredients",
                ct?.activeIngredients || [],
              ),
              this.populateIngredients(
                "inactiveIngredients",
                ct?.inactiveIngredients || [],
              ),
              this.formulaForm
                .get("productType")
                ?.valueChanges.subscribe((ue) => {
                  this.updateUnitOptions(ue);
                });
          }
          get activeIngredients() {
            return this.formulaForm.get("activeIngredients");
          }
          get inactiveIngredients() {
            return this.formulaForm.get("inactiveIngredients");
          }
          populateIngredients(U, j) {
            const ct = this.formulaForm.get(U);
            j.forEach((ue) => {
              ct.push(
                this.fb.group({
                  name: [ue.name, bt.kI.required],
                  scientificName: [ue.scientificName, bt.kI.required],
                  perUnit: [ue.perUnit, [bt.kI.required, bt.kI.min(0)]],
                }),
              );
            });
          }
          addActiveIngredient() {
            this.activeIngredients.push(
              this.fb.group({
                name: ["", bt.kI.required],
                scientificName: ["", bt.kI.required],
                perUnit: [0, [bt.kI.required, bt.kI.min(0)]],
              }),
            );
          }
          removeActiveIngredient(U) {
            this.activeIngredients.removeAt(U);
          }
          addInactiveIngredient() {
            this.inactiveIngredients.push(
              this.fb.group({
                name: ["", bt.kI.required],
                scientificName: ["", bt.kI.required],
                perUnit: [0, [bt.kI.required, bt.kI.min(0)]],
              }),
            );
          }
          removeInactiveIngredient(U) {
            this.inactiveIngredients.removeAt(U);
          }
          onSubmit() {
            this.formulaForm.valid &&
              this.dialogRef.close(this.formulaForm.value);
          }
          updateUnitOptions(U) {
            const j = this.formulaForm.get("unitOfMeasurement");
            (this.unitOptions[U] || []).length > 0
              ? (j?.setValidators([bt.kI.required]),
                j?.updateValueAndValidity())
              : (j?.clearValidators(), j?.updateValueAndValidity());
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(p.Y36(bt.qu), p.Y36(lt.so), p.Y36(lt.WI));
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: pt,
            selectors: [["app-create-formulas"]],
            decls: 43,
            vars: 10,
            consts: [
              [1, "formula-form-container", "mat-elevation-z8"],
              [3, "formGroup", "ngSubmit"],
              [1, "form-group"],
              ["appearance", "outline"],
              ["matInput", "", "id", "name", "formControlName", "name"],
              [4, "ngIf"],
              ["id", "productType", "formControlName", "productType"],
              ["value", "", "disabled", ""],
              [3, "value", 4, "ngFor", "ngForOf"],
              [
                "id",
                "unitOfMeasurement",
                "formControlName",
                "unitOfMeasurement",
              ],
              ["formArrayName", "activeIngredients"],
              [
                "class",
                "ingredient-group",
                3,
                "formGroupName",
                4,
                "ngFor",
                "ngForOf",
              ],
              ["mat-button", "", "color", "primary", 3, "click"],
              ["formArrayName", "inactiveIngredients"],
              [1, "form-actions"],
              [
                "mat-raised-button",
                "",
                "color",
                "primary",
                "type",
                "submit",
                3,
                "disabled",
              ],
              [3, "value"],
              [1, "ingredient-group", 3, "formGroupName"],
              [
                "matInput",
                "",
                "placeholder",
                "Name",
                "formControlName",
                "name",
              ],
              [
                "matInput",
                "",
                "placeholder",
                "Scientific Name",
                "formControlName",
                "scientificName",
              ],
              [
                "matInput",
                "",
                "type",
                "number",
                "placeholder",
                "Per Unit",
                "formControlName",
                "perUnit",
              ],
              ["mat-icon-button", "", "color", "warn", 3, "click"],
            ],
            template: function (j, ct) {
              if (
                (1 & j &&
                  (p.TgZ(0, "div", 0)(1, "form", 1),
                  p.NdJ("ngSubmit", function () {
                    return ct.onSubmit();
                  }),
                  p.TgZ(2, "mat-card")(3, "mat-card-title"),
                  p._uU(4, "Basic Information"),
                  p.qZA(),
                  p.TgZ(5, "mat-card-content")(6, "div", 2)(
                    7,
                    "mat-form-field",
                    3,
                  )(8, "mat-label"),
                  p._uU(9, "Formula Name"),
                  p.qZA(),
                  p._UZ(10, "input", 4),
                  p.YNc(11, gt, 2, 0, "mat-error", 5),
                  p.qZA(),
                  p.TgZ(12, "mat-form-field", 3)(13, "mat-label"),
                  p._uU(14, "Product Type"),
                  p.qZA(),
                  p.TgZ(15, "mat-select", 6)(16, "mat-option", 7),
                  p._uU(17, "Select Product Type"),
                  p.qZA(),
                  p.YNc(18, Jt, 2, 2, "mat-option", 8),
                  p.qZA(),
                  p.YNc(19, De, 2, 0, "mat-error", 5),
                  p.qZA(),
                  p.TgZ(20, "mat-form-field", 3)(21, "mat-label"),
                  p._uU(22, "Unit of Measurement"),
                  p.qZA(),
                  p.TgZ(23, "mat-select", 9),
                  p.YNc(24, Ve, 2, 2, "mat-option", 8),
                  p.qZA(),
                  p.YNc(25, He, 2, 0, "mat-error", 5),
                  p.qZA()()()(),
                  p.TgZ(26, "mat-card")(27, "mat-card-title"),
                  p._uU(28, "Active Ingredients"),
                  p.qZA(),
                  p.TgZ(29, "mat-card-content", 10),
                  p.YNc(30, _t, 19, 4, "div", 11),
                  p.TgZ(31, "button", 12),
                  p.NdJ("click", function () {
                    return ct.addActiveIngredient();
                  }),
                  p._uU(32, " Add Active Ingredient "),
                  p.qZA()()(),
                  p.TgZ(33, "mat-card")(34, "mat-card-title"),
                  p._uU(35, "Inactive Ingredients"),
                  p.qZA(),
                  p.TgZ(36, "mat-card-content", 13),
                  p.YNc(37, Kt, 19, 4, "div", 11),
                  p.TgZ(38, "button", 12),
                  p.NdJ("click", function () {
                    return ct.addInactiveIngredient();
                  }),
                  p._uU(39, " Add Inactive Ingredient "),
                  p.qZA()()(),
                  p.TgZ(40, "div", 14)(41, "button", 15),
                  p._uU(42, " Submit Formula "),
                  p.qZA()()()()),
                2 & j)
              ) {
                let ue, Wt, le, It;
                p.xp6(1),
                  p.Q6J("formGroup", ct.formulaForm),
                  p.xp6(10),
                  p.Q6J(
                    "ngIf",
                    null == (ue = ct.formulaForm.get("name"))
                      ? null
                      : ue.hasError("required"),
                  ),
                  p.xp6(7),
                  p.Q6J("ngForOf", ct.productTypes),
                  p.xp6(1),
                  p.Q6J(
                    "ngIf",
                    null == (Wt = ct.formulaForm.get("productType"))
                      ? null
                      : Wt.hasError("required"),
                  ),
                  p.xp6(5),
                  p.Q6J(
                    "ngForOf",
                    ct.unitOptions[
                      null == (le = ct.formulaForm.get("productType"))
                        ? null
                        : le.value
                    ] || p.DdM(9, ze),
                  ),
                  p.xp6(1),
                  p.Q6J(
                    "ngIf",
                    null == (It = ct.formulaForm.get("unitOfMeasurement"))
                      ? null
                      : It.hasError("required"),
                  ),
                  p.xp6(5),
                  p.Q6J("ngForOf", ct.activeIngredients.controls),
                  p.xp6(7),
                  p.Q6J("ngForOf", ct.inactiveIngredients.controls),
                  p.xp6(4),
                  p.Q6J("disabled", ct.formulaForm.invalid);
              }
            },
            dependencies: [
              s.sg,
              s.O5,
              x.Hw,
              bt._Y,
              bt.Fj,
              bt.wV,
              bt.JJ,
              bt.JL,
              bt.sg,
              bt.u,
              bt.x0,
              bt.CE,
              B.a8,
              B.dn,
              B.n5,
              kt.KE,
              kt.hX,
              kt.TO,
              $.Nt,
              _.gD,
              A.ey,
              jt.lW,
              jt.RK,
            ],
            styles: [
              ".formula-form-container[_ngcontent-%COMP%]{padding:20px;display:flex;height:90vh;flex-direction:column}.formula-form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px}.formula-form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:16px}.formula-form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex:1;min-width:200px}.formula-form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   .mat-form-field-infix[_ngcontent-%COMP%]{padding:8px 12px}.formula-form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%]{font-weight:500}.formula-form-container[_ngcontent-%COMP%]   .ingredient-group[_ngcontent-%COMP%]{display:flex;gap:16px;align-items:center}.formula-form-container[_ngcontent-%COMP%]   .ingredient-group[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex:1}.formula-form-container[_ngcontent-%COMP%]   .ingredient-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{align-self:flex-end;margin-top:16px}.formula-form-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{margin-bottom:16px;max-height:400px;overflow-y:auto}.formula-form-container[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{font-size:1.25rem;font-weight:500;padding-bottom:0;color:#fff}.formula-form-container[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]{padding-top:0}.formula-form-container[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]{padding:16px 0;display:flex;justify-content:flex-end;gap:8px}.formula-form-container[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:120px}.formula-form-container[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-of-type{background:transparent;color:#333}.formula-form-container[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-of-type{background-color:#3f51b5;color:#fff}.formula-form-container[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-of-type:hover{background-color:#303f9f}",
            ],
          }));
        }
        return pt;
      })();
      var ie = D(5313),
        vi = D(1476),
        Ge = D(3566);
      let hi = (() => {
        class pt {
          constructor(U, j) {
            (this.dialogRef = U), (this.data = j);
          }
          onConfirm() {
            this.dialogRef.close(!0);
          }
          onCancel() {
            this.dialogRef.close(!1);
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(p.Y36(lt.so), p.Y36(lt.WI));
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: pt,
            selectors: [["app-confirm-dialog"]],
            decls: 10,
            vars: 1,
            consts: [
              [
                "mat-dialog-content",
                "",
                2,
                "font-size",
                "16px",
                "padding",
                "16px 24px",
                "color",
                "white",
              ],
              [
                "mat-dialog-title",
                "",
                2,
                "font-weight",
                "bold",
                "color",
                "#f44336",
                "padding-bottom",
                "16px",
                "font-size",
                "20px",
              ],
              [
                "mat-dialog-actions",
                "",
                2,
                "display",
                "flex",
                "justify-content",
                "flex-end",
                "padding",
                "0 24px 16px",
              ],
              [
                "mat-button",
                "",
                2,
                "margin",
                "0 8px",
                "min-width",
                "80px",
                3,
                "click",
              ],
              [
                "mat-button",
                "",
                "color",
                "primary",
                2,
                "margin",
                "0 8px",
                "min-width",
                "80px",
                3,
                "click",
              ],
            ],
            template: function (j, ct) {
              1 & j &&
                (p.TgZ(0, "div", 0)(1, "h1", 1),
                p._uU(2, " Confirm Action "),
                p.qZA(),
                p.TgZ(3, "p"),
                p._uU(4),
                p.qZA()(),
                p.TgZ(5, "div", 2)(6, "button", 3),
                p.NdJ("click", function () {
                  return ct.onCancel();
                }),
                p._uU(7, " Cancel "),
                p.qZA(),
                p.TgZ(8, "button", 4),
                p.NdJ("click", function () {
                  return ct.onConfirm();
                }),
                p._uU(9, " Delete "),
                p.qZA()()),
                2 & j && (p.xp6(4), p.Oqu(ct.data.message));
            },
            dependencies: [jt.lW],
            styles: [
              "mat-dialog-title[_ngcontent-%COMP%]{font-weight:700;color:#f44336;padding-bottom:16px;font-size:20px}mat-dialog-content[_ngcontent-%COMP%]{font-size:16px;padding:16px 24px}mat-dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:0 24px 16px}mat-dialog-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0 8px;min-width:80px}button.mat-button[_ngcontent-%COMP%]{min-width:80px}",
            ],
          }));
        }
        return pt;
      })();
      var Si = D(4506),
        Vi = D(9862);
      let qi = (() => {
        class pt {
          constructor(U) {
            (this.http = U),
              (this.apiUrl = `${Si.N.apiUrl}/product-development/formulas`);
          }
          getFormulas() {
            return this.http.get(this.apiUrl);
          }
          createFormula(U) {
            return this.http.post(this.apiUrl, U);
          }
          updateFormula(U, j) {
            return this.http.put(`${this.apiUrl}/${U}`, j);
          }
          deleteFormula(U) {
            return this.http.delete(`${this.apiUrl}/${U}`);
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(p.LFG(Vi.eN));
          });
          static #e = (this.ɵprov = p.Yz7({
            token: pt,
            factory: pt.ɵfac,
            providedIn: "root",
          }));
        }
        return pt;
      })();
      var Ie = D(20);
      function Fe(pt, vt) {
        if (1 & pt) {
          const U = p.EpF();
          p.TgZ(0, "div")(1, "button", 21),
            p.NdJ("click", function () {
              p.CHM(U);
              const ct = p.oxw();
              return p.KtG(ct.createNewFormula());
            }),
            p._uU(2, " Create New Formula "),
            p.qZA()();
        }
      }
      function xe(pt, vt) {
        1 & pt && (p.TgZ(0, "th", 22), p._uU(1, "SKU"), p.qZA());
      }
      function Ue(pt, vt) {
        if ((1 & pt && (p.TgZ(0, "td", 23), p._uU(1), p.qZA()), 2 & pt)) {
          const U = vt.$implicit;
          p.xp6(1), p.Oqu(U.sku);
        }
      }
      function Ft(pt, vt) {
        1 & pt && (p.TgZ(0, "th", 22), p._uU(1, "Display Name"), p.qZA());
      }
      function Mt(pt, vt) {
        if ((1 & pt && (p.TgZ(0, "td", 23), p._uU(1), p.qZA()), 2 & pt)) {
          const U = vt.$implicit;
          p.xp6(1), p.Oqu(U.displayName);
        }
      }
      function we(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "th", 22), p._uU(1, " Unit of Measurement "), p.qZA());
      }
      function Vt(pt, vt) {
        if ((1 & pt && (p.TgZ(0, "td", 23), p._uU(1), p.qZA()), 2 & pt)) {
          const U = vt.$implicit;
          p.xp6(1), p.hij(" ", U.unitOfMeasurement, " ");
        }
      }
      function re(pt, vt) {
        1 & pt && (p.TgZ(0, "th", 24), p._uU(1, "Product Type"), p.qZA());
      }
      function Le(pt, vt) {
        if ((1 & pt && (p.TgZ(0, "td", 23), p._uU(1), p.qZA()), 2 & pt)) {
          const U = vt.$implicit;
          p.xp6(1), p.Oqu(U.productType);
        }
      }
      function li(pt, vt) {
        1 & pt && (p.TgZ(0, "th", 24), p._uU(1, "Active Ingredients"), p.qZA());
      }
      function ii(pt, vt) {
        if ((1 & pt && (p.TgZ(0, "li"), p._uU(1), p.qZA()), 2 & pt)) {
          const U = vt.$implicit;
          p.xp6(1), p.AsE(" ", U.name, " (", U.perUnit, ") ");
        }
      }
      function Mi(pt, vt) {
        if (
          (1 & pt &&
            (p.TgZ(0, "td", 23)(1, "ul"),
            p.YNc(2, ii, 2, 2, "li", 25),
            p.qZA()()),
          2 & pt)
        ) {
          const U = vt.$implicit;
          p.xp6(2), p.Q6J("ngForOf", U.activeIngredients);
        }
      }
      function fi(pt, vt) {
        1 & pt &&
          (p.TgZ(0, "th", 24), p._uU(1, "Inactive Ingredients"), p.qZA());
      }
      function ri(pt, vt) {
        if ((1 & pt && (p.TgZ(0, "li"), p._uU(1), p.qZA()), 2 & pt)) {
          const U = vt.$implicit;
          p.xp6(1), p.AsE(" ", U.name, " (", U.perUnit, ") ");
        }
      }
      function te(pt, vt) {
        if (
          (1 & pt &&
            (p.TgZ(0, "td", 23)(1, "ul"),
            p.YNc(2, ri, 2, 2, "li", 25),
            p.qZA()()),
          2 & pt)
        ) {
          const U = vt.$implicit;
          p.xp6(2), p.Q6J("ngForOf", U.inactiveIngredients);
        }
      }
      function Be(pt, vt) {
        1 & pt && (p.TgZ(0, "th", 22), p._uU(1, "Created At"), p.qZA());
      }
      function Ne(pt, vt) {
        if (
          (1 & pt && (p.TgZ(0, "td", 23), p._uU(1), p.ALo(2, "date"), p.qZA()),
          2 & pt)
        ) {
          const U = vt.$implicit;
          p.xp6(1), p.hij(" ", p.xi3(2, 1, U.createdAt, "short"), " ");
        }
      }
      function Ri(pt, vt) {
        1 & pt && (p.TgZ(0, "th", 24), p._uU(1, "Actions"), p.qZA());
      }
      function gi(pt, vt) {
        if (1 & pt) {
          const U = p.EpF();
          p.TgZ(0, "button", 29),
            p.NdJ("click", function () {
              p.CHM(U);
              const ct = p.oxw().$implicit,
                ue = p.oxw();
              return p.KtG(ue.editFormulaItem(ct));
            }),
            p.TgZ(1, "mat-icon"),
            p._uU(2, "edit"),
            p.qZA()();
        }
      }
      function Xi(pt, vt) {
        1 & pt && (p.TgZ(0, "mat-icon"), p._uU(1, "remove"), p.qZA());
      }
      function _i(pt, vt) {
        if (1 & pt) {
          const U = p.EpF();
          p.TgZ(0, "button", 30),
            p.NdJ("click", function () {
              p.CHM(U);
              const ct = p.oxw().$implicit,
                ue = p.oxw();
              return p.KtG(ue.deleteFormulaItem(ct));
            }),
            p.TgZ(1, "mat-icon"),
            p._uU(2, "delete"),
            p.qZA()();
        }
      }
      function de(pt, vt) {
        if (
          (1 & pt &&
            (p.TgZ(0, "td", 23),
            p.YNc(1, gi, 3, 0, "button", 26),
            p.YNc(2, Xi, 2, 0, "ng-template", null, 27, p.W1O),
            p.YNc(4, _i, 3, 0, "button", 28),
            p.qZA()),
          2 & pt)
        ) {
          const U = p.MAs(3),
            j = p.oxw();
          p.xp6(1),
            p.Q6J("ngIf", j.isAdminOrManager)("ngIfElse", U),
            p.xp6(3),
            p.Q6J("ngIf", j.isAdminOrManager);
        }
      }
      function ot(pt, vt) {
        1 & pt && p._UZ(0, "tr", 31);
      }
      function Z(pt, vt) {
        1 & pt && p._UZ(0, "tr", 32);
      }
      const rt = function () {
          return [5, 10, 20];
        },
        Rt = [
          {
            path: "",
            component: at,
            children: [
              { path: "", redirectTo: "list-formulas", pathMatch: "full" },
              { path: "create-formulas", component: mi },
              {
                path: "list-formulas",
                component: (() => {
                  class pt {
                    constructor(U, j, ct) {
                      (this.formulaService = U),
                        (this.authService = j),
                        (this.dialog = ct),
                        (this.displayedColumns = [
                          "sku",
                          "displayName",
                          "unitOfMeasurement",
                          "productType",
                          "activeIngredients",
                          "inactiveIngredients",
                          "createdAt",
                          "actions",
                        ]),
                        (this.dataSource = new ie.by()),
                        (this.isAdminOrManager = !1);
                    }
                    ngOnInit() {
                      this.refreshFormulas(),
                        this.authService.userRole.subscribe((U) => {
                          this.isAdminOrManager =
                            "admin" === U || "manager" === U;
                        });
                    }
                    ngAfterViewInit() {
                      (this.dataSource.paginator = this.paginator),
                        (this.dataSource.sort = this.sort);
                    }
                    applyFilter(U) {
                      this.dataSource.filter = U.target.value
                        .trim()
                        .toLowerCase();
                    }
                    createNewFormula() {
                      this.dialog
                        .open(mi, { width: "500px" })
                        .afterClosed()
                        .subscribe((j) => {
                          j &&
                            this.formulaService
                              .createFormula(j)
                              .subscribe((ct) => {
                                (this.dataSource.data = [
                                  ...this.dataSource.data,
                                  { _id: ct._id, ...ct },
                                ]),
                                  console.log(this.dataSource.data);
                              });
                        });
                    }
                    editFormulaItem(U) {
                      this.dialog
                        .open(mi, { width: "800px", data: U })
                        .afterClosed()
                        .subscribe((ct) => {
                          ct &&
                            this.formulaService
                              .updateFormula(U._id, ct)
                              .subscribe(() => {
                                console.log("Formula updated:", ct),
                                  this.refreshFormulas();
                              });
                        });
                    }
                    refreshFormulas() {
                      this.formulaService.getFormulas().subscribe((U) => {
                        const j = U.map((ct) => ({
                          ...ct,
                          sku: ct.code,
                          displayName: ct.name,
                        }));
                        this.dataSource.data = j;
                      });
                    }
                    deleteFormulaItem(U) {
                      this.dialog
                        .open(hi, {
                          width: "400px",
                          data: {
                            message: `Are you sure you want to delete the formula ${U.name}?`,
                          },
                        })
                        .afterClosed()
                        .subscribe((ct) => {
                          ct &&
                            this.formulaService
                              .deleteFormula(U._id)
                              .subscribe(() => {
                                this.refreshFormulas();
                              });
                        });
                    }
                    static #t = (this.ɵfac = function (j) {
                      return new (j || pt)(
                        p.Y36(qi),
                        p.Y36(Ie.e),
                        p.Y36(lt.uw),
                      );
                    });
                    static #e = (this.ɵcmp = p.Xpm({
                      type: pt,
                      selectors: [["app-formula"]],
                      viewQuery: function (j, ct) {
                        if (
                          (1 & j && (p.Gf(vi.NW, 5), p.Gf(Ge.YE, 5)), 2 & j)
                        ) {
                          let ue;
                          p.iGM((ue = p.CRH())) && (ct.paginator = ue.first),
                            p.iGM((ue = p.CRH())) && (ct.sort = ue.first);
                        }
                      },
                      decls: 38,
                      vars: 6,
                      consts: [
                        [1, "dashboard"],
                        [1, "summary-card"],
                        [4, "ngIf"],
                        [1, "formulas-container"],
                        ["appearance", "outline"],
                        [
                          "matInput",
                          "",
                          "placeholder",
                          "Search by SKU or Display Name",
                          3,
                          "keyup",
                        ],
                        ["mat-table", "", "matSort", "", 3, "dataSource"],
                        ["matColumnDef", "sku"],
                        [
                          "mat-header-cell",
                          "",
                          "mat-sort-header",
                          "",
                          4,
                          "matHeaderCellDef",
                        ],
                        ["mat-cell", "", 4, "matCellDef"],
                        ["matColumnDef", "displayName"],
                        ["matColumnDef", "unitOfMeasurement"],
                        ["matColumnDef", "productType"],
                        ["mat-header-cell", "", 4, "matHeaderCellDef"],
                        ["matColumnDef", "activeIngredients"],
                        ["matColumnDef", "inactiveIngredients"],
                        ["matColumnDef", "createdAt"],
                        ["matColumnDef", "actions"],
                        ["mat-header-row", "", 4, "matHeaderRowDef"],
                        ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                        ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                        [
                          "mat-raised-button",
                          "",
                          "color",
                          "primary",
                          3,
                          "click",
                        ],
                        ["mat-header-cell", "", "mat-sort-header", ""],
                        ["mat-cell", ""],
                        ["mat-header-cell", ""],
                        [4, "ngFor", "ngForOf"],
                        [
                          "mat-icon-button",
                          "",
                          3,
                          "click",
                          4,
                          "ngIf",
                          "ngIfElse",
                        ],
                        ["editDisabled", ""],
                        [
                          "mat-icon-button",
                          "",
                          "color",
                          "warn",
                          3,
                          "click",
                          4,
                          "ngIf",
                        ],
                        ["mat-icon-button", "", 3, "click"],
                        ["mat-icon-button", "", "color", "warn", 3, "click"],
                        ["mat-header-row", ""],
                        ["mat-row", ""],
                      ],
                      template: function (j, ct) {
                        1 & j &&
                          (p.TgZ(0, "div", 0)(1, "mat-card", 1)(2, "h3"),
                          p._uU(3, "Formulas Summary"),
                          p.qZA(),
                          p.YNc(4, Fe, 3, 0, "div", 2),
                          p.qZA()(),
                          p.TgZ(5, "div", 3)(6, "mat-form-field", 4)(
                            7,
                            "mat-label",
                          ),
                          p._uU(8, "Search"),
                          p.qZA(),
                          p.TgZ(9, "input", 5),
                          p.NdJ("keyup", function (Wt) {
                            return ct.applyFilter(Wt);
                          }),
                          p.qZA()(),
                          p.TgZ(10, "table", 6),
                          p.ynx(11, 7),
                          p.YNc(12, xe, 2, 0, "th", 8),
                          p.YNc(13, Ue, 2, 1, "td", 9),
                          p.BQk(),
                          p.ynx(14, 10),
                          p.YNc(15, Ft, 2, 0, "th", 8),
                          p.YNc(16, Mt, 2, 1, "td", 9),
                          p.BQk(),
                          p.ynx(17, 11),
                          p.YNc(18, we, 2, 0, "th", 8),
                          p.YNc(19, Vt, 2, 1, "td", 9),
                          p.BQk(),
                          p.ynx(20, 12),
                          p.YNc(21, re, 2, 0, "th", 13),
                          p.YNc(22, Le, 2, 1, "td", 9),
                          p.BQk(),
                          p.ynx(23, 14),
                          p.YNc(24, li, 2, 0, "th", 13),
                          p.YNc(25, Mi, 3, 1, "td", 9),
                          p.BQk(),
                          p.ynx(26, 15),
                          p.YNc(27, fi, 2, 0, "th", 13),
                          p.YNc(28, te, 3, 1, "td", 9),
                          p.BQk(),
                          p.ynx(29, 16),
                          p.YNc(30, Be, 2, 0, "th", 8),
                          p.YNc(31, Ne, 3, 4, "td", 9),
                          p.BQk(),
                          p.ynx(32, 17),
                          p.YNc(33, Ri, 2, 0, "th", 13),
                          p.YNc(34, de, 5, 3, "td", 9),
                          p.BQk(),
                          p.YNc(35, ot, 1, 0, "tr", 18),
                          p.YNc(36, Z, 1, 0, "tr", 19),
                          p.qZA(),
                          p._UZ(37, "mat-paginator", 20),
                          p.qZA()),
                          2 & j &&
                            (p.xp6(4),
                            p.Q6J("ngIf", ct.isAdminOrManager),
                            p.xp6(6),
                            p.Q6J("dataSource", ct.dataSource),
                            p.xp6(25),
                            p.Q6J("matHeaderRowDef", ct.displayedColumns),
                            p.xp6(1),
                            p.Q6J("matRowDefColumns", ct.displayedColumns),
                            p.xp6(1),
                            p.Q6J("pageSizeOptions", p.DdM(5, rt)));
                      },
                      dependencies: [
                        s.sg,
                        s.O5,
                        x.Hw,
                        B.a8,
                        kt.KE,
                        kt.hX,
                        $.Nt,
                        ie.BZ,
                        ie.fO,
                        ie.as,
                        ie.w1,
                        ie.Dz,
                        ie.nj,
                        ie.ge,
                        ie.ev,
                        ie.XQ,
                        ie.Gk,
                        Ge.YE,
                        Ge.nU,
                        jt.lW,
                        jt.RK,
                        vi.NW,
                        s.uU,
                      ],
                      styles: [
                        ".dashboard[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;padding:20px}.summary-card[_ngcontent-%COMP%]{box-shadow:0 4px 8px #0000001a;margin-bottom:20px;padding:20px;border-radius:8px}.summary-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:24px;color:#fff}.summary-card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:10px}.formulas-container[_ngcontent-%COMP%]{display:flex;width:auto;flex-direction:column;gap:20px;padding:20px;border-radius:8px}.formulas-container[_ngcontent-%COMP%]   .filters[_ngcontent-%COMP%]{display:flex;gap:20px;margin-bottom:20px}.formulas-container[_ngcontent-%COMP%]   .filters[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{width:100%;max-width:300px;margin-bottom:10px}.formulas-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse}.formulas-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .formulas-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:8px 12px;text-align:left}.formulas-container[_ngcontent-%COMP%]   .mat-paginator[_ngcontent-%COMP%]{margin-top:20px}@media (max-width: 1024px){.formulas-container[_ngcontent-%COMP%]{padding:15px}.filters[_ngcontent-%COMP%]{flex-direction:column}.mat-paginator[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}}@media (max-width: 768px){.formulas-container[_ngcontent-%COMP%]{padding:10px}.filters[_ngcontent-%COMP%]{gap:10px}.filters[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{max-width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 10px}.mat-paginator[_ngcontent-%COMP%]{flex-direction:column;align-items:center}}",
                      ],
                    }));
                  }
                  return pt;
                })(),
              },
            ],
          },
        ];
      let Lt = (() => {
        class pt {
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)();
          });
          static #e = (this.ɵmod = p.oAB({ type: pt }));
          static #i = (this.ɵinj = p.cJS({
            imports: [C.Bz.forChild(Rt), C.Bz],
          }));
        }
        return pt;
      })();
      var ut = D(6216);
      D(2495);
      let fe = (() => {
          class pt {
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)();
            });
            static #e = (this.ɵmod = p.oAB({ type: pt }));
            static #i = (this.ɵinj = p.cJS({}));
          }
          return pt;
        })(),
        ke = (() => {
          class pt {
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)();
            });
            static #e = (this.ɵmod = p.oAB({ type: pt }));
            static #i = (this.ɵinj = p.cJS({
              imports: [A.BQ, A.si, fe, A.BQ, fe],
            }));
          }
          return pt;
        })(),
        yi = (() => {
          class pt {
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)();
            });
            static #e = (this.ɵmod = p.oAB({ type: pt }));
            static #i = (this.ɵinj = p.cJS({
              imports: [
                s.ez,
                Lt,
                x.Ps,
                bt.u5,
                bt.UX,
                ut.o9,
                B.QW,
                kt.lN,
                $.c,
                _.LD,
                ie.p0,
                Ge.JX,
                jt.ot,
                x.Ps,
                ke,
                vi.TU,
                _.LD,
              ],
            }));
          }
          return pt;
        })();
    },
    1573: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { ProductDevelopmentModule: () => _ });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const B = [
        {
          path: "",
          component: (() => {
            class A {
              static #t = (this.ɵfac = function (Jt) {
                return new (Jt || A)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: A,
                selectors: [["app-product-development"]],
                decls: 2,
                vars: 0,
                consts: [[1, "nufacturing_product_development"]],
                template: function (Jt, De) {
                  1 & Jt &&
                    (C.TgZ(0, "section", 0),
                    C._UZ(1, "router-outlet"),
                    C.qZA());
                },
                dependencies: [x.lC],
                styles: [
                  ".subnav[_ngcontent-%COMP%]{padding:10px;margin:auto;display:flex;justify-content:flex-start;align-items:center;flex-wrap:wrap;height:10vh;position:fixed;width:100%;z-index:1000;backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);box-shadow:#00000040 0 54px 55px,#0000001f 0 -12px 30px,#0000001f 0 4px 6px,#0000002b 0 12px 13px,#00000017 0 -3px 5px}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;align-items:center;margin:2%}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:10px;margin-bottom:10px;padding:10px 20px;font-size:1rem;font-weight:600;text-transform:uppercase;color:#fff;background-color:#023f1f;border:none;border-radius:4px;transition:background-color .3s ease,box-shadow .3s ease}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#303f9f}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{background-color:#283593}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 5px #3f51b580}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{margin-right:0}.nufacturing_product_development[_ngcontent-%COMP%]{width:90%;padding:5%;height:calc(100vh - 80px);justify-content:space-between;align-items:flex-start}mat-card[_ngcontent-%COMP%]{margin:10px;width:100%}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%]{text-align:left;font-weight:700}td[_ngcontent-%COMP%]{padding:8px}",
                ],
              }));
            }
            return A;
          })(),
          children: [
            {
              path: "formulas",
              loadChildren: () =>
                Promise.resolve()
                  .then(D.bind(D, 2427))
                  .then((A) => A.FormulasModule),
            },
            {
              path: "product-skus",
              component: (() => {
                class A {
                  static #t = (this.ɵfac = function (Jt) {
                    return new (Jt || A)();
                  });
                  static #e = (this.ɵcmp = C.Xpm({
                    type: A,
                    selectors: [["app-product-skus"]],
                    decls: 2,
                    vars: 0,
                    template: function (Jt, De) {
                      1 & Jt &&
                        (C.TgZ(0, "p"),
                        C._uU(1, "product-skus works!"),
                        C.qZA());
                    },
                  }));
                }
                return A;
              })(),
            },
            {
              path: "product-types",
              component: (() => {
                class A {
                  static #t = (this.ɵfac = function (Jt) {
                    return new (Jt || A)();
                  });
                  static #e = (this.ɵcmp = C.Xpm({
                    type: A,
                    selectors: [["app-product-types"]],
                    decls: 2,
                    vars: 0,
                    template: function (Jt, De) {
                      1 & Jt &&
                        (C.TgZ(0, "p"),
                        C._uU(1, "product-types works!"),
                        C.qZA());
                    },
                  }));
                }
                return A;
              })(),
            },
            {
              path: "research-and-development",
              component: (() => {
                class A {
                  static #t = (this.ɵfac = function (Jt) {
                    return new (Jt || A)();
                  });
                  static #e = (this.ɵcmp = C.Xpm({
                    type: A,
                    selectors: [["app-research-and-development"]],
                    decls: 2,
                    vars: 0,
                    template: function (Jt, De) {
                      1 & Jt &&
                        (C.TgZ(0, "p"),
                        C._uU(1, "research-and-development works!"),
                        C.qZA());
                    },
                  }));
                }
                return A;
              })(),
            },
          ],
        },
      ];
      let kt = (() => {
        class A {
          static #t = (this.ɵfac = function (Jt) {
            return new (Jt || A)();
          });
          static #e = (this.ɵmod = C.oAB({ type: A }));
          static #i = (this.ɵinj = C.cJS({
            imports: [x.Bz.forChild(B), x.Bz],
          }));
        }
        return A;
      })();
      var $ = D(2427);
      let _ = (() => {
        class A {
          static #t = (this.ɵfac = function (Jt) {
            return new (Jt || A)();
          });
          static #e = (this.ɵmod = C.oAB({ type: A }));
          static #i = (this.ɵinj = C.cJS({
            imports: [s.ez, kt, $.FormulasModule],
          }));
        }
        return A;
      })();
    },
    9272: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { AssetsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["assets"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ && (C.TgZ(0, "p"), C._uU(1, "assets works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    160: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { BatchRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-batch-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"), C._uU(1, "batch-records works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    5234: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { BottlingRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-bottling-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "bottling-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    2043: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { DepositorRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-depositor-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "depositor-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    3779: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { EncapsulationRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-encapsulation-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "encapsulation-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    5905: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { MasterManufacturingRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-master-manufacturing-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "master-manufacturing-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    2058: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { MixingRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-mixing-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"), C._uU(1, "mixing-records works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    8050: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { PackagingRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-packaging-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "packaging-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    279: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { ProductionPlanningModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-production-planning"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "production-planning works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    7324: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { ReportingModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-reporting"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"), C._uU(1, "reporting works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    2127: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { ShiftingRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-shifting-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "shifting-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    6987: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { WeighingRecordsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-weighing-records"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"),
                    C._uU(1, "weighing-records works!"),
                    C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    182: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { ProductionModule: () => We });
      var s = D(6814),
        x = D(160),
        C = D(2127),
        p = D(2043),
        at = D(8050),
        lt = D(2058),
        bt = D(6987),
        B = D(5234),
        kt = D(3779),
        $ = D(5905),
        _ = D(9272),
        A = D(279),
        jt = D(1896),
        gt = D(5879);
      const De = [
        {
          path: "",
          component: (() => {
            class Re {
              static #t = (this.ɵfac = function (St) {
                return new (St || Re)();
              });
              static #e = (this.ɵcmp = gt.Xpm({
                type: Re,
                selectors: [["app-production"]],
                decls: 2,
                vars: 0,
                template: function (St, Pt) {
                  1 & St &&
                    (gt.TgZ(0, "p"), gt._uU(1, "production works!"), gt.qZA());
                },
              }));
            }
            return Re;
          })(),
          pathMatch: "full",
        },
        {
          path: "batch-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 160))
              .then((Re) => Re.BatchRecordsModule),
        },
        {
          path: "shifting-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 2127))
              .then((Re) => Re.ShiftingRecordsModule),
        },
        {
          path: "depositor-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 2043))
              .then((Re) => Re.DepositorRecordsModule),
        },
        {
          path: "packaging-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 8050))
              .then((Re) => Re.PackagingRecordsModule),
        },
        {
          path: "mixing-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 2058))
              .then((Re) => Re.MixingRecordsModule),
        },
        {
          path: "weighing-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 6987))
              .then((Re) => Re.WeighingRecordsModule),
        },
        {
          path: "bottling-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 5234))
              .then((Re) => Re.BottlingRecordsModule),
        },
        {
          path: "encapsulation-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 3779))
              .then((Re) => Re.EncapsulationRecordsModule),
        },
        {
          path: "master-manufacturing-records",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 5905))
              .then((Re) => Re.MasterManufacturingRecordsModule),
        },
        {
          path: "assets-and-machines",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 9272))
              .then((Re) => Re.AssetsModule),
        },
        {
          path: "production-planning",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 279))
              .then((Re) => Re.ProductionPlanningModule),
        },
        {
          path: "reporting",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 7324))
              .then((Re) => Re.ReportingModule),
        },
      ];
      let Ve = (() => {
        class Re {
          static #t = (this.ɵfac = function (St) {
            return new (St || Re)();
          });
          static #e = (this.ɵmod = gt.oAB({ type: Re }));
          static #i = (this.ɵinj = gt.cJS({
            imports: [jt.Bz.forChild(De), jt.Bz],
          }));
        }
        return Re;
      })();
      var He = D(7324);
      let We = (() => {
        class Re {
          static #t = (this.ɵfac = function (St) {
            return new (St || Re)();
          });
          static #e = (this.ɵmod = gt.oAB({ type: Re }));
          static #i = (this.ɵinj = gt.cJS({
            imports: [
              s.ez,
              Ve,
              x.BatchRecordsModule,
              C.ShiftingRecordsModule,
              p.DepositorRecordsModule,
              at.PackagingRecordsModule,
              lt.MixingRecordsModule,
              bt.WeighingRecordsModule,
              B.BottlingRecordsModule,
              kt.EncapsulationRecordsModule,
              $.MasterManufacturingRecordsModule,
              _.AssetsModule,
              A.ProductionPlanningModule,
              He.ReportingModule,
            ],
          }));
        }
        return Re;
      })();
    },
    6460: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { FdaAuditsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-fda-audits"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"), C._uU(1, "fda-audits works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    2507: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { QualityAuditsModule: () => bt });
      var s = D(6814),
        x = D(1896),
        C = D(5879);
      const at = [
        {
          path: "",
          component: (() => {
            class B {
              static #t = (this.ɵfac = function (_) {
                return new (_ || B)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: B,
                selectors: [["app-quality-audits"]],
                decls: 2,
                vars: 0,
                template: function (_, A) {
                  1 & _ &&
                    (C.TgZ(0, "p"), C._uU(1, "quality-audits works!"), C.qZA());
                },
              }));
            }
            return B;
          })(),
          pathMatch: "full",
        },
      ];
      let lt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(at), x.Bz],
            }));
          }
          return B;
        })(),
        bt = (() => {
          class B {
            static #t = (this.ɵfac = function (_) {
              return new (_ || B)();
            });
            static #e = (this.ɵmod = C.oAB({ type: B }));
            static #i = (this.ɵinj = C.cJS({ imports: [s.ez, lt] }));
          }
          return B;
        })();
    },
    7798: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { QualityModule: () => kt });
      var s = D(6814),
        x = D(6460),
        C = D(1896),
        p = D(5879);
      const lt = [
        {
          path: "",
          component: (() => {
            class $ {
              static #t = (this.ɵfac = function (jt) {
                return new (jt || $)();
              });
              static #e = (this.ɵcmp = p.Xpm({
                type: $,
                selectors: [["app-quality"]],
                decls: 2,
                vars: 0,
                template: function (jt, gt) {
                  1 & jt &&
                    (p.TgZ(0, "p"), p._uU(1, "quality works!"), p.qZA());
                },
              }));
            }
            return $;
          })(),
          pathMatch: "full",
        },
        {
          path: "fda-audits",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 6460))
              .then(($) => $.FdaAuditsModule),
        },
        {
          path: "quality-audits",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 2507))
              .then(($) => $.QualityAuditsModule),
        },
      ];
      let bt = (() => {
        class $ {
          static #t = (this.ɵfac = function (jt) {
            return new (jt || $)();
          });
          static #e = (this.ɵmod = p.oAB({ type: $ }));
          static #i = (this.ɵinj = p.cJS({
            imports: [C.Bz.forChild(lt), C.Bz],
          }));
        }
        return $;
      })();
      var B = D(2507);
      let kt = (() => {
        class $ {
          static #t = (this.ɵfac = function (jt) {
            return new (jt || $)();
          });
          static #e = (this.ɵmod = p.oAB({ type: $ }));
          static #i = (this.ɵinj = p.cJS({
            imports: [s.ez, x.FdaAuditsModule, B.QualityAuditsModule, bt],
          }));
        }
        return $;
      })();
    },
    9464: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { InfoModule: () => ne });
      var s = D(6814),
        x = D(6223),
        C = D(5195),
        p = D(9157),
        at = D(2032),
        lt = D(5313),
        bt = D(8525),
        B = D(9038),
        kt = D(6216),
        $ = D(1896),
        _ = D(5879);
      let A = (() => {
        class tt {
          constructor() {
            this.dock = !1;
          }
          toggleDock() {
            this.dock = !this.dock;
          }
          static #t = (this.ɵfac = function (Te) {
            return new (Te || tt)();
          });
          static #e = (this.ɵcmp = _.Xpm({
            type: tt,
            selectors: [["app-info"]],
            decls: 2,
            vars: 2,
            consts: [[1, "nufacturing_info"]],
            template: function (Te, Je) {
              1 & Te &&
                (_.TgZ(0, "section", 0), _._UZ(1, "router-outlet"), _.qZA()),
                2 & Te && _.ekj("expanded", Je.dock);
            },
            dependencies: [$.lC],
            styles: [
              ".subnav[_ngcontent-%COMP%]{position:fixed;top:25%;right:0;width:20%;height:50vh;display:flex;justify-content:center;margin:auto;align-items:center;background-color:#92929280;backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);border-left:1px solid #ddd;z-index:1000;overflow-y:scroll;padding:20px;box-shadow:-2px 0 5px #0003;transition:right .3s ease}.subnav.collapsed[_ngcontent-%COMP%]{right:-20%}.subnav[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{cursor:pointer;position:absolute;top:10px;left:10px}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin-bottom:10px;padding:10px 20px;font-size:12px;text-transform:uppercase;color:#fff;background-color:#023f1f;border:none;border-radius:4px;transition:background-color .3s ease,box-shadow .3s ease}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#303f9f}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{background-color:#283593}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 5px #3f51b580}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button.active-link[_ngcontent-%COMP%]{background-color:#1e88e5}.nufacturing_info[_ngcontent-%COMP%]{margin-right:20%;transition:margin-right .3s ease}.nufacturing_info.expanded[_ngcontent-%COMP%]{margin-right:0}mat-card[_ngcontent-%COMP%]{margin:10px;width:100%}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%]{text-align:left;font-weight:700}td[_ngcontent-%COMP%]{padding:8px}",
            ],
          }));
        }
        return tt;
      })();
      var jt = D(3680),
        gt = D(3814);
      function Jt(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 26), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt), _.xp6(1), _.Oqu(Bt);
        }
      }
      function De(tt, me) {
        1 & tt &&
          (_.TgZ(0, "div")(1, "mat-form-field", 3)(2, "mat-label"),
          _._uU(3, "New Account Manager"),
          _.qZA(),
          _._UZ(4, "input", 27),
          _.qZA()());
      }
      function Ve(tt, me) {
        1 & tt && (_.TgZ(0, "th", 28), _._uU(1, "Property"), _.qZA());
      }
      function He(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 29), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function We(tt, me) {
        1 & tt && (_.TgZ(0, "th", 28), _._uU(1, "Value"), _.qZA());
      }
      function Re(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 29), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function wt(tt, me) {
        1 & tt && _._UZ(0, "tr", 30);
      }
      function _t(tt, me) {
        1 & tt && _._UZ(0, "tr", 31);
      }
      function Pt(tt, me) {
        1 & tt && (_.TgZ(0, "th", 15), _._uU(1, "Property"), _.qZA());
      }
      function ee(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 16), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function Kt(tt, me) {
        1 & tt && (_.TgZ(0, "th", 15), _._uU(1, "Value"), _.qZA());
      }
      function ze(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 16), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function mi(tt, me) {
        1 & tt && _._UZ(0, "tr", 17);
      }
      function ie(tt, me) {
        1 & tt && _._UZ(0, "tr", 18);
      }
      function Ge(tt, me) {
        1 & tt && (_.TgZ(0, "th", 25), _._uU(1, "Property"), _.qZA());
      }
      function hi(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 26), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function Si(tt, me) {
        1 & tt && (_.TgZ(0, "th", 25), _._uU(1, "Value"), _.qZA());
      }
      function Vi(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 26), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function qi(tt, me) {
        1 & tt && _._UZ(0, "tr", 27);
      }
      function Ie(tt, me) {
        1 & tt && _._UZ(0, "tr", 28);
      }
      function xe(tt, me) {
        1 & tt && (_.TgZ(0, "th", 19), _._uU(1, "Property"), _.qZA());
      }
      function Ue(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 20), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function Ft(tt, me) {
        1 & tt && (_.TgZ(0, "th", 19), _._uU(1, "Value"), _.qZA());
      }
      function Mt(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 20), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function we(tt, me) {
        1 & tt && _._UZ(0, "tr", 21);
      }
      function Vt(tt, me) {
        1 & tt && _._UZ(0, "tr", 22);
      }
      function li(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 14), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt), _.xp6(1), _.Oqu(Bt);
        }
      }
      function ii(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 14), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt), _.xp6(1), _.Oqu(Bt);
        }
      }
      function Mi(tt, me) {
        1 & tt && (_.TgZ(0, "th", 15), _._uU(1, "Property"), _.qZA());
      }
      function fi(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 16), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function ri(tt, me) {
        1 & tt && (_.TgZ(0, "th", 15), _._uU(1, "Value"), _.qZA());
      }
      function te(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 16), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function Be(tt, me) {
        1 & tt && _._UZ(0, "tr", 17);
      }
      function Ne(tt, me) {
        1 & tt && _._UZ(0, "tr", 18);
      }
      function gi(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 20), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt.value), _.xp6(1), _.Oqu(Bt.label);
        }
      }
      function Xi(tt, me) {
        1 & tt && (_.TgZ(0, "th", 21), _._uU(1, "Property"), _.qZA());
      }
      function _i(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 22), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function de(tt, me) {
        1 & tt && (_.TgZ(0, "th", 21), _._uU(1, "Value"), _.qZA());
      }
      function ot(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 22), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function Z(tt, me) {
        1 & tt && _._UZ(0, "tr", 23);
      }
      function rt(tt, me) {
        1 & tt && _._UZ(0, "tr", 24);
      }
      function Rt(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 21), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt.value), _.xp6(1), _.Oqu(Bt.label);
        }
      }
      function Lt(tt, me) {
        1 & tt && (_.TgZ(0, "th", 22), _._uU(1, "Property"), _.qZA());
      }
      function ut(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 23), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function q(tt, me) {
        1 & tt && (_.TgZ(0, "th", 22), _._uU(1, "Value"), _.qZA());
      }
      function Ct(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 23), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function H(tt, me) {
        1 & tt && _._UZ(0, "tr", 24);
      }
      function Nt(tt, me) {
        1 & tt && _._UZ(0, "tr", 25);
      }
      function se(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 14), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt), _.xp6(1), _.Oqu(Bt);
        }
      }
      function it(tt, me) {
        if (
          (1 & tt && (_.TgZ(0, "mat-option", 14), _._uU(1), _.qZA()), 2 & tt)
        ) {
          const Bt = me.$implicit;
          _.Q6J("value", Bt), _.xp6(1), _.Oqu(Bt);
        }
      }
      function Ut(tt, me) {
        1 & tt && (_.TgZ(0, "th", 15), _._uU(1, "Property"), _.qZA());
      }
      function ve(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 16), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function qe(tt, me) {
        1 & tt && (_.TgZ(0, "th", 15), _._uU(1, "Value"), _.qZA());
      }
      function ki(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 16), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function Xt(tt, me) {
        1 & tt && _._UZ(0, "tr", 17);
      }
      function ae(tt, me) {
        1 & tt && _._UZ(0, "tr", 18);
      }
      function $t(tt, me) {
        1 & tt && (_.TgZ(0, "th", 38), _._uU(1, "Property"), _.qZA());
      }
      function fe(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 39), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function ke(tt, me) {
        1 & tt && (_.TgZ(0, "th", 38), _._uU(1, "Value"), _.qZA());
      }
      function yi(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 39), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function pt(tt, me) {
        1 & tt && _._UZ(0, "tr", 40);
      }
      function vt(tt, me) {
        1 & tt && _._UZ(0, "tr", 41);
      }
      function j(tt, me) {
        1 & tt && (_.TgZ(0, "th", 16), _._uU(1, "Property"), _.qZA());
      }
      function ct(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 17), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.property);
        }
      }
      function ue(tt, me) {
        1 & tt && (_.TgZ(0, "th", 16), _._uU(1, "Value"), _.qZA());
      }
      function Wt(tt, me) {
        if ((1 & tt && (_.TgZ(0, "td", 17), _._uU(1), _.qZA()), 2 & tt)) {
          const Bt = me.$implicit;
          _.xp6(1), _.Oqu(Bt.value);
        }
      }
      function le(tt, me) {
        1 & tt && _._UZ(0, "tr", 18);
      }
      function It(tt, me) {
        1 & tt && _._UZ(0, "tr", 19);
      }
      const Ae = [
        {
          path: "",
          component: A,
          children: [
            { path: "", redirectTo: "account-info", pathMatch: "full" },
            {
              path: "account-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.accountManagers = [
                        "Logan Adair",
                        "Eli Griffin",
                        "Jordan Adair",
                        "Anson Zonar",
                        "Tony Gorris",
                      ]),
                      (this.displayedColumns = ["property", "value"]),
                      (this.accountInfoForm = this.fb.group({
                        accountManager: ["Logan Adair"],
                        newAccountManager: [""],
                        customerCode: ["NTV"],
                        sku: [""],
                        formulaCode: ["FCH123"],
                        batchNumber: [""],
                        customerBatchNumber: ["NA"],
                        nfgBatchCode: [{ value: "", disabled: !0 }],
                        dateMonth: ["05"],
                        dateDay: ["09"],
                        dateYear: ["24"],
                      })),
                      (this.dataSource = this.createDataSource(
                        this.accountInfoForm.value,
                      )),
                      this.accountInfoForm.valueChanges.subscribe((Te) => {
                        this.updateNfgBatchCode(),
                          (this.dataSource = this.createDataSource(Te));
                      });
                  }
                  ngOnInit() {}
                  createDataSource(Bt) {
                    return [
                      {
                        property: "Account Manager",
                        value:
                          "other" === Bt.accountManager
                            ? Bt.newAccountManager
                            : Bt.accountManager,
                      },
                      { property: "Customer Code", value: Bt.customerCode },
                      { property: "SKU #", value: Bt.sku },
                      { property: "Formula Code", value: Bt.formulaCode },
                      { property: "Batch #", value: Bt.batchNumber },
                      {
                        property: "Customer Batch #",
                        value: Bt.customerBatchNumber,
                      },
                      {
                        property: "NFG Batch Code",
                        value: this.accountInfoForm.get("nfgBatchCode")?.value,
                      },
                      { property: "Date Month", value: Bt.dateMonth },
                      { property: "Date Day", value: Bt.dateDay },
                      { property: "Date Year", value: Bt.dateYear },
                    ];
                  }
                  updateNfgBatchCode() {
                    const Bt = this.accountInfoForm.get("formulaCode")?.value,
                      Te = this.accountInfoForm.get("dateMonth")?.value,
                      Je = this.accountInfoForm.get("dateDay")?.value,
                      Ot = this.accountInfoForm.get("dateYear")?.value;
                    this.accountInfoForm.patchValue({
                      nfgBatchCode: `${Bt}${Ot}${Te}${Je}`,
                    });
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-account-info"]],
                    decls: 66,
                    vars: 6,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill", 2, "width", "100%"],
                      ["formControlName", "accountManager"],
                      [3, "value", 4, "ngFor", "ngForOf"],
                      ["value", "other"],
                      [4, "ngIf"],
                      ["matInput", "", "formControlName", "customerCode"],
                      ["matInput", "", "formControlName", "sku"],
                      ["matInput", "", "formControlName", "formulaCode"],
                      ["matInput", "", "formControlName", "batchNumber"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "customerBatchNumber",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "nfgBatchCode",
                        "readonly",
                        "",
                      ],
                      [
                        2,
                        "display",
                        "flex",
                        "justify-content",
                        "space-between",
                      ],
                      ["appearance", "fill", 2, "width", "30%"],
                      ["matInput", "", "formControlName", "dateMonth"],
                      ["matInput", "", "formControlName", "dateDay"],
                      ["matInput", "", "formControlName", "dateYear"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      [3, "value"],
                      ["matInput", "", "formControlName", "newAccountManager"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      if (
                        (1 & Te &&
                          (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                            3,
                            "mat-card-title",
                          ),
                          _._uU(4, "Account Info Form"),
                          _.qZA(),
                          _.TgZ(5, "mat-card-content")(6, "form", 2)(
                            7,
                            "mat-form-field",
                            3,
                          )(8, "mat-label"),
                          _._uU(9, "Account Manager"),
                          _.qZA(),
                          _.TgZ(10, "mat-select", 4),
                          _.YNc(11, Jt, 2, 2, "mat-option", 5),
                          _.TgZ(12, "mat-option", 6),
                          _._uU(13, "Other"),
                          _.qZA()()(),
                          _.YNc(14, De, 5, 0, "div", 7),
                          _.TgZ(15, "mat-form-field", 3)(16, "mat-label"),
                          _._uU(17, "NFG Customer Code"),
                          _.qZA(),
                          _._UZ(18, "input", 8),
                          _.qZA(),
                          _.TgZ(19, "mat-form-field", 3)(20, "mat-label"),
                          _._uU(21, "NFG SKU #"),
                          _.qZA(),
                          _._UZ(22, "input", 9),
                          _.qZA(),
                          _.TgZ(23, "mat-form-field", 3)(24, "mat-label"),
                          _._uU(25, "NFG Formula Code"),
                          _.qZA(),
                          _._UZ(26, "input", 10),
                          _.qZA(),
                          _.TgZ(27, "mat-form-field", 3)(28, "mat-label"),
                          _._uU(29, "Batch #"),
                          _.qZA(),
                          _._UZ(30, "input", 11),
                          _.qZA(),
                          _.TgZ(31, "mat-form-field", 3)(32, "mat-label"),
                          _._uU(33, "Customer Batch #"),
                          _.qZA(),
                          _._UZ(34, "input", 12),
                          _.qZA(),
                          _.TgZ(35, "mat-form-field", 3)(36, "mat-label"),
                          _._uU(37, "NFG Batch Code"),
                          _.qZA(),
                          _._UZ(38, "input", 13),
                          _.qZA(),
                          _.TgZ(39, "div", 14)(40, "mat-form-field", 15)(
                            41,
                            "mat-label",
                          ),
                          _._uU(42, "Date Month"),
                          _.qZA(),
                          _._UZ(43, "input", 16),
                          _.qZA(),
                          _.TgZ(44, "mat-form-field", 15)(45, "mat-label"),
                          _._uU(46, "Date Day"),
                          _.qZA(),
                          _._UZ(47, "input", 17),
                          _.qZA(),
                          _.TgZ(48, "mat-form-field", 15)(49, "mat-label"),
                          _._uU(50, "Date Year"),
                          _.qZA(),
                          _._UZ(51, "input", 18),
                          _.qZA()()()()()(),
                          _.TgZ(52, "div", 1)(53, "mat-card")(
                            54,
                            "mat-card-title",
                          ),
                          _._uU(55, "Preview"),
                          _.qZA(),
                          _.TgZ(56, "mat-card-content")(57, "table", 19),
                          _.ynx(58, 20),
                          _.YNc(59, Ve, 2, 0, "th", 21),
                          _.YNc(60, He, 2, 1, "td", 22),
                          _.BQk(),
                          _.ynx(61, 23),
                          _.YNc(62, We, 2, 0, "th", 21),
                          _.YNc(63, Re, 2, 1, "td", 22),
                          _.BQk(),
                          _.YNc(64, wt, 1, 0, "tr", 24),
                          _.YNc(65, _t, 1, 0, "tr", 25),
                          _.qZA()()()()()),
                        2 & Te)
                      ) {
                        let Ot;
                        _.xp6(6),
                          _.Q6J("formGroup", Je.accountInfoForm),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.accountManagers),
                          _.xp6(3),
                          _.Q6J(
                            "ngIf",
                            "other" ===
                              (null ==
                              (Ot = Je.accountInfoForm.get("accountManager"))
                                ? null
                                : Ot.value),
                          ),
                          _.xp6(43),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns);
                      }
                    },
                    dependencies: [
                      s.sg,
                      s.O5,
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".nufacturing_info[_ngcontent-%COMP%]{width:90%;padding:5%;margin:auto;height:100vh;display:flex;flex-direction:row;justify-content:space-between;align-items:flex-start;gap:2%}mat-card[_ngcontent-%COMP%]{margin:10px;width:100%}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%]{text-align:left;font-weight:700}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{padding:8px}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "customer-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.displayedColumns = ["property", "value"]),
                      (this.customerInfoForm = this.fb.group({
                        customerSku: [""],
                        companyName: ["Buderer Drug Co."],
                        productName: ["Hangover Dog 50ct"],
                        brandName: [""],
                      })),
                      (this.dataSource = this.createDataSource(
                        this.customerInfoForm.value,
                      )),
                      this.customerInfoForm.valueChanges.subscribe((Te) => {
                        this.dataSource = this.createDataSource(Te);
                      });
                  }
                  ngOnInit() {}
                  createDataSource(Bt) {
                    return [
                      { property: "Customer SKU #", value: Bt.customerSku },
                      { property: "Company Name", value: Bt.companyName },
                      {
                        property: "Customer's Product Name",
                        value: Bt.productName,
                      },
                      { property: "Brand Name", value: Bt.brandName },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-customer-info"]],
                    decls: 37,
                    vars: 4,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["matInput", "", "formControlName", "customerSku"],
                      ["matInput", "", "formControlName", "companyName"],
                      ["matInput", "", "formControlName", "productName"],
                      ["matInput", "", "formControlName", "brandName"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Customer Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "Customer SKU #"),
                        _.qZA(),
                        _._UZ(10, "input", 4),
                        _.qZA(),
                        _.TgZ(11, "mat-form-field", 3)(12, "mat-label"),
                        _._uU(13, "Company Name"),
                        _.qZA(),
                        _._UZ(14, "input", 5),
                        _.qZA(),
                        _.TgZ(15, "mat-form-field", 3)(16, "mat-label"),
                        _._uU(17, "Customer's Product Name"),
                        _.qZA(),
                        _._UZ(18, "input", 6),
                        _.qZA(),
                        _.TgZ(19, "mat-form-field", 3)(20, "mat-label"),
                        _._uU(21, "Brand Name"),
                        _.qZA(),
                        _._UZ(22, "input", 7),
                        _.qZA()()()()(),
                        _.TgZ(23, "div", 1)(24, "mat-card")(
                          25,
                          "mat-card-title",
                        ),
                        _._uU(26, "Preview"),
                        _.qZA(),
                        _.TgZ(27, "mat-card-content")(28, "table", 8),
                        _.ynx(29, 9),
                        _.YNc(30, Pt, 2, 0, "th", 10),
                        _.YNc(31, ee, 2, 1, "td", 11),
                        _.BQk(),
                        _.ynx(32, 12),
                        _.YNc(33, Kt, 2, 0, "th", 10),
                        _.YNc(34, ze, 2, 1, "td", 11),
                        _.BQk(),
                        _.YNc(35, mi, 1, 0, "tr", 13),
                        _.YNc(36, ie, 1, 0, "tr", 14),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.customerInfoForm),
                          _.xp6(22),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "order-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.displayedColumns = ["property", "value"]),
                      (this.orderInfoForm = this.fb.group({
                        productType: ["Capsule"],
                        leadTime: ["6-7 weeks"],
                        launchQty: [2e3],
                        capsulesPerServing: [2],
                        capsulesPerBottle: [50],
                      })),
                      (this.dataSource = this.createDataSource(
                        this.orderInfoForm.value,
                      )),
                      this.orderInfoForm.valueChanges.subscribe((Te) => {
                        this.dataSource = this.createDataSource(Te);
                      });
                  }
                  ngOnInit() {}
                  createDataSource(Bt) {
                    return [
                      { property: "Product Type", value: Bt.productType },
                      { property: "Lead Time", value: Bt.leadTime },
                      { property: "Launch QTY", value: Bt.launchQty },
                      {
                        property: "Capsules per serving",
                        value: Bt.capsulesPerServing,
                      },
                      {
                        property: "Capsules per bottle",
                        value: Bt.capsulesPerBottle,
                      },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-order-info"]],
                    decls: 59,
                    vars: 4,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "productType"],
                      ["value", "Capsule"],
                      ["value", "Tablet"],
                      ["formControlName", "leadTime"],
                      ["value", "2-3 weeks"],
                      ["value", "6-7 weeks"],
                      ["value", "TBD"],
                      ["matInput", "", "formControlName", "launchQty"],
                      ["formControlName", "capsulesPerServing"],
                      ["value", "1"],
                      ["value", "2"],
                      ["value", "3"],
                      ["value", "4"],
                      ["matInput", "", "formControlName", "capsulesPerBottle"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Order Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "Product Type"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4)(11, "mat-option", 5),
                        _._uU(12, "Capsule"),
                        _.qZA(),
                        _.TgZ(13, "mat-option", 6),
                        _._uU(14, "Tablet"),
                        _.qZA()()(),
                        _.TgZ(15, "mat-form-field", 3)(16, "mat-label"),
                        _._uU(17, "Lead Time"),
                        _.qZA(),
                        _.TgZ(18, "mat-select", 7)(19, "mat-option", 8),
                        _._uU(20, "2-3 weeks"),
                        _.qZA(),
                        _.TgZ(21, "mat-option", 9),
                        _._uU(22, "6-7 weeks"),
                        _.qZA(),
                        _.TgZ(23, "mat-option", 10),
                        _._uU(24, "TBD"),
                        _.qZA()()(),
                        _.TgZ(25, "mat-form-field", 3)(26, "mat-label"),
                        _._uU(27, "Launch QTY"),
                        _.qZA(),
                        _._UZ(28, "input", 11),
                        _.qZA(),
                        _.TgZ(29, "mat-form-field", 3)(30, "mat-label"),
                        _._uU(31, "Capsules per serving"),
                        _.qZA(),
                        _.TgZ(32, "mat-select", 12)(33, "mat-option", 13),
                        _._uU(34, "1"),
                        _.qZA(),
                        _.TgZ(35, "mat-option", 14),
                        _._uU(36, "2"),
                        _.qZA(),
                        _.TgZ(37, "mat-option", 15),
                        _._uU(38, "3"),
                        _.qZA(),
                        _.TgZ(39, "mat-option", 16),
                        _._uU(40, "4"),
                        _.qZA()()(),
                        _.TgZ(41, "mat-form-field", 3)(42, "mat-label"),
                        _._uU(43, "Capsules per bottle"),
                        _.qZA(),
                        _._UZ(44, "input", 17),
                        _.qZA()()()()(),
                        _.TgZ(45, "div", 1)(46, "mat-card")(
                          47,
                          "mat-card-title",
                        ),
                        _._uU(48, "Preview"),
                        _.qZA(),
                        _.TgZ(49, "mat-card-content")(50, "table", 18),
                        _.ynx(51, 19),
                        _.YNc(52, Ge, 2, 0, "th", 20),
                        _.YNc(53, hi, 2, 1, "td", 21),
                        _.BQk(),
                        _.ynx(54, 22),
                        _.YNc(55, Si, 2, 0, "th", 20),
                        _.YNc(56, Vi, 2, 1, "td", 21),
                        _.BQk(),
                        _.YNc(57, qi, 1, 0, "tr", 23),
                        _.YNc(58, Ie, 1, 0, "tr", 24),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.orderInfoForm),
                          _.xp6(44),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "testing-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.displayedColumns = ["property", "value"]),
                      (this.testingForm = this.fb.group({
                        coaTest: ["NFG Paying"],
                        preProSamples: ["No"],
                        preProLabTesting: ["No"],
                        wetGranulation: ["No"],
                      })),
                      (this.dataSource = this.createDataSource(
                        this.testingForm.value,
                      )),
                      this.testingForm.valueChanges.subscribe((Te) => {
                        this.dataSource = this.createDataSource(Te);
                      });
                  }
                  ngOnInit() {}
                  createDataSource(Bt) {
                    return [
                      {
                        property: "COA Cost",
                        value: "NFG Paying" === Bt.coaTest ? 0.26 : 0,
                      },
                      {
                        property: "Pre-Pro Samples Cost",
                        value: "Yes" === Bt.preProSamples ? 200 : 0,
                      },
                      {
                        property: "Pre-Pro Lab Testing Cost",
                        value: "Yes" === Bt.preProLabTesting ? 200 : 0,
                      },
                      {
                        property: "Wet Granulation Cost",
                        value: "Yes" === Bt.wetGranulation ? 200 : 0,
                      },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-testing-info"]],
                    decls: 53,
                    vars: 4,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "coaTest"],
                      ["value", "NFG Paying"],
                      ["value", "Customer Paying"],
                      ["formControlName", "preProSamples"],
                      ["value", "Yes"],
                      ["value", "No"],
                      ["formControlName", "preProLabTesting"],
                      ["formControlName", "wetGranulation"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Testing Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "COA Test"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4)(11, "mat-option", 5),
                        _._uU(12, "NFG Paying"),
                        _.qZA(),
                        _.TgZ(13, "mat-option", 6),
                        _._uU(14, "Customer Paying"),
                        _.qZA()()(),
                        _.TgZ(15, "mat-form-field", 3)(16, "mat-label"),
                        _._uU(17, "Pre-Pro Samples"),
                        _.qZA(),
                        _.TgZ(18, "mat-select", 7)(19, "mat-option", 8),
                        _._uU(20, "Yes"),
                        _.qZA(),
                        _.TgZ(21, "mat-option", 9),
                        _._uU(22, "No"),
                        _.qZA()()(),
                        _.TgZ(23, "mat-form-field", 3)(24, "mat-label"),
                        _._uU(25, "Pre-Pro Lab Testing"),
                        _.qZA(),
                        _.TgZ(26, "mat-select", 10)(27, "mat-option", 8),
                        _._uU(28, "Yes"),
                        _.qZA(),
                        _.TgZ(29, "mat-option", 9),
                        _._uU(30, "No"),
                        _.qZA()()(),
                        _.TgZ(31, "mat-form-field", 3)(32, "mat-label"),
                        _._uU(33, "Wet Granulation"),
                        _.qZA(),
                        _.TgZ(34, "mat-select", 11)(35, "mat-option", 8),
                        _._uU(36, "Yes"),
                        _.qZA(),
                        _.TgZ(37, "mat-option", 9),
                        _._uU(38, "No"),
                        _.qZA()()()()()()(),
                        _.TgZ(39, "div", 1)(40, "mat-card")(
                          41,
                          "mat-card-title",
                        ),
                        _._uU(42, "Cost Preview"),
                        _.qZA(),
                        _.TgZ(43, "mat-card-content")(44, "table", 12),
                        _.ynx(45, 13),
                        _.YNc(46, xe, 2, 0, "th", 14),
                        _.YNc(47, Ue, 2, 1, "td", 15),
                        _.BQk(),
                        _.ynx(48, 16),
                        _.YNc(49, Ft, 2, 0, "th", 14),
                        _.YNc(50, Mt, 2, 1, "td", 15),
                        _.BQk(),
                        _.YNc(51, we, 1, 0, "tr", 17),
                        _.YNc(52, Vt, 1, 0, "tr", 18),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.testingForm),
                          _.xp6(38),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      x._Y,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "order-costs",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.orderCostForm = this.fb.group({
                        ngfCostPerBottle: ["$6.09"],
                        customerSalePricePerBottle: ["$8.05"],
                      })),
                      this.orderCostForm.valueChanges.subscribe((Te) => {});
                  }
                  ngOnInit() {}
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-order-costs"]],
                    decls: 31,
                    vars: 3,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["matInput", "", "formControlName", "ngfCostPerBottle"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "customerSalePricePerBottle",
                      ],
                      ["fxLayout", "column", "fxLayoutGap", "20px"],
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutAlign",
                        "space-between center",
                      ],
                    ],
                    template: function (Te, Je) {
                      if (
                        (1 & Te &&
                          (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                            3,
                            "mat-card-title",
                          ),
                          _._uU(4, "Order Cost"),
                          _.qZA(),
                          _.TgZ(5, "mat-card-content")(6, "form", 2)(
                            7,
                            "mat-form-field",
                            3,
                          )(8, "mat-label"),
                          _._uU(9, "NGF COST (per bottle)"),
                          _.qZA(),
                          _._UZ(10, "input", 4),
                          _.qZA(),
                          _.TgZ(11, "mat-form-field", 3)(12, "mat-label"),
                          _._uU(13, "Customer Sale Price (per bottle)"),
                          _.qZA(),
                          _._UZ(14, "input", 5),
                          _.qZA()()()()(),
                          _.TgZ(15, "div", 1)(16, "mat-card")(
                            17,
                            "mat-card-title",
                          ),
                          _._uU(18, "Preview"),
                          _.qZA(),
                          _.TgZ(19, "mat-card-content")(20, "div", 6)(
                            21,
                            "div",
                            7,
                          )(22, "span"),
                          _._uU(23, "NGF COST (per bottle):"),
                          _.qZA(),
                          _.TgZ(24, "span"),
                          _._uU(25),
                          _.qZA()(),
                          _.TgZ(26, "div", 7)(27, "span"),
                          _._uU(28, "Customer Sale Price (per bottle):"),
                          _.qZA(),
                          _.TgZ(29, "span"),
                          _._uU(30),
                          _.qZA()()()()()()()),
                        2 & Te)
                      ) {
                        let Ot, Ze;
                        _.xp6(6),
                          _.Q6J("formGroup", Je.orderCostForm),
                          _.xp6(19),
                          _.Oqu(
                            null ==
                              (Ot = Je.orderCostForm.get("ngfCostPerBottle"))
                              ? null
                              : Ot.value,
                          ),
                          _.xp6(5),
                          _.Oqu(
                            null ==
                              (Ze = Je.orderCostForm.get(
                                "customerSalePricePerBottle",
                              ))
                              ? null
                              : Ze.value,
                          );
                      }
                    },
                    dependencies: [
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      gt.xw,
                      gt.SQ,
                      gt.Wh,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "capsule-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.displayedColumns = ["property", "value"]),
                      (this.capsuleParts = [
                        "ECHPMC00C",
                        "ECTR00C",
                        "LZETC00C",
                        "ECGELATIN00C",
                        "ECHPMC0CDR",
                        "ECHPMC0C",
                      ]),
                      (this.productColors = [
                        "Tan",
                        "White",
                        "Green",
                        "Red",
                        "Green/Tan",
                        "TBD",
                      ]),
                      (this.capsuleDetails = {
                        ECHPMC00C: {
                          material: "(HPMC)",
                          length: '0.917"',
                          diameter: '0.336"',
                          size: "00",
                          weight: 124,
                          colorShell: "Clear",
                          price: "$0.00710",
                        },
                        ECTR00C: {
                          material: "Delayed Release",
                          length: '0.917"',
                          diameter: '0.336"',
                          size: "00",
                          weight: 124,
                          colorShell: "Clear",
                          price: "0.0",
                        },
                        LZETC00C: {
                          material: "Enteric Coated",
                          length: '0.917"',
                          diameter: '0.336"',
                          size: "00",
                          weight: 124,
                          colorShell: "Clear",
                          price: "0.0",
                        },
                        ECGELATIN00C: {
                          material: "Gelatin",
                          length: '0.917"',
                          diameter: '0.336"',
                          size: "00",
                          weight: 124,
                          colorShell: "Clear",
                          price: "$0.00365",
                        },
                        ECHPMC0CDR: {
                          material: "Delayed Release",
                          length: '0.8429"',
                          diameter: '0.2886"',
                          size: "0",
                          weight: 95,
                          colorShell: "Clear",
                          price: "$0.009950",
                        },
                        ECHPMC0C: {
                          material: "HMPC",
                          length: '0.8429"',
                          diameter: '0.2886"',
                          size: "0",
                          weight: 95,
                          colorShell: "Clear",
                          price: "$0.004000",
                        },
                      }),
                      (this.capsuleInfoForm = this.fb.group({
                        nfgCapsulePart: ["ECGELATIN00C"],
                        colorOfProduct: ["Green"],
                      })),
                      (this.dataSource = this.createDataSource(
                        this.capsuleInfoForm.value,
                      )),
                      this.capsuleInfoForm.valueChanges.subscribe((Te) => {
                        this.dataSource = this.createDataSource(Te);
                      });
                  }
                  ngOnInit() {}
                  createDataSource(Bt) {
                    const Te = this.capsuleDetails[Bt.nfgCapsulePart];
                    return [
                      {
                        property: "NFG Capsule Part #",
                        value: Bt.nfgCapsulePart,
                      },
                      { property: "Capsule Material", value: Te.material },
                      { property: "Capsule Length", value: Te.length },
                      { property: "Capsule Diameter", value: Te.diameter },
                      { property: "Capsule Size", value: Te.size },
                      { property: "Capsule Weight (mg)", value: Te.weight },
                      { property: "Capsule Pricing", value: Te.price },
                      {
                        property: "Color of Capsule Shell",
                        value: Te.colorShell,
                      },
                      {
                        property: "Color of Product",
                        value: Bt.colorOfProduct,
                      },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-capsule-info"]],
                    decls: 31,
                    vars: 6,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "nfgCapsulePart"],
                      [3, "value", 4, "ngFor", "ngForOf"],
                      ["formControlName", "colorOfProduct"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      [3, "value"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Capsule Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "NFG Capsule Part #"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4),
                        _.YNc(11, li, 2, 2, "mat-option", 5),
                        _.qZA()(),
                        _.TgZ(12, "mat-form-field", 3)(13, "mat-label"),
                        _._uU(14, "Color of Product"),
                        _.qZA(),
                        _.TgZ(15, "mat-select", 6),
                        _.YNc(16, ii, 2, 2, "mat-option", 5),
                        _.qZA()()()()()(),
                        _.TgZ(17, "div", 1)(18, "mat-card")(
                          19,
                          "mat-card-title",
                        ),
                        _._uU(20, "Capsule Details"),
                        _.qZA(),
                        _.TgZ(21, "mat-card-content")(22, "table", 7),
                        _.ynx(23, 8),
                        _.YNc(24, Mi, 2, 0, "th", 9),
                        _.YNc(25, fi, 2, 1, "td", 10),
                        _.BQk(),
                        _.ynx(26, 11),
                        _.YNc(27, ri, 2, 0, "th", 9),
                        _.YNc(28, te, 2, 1, "td", 10),
                        _.BQk(),
                        _.YNc(29, Be, 1, 0, "tr", 12),
                        _.YNc(30, Ne, 1, 0, "tr", 13),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.capsuleInfoForm),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.capsuleParts),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.productColors),
                          _.xp6(6),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      s.sg,
                      x._Y,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "bottle-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.bottleParts = [
                        {
                          value: "CP250HDPEW",
                          label: "CP250HDPEW",
                          material: "HDPE",
                          size: "250",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.75" X 7.00"',
                          mouthSize: "45/400",
                          price: "$0.3543",
                        },
                        {
                          value: "CP175PETW",
                          label: "CP175PETW",
                          material: "PET",
                          size: "175",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.25" X 6.25"',
                          mouthSize: "38/400",
                          price: "$0.23000",
                        },
                        {
                          value: "CC225PETBL",
                          label: "CC225PETBL",
                          material: "PET",
                          size: "225",
                          color: "Black",
                          shape: "Round",
                          labelHeight: '2.50" X 7.00"',
                          mouthSize: "45/400",
                          price: "$0.40000",
                        },
                        {
                          value: "CP175PETDA",
                          label: "CP175PETDA",
                          material: "PET",
                          size: "175",
                          color: "Dark Amber",
                          shape: "Round",
                          labelHeight: '2.25" X 6.25"',
                          mouthSize: "38/400",
                          price: "0.46000",
                        },
                        {
                          value: "CP225PETDA",
                          label: "CP225PETDA",
                          material: "PET",
                          size: "225",
                          color: "Dark Amber",
                          shape: "Round",
                          labelHeight: '2.65" X 6.75"',
                          mouthSize: "45/400",
                          price: "$0.23958",
                        },
                        {
                          value: "CP225HDPEW",
                          label: "CP225HDPEW",
                          material: "HDPE",
                          size: "225",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.65" X 6.75"',
                          mouthSize: "45/400",
                          price: "$0.23958",
                        },
                        {
                          value: "TRCOR120HDPEW",
                          label: "TRCOR120HDPEW",
                          material: "Glass",
                          size: "120",
                          color: "Amber",
                          shape: "Round",
                          labelHeight: '2.00" x 6.00"',
                          mouthSize: "38/400",
                          price: "$0.25400",
                        },
                        {
                          value: "CC400PETDA",
                          label: "CC400PETDA",
                          material: "PET",
                          size: "400",
                          color: "Dark Amber",
                          shape: "Round",
                          labelHeight: '3.0" x 8.75"',
                          mouthSize: "45/400",
                          price: "$0.67300",
                        },
                        {
                          value: "ALL175HDPEW",
                          label: "ALL175HDPEW",
                          material: "HDPE",
                          size: "175",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.5" X 6.75"',
                          mouthSize: "38/400",
                          price: "$0.0800",
                        },
                        {
                          value: "CP175HDPEW",
                          label: "CP175HDPEW",
                          material: "HDPE",
                          size: "175",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.25" X 6.25"',
                          mouthSize: "38/400",
                          price: "$0.2019",
                        },
                        {
                          value: "CP175PETCL",
                          label: "CP175PETCL",
                          material: "PET",
                          size: "175",
                          color: "Clear",
                          shape: "Round",
                          labelHeight: '2.25" X 6.25"',
                          mouthSize: "38/400",
                          price: "$0.35",
                        },
                        {
                          value: "CP250PETW",
                          label: "CP250PETW",
                          material: "PET",
                          size: "250",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.5" x 7.50"',
                          mouthSize: "45/400",
                          price: "$0.38",
                        },
                        {
                          value: "ALL150HDPEW",
                          label: "ALL150HDPEW",
                          material: "HDPE",
                          size: "150",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.25" X 6.5"',
                          mouthSize: "38/400",
                          price: "$0.10",
                        },
                        {
                          value: "CP150PETDA",
                          label: "CP150PETDA",
                          material: "PET",
                          size: "150",
                          color: "Dark Amber",
                          shape: "Round",
                          labelHeight: '2.625" X 6.00"',
                          mouthSize: "38/400",
                          price: "$0.28",
                        },
                        {
                          value: "CP200PETW",
                          label: "CP200PETW",
                          material: "PET",
                          size: "200",
                          color: "White",
                          shape: "Round",
                          labelHeight: '2.25" x 7.0"',
                          mouthSize: "45/400",
                          price: "$0.33",
                        },
                        {
                          value: "ABC16OZSTDUP",
                          label: "ABC16OZSTDUP",
                          material: "ALUM",
                          size: "6-3/4\u2032\u2032x11-1/4\u2032\u2032+3-1/2\u2032\u2032",
                          color: "Silver",
                          shape: "Pouch",
                          labelHeight: "",
                          mouthSize: "",
                          price: "$0.35000",
                        },
                      ]),
                      (this.dataSource = []),
                      (this.displayedColumns = ["property", "value"]),
                      (this.bottleInfoForm = this.fb.group({
                        bottlePart: ["CC225PETBL"],
                        bottleMaterial: [{ value: "", disabled: !0 }],
                        bottleSize: [{ value: "", disabled: !0 }],
                        bottleColor: [{ value: "", disabled: !0 }],
                        bottleShape: [{ value: "", disabled: !0 }],
                        labelPanelHeight: [{ value: "", disabled: !0 }],
                        bottleMouthSize: [{ value: "", disabled: !0 }],
                        bottlePricing: [{ value: "", disabled: !0 }],
                      })),
                      this.updateForm("CC225PETBL"),
                      this.bottleInfoForm.valueChanges.subscribe((Te) => {
                        this.updateDataSource();
                      });
                  }
                  ngOnInit() {}
                  onBottlePartChange(Bt) {
                    this.updateForm(Bt.value);
                  }
                  updateForm(Bt) {
                    (this.selectedBottle = this.bottleParts.find(
                      (Te) => Te.value === Bt,
                    )),
                      this.selectedBottle &&
                        (this.bottleInfoForm.patchValue({
                          bottleMaterial: this.selectedBottle.material,
                          bottleSize: this.selectedBottle.size,
                          bottleColor: this.selectedBottle.color,
                          bottleShape: this.selectedBottle.shape,
                          labelPanelHeight: this.selectedBottle.labelHeight,
                          bottleMouthSize: this.selectedBottle.mouthSize,
                          bottlePricing: this.selectedBottle.price,
                        }),
                        this.updateDataSource());
                  }
                  updateDataSource() {
                    const Bt = this.bottleInfoForm.getRawValue();
                    this.dataSource = [
                      { property: "NFG Bottle Part #", value: Bt.bottlePart },
                      { property: "Bottle Material", value: Bt.bottleMaterial },
                      { property: "Bottle Size", value: Bt.bottleSize },
                      { property: "Bottle Color", value: Bt.bottleColor },
                      { property: "Bottle Shape", value: Bt.bottleShape },
                      {
                        property: "Label Panel Height",
                        value: Bt.labelPanelHeight,
                      },
                      {
                        property: "Bottle Mouth/Cap Size",
                        value: Bt.bottleMouthSize,
                      },
                      { property: "Bottle Pricing", value: Bt.bottlePricing },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-bottle-info"]],
                    decls: 54,
                    vars: 5,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "bottlePart", 3, "selectionChange"],
                      [3, "value", 4, "ngFor", "ngForOf"],
                      ["matInput", "", "formControlName", "bottleMaterial"],
                      ["matInput", "", "formControlName", "bottleSize"],
                      ["matInput", "", "formControlName", "bottleColor"],
                      ["matInput", "", "formControlName", "bottleShape"],
                      ["matInput", "", "formControlName", "labelPanelHeight"],
                      ["matInput", "", "formControlName", "bottleMouthSize"],
                      ["matInput", "", "formControlName", "bottlePricing"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      [3, "value"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Bottle Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "NFG Bottle Part #"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4),
                        _.NdJ("selectionChange", function (Ze) {
                          return Je.onBottlePartChange(Ze);
                        }),
                        _.YNc(11, gi, 2, 2, "mat-option", 5),
                        _.qZA()(),
                        _.TgZ(12, "mat-form-field", 3)(13, "mat-label"),
                        _._uU(14, "Bottle Material"),
                        _.qZA(),
                        _._UZ(15, "input", 6),
                        _.qZA(),
                        _.TgZ(16, "mat-form-field", 3)(17, "mat-label"),
                        _._uU(18, "Bottle Size"),
                        _.qZA(),
                        _._UZ(19, "input", 7),
                        _.qZA(),
                        _.TgZ(20, "mat-form-field", 3)(21, "mat-label"),
                        _._uU(22, "Bottle Color"),
                        _.qZA(),
                        _._UZ(23, "input", 8),
                        _.qZA(),
                        _.TgZ(24, "mat-form-field", 3)(25, "mat-label"),
                        _._uU(26, "Bottle Shape"),
                        _.qZA(),
                        _._UZ(27, "input", 9),
                        _.qZA(),
                        _.TgZ(28, "mat-form-field", 3)(29, "mat-label"),
                        _._uU(30, "Label Panel Height"),
                        _.qZA(),
                        _._UZ(31, "input", 10),
                        _.qZA(),
                        _.TgZ(32, "mat-form-field", 3)(33, "mat-label"),
                        _._uU(34, "Bottle Mouth/Cap Size"),
                        _.qZA(),
                        _._UZ(35, "input", 11),
                        _.qZA(),
                        _.TgZ(36, "mat-form-field", 3)(37, "mat-label"),
                        _._uU(38, "Bottle Pricing"),
                        _.qZA(),
                        _._UZ(39, "input", 12),
                        _.qZA()()()()(),
                        _.TgZ(40, "div", 1)(41, "mat-card")(
                          42,
                          "mat-card-title",
                        ),
                        _._uU(43, "Bottle Details"),
                        _.qZA(),
                        _.TgZ(44, "mat-card-content")(45, "table", 13),
                        _.ynx(46, 14),
                        _.YNc(47, Xi, 2, 0, "th", 15),
                        _.YNc(48, _i, 2, 1, "td", 16),
                        _.BQk(),
                        _.ynx(49, 17),
                        _.YNc(50, de, 2, 0, "th", 15),
                        _.YNc(51, ot, 2, 1, "td", 16),
                        _.BQk(),
                        _.YNc(52, Z, 1, 0, "tr", 18),
                        _.YNc(53, rt, 1, 0, "tr", 19),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.bottleInfoForm),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.bottleParts),
                          _.xp6(34),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      s.sg,
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.table-container[_ngcontent-%COMP%]{width:auto;margin:0 auto}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "closure-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.closureParts = [
                        {
                          value: "CP38400PPWR",
                          label: "CP38400PPWR",
                          material: "PP",
                          size: "38/400",
                          color: "White",
                          profile: "Ribbed",
                          inductionSeal: "HIS",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.05746",
                        },
                        {
                          value: "ALL38400HDPEWR",
                          label: "ALL38400HDPEWR",
                          material: "HDPE",
                          size: "38/400",
                          color: "White",
                          profile: "Ribbed",
                          inductionSeal: "HIS",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.03680",
                        },
                        {
                          value: "CP38400PPWS",
                          label: "CP38400PPWS",
                          material: "PP",
                          size: "38/400",
                          color: "White",
                          profile: "Smooth",
                          inductionSeal: "HIS",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.0750",
                        },
                        {
                          value: "NF38400PPWS",
                          label: "NF38400PPWS",
                          material: "PP",
                          size: "38/400",
                          color: "White",
                          profile: "Smooth",
                          inductionSeal: "HIS",
                          sealMaterial: "Lift & Peal",
                          type: "Flip Top",
                          price: "$0.13",
                        },
                        {
                          value: "CP45400PPWR",
                          label: "CP45400PPWR",
                          material: "PP",
                          size: "45/400",
                          color: "White",
                          profile: "Ribbed",
                          inductionSeal: "Lift & Peel",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.1170",
                        },
                        {
                          value: "CP45400PPBR",
                          label: "CP45400PPBR",
                          material: "PP",
                          size: "45/400",
                          color: "Black",
                          profile: "Ribbed",
                          inductionSeal: "Lift & Peel",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.0720",
                        },
                        {
                          value: "CP38400PPBR",
                          label: "CP38400PPBR",
                          material: "PP",
                          size: "38/400",
                          color: "Black",
                          profile: "Ribbed",
                          inductionSeal: "HIS",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.07",
                        },
                        {
                          value: "FH45400PPWS",
                          label: "FH45400PPWS",
                          material: "PP",
                          size: "45/400",
                          color: "White",
                          profile: "Smooth",
                          inductionSeal: "Tamper Evident",
                          sealMaterial: "Tamper Evident",
                          type: "CT",
                          price: "$0.19",
                        },
                        {
                          value: "CP38400PPBLUES",
                          label: "CP38400PPBLUES",
                          material: "PP",
                          size: "40.4/400",
                          color: "PMS 2147 C",
                          profile: "Smooth",
                          inductionSeal: "HIS",
                          sealMaterial: "Foil",
                          type: "CT",
                          price: "$0.19",
                        },
                        {
                          value: "CP38400PPBS",
                          label: "CP38400PPBS",
                          material: "PP",
                          size: "38/400",
                          color: "Black",
                          profile: "Smooth",
                          inductionSeal: "HIS",
                          sealMaterial: "Vente Foil",
                          type: "CT",
                          price: "$0.07",
                        },
                      ]),
                      (this.dataSource = []),
                      (this.displayedColumns = ["property", "value"]),
                      (this.closureInfoForm = this.fb.group({
                        closurePart: ["CP38400PPWR"],
                        closureMaterial: [{ value: "", disabled: !0 }],
                        closureSize: [{ value: "", disabled: !0 }],
                        closureColor: [{ value: "", disabled: !0 }],
                        closureProfile: [{ value: "", disabled: !0 }],
                        closureInductionSeal: [{ value: "", disabled: !0 }],
                        closureSealMaterial: [{ value: "", disabled: !0 }],
                        closureType: [{ value: "", disabled: !0 }],
                        closurePrice: [{ value: "", disabled: !0 }],
                      })),
                      this.updateForm("CP38400PPWR"),
                      this.closureInfoForm.valueChanges.subscribe((Te) => {
                        this.updateDataSource();
                      });
                  }
                  ngOnInit() {}
                  onClosurePartChange(Bt) {
                    this.updateForm(Bt.value);
                  }
                  updateForm(Bt) {
                    (this.selectedClosure = this.closureParts.find(
                      (Te) => Te.value === Bt,
                    )),
                      this.selectedClosure &&
                        (this.closureInfoForm.patchValue({
                          closureMaterial: this.selectedClosure.material,
                          closureSize: this.selectedClosure.size,
                          closureColor: this.selectedClosure.color,
                          closureProfile: this.selectedClosure.profile,
                          closureInductionSeal:
                            this.selectedClosure.inductionSeal,
                          closureSealMaterial:
                            this.selectedClosure.sealMaterial,
                          closureType: this.selectedClosure.type,
                          closurePrice: this.selectedClosure.price,
                        }),
                        this.updateDataSource());
                  }
                  updateDataSource() {
                    const Bt = this.closureInfoForm.getRawValue();
                    this.dataSource = [
                      { property: "NFG Closure Part #", value: Bt.closurePart },
                      {
                        property: "Closure Material",
                        value: Bt.closureMaterial,
                      },
                      { property: "Closure Size", value: Bt.closureSize },
                      { property: "Closure Color", value: Bt.closureColor },
                      { property: "Closure Profile", value: Bt.closureProfile },
                      {
                        property: "Closure Induction Seal",
                        value: Bt.closureInductionSeal,
                      },
                      {
                        property: "Closure Seal Material",
                        value: Bt.closureSealMaterial,
                      },
                      { property: "Closure Type", value: Bt.closureType },
                      { property: "Closure Price", value: Bt.closurePrice },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-closure-info"]],
                    decls: 58,
                    vars: 5,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "closurePart", 3, "selectionChange"],
                      [3, "value", 4, "ngFor", "ngForOf"],
                      ["matInput", "", "formControlName", "closureMaterial"],
                      ["matInput", "", "formControlName", "closureSize"],
                      ["matInput", "", "formControlName", "closureColor"],
                      ["matInput", "", "formControlName", "closureProfile"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "closureInductionSeal",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "closureSealMaterial",
                      ],
                      ["matInput", "", "formControlName", "closureType"],
                      ["matInput", "", "formControlName", "closurePrice"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      [3, "value"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Closure Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "NFG Closure Part #"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4),
                        _.NdJ("selectionChange", function (Ze) {
                          return Je.onClosurePartChange(Ze);
                        }),
                        _.YNc(11, Rt, 2, 2, "mat-option", 5),
                        _.qZA()(),
                        _.TgZ(12, "mat-form-field", 3)(13, "mat-label"),
                        _._uU(14, "Closure Material"),
                        _.qZA(),
                        _._UZ(15, "input", 6),
                        _.qZA(),
                        _.TgZ(16, "mat-form-field", 3)(17, "mat-label"),
                        _._uU(18, "Closure Size"),
                        _.qZA(),
                        _._UZ(19, "input", 7),
                        _.qZA(),
                        _.TgZ(20, "mat-form-field", 3)(21, "mat-label"),
                        _._uU(22, "Closure Color"),
                        _.qZA(),
                        _._UZ(23, "input", 8),
                        _.qZA(),
                        _.TgZ(24, "mat-form-field", 3)(25, "mat-label"),
                        _._uU(26, "Closure Profile"),
                        _.qZA(),
                        _._UZ(27, "input", 9),
                        _.qZA(),
                        _.TgZ(28, "mat-form-field", 3)(29, "mat-label"),
                        _._uU(30, "Closure Induction Seal"),
                        _.qZA(),
                        _._UZ(31, "input", 10),
                        _.qZA(),
                        _.TgZ(32, "mat-form-field", 3)(33, "mat-label"),
                        _._uU(34, "Closure Seal Material"),
                        _.qZA(),
                        _._UZ(35, "input", 11),
                        _.qZA(),
                        _.TgZ(36, "mat-form-field", 3)(37, "mat-label"),
                        _._uU(38, "Closure Type"),
                        _.qZA(),
                        _._UZ(39, "input", 12),
                        _.qZA(),
                        _.TgZ(40, "mat-form-field", 3)(41, "mat-label"),
                        _._uU(42, "Closure Price"),
                        _.qZA(),
                        _._UZ(43, "input", 13),
                        _.qZA()()()()(),
                        _.TgZ(44, "div", 1)(45, "mat-card")(
                          46,
                          "mat-card-title",
                        ),
                        _._uU(47, "Closure Details"),
                        _.qZA(),
                        _.TgZ(48, "mat-card-content")(49, "table", 14),
                        _.ynx(50, 15),
                        _.YNc(51, Lt, 2, 0, "th", 16),
                        _.YNc(52, ut, 2, 1, "td", 17),
                        _.BQk(),
                        _.ynx(53, 18),
                        _.YNc(54, q, 2, 0, "th", 16),
                        _.YNc(55, Ct, 2, 1, "td", 17),
                        _.BQk(),
                        _.YNc(56, H, 1, 0, "tr", 19),
                        _.YNc(57, Nt, 1, 0, "tr", 20),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.closureInfoForm),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.closureParts),
                          _.xp6(38),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      s.sg,
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.table-container[_ngcontent-%COMP%]{width:auto;margin:0 auto}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "master-carton-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.bottleCounts = [135, 90, 78, 12, 60, 50, 100]),
                      (this.cartonSizes = [
                        '9"x7"x7"',
                        '18"x12"x12"',
                        '20"x12"x12"',
                        '9"x7"x5"',
                        '16"x10"x4" (CEL)',
                      ]),
                      (this.dataSource = []),
                      (this.displayedColumns = ["property", "value"]),
                      (this.cartonInfoForm = this.fb.group({
                        bottlePerCarton: [12],
                        cartonSize: ['9"x7"x7"'],
                      })),
                      this.updateDataSource(),
                      this.cartonInfoForm.valueChanges.subscribe((Te) => {
                        this.updateDataSource();
                      });
                  }
                  ngOnInit() {}
                  updateDataSource() {
                    const Bt = this.cartonInfoForm.getRawValue();
                    this.dataSource = [
                      {
                        property: "Bottle Per Master Carton",
                        value: Bt.bottlePerCarton,
                      },
                      { property: "Master Carton Size", value: Bt.cartonSize },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-master-carton-info"]],
                    decls: 31,
                    vars: 6,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "bottlePerCarton"],
                      [3, "value", 4, "ngFor", "ngForOf"],
                      ["formControlName", "cartonSize"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      [3, "value"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Master Carton Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "Bottle Per Master Carton"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4),
                        _.YNc(11, se, 2, 2, "mat-option", 5),
                        _.qZA()(),
                        _.TgZ(12, "mat-form-field", 3)(13, "mat-label"),
                        _._uU(14, "Master Carton Size"),
                        _.qZA(),
                        _.TgZ(15, "mat-select", 6),
                        _.YNc(16, it, 2, 2, "mat-option", 5),
                        _.qZA()()()()()(),
                        _.TgZ(17, "div", 1)(18, "mat-card")(
                          19,
                          "mat-card-title",
                        ),
                        _._uU(20, "Carton Details"),
                        _.qZA(),
                        _.TgZ(21, "mat-card-content")(22, "table", 7),
                        _.ynx(23, 8),
                        _.YNc(24, Ut, 2, 0, "th", 9),
                        _.YNc(25, ve, 2, 1, "td", 10),
                        _.BQk(),
                        _.ynx(26, 11),
                        _.YNc(27, qe, 2, 0, "th", 9),
                        _.YNc(28, ki, 2, 1, "td", 10),
                        _.BQk(),
                        _.YNc(29, Xt, 1, 0, "tr", 12),
                        _.YNc(30, ae, 1, 0, "tr", 13),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.cartonInfoForm),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.bottleCounts),
                          _.xp6(5),
                          _.Q6J("ngForOf", Je.cartonSizes),
                          _.xp6(6),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      s.sg,
                      x._Y,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.table-container[_ngcontent-%COMP%]{width:auto;margin:0 auto}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "other-components",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.displayedColumns = ["property", "value"]),
                      (this.tamperEvidentTypes = [
                        "NeckBand",
                        "Tamper-Proof Sticker",
                      ]),
                      (this.neckBandParts = [
                        "SP7505CPVC",
                        "SP6505CPVC",
                        "FULLSLEEVE",
                        "NA",
                      ]),
                      (this.silicas = [
                        "2GSIEVED",
                        "10GGELD",
                        "1GSIEVED",
                        ".25GSIEVED",
                        "NA",
                      ]),
                      (this.cottons = ["COTTBD1", "COTTBD", "NA"]),
                      (this.lotCodeOptions = ["Yes", "No"]),
                      (this.lotCodeTypeOptions = ["Blue Ink", "NA"]),
                      (this.neckBandPartDetails = {
                        SP7505CPVC: {
                          size: "75mm x 0.5mm",
                          color: "Clear",
                          material: "PVC",
                          pricing: "$0.0031",
                        },
                        SP6505CPVC: {
                          size: "65mm x 0.5mm",
                          color: "Clear",
                          material: "PVC",
                          pricing: "$0.0026",
                        },
                        FULLSLEEVE: {
                          size: "94mm x 0.5mm",
                          color: "Clear",
                          material: "PVC",
                          pricing: "$0.0700",
                        },
                        NA: {
                          size: "NA",
                          color: "NA",
                          material: "NA",
                          pricing: "$0.00",
                        },
                      }),
                      (this.silicaDetails = {
                        "2GSIEVED": { cost: "$0.0600" },
                        "10GGELD": { cost: "$0.1500" },
                        "1GSIEVED": { cost: "$0.0357" },
                        ".25GSIEVED": { cost: "$0.1500" },
                        NA: { cost: "$0.000" },
                      }),
                      (this.cottonDetails = {
                        COTTBD1: { cost: "$0.15" },
                        COTTBD: { cost: "$0.050" },
                        NA: { cost: "$0.000" },
                      }),
                      (this.otherComponentsForm = this.fb.group({
                        tamperEvidentType: ["NeckBand"],
                        nfgNeckBandPart: ["FULLSLEEVE"],
                        tamperEvidentMaterialSize: [""],
                        tamperEvidentColor: [""],
                        tamperEvidentMaterial: [""],
                        tamperEvidentPricing: [""],
                        silica: ["10GGELD"],
                        silicaCost: [""],
                        cotton: ["COTTBD"],
                        cottonCost: [""],
                        lotCodeBestByDate: ["Yes"],
                        lotCodeBestByDateType: ["Blue Ink"],
                      })),
                      this.updateFormFields(this.otherComponentsForm.value),
                      (this.previewData = this.createPreviewData(
                        this.otherComponentsForm.value,
                      )),
                      this.otherComponentsForm.valueChanges.subscribe((Te) => {
                        this.updateFormFields(Te),
                          (this.previewData = this.createPreviewData(Te));
                      });
                  }
                  ngOnInit() {}
                  updateFormFields(Bt) {
                    const Te =
                      this.neckBandPartDetails[Bt.nfgNeckBandPart] || {};
                    this.otherComponentsForm.patchValue(
                      {
                        tamperEvidentMaterialSize: Te.size,
                        tamperEvidentColor: Te.color,
                        tamperEvidentMaterial: Te.material,
                        tamperEvidentPricing: Te.pricing,
                        silicaCost: (this.silicaDetails[Bt.silica] || {}).cost,
                        cottonCost: (this.cottonDetails[Bt.cotton] || {}).cost,
                      },
                      { emitEvent: !1 },
                    );
                  }
                  createPreviewData(Bt) {
                    return [
                      {
                        property: "Tamper Evident Type",
                        value: Bt.tamperEvidentType,
                      },
                      {
                        property: "NFG Neck Band Part #",
                        value: Bt.nfgNeckBandPart,
                      },
                      {
                        property: "Tamper Evident Material Size",
                        value: Bt.tamperEvidentMaterialSize,
                      },
                      {
                        property: "Tamper Evident Color",
                        value: Bt.tamperEvidentColor,
                      },
                      {
                        property: "Tamper Evident Material",
                        value: Bt.tamperEvidentMaterial,
                      },
                      {
                        property: "Tamper Evident Pricing",
                        value: Bt.tamperEvidentPricing,
                      },
                      { property: "Silica", value: Bt.silica },
                      { property: "Silica Cost", value: Bt.silicaCost },
                      { property: "Cotton", value: Bt.cotton },
                      { property: "Cotton Cost", value: Bt.cottonCost },
                      {
                        property: "Lot Code/Best By Date",
                        value: Bt.lotCodeBestByDate,
                      },
                      {
                        property: "Lot Code/Best By Date Type",
                        value: Bt.lotCodeBestByDateType,
                      },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-other-components"]],
                    decls: 105,
                    vars: 4,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["formControlName", "tamperEvidentType"],
                      ["value", "NeckBand"],
                      ["value", "Tamper-Proof Sticker"],
                      ["formControlName", "nfgNeckBandPart"],
                      ["value", "SP7505CPVC"],
                      ["value", "SP6505CPVC"],
                      ["value", "FULLSLEEVE"],
                      ["value", "NA"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "tamperEvidentMaterialSize",
                        "readonly",
                        "",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "tamperEvidentColor",
                        "readonly",
                        "",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "tamperEvidentMaterial",
                        "readonly",
                        "",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "tamperEvidentPricing",
                        "readonly",
                        "",
                      ],
                      ["formControlName", "silica"],
                      ["value", "2GSIEVED"],
                      ["value", "10GGELD"],
                      ["value", "1GSIEVED"],
                      ["value", ".25GSIEVED"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "silicaCost",
                        "readonly",
                        "",
                      ],
                      ["formControlName", "cotton"],
                      ["value", "COTTBD1"],
                      ["value", "COTTBD"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "cottonCost",
                        "readonly",
                        "",
                      ],
                      ["formControlName", "lotCodeBestByDate"],
                      ["value", "Yes"],
                      ["value", "No"],
                      ["formControlName", "lotCodeBestByDateType"],
                      ["value", "Blue Ink"],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Other Components"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "Tamper Evident Type"),
                        _.qZA(),
                        _.TgZ(10, "mat-select", 4)(11, "mat-option", 5),
                        _._uU(12, "NeckBand"),
                        _.qZA(),
                        _.TgZ(13, "mat-option", 6),
                        _._uU(14, "Tamper-Proof Sticker"),
                        _.qZA()()(),
                        _.TgZ(15, "mat-form-field", 3)(16, "mat-label"),
                        _._uU(17, "NFG Neck Band Part #"),
                        _.qZA(),
                        _.TgZ(18, "mat-select", 7)(19, "mat-option", 8),
                        _._uU(20, "SP7505CPVC"),
                        _.qZA(),
                        _.TgZ(21, "mat-option", 9),
                        _._uU(22, "SP6505CPVC"),
                        _.qZA(),
                        _.TgZ(23, "mat-option", 10),
                        _._uU(24, "FULLSLEEVE"),
                        _.qZA(),
                        _.TgZ(25, "mat-option", 11),
                        _._uU(26, "NA"),
                        _.qZA()()(),
                        _.TgZ(27, "mat-form-field", 3)(28, "mat-label"),
                        _._uU(29, "Tamper Evident Material Size"),
                        _.qZA(),
                        _._UZ(30, "input", 12),
                        _.qZA(),
                        _.TgZ(31, "mat-form-field", 3)(32, "mat-label"),
                        _._uU(33, "Tamper Evident Color"),
                        _.qZA(),
                        _._UZ(34, "input", 13),
                        _.qZA(),
                        _.TgZ(35, "mat-form-field", 3)(36, "mat-label"),
                        _._uU(37, "Tamper Evident Material"),
                        _.qZA(),
                        _._UZ(38, "input", 14),
                        _.qZA(),
                        _.TgZ(39, "mat-form-field", 3)(40, "mat-label"),
                        _._uU(41, "Tamper Evident Pricing"),
                        _.qZA(),
                        _._UZ(42, "input", 15),
                        _.qZA(),
                        _.TgZ(43, "mat-form-field", 3)(44, "mat-label"),
                        _._uU(45, "Silica"),
                        _.qZA(),
                        _.TgZ(46, "mat-select", 16)(47, "mat-option", 17),
                        _._uU(48, "2GSIEVED"),
                        _.qZA(),
                        _.TgZ(49, "mat-option", 18),
                        _._uU(50, "10GGELD"),
                        _.qZA(),
                        _.TgZ(51, "mat-option", 19),
                        _._uU(52, "1GSIEVED"),
                        _.qZA(),
                        _.TgZ(53, "mat-option", 20),
                        _._uU(54, ".25GSIEVED"),
                        _.qZA(),
                        _.TgZ(55, "mat-option", 11),
                        _._uU(56, "NA"),
                        _.qZA()()(),
                        _.TgZ(57, "mat-form-field", 3)(58, "mat-label"),
                        _._uU(59, "Silica Cost"),
                        _.qZA(),
                        _._UZ(60, "input", 21),
                        _.qZA(),
                        _.TgZ(61, "mat-form-field", 3)(62, "mat-label"),
                        _._uU(63, "Cotton"),
                        _.qZA(),
                        _.TgZ(64, "mat-select", 22)(65, "mat-option", 23),
                        _._uU(66, "COTTBD1"),
                        _.qZA(),
                        _.TgZ(67, "mat-option", 24),
                        _._uU(68, "COTTBD"),
                        _.qZA(),
                        _.TgZ(69, "mat-option", 11),
                        _._uU(70, "NA"),
                        _.qZA()()(),
                        _.TgZ(71, "mat-form-field", 3)(72, "mat-label"),
                        _._uU(73, "Cotton Cost"),
                        _.qZA(),
                        _._UZ(74, "input", 25),
                        _.qZA(),
                        _.TgZ(75, "mat-form-field", 3)(76, "mat-label"),
                        _._uU(77, "Lot Code/Best By Date"),
                        _.qZA(),
                        _.TgZ(78, "mat-select", 26)(79, "mat-option", 27),
                        _._uU(80, "Yes"),
                        _.qZA(),
                        _.TgZ(81, "mat-option", 28),
                        _._uU(82, "No"),
                        _.qZA()()(),
                        _.TgZ(83, "mat-form-field", 3)(84, "mat-label"),
                        _._uU(85, "Lot Code/Best By Date Type"),
                        _.qZA(),
                        _.TgZ(86, "mat-select", 29)(87, "mat-option", 30),
                        _._uU(88, "Blue Ink"),
                        _.qZA(),
                        _.TgZ(89, "mat-option", 11),
                        _._uU(90, "NA"),
                        _.qZA()()()()()()(),
                        _.TgZ(91, "div", 1)(92, "mat-card")(
                          93,
                          "mat-card-title",
                        ),
                        _._uU(94, "Preview"),
                        _.qZA(),
                        _.TgZ(95, "mat-card-content")(96, "table", 31),
                        _.ynx(97, 32),
                        _.YNc(98, $t, 2, 0, "th", 33),
                        _.YNc(99, fe, 2, 1, "td", 34),
                        _.BQk(),
                        _.ynx(100, 35),
                        _.YNc(101, ke, 2, 0, "th", 33),
                        _.YNc(102, yi, 2, 1, "td", 34),
                        _.BQk(),
                        _.YNc(103, pt, 1, 0, "tr", 36),
                        _.YNc(104, vt, 1, 0, "tr", 37),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.otherComponentsForm),
                          _.xp6(90),
                          _.Q6J("dataSource", Je.previewData),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      bt.gD,
                      jt.ey,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
            {
              path: "label-info",
              component: (() => {
                class tt {
                  constructor(Bt) {
                    (this.fb = Bt),
                      (this.dataSource = []),
                      (this.displayedColumns = ["property", "value"]),
                      (this.labelInfoForm = this.fb.group({
                        labelSuppliedBy: ["NFG"],
                        labelDimension: ['2.50" X 7.00"'],
                        labelMaterialType: ["White BOPP"],
                        backingMaterialFinish: ["PET"],
                        labelMaterialFinish: ["Gloss"],
                      })),
                      this.updateDataSource(),
                      this.labelInfoForm.valueChanges.subscribe((Te) => {
                        this.updateDataSource();
                      });
                  }
                  ngOnInit() {}
                  updateDataSource() {
                    const Bt = this.labelInfoForm.getRawValue();
                    this.dataSource = [
                      {
                        property: "Label Supplied By",
                        value: Bt.labelSuppliedBy,
                      },
                      { property: "Label Dimension", value: Bt.labelDimension },
                      {
                        property: "Label Material Type",
                        value: Bt.labelMaterialType,
                      },
                      {
                        property: "Backing Material Finish",
                        value: Bt.backingMaterialFinish,
                      },
                      {
                        property: "Label Material Finish",
                        value: Bt.labelMaterialFinish,
                      },
                    ];
                  }
                  static #t = (this.ɵfac = function (Te) {
                    return new (Te || tt)(_.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = _.Xpm({
                    type: tt,
                    selectors: [["app-label-info"]],
                    decls: 41,
                    vars: 4,
                    consts: [
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      ["fxFlex", "50%"],
                      [3, "formGroup"],
                      ["appearance", "fill"],
                      ["matInput", "", "formControlName", "labelSuppliedBy"],
                      ["matInput", "", "formControlName", "labelDimension"],
                      ["matInput", "", "formControlName", "labelMaterialType"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "backingMaterialFinish",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "labelMaterialFinish",
                      ],
                      ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"],
                      ["matColumnDef", "property"],
                      ["mat-header-cell", "", 4, "matHeaderCellDef"],
                      ["mat-cell", "", 4, "matCellDef"],
                      ["matColumnDef", "value"],
                      ["mat-header-row", "", 4, "matHeaderRowDef"],
                      ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                      ["mat-header-cell", ""],
                      ["mat-cell", ""],
                      ["mat-header-row", ""],
                      ["mat-row", ""],
                    ],
                    template: function (Te, Je) {
                      1 & Te &&
                        (_.TgZ(0, "div", 0)(1, "div", 1)(2, "mat-card")(
                          3,
                          "mat-card-title",
                        ),
                        _._uU(4, "Label Info"),
                        _.qZA(),
                        _.TgZ(5, "mat-card-content")(6, "form", 2)(
                          7,
                          "mat-form-field",
                          3,
                        )(8, "mat-label"),
                        _._uU(9, "Label Supplied By"),
                        _.qZA(),
                        _._UZ(10, "input", 4),
                        _.qZA(),
                        _.TgZ(11, "mat-form-field", 3)(12, "mat-label"),
                        _._uU(13, "Label Dimension"),
                        _.qZA(),
                        _._UZ(14, "input", 5),
                        _.qZA(),
                        _.TgZ(15, "mat-form-field", 3)(16, "mat-label"),
                        _._uU(17, "Label Material Type"),
                        _.qZA(),
                        _._UZ(18, "input", 6),
                        _.qZA(),
                        _.TgZ(19, "mat-form-field", 3)(20, "mat-label"),
                        _._uU(21, "Backing Material Finish"),
                        _.qZA(),
                        _._UZ(22, "input", 7),
                        _.qZA(),
                        _.TgZ(23, "mat-form-field", 3)(24, "mat-label"),
                        _._uU(25, "Label Material Finish"),
                        _.qZA(),
                        _._UZ(26, "input", 8),
                        _.qZA()()()()(),
                        _.TgZ(27, "div", 1)(28, "mat-card")(
                          29,
                          "mat-card-title",
                        ),
                        _._uU(30, "Label Details"),
                        _.qZA(),
                        _.TgZ(31, "mat-card-content")(32, "table", 9),
                        _.ynx(33, 10),
                        _.YNc(34, j, 2, 0, "th", 11),
                        _.YNc(35, ct, 2, 1, "td", 12),
                        _.BQk(),
                        _.ynx(36, 13),
                        _.YNc(37, ue, 2, 0, "th", 11),
                        _.YNc(38, Wt, 2, 1, "td", 12),
                        _.BQk(),
                        _.YNc(39, le, 1, 0, "tr", 14),
                        _.YNc(40, It, 1, 0, "tr", 15),
                        _.qZA()()()()()),
                        2 & Te &&
                          (_.xp6(6),
                          _.Q6J("formGroup", Je.labelInfoForm),
                          _.xp6(26),
                          _.Q6J("dataSource", Je.dataSource),
                          _.xp6(7),
                          _.Q6J("matHeaderRowDef", Je.displayedColumns),
                          _.xp6(1),
                          _.Q6J("matRowDefColumns", Je.displayedColumns));
                    },
                    dependencies: [
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      C.a8,
                      C.dn,
                      C.n5,
                      p.KE,
                      p.hX,
                      at.Nt,
                      lt.BZ,
                      lt.fO,
                      lt.as,
                      lt.w1,
                      lt.Dz,
                      lt.nj,
                      lt.ge,
                      lt.ev,
                      lt.XQ,
                      lt.Gk,
                      gt.xw,
                      gt.SQ,
                      gt.yH,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.table-container[_ngcontent-%COMP%]{width:auto;margin:0 auto}",
                    ],
                  }));
                }
                return tt;
              })(),
            },
          ],
        },
      ];
      let oi = (() => {
        class tt {
          static #t = (this.ɵfac = function (Te) {
            return new (Te || tt)();
          });
          static #e = (this.ɵmod = _.oAB({ type: tt }));
          static #i = (this.ɵinj = _.cJS({
            imports: [$.Bz.forChild(Ae), $.Bz],
          }));
        }
        return tt;
      })();
      var pe = D(617);
      let ne = (() => {
        class tt {
          static #t = (this.ɵfac = function (Te) {
            return new (Te || tt)();
          });
          static #e = (this.ɵmod = _.oAB({ type: tt }));
          static #i = (this.ɵinj = _.cJS({
            imports: [
              s.ez,
              x.UX,
              C.QW,
              p.lN,
              at.c,
              lt.p0,
              bt.LD,
              B.ie,
              pe.Ps,
              kt.o9,
              oi,
            ],
          }));
        }
        return tt;
      })();
    },
    3e3: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { IngredientsModule: () => _i });
      var s = D(6814),
        x = D(6223),
        C = D(6216),
        p = D(5195),
        at = D(9157),
        lt = D(2032),
        bt = D(8525),
        B = D(5313),
        kt = D(3566),
        $ = D(2296),
        _ = D(1896),
        A = D(5879);
      let jt = (() => {
        class de {
          constructor() {
            this.dock = !1;
          }
          toggleDock() {
            this.dock = !this.dock;
          }
          static #t = (this.ɵfac = function (rt) {
            return new (rt || de)();
          });
          static #e = (this.ɵcmp = A.Xpm({
            type: de,
            selectors: [["app-ingredients"]],
            decls: 2,
            vars: 2,
            consts: [[1, "nufacturing_ingredients"]],
            template: function (rt, yt) {
              1 & rt &&
                (A.TgZ(0, "section", 0), A._UZ(1, "router-outlet"), A.qZA()),
                2 & rt && A.ekj("expanded", yt.dock);
            },
            dependencies: [_.lC],
            styles: [
              ".subnav[_ngcontent-%COMP%]{position:fixed;top:25%;right:0;width:20%;height:50vh;display:flex;justify-content:center;margin:auto;align-items:center;background-color:#92929280;backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);border-left:1px solid #ddd;z-index:1000;overflow-y:scroll;padding:20px;box-shadow:-2px 0 5px #0003;transition:right .3s ease}.subnav.collapsed[_ngcontent-%COMP%]{right:-20%}.subnav[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{cursor:pointer;position:absolute;top:10px;left:10px}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin-bottom:10px;padding:10px 20px;font-size:12px;text-transform:uppercase;color:#fff;background-color:#023f1f;border:none;border-radius:4px;transition:background-color .3s ease,box-shadow .3s ease}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#303f9f}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{background-color:#283593}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 5px #3f51b580}.subnav[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   button.active-link[_ngcontent-%COMP%]{background-color:#1e88e5}.nufacturing_ingredients[_ngcontent-%COMP%]{margin-right:20%;padding:20px;transition:margin-right .3s ease}.nufacturing_ingredients.expanded[_ngcontent-%COMP%]{margin-right:0}mat-card[_ngcontent-%COMP%]{margin:10px;width:100%}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%]{text-align:left;font-weight:700}td[_ngcontent-%COMP%]{padding:8px}",
            ],
          }));
        }
        return de;
      })();
      var gt = D(614),
        Jt = D(3814),
        De = D(617);
      function Ve(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 25), A._uU(1, " Ingredient "), A.qZA());
      }
      function He(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.name, " ");
        }
      }
      function We(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 25),
          A._uU(1, " Per Capsule (Mg) "),
          A.qZA());
      }
      function Re(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.perCapsule, " ");
        }
      }
      function wt(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 25),
          A._uU(1, " Price Per (KG) "),
          A.qZA());
      }
      function _t(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.pricePerKg, " ");
        }
      }
      function St(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 25), A._uU(1, " MOQ (KG) "), A.qZA());
      }
      function Pt(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.moqKg, " ");
        }
      }
      function ee(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 25), A._uU(1, " Vendor "), A.qZA());
      }
      function Kt(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.vendor, " ");
        }
      }
      function ze(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 25), A._uU(1, " Lead Time "), A.qZA());
      }
      function mi(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.leadTime, " ");
        }
      }
      function ie(de, ot) {
        1 & de && (A.TgZ(0, "mat-header-cell"), A._uU(1, " Actions "), A.qZA());
      }
      function vi(de, ot) {
        if (1 & de) {
          const Z = A.EpF();
          A.TgZ(0, "mat-cell")(1, "button", 26),
            A.NdJ("click", function () {
              const Rt = A.CHM(Z).$implicit,
                Lt = A.oxw();
              return A.KtG(Lt.editIngredient(Rt));
            }),
            A.TgZ(2, "mat-icon"),
            A._uU(3, "edit"),
            A.qZA()(),
            A.TgZ(4, "button", 27),
            A.NdJ("click", function () {
              const Rt = A.CHM(Z).$implicit,
                Lt = A.oxw();
              return A.KtG(Lt.deleteIngredient(Rt));
            }),
            A.TgZ(5, "mat-icon"),
            A._uU(6, "delete"),
            A.qZA()()();
        }
      }
      function Ge(de, ot) {
        1 & de && A._UZ(0, "mat-header-row");
      }
      function hi(de, ot) {
        1 & de && A._UZ(0, "mat-row");
      }
      let Si = (() => {
        class de {
          constructor(Z, rt) {
            (this.fb = Z),
              (this.globalService = rt),
              (this.displayedColumns = [
                "name",
                "perCapsule",
                "pricePerKg",
                "moqKg",
                "vendor",
                "leadTime",
                "actions",
              ]),
              (this.dataSource = new B.by(this.globalService.getIngredients())),
              (this.ingredientForm = this.fb.group({
                name: [""],
                perCapsule: [""],
                pricePerKg: [""],
                moqKg: [""],
                vendor: [""],
                leadTime: [""],
              }));
          }
          ngOnInit() {}
          applyFilter(Z) {
            this.dataSource.filter = Z.target.value.trim().toLowerCase();
          }
          viewIngredientDetails(Z) {
            this.selectedIngredient = Z;
          }
          editIngredient(Z) {
            this.ingredientForm.patchValue(Z), (this.selectedIngredient = Z);
          }
          deleteIngredient(Z) {
            const rt = this.globalService.getIngredients(),
              yt = rt.findIndex((Rt) => Rt.name === Z.name);
            yt >= 0 && (rt.splice(yt, 1), (this.dataSource.data = rt));
          }
          onSubmit() {
            const Z = this.ingredientForm.value,
              rt = this.globalService.getIngredients(),
              yt = rt.findIndex((Rt) => Rt.name === Z.name);
            yt >= 0 ? (rt[yt] = Z) : rt.push(Z),
              (this.dataSource.data = rt),
              this.ingredientForm.reset();
          }
          static #t = (this.ɵfac = function (rt) {
            return new (rt || de)(A.Y36(x.qu), A.Y36(gt.a));
          });
          static #e = (this.ɵcmp = A.Xpm({
            type: de,
            selectors: [["app-ingredients-info"]],
            decls: 70,
            vars: 4,
            consts: [
              ["fxLayout", "column", "fxLayoutGap", "20px", 1, "container"],
              [1, "search-filter-container"],
              ["appearance", "fill"],
              ["matInput", "", 3, "input"],
              [3, "formGroup", "ngSubmit"],
              ["matInput", "", "formControlName", "name"],
              ["matInput", "", "formControlName", "perCapsule"],
              ["matInput", "", "formControlName", "pricePerKg"],
              ["matInput", "", "formControlName", "moqKg"],
              ["matInput", "", "formControlName", "vendor"],
              ["matInput", "", "formControlName", "leadTime"],
              ["mat-raised-button", "", "color", "primary", "type", "submit"],
              ["mat-table", "", "matSort", "", 3, "dataSource"],
              ["matColumnDef", "name"],
              ["mat-sort-header", "", 4, "matHeaderCellDef"],
              [4, "matCellDef"],
              ["matColumnDef", "perCapsule"],
              ["matColumnDef", "pricePerKg"],
              ["matColumnDef", "moqKg"],
              ["matColumnDef", "vendor"],
              ["matColumnDef", "leadTime"],
              ["matColumnDef", "actions"],
              [4, "matHeaderCellDef"],
              [4, "matHeaderRowDef"],
              [4, "matRowDef", "matRowDefColumns"],
              ["mat-sort-header", ""],
              ["mat-icon-button", "", "color", "primary", 3, "click"],
              ["mat-icon-button", "", "color", "warn", 3, "click"],
            ],
            template: function (rt, yt) {
              1 & rt &&
                (A.TgZ(0, "div", 0)(1, "header")(2, "h1"),
                A._uU(3, "Ingredients Info"),
                A.qZA(),
                A.TgZ(4, "p"),
                A._uU(
                  5,
                  "Manage and review the ingredients used in the product formulation.",
                ),
                A.qZA()(),
                A.TgZ(6, "div", 1)(7, "mat-form-field", 2)(8, "mat-label"),
                A._uU(9, "Search Ingredients"),
                A.qZA(),
                A.TgZ(10, "input", 3),
                A.NdJ("input", function (Lt) {
                  return yt.applyFilter(Lt);
                }),
                A.qZA()()(),
                A.TgZ(11, "mat-card")(12, "mat-card-title"),
                A._uU(13, "Add/Edit Ingredient"),
                A.qZA(),
                A.TgZ(14, "mat-card-content")(15, "form", 4),
                A.NdJ("ngSubmit", function () {
                  return yt.onSubmit();
                }),
                A.TgZ(16, "mat-form-field", 2)(17, "mat-label"),
                A._uU(18, "Ingredient"),
                A.qZA(),
                A._UZ(19, "input", 5),
                A.qZA(),
                A.TgZ(20, "mat-form-field", 2)(21, "mat-label"),
                A._uU(22, "Per Capsule (Mg)"),
                A.qZA(),
                A._UZ(23, "input", 6),
                A.qZA(),
                A.TgZ(24, "mat-form-field", 2)(25, "mat-label"),
                A._uU(26, "Price Per (KG)"),
                A.qZA(),
                A._UZ(27, "input", 7),
                A.qZA(),
                A.TgZ(28, "mat-form-field", 2)(29, "mat-label"),
                A._uU(30, "MOQ (KG)"),
                A.qZA(),
                A._UZ(31, "input", 8),
                A.qZA(),
                A.TgZ(32, "mat-form-field", 2)(33, "mat-label"),
                A._uU(34, "Vendor"),
                A.qZA(),
                A._UZ(35, "input", 9),
                A.qZA(),
                A.TgZ(36, "mat-form-field", 2)(37, "mat-label"),
                A._uU(38, "Lead Time"),
                A.qZA(),
                A._UZ(39, "input", 10),
                A.qZA(),
                A.TgZ(40, "button", 11),
                A._uU(41, "Save"),
                A.qZA()()()(),
                A.TgZ(42, "mat-card")(43, "mat-card-title"),
                A._uU(44, "Ingredients List"),
                A.qZA(),
                A.TgZ(45, "mat-card-content")(46, "table", 12),
                A.ynx(47, 13),
                A.YNc(48, Ve, 2, 0, "mat-header-cell", 14),
                A.YNc(49, He, 2, 1, "mat-cell", 15),
                A.BQk(),
                A.ynx(50, 16),
                A.YNc(51, We, 2, 0, "mat-header-cell", 14),
                A.YNc(52, Re, 2, 1, "mat-cell", 15),
                A.BQk(),
                A.ynx(53, 17),
                A.YNc(54, wt, 2, 0, "mat-header-cell", 14),
                A.YNc(55, _t, 2, 1, "mat-cell", 15),
                A.BQk(),
                A.ynx(56, 18),
                A.YNc(57, St, 2, 0, "mat-header-cell", 14),
                A.YNc(58, Pt, 2, 1, "mat-cell", 15),
                A.BQk(),
                A.ynx(59, 19),
                A.YNc(60, ee, 2, 0, "mat-header-cell", 14),
                A.YNc(61, Kt, 2, 1, "mat-cell", 15),
                A.BQk(),
                A.ynx(62, 20),
                A.YNc(63, ze, 2, 0, "mat-header-cell", 14),
                A.YNc(64, mi, 2, 1, "mat-cell", 15),
                A.BQk(),
                A.ynx(65, 21),
                A.YNc(66, ie, 2, 0, "mat-header-cell", 22),
                A.YNc(67, vi, 7, 0, "mat-cell", 15),
                A.BQk(),
                A.YNc(68, Ge, 1, 0, "mat-header-row", 23),
                A.YNc(69, hi, 1, 0, "mat-row", 24),
                A.qZA()()()()),
                2 & rt &&
                  (A.xp6(15),
                  A.Q6J("formGroup", yt.ingredientForm),
                  A.xp6(31),
                  A.Q6J("dataSource", yt.dataSource),
                  A.xp6(22),
                  A.Q6J("matHeaderRowDef", yt.displayedColumns),
                  A.xp6(1),
                  A.Q6J("matRowDefColumns", yt.displayedColumns));
            },
            dependencies: [
              x._Y,
              x.Fj,
              x.JJ,
              x.JL,
              x.sg,
              x.u,
              Jt.xw,
              Jt.SQ,
              p.a8,
              p.dn,
              p.n5,
              at.KE,
              at.hX,
              lt.Nt,
              B.BZ,
              B.fO,
              B.as,
              B.w1,
              B.Dz,
              B.nj,
              B.ge,
              B.ev,
              B.XQ,
              B.Gk,
              kt.YE,
              kt.nU,
              $.lW,
              $.RK,
              De.Hw,
            ],
            styles: [
              ".container[_ngcontent-%COMP%]{padding:20px}header[_ngcontent-%COMP%]{margin-bottom:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.search-filter-container[_ngcontent-%COMP%]{margin-bottom:20px}",
            ],
          }));
        }
        return de;
      })();
      function Vi(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 23), A._uU(1, " Ingredient "), A.qZA());
      }
      function qi(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.ingredient, " ");
        }
      }
      function Ie(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 23),
          A._uU(1, " 2 Capsule Per Serving "),
          A.qZA());
      }
      function Fe(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.twoCapsulePerServing, " ");
        }
      }
      function xe(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 23),
          A._uU(1, " Intentional Overages "),
          A.qZA());
      }
      function Ue(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.intentionalOverages, " ");
        }
      }
      function Ft(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 23),
          A._uU(1, " 50 Capsules Per Bottle "),
          A.qZA());
      }
      function Mt(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.fiftyCapsulesPerBottle, " ");
        }
      }
      function we(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-header-cell", 23), A._uU(1, " Daily Value "), A.qZA());
      }
      function Vt(de, ot) {
        if ((1 & de && (A.TgZ(0, "mat-cell"), A._uU(1), A.qZA()), 2 & de)) {
          const Z = ot.$implicit;
          A.xp6(1), A.hij(" ", Z.dailyValue, " ");
        }
      }
      function re(de, ot) {
        1 & de && (A.TgZ(0, "mat-header-cell"), A._uU(1, " Actions "), A.qZA());
      }
      function Le(de, ot) {
        if (1 & de) {
          const Z = A.EpF();
          A.TgZ(0, "mat-cell")(1, "button", 24),
            A.NdJ("click", function () {
              const Rt = A.CHM(Z).$implicit,
                Lt = A.oxw();
              return A.KtG(Lt.editFact(Rt));
            }),
            A.TgZ(2, "mat-icon"),
            A._uU(3, "edit"),
            A.qZA()(),
            A.TgZ(4, "button", 25),
            A.NdJ("click", function () {
              const Rt = A.CHM(Z).$implicit,
                Lt = A.oxw();
              return A.KtG(Lt.deleteFact(Rt));
            }),
            A.TgZ(5, "mat-icon"),
            A._uU(6, "delete"),
            A.qZA()()();
        }
      }
      function li(de, ot) {
        1 & de && A._UZ(0, "mat-header-row");
      }
      function ii(de, ot) {
        if (1 & de) {
          const Z = A.EpF();
          A.TgZ(0, "mat-row", 26),
            A.NdJ("click", function () {
              const Rt = A.CHM(Z).$implicit,
                Lt = A.oxw();
              return A.KtG(Lt.viewFactDetails(Rt));
            }),
            A.qZA();
        }
      }
      let Mi = (() => {
        class de {
          constructor(Z) {
            (this.fb = Z),
              (this.displayedColumns = [
                "ingredient",
                "twoCapsulePerServing",
                "intentionalOverages",
                "fiftyCapsulesPerBottle",
                "dailyValue",
                "actions",
              ]),
              (this.facts = [
                {
                  ingredient: "Vitamin C (as absorbic acid)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Vitamin B1 (thiamine)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Vitamin B2 (riboflavin)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Niacin (niacinamide)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Vitamin B6 (pyridoxyl 5 phosphate)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Pantothenic acid (d-calcium pantothenate)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Manganese (manganese aminomin)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Calcium",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Manganese (manganese glycinate)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Zinc (Zinc aspartate)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Cysteine (L)",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
                {
                  ingredient: "Magnesium stearate",
                  twoCapsulePerServing: "",
                  intentionalOverages: "",
                  fiftyCapsulesPerBottle: "",
                  dailyValue: "",
                },
              ]),
              (this.dataSource = new B.by(this.facts)),
              (this.factForm = this.fb.group({
                ingredient: [""],
                twoCapsulePerServing: [""],
                intentionalOverages: [""],
                fiftyCapsulesPerBottle: [""],
                dailyValue: [""],
              }));
          }
          ngOnInit() {}
          applyFilter(Z) {
            this.dataSource.filter = Z.target.value.trim().toLowerCase();
          }
          viewFactDetails(Z) {
            (this.selectedFact = Z), this.factForm.patchValue(Z);
          }
          onSubmit() {
            const Z = this.factForm.value,
              rt = this.facts.findIndex((yt) => yt.ingredient === Z.ingredient);
            rt >= 0 ? (this.facts[rt] = Z) : this.facts.push(Z),
              (this.dataSource.data = this.facts),
              this.factForm.reset();
          }
          editFact(Z) {
            this.viewFactDetails(Z);
          }
          deleteFact(Z) {
            const rt = this.facts.indexOf(Z);
            rt >= 0 &&
              (this.facts.splice(rt, 1), (this.dataSource.data = this.facts));
          }
          static #t = (this.ɵfac = function (rt) {
            return new (rt || de)(A.Y36(x.qu));
          });
          static #e = (this.ɵcmp = A.Xpm({
            type: de,
            selectors: [["app-supplement-facts-only"]],
            decls: 63,
            vars: 4,
            consts: [
              ["fxLayout", "column", "fxLayoutGap", "20px", 1, "container"],
              [1, "search-filter-container"],
              ["appearance", "fill"],
              ["matInput", "", 3, "input"],
              ["mat-table", "", "matSort", "", 3, "dataSource"],
              ["matColumnDef", "ingredient"],
              ["mat-sort-header", "", 4, "matHeaderCellDef"],
              [4, "matCellDef"],
              ["matColumnDef", "twoCapsulePerServing"],
              ["matColumnDef", "intentionalOverages"],
              ["matColumnDef", "fiftyCapsulesPerBottle"],
              ["matColumnDef", "dailyValue"],
              ["matColumnDef", "actions"],
              [4, "matHeaderCellDef"],
              [4, "matHeaderRowDef"],
              [3, "click", 4, "matRowDef", "matRowDefColumns"],
              [3, "formGroup", "ngSubmit"],
              ["matInput", "", "formControlName", "ingredient"],
              ["matInput", "", "formControlName", "twoCapsulePerServing"],
              ["matInput", "", "formControlName", "intentionalOverages"],
              ["matInput", "", "formControlName", "fiftyCapsulesPerBottle"],
              ["matInput", "", "formControlName", "dailyValue"],
              ["mat-raised-button", "", "color", "primary", "type", "submit"],
              ["mat-sort-header", ""],
              ["mat-icon-button", "", "color", "primary", 3, "click"],
              ["mat-icon-button", "", "color", "warn", 3, "click"],
              [3, "click"],
            ],
            template: function (rt, yt) {
              1 & rt &&
                (A.TgZ(0, "div", 0)(1, "header")(2, "h1"),
                A._uU(3, "Supplement Facts"),
                A.qZA(),
                A.TgZ(4, "p"),
                A._uU(
                  5,
                  "Manage and review the supplement facts for the product.",
                ),
                A.qZA()(),
                A.TgZ(6, "div", 1)(7, "mat-form-field", 2)(8, "mat-label"),
                A._uU(9, "Search Ingredients"),
                A.qZA(),
                A.TgZ(10, "input", 3),
                A.NdJ("input", function (Lt) {
                  return yt.applyFilter(Lt);
                }),
                A.qZA()()(),
                A.TgZ(11, "mat-card")(12, "mat-card-title"),
                A._uU(13, "Supplement Facts"),
                A.qZA(),
                A.TgZ(14, "mat-card-content")(15, "table", 4),
                A.ynx(16, 5),
                A.YNc(17, Vi, 2, 0, "mat-header-cell", 6),
                A.YNc(18, qi, 2, 1, "mat-cell", 7),
                A.BQk(),
                A.ynx(19, 8),
                A.YNc(20, Ie, 2, 0, "mat-header-cell", 6),
                A.YNc(21, Fe, 2, 1, "mat-cell", 7),
                A.BQk(),
                A.ynx(22, 9),
                A.YNc(23, xe, 2, 0, "mat-header-cell", 6),
                A.YNc(24, Ue, 2, 1, "mat-cell", 7),
                A.BQk(),
                A.ynx(25, 10),
                A.YNc(26, Ft, 2, 0, "mat-header-cell", 6),
                A.YNc(27, Mt, 2, 1, "mat-cell", 7),
                A.BQk(),
                A.ynx(28, 11),
                A.YNc(29, we, 2, 0, "mat-header-cell", 6),
                A.YNc(30, Vt, 2, 1, "mat-cell", 7),
                A.BQk(),
                A.ynx(31, 12),
                A.YNc(32, re, 2, 0, "mat-header-cell", 13),
                A.YNc(33, Le, 7, 0, "mat-cell", 7),
                A.BQk(),
                A.YNc(34, li, 1, 0, "mat-header-row", 14),
                A.YNc(35, ii, 1, 0, "mat-row", 15),
                A.qZA()()(),
                A.TgZ(36, "mat-card")(37, "mat-card-title"),
                A._uU(38, "Add/Edit Supplement Fact"),
                A.qZA(),
                A.TgZ(39, "mat-card-content")(40, "form", 16),
                A.NdJ("ngSubmit", function () {
                  return yt.onSubmit();
                }),
                A.TgZ(41, "mat-form-field", 2)(42, "mat-label"),
                A._uU(43, "Ingredient"),
                A.qZA(),
                A._UZ(44, "input", 17),
                A.qZA(),
                A.TgZ(45, "mat-form-field", 2)(46, "mat-label"),
                A._uU(47, "2 Capsule Per Serving"),
                A.qZA(),
                A._UZ(48, "input", 18),
                A.qZA(),
                A.TgZ(49, "mat-form-field", 2)(50, "mat-label"),
                A._uU(51, "Intentional Overages"),
                A.qZA(),
                A._UZ(52, "input", 19),
                A.qZA(),
                A.TgZ(53, "mat-form-field", 2)(54, "mat-label"),
                A._uU(55, "50 Capsules Per Bottle"),
                A.qZA(),
                A._UZ(56, "input", 20),
                A.qZA(),
                A.TgZ(57, "mat-form-field", 2)(58, "mat-label"),
                A._uU(59, "Daily Value"),
                A.qZA(),
                A._UZ(60, "input", 21),
                A.qZA(),
                A.TgZ(61, "button", 22),
                A._uU(62, "Save"),
                A.qZA()()()()()),
                2 & rt &&
                  (A.xp6(15),
                  A.Q6J("dataSource", yt.dataSource),
                  A.xp6(19),
                  A.Q6J("matHeaderRowDef", yt.displayedColumns),
                  A.xp6(1),
                  A.Q6J("matRowDefColumns", yt.displayedColumns),
                  A.xp6(5),
                  A.Q6J("formGroup", yt.factForm));
            },
            dependencies: [
              x._Y,
              x.Fj,
              x.JJ,
              x.JL,
              x.sg,
              x.u,
              Jt.xw,
              Jt.SQ,
              p.a8,
              p.dn,
              p.n5,
              at.KE,
              at.hX,
              lt.Nt,
              B.BZ,
              B.fO,
              B.as,
              B.w1,
              B.Dz,
              B.nj,
              B.ge,
              B.ev,
              B.XQ,
              B.Gk,
              kt.YE,
              kt.nU,
              $.lW,
              $.RK,
              De.Hw,
            ],
            styles: [
              ".container[_ngcontent-%COMP%]{padding:20px}header[_ngcontent-%COMP%]{margin-bottom:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.search-filter-container[_ngcontent-%COMP%]{margin-bottom:20px}",
            ],
          }));
        }
        return de;
      })();
      var fi = D(3680);
      function ri(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-form-field", 3)(1, "mat-label"),
          A._uU(2, "Warning Instructions"),
          A.qZA(),
          A._UZ(3, "textarea", 15),
          A.qZA());
      }
      function te(de, ot) {
        1 & de &&
          (A.TgZ(0, "mat-form-field", 3)(1, "mat-label"),
          A._uU(2, "Storage Instructions"),
          A.qZA(),
          A._UZ(3, "textarea", 16),
          A.qZA());
      }
      function Be(de, ot) {
        if (
          (1 & de &&
            (A.TgZ(0, "p")(1, "strong"),
            A._uU(2, "Warning Instructions:"),
            A.qZA(),
            A._uU(3),
            A.qZA()),
          2 & de)
        ) {
          const Z = A.oxw();
          let rt;
          A.xp6(3),
            A.hij(
              " ",
              null == (rt = Z.detailsForm.get("warningInstructions"))
                ? null
                : rt.value,
              " ",
            );
        }
      }
      function Ne(de, ot) {
        if (
          (1 & de &&
            (A.TgZ(0, "p")(1, "strong"),
            A._uU(2, "Storage Instructions:"),
            A.qZA(),
            A._uU(3),
            A.qZA()),
          2 & de)
        ) {
          const Z = A.oxw();
          let rt;
          A.xp6(3),
            A.hij(
              " ",
              null == (rt = Z.detailsForm.get("storageInstructions"))
                ? null
                : rt.value,
              " ",
            );
        }
      }
      const gi = [
        {
          path: "",
          component: jt,
          children: [
            { path: "", redirectTo: "ingredients-info", pathMatch: "full" },
            { path: "ingredients-info", component: Si },
            { path: "supplement-facts-only", component: Mi },
            {
              path: "supplement-facts-details",
              component: (() => {
                class de {
                  constructor(Z) {
                    (this.fb = Z),
                      (this.detailsForm = this.fb.group({
                        directions: [""],
                        allergens: [
                          "This product does not contain any milk, eggs, fish, Crustacean shellfish, tree nuts, peanuts, wheat, and soybeans.",
                        ],
                        glutenFree: ["Yes"],
                        veganFriendly: ["Yes"],
                        warnings: ["Yes"],
                        warningInstructions: [
                          "Do not exceed recommended dose. Pregnant or nursing mothers, children under the age of 18, and individuals with a known medical condition should consult a physician before using this or any dietary supplement.",
                        ],
                        storageRequirements: ["Yes"],
                        storageInstructions: ["Store in a cool dry place."],
                      }));
                  }
                  ngOnInit() {}
                  onSubmit() {
                    console.log(this.detailsForm.value);
                  }
                  static #t = (this.ɵfac = function (rt) {
                    return new (rt || de)(A.Y36(x.qu));
                  });
                  static #e = (this.ɵcmp = A.Xpm({
                    type: de,
                    selectors: [["app-supplement-facts-details"]],
                    decls: 89,
                    vars: 11,
                    consts: [
                      [
                        "fxLayout",
                        "column",
                        "fxLayoutGap",
                        "20px",
                        1,
                        "container",
                      ],
                      [
                        "fxLayout",
                        "row",
                        "fxLayoutGap",
                        "20px",
                        "fxLayout.lt-sm",
                        "column",
                        3,
                        "formGroup",
                        "ngSubmit",
                      ],
                      ["fxFlex", "50%"],
                      ["appearance", "fill", 2, "width", "100%"],
                      ["matInput", "", "formControlName", "directions"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "allergens",
                        "readonly",
                        "",
                      ],
                      ["formControlName", "glutenFree"],
                      ["value", "Yes"],
                      ["value", "No"],
                      ["formControlName", "veganFriendly"],
                      ["formControlName", "warnings"],
                      ["appearance", "fill", "style", "width: 100%", 4, "ngIf"],
                      ["formControlName", "storageRequirements"],
                      [
                        "mat-raised-button",
                        "",
                        "color",
                        "primary",
                        "type",
                        "submit",
                        2,
                        "margin-top",
                        "20px",
                      ],
                      [4, "ngIf"],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "warningInstructions",
                      ],
                      [
                        "matInput",
                        "",
                        "formControlName",
                        "storageInstructions",
                      ],
                    ],
                    template: function (rt, yt) {
                      if (
                        (1 & rt &&
                          (A.TgZ(0, "div", 0)(1, "header")(2, "h1"),
                          A._uU(3, "Supplement Facts Details"),
                          A.qZA(),
                          A.TgZ(4, "p"),
                          A._uU(
                            5,
                            " Manage and review detailed supplement facts and additional information for the product. ",
                          ),
                          A.qZA()(),
                          A.TgZ(6, "mat-card")(7, "mat-card-title"),
                          A._uU(8, "Supplement Facts Form"),
                          A.qZA(),
                          A.TgZ(9, "mat-card-content")(10, "form", 1),
                          A.NdJ("ngSubmit", function () {
                            return yt.onSubmit();
                          }),
                          A.TgZ(11, "div", 2)(12, "mat-form-field", 3)(
                            13,
                            "mat-label",
                          ),
                          A._uU(14, "Suggested Use / Directions"),
                          A.qZA(),
                          A._UZ(15, "textarea", 4),
                          A.qZA(),
                          A.TgZ(16, "mat-card-title"),
                          A._uU(17, "Allergens"),
                          A.qZA(),
                          A.TgZ(18, "mat-form-field", 3)(19, "mat-label"),
                          A._uU(20, "Allergens Information"),
                          A.qZA(),
                          A._UZ(21, "textarea", 5),
                          A.qZA(),
                          A.TgZ(22, "mat-form-field", 3)(23, "mat-label"),
                          A._uU(24, "Is this formula Gluten Free?"),
                          A.qZA(),
                          A.TgZ(25, "mat-select", 6)(26, "mat-option", 7),
                          A._uU(27, "Yes"),
                          A.qZA(),
                          A.TgZ(28, "mat-option", 8),
                          A._uU(29, "No"),
                          A.qZA()()(),
                          A.TgZ(30, "mat-form-field", 3)(31, "mat-label"),
                          A._uU(32, "Is this formula Vegan Friendly?"),
                          A.qZA(),
                          A.TgZ(33, "mat-select", 9)(34, "mat-option", 7),
                          A._uU(35, "Yes"),
                          A.qZA(),
                          A.TgZ(36, "mat-option", 8),
                          A._uU(37, "No"),
                          A.qZA()()()(),
                          A.TgZ(38, "div", 2)(39, "mat-form-field", 3)(
                            40,
                            "mat-label",
                          ),
                          A._uU(41, 'Are there any "Warning" instructions?'),
                          A.qZA(),
                          A.TgZ(42, "mat-select", 10)(43, "mat-option", 7),
                          A._uU(44, "Yes"),
                          A.qZA(),
                          A.TgZ(45, "mat-option", 8),
                          A._uU(46, "No"),
                          A.qZA()()(),
                          A.YNc(47, ri, 4, 0, "mat-form-field", 11),
                          A.TgZ(48, "mat-form-field", 3)(49, "mat-label"),
                          A._uU(50, "Are there any storage requirements?"),
                          A.qZA(),
                          A.TgZ(51, "mat-select", 12)(52, "mat-option", 7),
                          A._uU(53, "Yes"),
                          A.qZA(),
                          A.TgZ(54, "mat-option", 8),
                          A._uU(55, "No"),
                          A.qZA()()(),
                          A.YNc(56, te, 4, 0, "mat-form-field", 11),
                          A.TgZ(57, "button", 13),
                          A._uU(58, " Save "),
                          A.qZA()()()()(),
                          A.TgZ(59, "mat-card")(60, "mat-card-title"),
                          A._uU(61, "Summary"),
                          A.qZA(),
                          A.TgZ(62, "mat-card-content")(63, "p")(64, "strong"),
                          A._uU(65, "Suggested Use / Directions:"),
                          A.qZA(),
                          A._uU(66),
                          A.qZA(),
                          A.TgZ(67, "p")(68, "strong"),
                          A._uU(69, "Allergens:"),
                          A.qZA(),
                          A._uU(70),
                          A.qZA(),
                          A.TgZ(71, "p")(72, "strong"),
                          A._uU(73, "Gluten Free:"),
                          A.qZA(),
                          A._uU(74),
                          A.qZA(),
                          A.TgZ(75, "p")(76, "strong"),
                          A._uU(77, "Vegan Friendly:"),
                          A.qZA(),
                          A._uU(78),
                          A.qZA(),
                          A.TgZ(79, "p")(80, "strong"),
                          A._uU(81, "Warnings:"),
                          A.qZA(),
                          A._uU(82),
                          A.qZA(),
                          A.YNc(83, Be, 4, 1, "p", 14),
                          A.TgZ(84, "p")(85, "strong"),
                          A._uU(86, "Storage Requirements:"),
                          A.qZA(),
                          A._uU(87),
                          A.qZA(),
                          A.YNc(88, Ne, 4, 1, "p", 14),
                          A.qZA()()()),
                        2 & rt)
                      ) {
                        let Rt, Lt, ut, q, Ct, H, Nt, X, se, it;
                        A.xp6(10),
                          A.Q6J("formGroup", yt.detailsForm),
                          A.xp6(37),
                          A.Q6J(
                            "ngIf",
                            "Yes" ===
                              (null == (Rt = yt.detailsForm.get("warnings"))
                                ? null
                                : Rt.value),
                          ),
                          A.xp6(9),
                          A.Q6J(
                            "ngIf",
                            "Yes" ===
                              (null ==
                              (Lt = yt.detailsForm.get("storageRequirements"))
                                ? null
                                : Lt.value),
                          ),
                          A.xp6(10),
                          A.hij(
                            " ",
                            null == (ut = yt.detailsForm.get("directions"))
                              ? null
                              : ut.value,
                            " ",
                          ),
                          A.xp6(4),
                          A.hij(
                            " ",
                            null == (q = yt.detailsForm.get("allergens"))
                              ? null
                              : q.value,
                            " ",
                          ),
                          A.xp6(4),
                          A.hij(
                            " ",
                            null == (Ct = yt.detailsForm.get("glutenFree"))
                              ? null
                              : Ct.value,
                            " ",
                          ),
                          A.xp6(4),
                          A.hij(
                            " ",
                            null == (H = yt.detailsForm.get("veganFriendly"))
                              ? null
                              : H.value,
                            " ",
                          ),
                          A.xp6(4),
                          A.hij(
                            " ",
                            null == (Nt = yt.detailsForm.get("warnings"))
                              ? null
                              : Nt.value,
                            "",
                          ),
                          A.xp6(1),
                          A.Q6J(
                            "ngIf",
                            "Yes" ===
                              (null == (X = yt.detailsForm.get("warnings"))
                                ? null
                                : X.value),
                          ),
                          A.xp6(4),
                          A.hij(
                            " ",
                            null ==
                              (se = yt.detailsForm.get("storageRequirements"))
                              ? null
                              : se.value,
                            " ",
                          ),
                          A.xp6(1),
                          A.Q6J(
                            "ngIf",
                            "Yes" ===
                              (null ==
                              (it = yt.detailsForm.get("storageRequirements"))
                                ? null
                                : it.value),
                          );
                      }
                    },
                    dependencies: [
                      s.O5,
                      x._Y,
                      x.Fj,
                      x.JJ,
                      x.JL,
                      x.sg,
                      x.u,
                      Jt.xw,
                      Jt.SQ,
                      Jt.yH,
                      p.a8,
                      p.dn,
                      p.n5,
                      at.KE,
                      at.hX,
                      lt.Nt,
                      bt.gD,
                      fi.ey,
                      $.lW,
                    ],
                    styles: [
                      ".container[_ngcontent-%COMP%]{padding:20px}header[_ngcontent-%COMP%]{margin-bottom:20px}mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}mat-card[_ngcontent-%COMP%]{margin-bottom:20px}mat-form-field[_ngcontent-%COMP%]{width:100%}.search-filter-container[_ngcontent-%COMP%]{margin-bottom:20px}",
                    ],
                  }));
                }
                return de;
              })(),
            },
          ],
        },
      ];
      let Xi = (() => {
          class de {
            static #t = (this.ɵfac = function (rt) {
              return new (rt || de)();
            });
            static #e = (this.ɵmod = A.oAB({ type: de }));
            static #i = (this.ɵinj = A.cJS({
              imports: [_.Bz.forChild(gi), _.Bz],
            }));
          }
          return de;
        })(),
        _i = (() => {
          class de {
            static #t = (this.ɵfac = function (rt) {
              return new (rt || de)();
            });
            static #e = (this.ɵmod = A.oAB({ type: de }));
            static #i = (this.ɵinj = A.cJS({
              imports: [
                s.ez,
                Xi,
                x.UX,
                C.o9,
                p.QW,
                at.lN,
                lt.c,
                bt.LD,
                B.p0,
                kt.JX,
                $.ot,
                De.Ps,
              ],
            }));
          }
          return de;
        })();
    },
    9031: (ui, Zt, D) => {
      D.r(Zt), D.d(Zt, { SalesModule: () => wt });
      var s = D(6814),
        x = D(1896),
        C = D(5879),
        p = D(8077),
        at = D(2096);
      let lt = (() => {
        class _t {
          constructor() {}
          getKeyMetrics() {
            return (0, at.of)([
              { name: "Total Orders", value: 832 },
              { name: "Orders In Process", value: 200 },
              { name: "Orders Awaiting Shipment", value: 150 },
              { name: "Orders Completed", value: 482 },
              { name: "Total Quotes", value: 450 },
              { name: "Active Quotes", value: 300 },
              { name: "Expired Quotes", value: 50 },
            ]);
          }
          getRecentActivity() {
            return (0, at.of)([
              { description: "Order #1234", status: "In Process" },
              { description: "Quote #5678", status: "Active" },
              { description: "Order #4321", status: "Completed" },
              { description: "Quote #8765", status: "Expired" },
            ]);
          }
          getOrderSummaryMetrics() {
            return (0, at.of)({
              totalOrders: 832,
              inProcess: 200,
              awaitingShipment: 150,
              completed: 482,
            });
          }
          getQuoteSummaryMetrics() {
            return (0, at.of)({ totalQuotes: 450, active: 300, expired: 50 });
          }
          static #t = (this.ɵfac = function (ee) {
            return new (ee || _t)();
          });
          static #e = (this.ɵprov = C.Yz7({
            token: _t,
            factory: _t.ɵfac,
            providedIn: "root",
          }));
        }
        return _t;
      })();
      var bt = D(617),
        B = D(5195),
        kt = D(9038),
        $ = D(2296);
      const _ = ["salesPieChart"];
      function A(_t, St) {
        if (
          (1 & _t &&
            (C.TgZ(0, "mat-list-item", 14)(1, "h3"),
            C._uU(2),
            C.qZA(),
            C.TgZ(3, "p"),
            C._uU(4),
            C.qZA()()),
          2 & _t)
        ) {
          const Pt = St.$implicit;
          C.xp6(2), C.Oqu(Pt.name), C.xp6(2), C.Oqu(Pt.value);
        }
      }
      function jt(_t, St) {
        if (
          (1 & _t &&
            (C.TgZ(0, "mat-card", 15)(1, "mat-card-content")(2, "span"),
            C._uU(3),
            C.qZA()()()),
          2 & _t)
        ) {
          const Pt = St.$implicit;
          C.xp6(3), C.AsE("", Pt.description, " - Status: ", Pt.status, "");
        }
      }
      let gt = (() => {
        class _t {
          constructor(Pt) {
            (this.salesService = Pt),
              (this.keyMetrics = []),
              (this.recentActivity = []),
              p.kL.register(...p.zX);
          }
          ngOnInit() {
            this.loadKeyMetrics(), this.loadRecentActivity();
          }
          ngAfterViewInit() {
            this.initializeCharts();
          }
          loadKeyMetrics() {
            this.salesService.getKeyMetrics().subscribe((Pt) => {
              this.keyMetrics = Pt;
            });
          }
          loadRecentActivity() {
            this.salesService.getRecentActivity().subscribe((Pt) => {
              this.recentActivity = Pt;
            });
          }
          initializeCharts() {
            if (this.salesPieChart.nativeElement) {
              const Pt = this.salesPieChart.nativeElement.getContext("2d");
              Pt &&
                new p.kL(Pt, {
                  type: "polarArea",
                  data: {
                    labels: this.keyMetrics.map((ee) => ee.name),
                    datasets: [
                      {
                        data: this.keyMetrics.map((ee) => ee.value),
                        backgroundColor: [
                          "red",
                          "blue",
                          "green",
                          "yellow",
                          "purple",
                        ],
                      },
                    ],
                  },
                });
            }
          }
          static #t = (this.ɵfac = function (ee) {
            return new (ee || _t)(C.Y36(lt));
          });
          static #e = (this.ɵcmp = C.Xpm({
            type: _t,
            selectors: [["app-sales-dashboard"]],
            viewQuery: function (ee, Kt) {
              if ((1 & ee && C.Gf(_, 5), 2 & ee)) {
                let ze;
                C.iGM((ze = C.CRH())) && (Kt.salesPieChart = ze.first);
              }
            },
            decls: 29,
            vars: 2,
            consts: [
              [
                1,
                "sales-dashboard",
                2,
                "display",
                "flex",
                "flex-direction",
                "column",
                "gap",
                "20px",
              ],
              [1, "dashboard-overview"],
              [
                1,
                "sales-dashboard",
                2,
                "display",
                "flex",
                "flex-direction",
                "row",
                "gap",
                "20px",
              ],
              [
                2,
                "display",
                "flex",
                "justify-content",
                "space-between",
                "gap",
                "20px",
                "align-items",
                "center",
                "height",
                "auto",
                "width",
                "50%",
              ],
              [1, "chart-section"],
              [1, "chart-container"],
              ["salesPieChart", ""],
              [
                2,
                "display",
                "flex",
                "justify-content",
                "flex-start",
                "gap",
                "20px",
                "align-items",
                "center",
                "height",
                "50%",
                "width",
                "50%",
                "flex-direction",
                "column",
              ],
              [1, "alert-boxes"],
              [
                "class",
                "alert-box",
                "style",
                "align-items: center; height: auto; width: auto",
                4,
                "ngFor",
                "ngForOf",
              ],
              ["class", "alert-box", 4, "ngFor", "ngForOf"],
              [1, "quick-links"],
              [
                "mat-raised-button",
                "",
                "color",
                "primary",
                "routerLink",
                "/sales/orders",
              ],
              [
                "mat-raised-button",
                "",
                "color",
                "primary",
                "routerLink",
                "/sales/quotes",
              ],
              [
                1,
                "alert-box",
                2,
                "align-items",
                "center",
                "height",
                "auto",
                "width",
                "auto",
              ],
              [1, "alert-box"],
            ],
            template: function (ee, Kt) {
              1 & ee &&
                (C.TgZ(0, "div", 0)(1, "mat-card", 1)(2, "mat-card-header")(
                  3,
                  "mat-card-title",
                ),
                C._uU(4, "Sales Dashboard"),
                C.qZA()(),
                C.TgZ(5, "mat-card-content")(6, "p"),
                C._uU(
                  7,
                  " Welcome to your business dashboard. Here, you can get a quick summary of your key business metrics, recent activities, and important alerts. ",
                ),
                C.qZA()()(),
                C.TgZ(8, "div", 2)(9, "mat-card", 3)(10, "mat-card-content", 4)(
                  11,
                  "div",
                  5,
                ),
                C._UZ(12, "canvas", null, 6),
                C.qZA()()(),
                C.TgZ(14, "div", 7)(15, "mat-card-content")(16, "mat-list", 8),
                C.YNc(17, A, 5, 2, "mat-list-item", 9),
                C.qZA()(),
                C.TgZ(18, "div", 8),
                C.YNc(19, jt, 4, 2, "mat-card", 10),
                C.qZA()()(),
                C.TgZ(20, "div", 11)(21, "button", 12),
                C._uU(22, " Go to Orders Page "),
                C.TgZ(23, "mat-icon"),
                C._uU(24, "arrow_forward"),
                C.qZA()(),
                C.TgZ(25, "button", 13),
                C._uU(26, " Go to Quotes Page "),
                C.TgZ(27, "mat-icon"),
                C._uU(28, "arrow_forward"),
                C.qZA()()()()),
                2 & ee &&
                  (C.xp6(17),
                  C.Q6J("ngForOf", Kt.keyMetrics),
                  C.xp6(2),
                  C.Q6J("ngForOf", Kt.recentActivity));
            },
            dependencies: [
              s.sg,
              x.rH,
              bt.Hw,
              B.a8,
              B.dn,
              B.dk,
              B.n5,
              kt.i$,
              kt.Tg,
              $.lW,
            ],
            styles: [
              "main[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;padding:20px}.mat-card[_ngcontent-%COMP%]{box-shadow:0 4px 8px #0000001a;margin-bottom:20px}.mat-card-header[_ngcontent-%COMP%]{background-color:#f5f5f5}.mat-card-title[_ngcontent-%COMP%]{color:#333;font-size:20px}.mat-card-content[_ngcontent-%COMP%]{padding:15px}.sales-dashboard[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:20px;align-items:start}.chart-section[_ngcontent-%COMP%]{flex:1;height:auto}.chart-container[_ngcontent-%COMP%]{flex-grow:1;height:auto;padding:10px;border-radius:8px}canvas[_ngcontent-%COMP%]{height:100%!important;width:100%!important}.recent-activity[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(240px,1fr));gap:10px}.quick-links[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:10px;padding:20px 0}button[_ngcontent-%COMP%]{display:flex;align-items:center;gap:5px}.alert-boxes[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;flex-direction:row;flex-wrap:wrap}.alert-box[_ngcontent-%COMP%]{box-shadow:#0000001a 0 4px 12px;margin:10px;padding:10px;border-radius:8px;display:flex;gap:20px;justify-content:space-between}@media (max-width: 1024px){.sales-dashboard[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]{grid-template-columns:1fr}.quick-links[_ngcontent-%COMP%], .recent-activity[_ngcontent-%COMP%]{flex-direction:column}}@media (max-width: 768px){.chart-section[_ngcontent-%COMP%]{flex-direction:column}}",
            ],
          }));
        }
        return _t;
      })();
      var Jt = D(2557);
      let De = (() => {
          class _t {
            constructor(Pt) {
              (this.salesService = Pt), (this.summaryMetrics = {});
            }
            ngOnInit() {
              this.loadSummaryMetrics();
            }
            loadSummaryMetrics() {
              this.salesService.getOrderSummaryMetrics().subscribe((Pt) => {
                this.summaryMetrics = Pt;
              });
            }
            static #t = (this.ɵfac = function (ee) {
              return new (ee || _t)(C.Y36(lt));
            });
            static #e = (this.ɵcmp = C.Xpm({
              type: _t,
              selectors: [["app-orders-navigation"]],
              decls: 15,
              vars: 4,
              consts: [
                [1, "orders-navigation"],
                [1, "metrics"],
                [1, "metric-chip-list"],
                ["selectable", "false", "color", "primary", 1, "metric-chip"],
                ["selectable", "false", "color", "accent", 1, "metric-chip"],
                ["selectable", "false", "color", "warn", 1, "metric-chip"],
                [
                  "mat-raised-button",
                  "",
                  "color",
                  "primary",
                  "routerLink",
                  "/sales/orders",
                ],
              ],
              template: function (ee, Kt) {
                1 & ee &&
                  (C.TgZ(0, "div", 0)(1, "h2"),
                  C._uU(2, "Orders Summary"),
                  C.qZA(),
                  C.TgZ(3, "div", 1)(4, "mat-chip-set", 2)(5, "mat-chip", 3),
                  C._uU(6),
                  C.qZA(),
                  C.TgZ(7, "mat-chip", 4),
                  C._uU(8),
                  C.qZA(),
                  C.TgZ(9, "mat-chip", 5),
                  C._uU(10),
                  C.qZA(),
                  C.TgZ(11, "mat-chip", 3),
                  C._uU(12),
                  C.qZA()()(),
                  C.TgZ(13, "button", 6),
                  C._uU(14, " Go to Orders Page "),
                  C.qZA()()),
                  2 & ee &&
                    (C.xp6(6),
                    C.hij(
                      " Total Orders: ",
                      Kt.summaryMetrics.totalOrders,
                      " ",
                    ),
                    C.xp6(2),
                    C.hij(" In Process: ", Kt.summaryMetrics.inProcess, " "),
                    C.xp6(2),
                    C.hij(
                      " Awaiting Shipment: ",
                      Kt.summaryMetrics.awaitingShipment,
                      " ",
                    ),
                    C.xp6(2),
                    C.hij(" Completed: ", Kt.summaryMetrics.completed, " "));
              },
              dependencies: [x.rH, $.lW, Jt.HS, Jt.J4],
              styles: [
                ".orders-navigation[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;padding:20px;margin:10px}.metric-chip-list[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;flex-wrap:wrap;gap:10px}.metric-chip[_ngcontent-%COMP%]{margin:5px}.mat-card-actions[_ngcontent-%COMP%]{justify-content:flex-end}",
              ],
            }));
          }
          return _t;
        })(),
        Ve = (() => {
          class _t {
            constructor(Pt) {
              (this.salesService = Pt), (this.summaryMetrics = {});
            }
            ngOnInit() {
              this.loadSummaryMetrics();
            }
            loadSummaryMetrics() {
              this.salesService.getQuoteSummaryMetrics().subscribe((Pt) => {
                this.summaryMetrics = Pt;
              });
            }
            static #t = (this.ɵfac = function (ee) {
              return new (ee || _t)(C.Y36(lt));
            });
            static #e = (this.ɵcmp = C.Xpm({
              type: _t,
              selectors: [["app-quotes-navigation"]],
              decls: 13,
              vars: 4,
              consts: [
                [1, "quotes-navigation"],
                [1, "metrics"],
                [1, "metric-chip-list"],
                ["color", "primary", "selected", ""],
                ["color", "accent", "selected", ""],
                ["color", "warn", "selected", ""],
                ["mat-raised-button", "", "color", "primary", 3, "routerLink"],
              ],
              template: function (ee, Kt) {
                1 & ee &&
                  (C.TgZ(0, "div", 0)(1, "h2"),
                  C._uU(2, "Quotes Summary"),
                  C.qZA(),
                  C.TgZ(3, "div", 1)(4, "mat-chip-set", 2)(5, "mat-chip", 3),
                  C._uU(6),
                  C.qZA(),
                  C.TgZ(7, "mat-chip", 4),
                  C._uU(8),
                  C.qZA(),
                  C.TgZ(9, "mat-chip", 5),
                  C._uU(10),
                  C.qZA()()(),
                  C.TgZ(11, "button", 6),
                  C._uU(12, " Go to Quotes Page "),
                  C.qZA()()),
                  2 & ee &&
                    (C.xp6(6),
                    C.hij("Total Quotes: ", Kt.summaryMetrics.totalQuotes, ""),
                    C.xp6(2),
                    C.hij("Active: ", Kt.summaryMetrics.active, ""),
                    C.xp6(2),
                    C.hij("Expired: ", Kt.summaryMetrics.expired, ""),
                    C.xp6(1),
                    C.Q6J("routerLink", "/sales/quotes"));
              },
              dependencies: [x.rH, $.lW, Jt.HS, Jt.J4],
              styles: [
                ".quotes-navigation[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;padding:20px}.metric-chip-list[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;flex-wrap:wrap;gap:10px}mat-chip[_ngcontent-%COMP%]{margin:5px}",
              ],
            }));
          }
          return _t;
        })();
      const We = [
        {
          path: "",
          component: (() => {
            class _t {
              constructor() {}
              ngOnInit() {}
              static #t = (this.ɵfac = function (ee) {
                return new (ee || _t)();
              });
              static #e = (this.ɵcmp = C.Xpm({
                type: _t,
                selectors: [["app-sales"]],
                decls: 5,
                vars: 0,
                consts: [
                  [1, "sales-page"],
                  [2, "display", "flex", "justify-content", "space-evenly"],
                ],
                template: function (ee, Kt) {
                  1 & ee &&
                    (C.TgZ(0, "div", 0),
                    C._UZ(1, "app-sales-dashboard"),
                    C.TgZ(2, "div", 1),
                    C._UZ(3, "app-orders-navigation")(
                      4,
                      "app-quotes-navigation",
                    ),
                    C.qZA()());
                },
                dependencies: [gt, De, Ve],
                styles: [
                  ".sales-page[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;gap:2rem;padding:1rem}.sales-page[_ngcontent-%COMP%]   app-sales-dashboard[_ngcontent-%COMP%], .sales-page[_ngcontent-%COMP%]   app-orders-navigation[_ngcontent-%COMP%], .sales-page[_ngcontent-%COMP%]   app-quotes-navigation[_ngcontent-%COMP%]{padding:1rem;border-radius:8px;box-shadow:0 2px 4px #0000001a}",
                ],
              }));
            }
            return _t;
          })(),
          pathMatch: "full",
        },
        {
          path: "quotes",
          loadChildren: () =>
            D.e(629)
              .then(D.bind(D, 9629))
              .then((_t) => _t.QuotesModule),
        },
        {
          path: "customers",
          loadChildren: () =>
            D.e(265)
              .then(D.bind(D, 3265))
              .then((_t) => _t.CustomersModule),
        },
        {
          path: "orders",
          loadChildren: () =>
            D.e(146)
              .then(D.bind(D, 4146))
              .then((_t) => _t.OrdersModule),
        },
      ];
      let Re = (() => {
          class _t {
            static #t = (this.ɵfac = function (ee) {
              return new (ee || _t)();
            });
            static #e = (this.ɵmod = C.oAB({ type: _t }));
            static #i = (this.ɵinj = C.cJS({
              imports: [x.Bz.forChild(We), x.Bz],
            }));
          }
          return _t;
        })(),
        wt = (() => {
          class _t {
            static #t = (this.ɵfac = function (ee) {
              return new (ee || _t)();
            });
            static #e = (this.ɵmod = C.oAB({ type: _t }));
            static #i = (this.ɵinj = C.cJS({
              imports: [s.ez, Re, bt.Ps, B.QW, kt.ie, $.ot, Jt.Hi],
            }));
          }
          return _t;
        })();
    },
    614: (ui, Zt, D) => {
      D.d(Zt, { a: () => x });
      var s = D(5879);
      let x = (() => {
        class C {
          constructor() {
            (this.ingredients = [
              {
                name: "Vitamin C (as absorbic acid)",
                perCapsule: 51,
                pricePerKg: "$6.00",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "In Stock",
              },
              {
                name: "Vitamin B1 (thiamine)",
                perCapsule: 25,
                pricePerKg: "$24",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "In Stock",
              },
              {
                name: "Vitamin B2 (riboflavin)",
                perCapsule: 25,
                pricePerKg: "$38",
                moqKg: 25,
                vendor: "JHD",
                leadTime: "",
              },
              {
                name: "Niacin (niacinamide)",
                perCapsule: 10,
                pricePerKg: "$10",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "In Stock",
              },
              {
                name: "Vitamin B6 (pyridoxyl 5 phosphate)",
                perCapsule: 25,
                pricePerKg: "$125",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "In Stock",
              },
              {
                name: "Pantothenic acid (d-calcium pantothenate)",
                perCapsule: 25,
                pricePerKg: "$17",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "In Stock",
              },
              {
                name: "Manganese (manganese aminomin)",
                perCapsule: 12.5,
                pricePerKg: "$16",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "5 Days",
              },
              {
                name: "Calcium",
                perCapsule: 4.5,
                pricePerKg: "$14",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "5 Days",
              },
              {
                name: "Manganese (manganese glycinate)",
                perCapsule: 300,
                pricePerKg: "$26",
                moqKg: 25,
                vendor: "Jia Herb",
                leadTime: "1 Week",
              },
              {
                name: "Zinc (Zinc aspartate)",
                perCapsule: 50,
                pricePerKg: "$14",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "5 Days",
              },
              {
                name: "Cysteine (L)",
                perCapsule: 100,
                pricePerKg: "$17",
                moqKg: 25,
                vendor: "Trafa",
                leadTime: "5 Days",
              },
              {
                name: "Magnesium stearate",
                perCapsule: 100,
                pricePerKg: "$8",
                moqKg: 1,
                vendor: "",
                leadTime: "",
              },
            ]),
              (this.orderInfo = { capsulesPerBottle: 50, launchQty: 2e3 }),
              (this.masterCartonInfo = { bottlesPerMasterCase: 135 });
          }
          getIngredients() {
            return this.ingredients;
          }
          updateIngredients(at) {
            this.ingredients = at;
          }
          getOrderInfo() {
            return this.orderInfo;
          }
          updateOrderInfo(at) {
            this.orderInfo = at;
          }
          getMasterCartonInfo() {
            return this.masterCartonInfo;
          }
          updateMasterCartonInfo(at) {
            this.masterCartonInfo = at;
          }
          static #t = (this.ɵfac = function (lt) {
            return new (lt || C)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: C,
            factory: C.ɵfac,
            providedIn: "root",
          }));
        }
        return C;
      })();
    },
    4506: (ui, Zt, D) => {
      D.d(Zt, { N: () => s });
      const s = {
        production: !0,
        HASURA_SERCER_KEY:
          "ERr7wpu9rzn4AVA7YAk31aa1bNk0jnYebCr4zOSf2eYCSUiRqc4BV8xfzermcar2",
        apiUrl:
          "https://nufacturing-3gpezaa3l-ahim-gallimoresoftrwares-projects.vercel.app/api",
      };
    },
    7743: (ui, Zt, D) => {
      var s = D(6593),
        x = D(6702),
        C = D(6814),
        p = D(5879),
        at = D(3680),
        lt = D(7849),
        bt = D(9388),
        B = D(2495),
        kt = D(6028),
        $ = D(2831),
        _ = D(8645),
        A = D(2438),
        jt = D(3019),
        gt = D(2181),
        Jt = D(7398),
        De = D(975),
        Ve = D(9773),
        He = D(3997),
        We = D(8180),
        Re = D(7921),
        wt = D(3620),
        _t = D(6825);
      const St = ["*"],
        Pt = ["content"];
      function ee(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "div", 2),
            p.NdJ("click", function () {
              p.CHM(r);
              const v = p.oxw();
              return p.KtG(v._onBackdropClicked());
            }),
            p.qZA();
        }
        if (2 & d) {
          const r = p.oxw();
          p.ekj("mat-drawer-shown", r._isShowingBackdrop());
        }
      }
      function Kt(d, n) {
        1 & d && (p.TgZ(0, "mat-drawer-content"), p.Hsn(1, 2), p.qZA());
      }
      const ze = [[["mat-drawer"]], [["mat-drawer-content"]], "*"],
        mi = ["mat-drawer", "mat-drawer-content", "*"];
      function ie(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "div", 2),
            p.NdJ("click", function () {
              p.CHM(r);
              const v = p.oxw();
              return p.KtG(v._onBackdropClicked());
            }),
            p.qZA();
        }
        if (2 & d) {
          const r = p.oxw();
          p.ekj("mat-drawer-shown", r._isShowingBackdrop());
        }
      }
      function vi(d, n) {
        1 & d && (p.TgZ(0, "mat-sidenav-content"), p.Hsn(1, 2), p.qZA());
      }
      const Ge = [[["mat-sidenav"]], [["mat-sidenav-content"]], "*"],
        hi = ["mat-sidenav", "mat-sidenav-content", "*"],
        Vi = {
          transformDrawer: (0, _t.X$)("transform", [
            (0, _t.SB)(
              "open, open-instant",
              (0, _t.oB)({ transform: "none", visibility: "visible" }),
            ),
            (0, _t.SB)(
              "void",
              (0, _t.oB)({ "box-shadow": "none", visibility: "hidden" }),
            ),
            (0, _t.eR)("void => open-instant", (0, _t.jt)("0ms")),
            (0, _t.eR)(
              "void <=> open, open-instant => void",
              (0, _t.jt)("400ms cubic-bezier(0.25, 0.8, 0.25, 1)"),
            ),
          ]),
        },
        Ie = new p.OlP("MAT_DRAWER_DEFAULT_AUTOSIZE", {
          providedIn: "root",
          factory: function xe() {
            return !1;
          },
        }),
        Fe = new p.OlP("MAT_DRAWER_CONTAINER");
      let Ue = (() => {
          class d extends x.PQ {
            constructor(r, h, v, M, O) {
              super(v, M, O),
                (this._changeDetectorRef = r),
                (this._container = h);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)(
                p.Y36(p.sBO),
                p.Y36((0, p.Gpc)(() => Mt)),
                p.Y36(p.SBq),
                p.Y36(x.mF),
                p.Y36(p.R0b),
              );
            });
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["mat-drawer-content"]],
              hostAttrs: ["ngSkipHydration", "", 1, "mat-drawer-content"],
              hostVars: 4,
              hostBindings: function (h, v) {
                2 & h &&
                  p.Udp("margin-left", v._container._contentMargins.left, "px")(
                    "margin-right",
                    v._container._contentMargins.right,
                    "px",
                  );
              },
              features: [p._Bn([{ provide: x.PQ, useExisting: d }]), p.qOj],
              ngContentSelectors: St,
              decls: 1,
              vars: 0,
              template: function (h, v) {
                1 & h && (p.F$t(), p.Hsn(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return d;
        })(),
        Ft = (() => {
          class d {
            get position() {
              return this._position;
            }
            set position(r) {
              (r = "end" === r ? "end" : "start") !== this._position &&
                (this._isAttached && this._updatePositionInParent(r),
                (this._position = r),
                this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(r) {
              (this._mode = r),
                this._updateFocusTrapState(),
                this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(r) {
              this._disableClose = (0, B.Ig)(r);
            }
            get autoFocus() {
              return (
                this._autoFocus ??
                ("side" === this.mode ? "dialog" : "first-tabbable")
              );
            }
            set autoFocus(r) {
              ("true" === r || "false" === r || null == r) &&
                (r = (0, B.Ig)(r)),
                (this._autoFocus = r);
            }
            get opened() {
              return this._opened;
            }
            set opened(r) {
              this.toggle((0, B.Ig)(r));
            }
            constructor(r, h, v, M, O, V, W, et) {
              (this._elementRef = r),
                (this._focusTrapFactory = h),
                (this._focusMonitor = v),
                (this._platform = M),
                (this._ngZone = O),
                (this._interactivityChecker = V),
                (this._doc = W),
                (this._container = et),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = "start"),
                (this._mode = "over"),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new _.x()),
                (this._animationEnd = new _.x()),
                (this._animationState = "void"),
                (this.openedChange = new p.vpe(!0)),
                (this._openedStream = this.openedChange.pipe(
                  (0, gt.h)((At) => At),
                  (0, Jt.U)(() => {}),
                )),
                (this.openedStart = this._animationStarted.pipe(
                  (0, gt.h)(
                    (At) =>
                      At.fromState !== At.toState &&
                      0 === At.toState.indexOf("open"),
                  ),
                  (0, De.h)(void 0),
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, gt.h)((At) => !At),
                  (0, Jt.U)(() => {}),
                )),
                (this.closedStart = this._animationStarted.pipe(
                  (0, gt.h)(
                    (At) =>
                      At.fromState !== At.toState && "void" === At.toState,
                  ),
                  (0, De.h)(void 0),
                )),
                (this._destroyed = new _.x()),
                (this.onPositionChanged = new p.vpe()),
                (this._modeChanged = new _.x()),
                this.openedChange.subscribe((At) => {
                  At
                    ? (this._doc &&
                        (this._elementFocusedBeforeDrawerWasOpened =
                          this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() &&
                      this._restoreFocus(this._openedVia || "program");
                }),
                this._ngZone.runOutsideAngular(() => {
                  (0, A.R)(this._elementRef.nativeElement, "keydown")
                    .pipe(
                      (0, gt.h)(
                        (At) =>
                          At.keyCode === kt.hY &&
                          !this.disableClose &&
                          !(0, kt.Vb)(At),
                      ),
                      (0, Ve.R)(this._destroyed),
                    )
                    .subscribe((At) =>
                      this._ngZone.run(() => {
                        this.close(), At.stopPropagation(), At.preventDefault();
                      }),
                    );
                }),
                this._animationEnd
                  .pipe(
                    (0, He.x)(
                      (At, zt) =>
                        At.fromState === zt.fromState &&
                        At.toState === zt.toState,
                    ),
                  )
                  .subscribe((At) => {
                    const { fromState: zt, toState: Qt } = At;
                    ((0 === Qt.indexOf("open") && "void" === zt) ||
                      ("void" === Qt && 0 === zt.indexOf("open"))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            _forceFocus(r, h) {
              this._interactivityChecker.isFocusable(r) ||
                ((r.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  const v = () => {
                    r.removeEventListener("blur", v),
                      r.removeEventListener("mousedown", v),
                      r.removeAttribute("tabindex");
                  };
                  r.addEventListener("blur", v),
                    r.addEventListener("mousedown", v);
                })),
                r.focus(h);
            }
            _focusByCssSelector(r, h) {
              let v = this._elementRef.nativeElement.querySelector(r);
              v && this._forceFocus(v, h);
            }
            _takeFocus() {
              if (!this._focusTrap) return;
              const r = this._elementRef.nativeElement;
              switch (this.autoFocus) {
                case !1:
                case "dialog":
                  return;
                case !0:
                case "first-tabbable":
                  this._focusTrap.focusInitialElementWhenReady().then((h) => {
                    !h &&
                      "function" ==
                        typeof this._elementRef.nativeElement.focus &&
                      r.focus();
                  });
                  break;
                case "first-heading":
                  this._focusByCssSelector(
                    'h1, h2, h3, h4, h5, h6, [role="heading"]',
                  );
                  break;
                default:
                  this._focusByCssSelector(this.autoFocus);
              }
            }
            _restoreFocus(r) {
              "dialog" !== this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(
                      this._elementFocusedBeforeDrawerWasOpened,
                      r,
                    )
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null));
            }
            _isFocusWithinDrawer() {
              const r = this._doc.activeElement;
              return !!r && this._elementRef.nativeElement.contains(r);
            }
            ngAfterViewInit() {
              (this._isAttached = !0),
                (this._focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement,
                )),
                this._updateFocusTrapState(),
                "end" === this._position && this._updatePositionInParent("end");
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._anchor?.remove(),
                (this._anchor = null),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(r) {
              return this.toggle(!0, r);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0, "mouse");
            }
            toggle(r = !this.opened, h) {
              r && h && (this._openedVia = h);
              const v = this._setOpen(
                r,
                !r && this._isFocusWithinDrawer(),
                this._openedVia || "program",
              );
              return r || (this._openedVia = null), v;
            }
            _setOpen(r, h, v) {
              return (
                (this._opened = r),
                r
                  ? (this._animationState = this._enableAnimations
                      ? "open"
                      : "open-instant")
                  : ((this._animationState = "void"),
                    h && this._restoreFocus(v)),
                this._updateFocusTrapState(),
                new Promise((M) => {
                  this.openedChange
                    .pipe((0, We.q)(1))
                    .subscribe((O) => M(O ? "open" : "close"));
                })
              );
            }
            _getWidth() {
              return (
                (this._elementRef.nativeElement &&
                  this._elementRef.nativeElement.offsetWidth) ||
                0
              );
            }
            _updateFocusTrapState() {
              this._focusTrap &&
                (this._focusTrap.enabled = !!this._container?.hasBackdrop);
            }
            _updatePositionInParent(r) {
              const h = this._elementRef.nativeElement,
                v = h.parentNode;
              "end" === r
                ? (this._anchor ||
                    ((this._anchor =
                      this._doc.createComment("mat-drawer-anchor")),
                    v.insertBefore(this._anchor, h)),
                  v.appendChild(h))
                : this._anchor &&
                  this._anchor.parentNode.insertBefore(h, this._anchor);
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)(
                p.Y36(p.SBq),
                p.Y36(lt.qV),
                p.Y36(lt.tE),
                p.Y36($.t4),
                p.Y36(p.R0b),
                p.Y36(lt.ic),
                p.Y36(C.K0, 8),
                p.Y36(Fe, 8),
              );
            });
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["mat-drawer"]],
              viewQuery: function (h, v) {
                if ((1 & h && p.Gf(Pt, 5), 2 & h)) {
                  let M;
                  p.iGM((M = p.CRH())) && (v._content = M.first);
                }
              },
              hostAttrs: [
                "tabIndex",
                "-1",
                "ngSkipHydration",
                "",
                1,
                "mat-drawer",
              ],
              hostVars: 12,
              hostBindings: function (h, v) {
                1 & h &&
                  p.WFA("@transform.start", function (O) {
                    return v._animationStarted.next(O);
                  })("@transform.done", function (O) {
                    return v._animationEnd.next(O);
                  }),
                  2 & h &&
                    (p.uIk("align", null),
                    p.d8E("@transform", v._animationState),
                    p.ekj("mat-drawer-end", "end" === v.position)(
                      "mat-drawer-over",
                      "over" === v.mode,
                    )("mat-drawer-push", "push" === v.mode)(
                      "mat-drawer-side",
                      "side" === v.mode,
                    )("mat-drawer-opened", v.opened));
              },
              inputs: {
                position: "position",
                mode: "mode",
                disableClose: "disableClose",
                autoFocus: "autoFocus",
                opened: "opened",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                openedStart: "openedStart",
                _closedStream: "closed",
                closedStart: "closedStart",
                onPositionChanged: "positionChanged",
              },
              exportAs: ["matDrawer"],
              ngContentSelectors: St,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (h, v) {
                1 & h && (p.F$t(), p.TgZ(0, "div", 0, 1), p.Hsn(2), p.qZA());
              },
              dependencies: [x.PQ],
              encapsulation: 2,
              data: { animation: [Vi.transformDrawer] },
              changeDetection: 0,
            }));
          }
          return d;
        })(),
        Mt = (() => {
          class d {
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(r) {
              this._autosize = (0, B.Ig)(r);
            }
            get hasBackdrop() {
              return (
                this._drawerHasBackdrop(this._start) ||
                this._drawerHasBackdrop(this._end)
              );
            }
            set hasBackdrop(r) {
              this._backdropOverride = null == r ? null : (0, B.Ig)(r);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            constructor(r, h, v, M, O, V = !1, W) {
              (this._dir = r),
                (this._element = h),
                (this._ngZone = v),
                (this._changeDetectorRef = M),
                (this._animationMode = W),
                (this._drawers = new p.n_E()),
                (this.backdropClick = new p.vpe()),
                (this._destroyed = new _.x()),
                (this._doCheckSubject = new _.x()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new _.x()),
                r &&
                  r.change.pipe((0, Ve.R)(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                O.change()
                  .pipe((0, Ve.R)(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = V);
            }
            ngAfterContentInit() {
              this._allDrawers.changes
                .pipe((0, Re.O)(this._allDrawers), (0, Ve.R)(this._destroyed))
                .subscribe((r) => {
                  this._drawers.reset(
                    r.filter((h) => !h._container || h._container === this),
                  ),
                    this._drawers.notifyOnChanges();
                }),
                this._drawers.changes.pipe((0, Re.O)(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((r) => {
                      this._watchDrawerToggle(r),
                        this._watchDrawerPosition(r),
                        this._watchDrawerMode(r);
                    }),
                    (!this._drawers.length ||
                      this._isDrawerOpen(this._start) ||
                      this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject
                    .pipe((0, wt.b)(10), (0, Ve.R)(this._destroyed))
                    .subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((r) => r.open());
            }
            close() {
              this._drawers.forEach((r) => r.close());
            }
            updateContentMargins() {
              let r = 0,
                h = 0;
              if (this._left && this._left.opened)
                if ("side" == this._left.mode) r += this._left._getWidth();
                else if ("push" == this._left.mode) {
                  const v = this._left._getWidth();
                  (r += v), (h -= v);
                }
              if (this._right && this._right.opened)
                if ("side" == this._right.mode) h += this._right._getWidth();
                else if ("push" == this._right.mode) {
                  const v = this._right._getWidth();
                  (h += v), (r -= v);
                }
              (r = r || null),
                (h = h || null),
                (r !== this._contentMargins.left ||
                  h !== this._contentMargins.right) &&
                  ((this._contentMargins = { left: r, right: h }),
                  this._ngZone.run(() =>
                    this._contentMarginChanges.next(this._contentMargins),
                  ));
            }
            ngDoCheck() {
              this._autosize &&
                this._isPushed() &&
                this._ngZone.runOutsideAngular(() =>
                  this._doCheckSubject.next(),
                );
            }
            _watchDrawerToggle(r) {
              r._animationStarted
                .pipe(
                  (0, gt.h)((h) => h.fromState !== h.toState),
                  (0, Ve.R)(this._drawers.changes),
                )
                .subscribe((h) => {
                  "open-instant" !== h.toState &&
                    "NoopAnimations" !== this._animationMode &&
                    this._element.nativeElement.classList.add(
                      "mat-drawer-transition",
                    ),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                "side" !== r.mode &&
                  r.openedChange
                    .pipe((0, Ve.R)(this._drawers.changes))
                    .subscribe(() => this._setContainerClass(r.opened));
            }
            _watchDrawerPosition(r) {
              r &&
                r.onPositionChanged
                  .pipe((0, Ve.R)(this._drawers.changes))
                  .subscribe(() => {
                    this._ngZone.onMicrotaskEmpty
                      .pipe((0, We.q)(1))
                      .subscribe(() => {
                        this._validateDrawers();
                      });
                  });
            }
            _watchDrawerMode(r) {
              r &&
                r._modeChanged
                  .pipe(
                    (0, Ve.R)(
                      (0, jt.T)(this._drawers.changes, this._destroyed),
                    ),
                  )
                  .subscribe(() => {
                    this.updateContentMargins(),
                      this._changeDetectorRef.markForCheck();
                  });
            }
            _setContainerClass(r) {
              const h = this._element.nativeElement.classList,
                v = "mat-drawer-container-has-open";
              r ? h.add(v) : h.remove(v);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((r) => {
                  "end" == r.position ? (this._end = r) : (this._start = r);
                }),
                (this._right = this._left = null),
                this._dir && "rtl" === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) &&
                  "over" != this._start.mode) ||
                (this._isDrawerOpen(this._end) && "over" != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter(
                  (r) => r && !r.disableClose && this._drawerHasBackdrop(r),
                )
                .forEach((r) => r._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) &&
                  this._drawerHasBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) &&
                  this._drawerHasBackdrop(this._end))
              );
            }
            _isDrawerOpen(r) {
              return null != r && r.opened;
            }
            _drawerHasBackdrop(r) {
              return null == this._backdropOverride
                ? !!r && "side" !== r.mode
                : this._backdropOverride;
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)(
                p.Y36(bt.Is, 8),
                p.Y36(p.SBq),
                p.Y36(p.R0b),
                p.Y36(p.sBO),
                p.Y36(x.rL),
                p.Y36(Ie),
                p.Y36(p.QbO, 8),
              );
            });
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["mat-drawer-container"]],
              contentQueries: function (h, v, M) {
                if ((1 & h && (p.Suo(M, Ue, 5), p.Suo(M, Ft, 5)), 2 & h)) {
                  let O;
                  p.iGM((O = p.CRH())) && (v._content = O.first),
                    p.iGM((O = p.CRH())) && (v._allDrawers = O);
                }
              },
              viewQuery: function (h, v) {
                if ((1 & h && p.Gf(Ue, 5), 2 & h)) {
                  let M;
                  p.iGM((M = p.CRH())) && (v._userContent = M.first);
                }
              },
              hostAttrs: ["ngSkipHydration", "", 1, "mat-drawer-container"],
              hostVars: 2,
              hostBindings: function (h, v) {
                2 & h &&
                  p.ekj(
                    "mat-drawer-container-explicit-backdrop",
                    v._backdropOverride,
                  );
              },
              inputs: { autosize: "autosize", hasBackdrop: "hasBackdrop" },
              outputs: { backdropClick: "backdropClick" },
              exportAs: ["matDrawerContainer"],
              features: [p._Bn([{ provide: Fe, useExisting: d }])],
              ngContentSelectors: mi,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (h, v) {
                1 & h &&
                  (p.F$t(ze),
                  p.YNc(0, ee, 1, 2, "div", 0),
                  p.Hsn(1),
                  p.Hsn(2, 1),
                  p.YNc(3, Kt, 2, 0, "mat-drawer-content", 1)),
                  2 & h &&
                    (p.Q6J("ngIf", v.hasBackdrop),
                    p.xp6(3),
                    p.Q6J("ngIf", !v._content));
              },
              dependencies: [C.O5, Ue],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;--mat-sidenav-container-shape:0;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return d;
        })(),
        we = (() => {
          class d extends Ue {
            constructor(r, h, v, M, O) {
              super(r, h, v, M, O);
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)(
                p.Y36(p.sBO),
                p.Y36((0, p.Gpc)(() => re)),
                p.Y36(p.SBq),
                p.Y36(x.mF),
                p.Y36(p.R0b),
              );
            });
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["mat-sidenav-content"]],
              hostAttrs: [
                "ngSkipHydration",
                "",
                1,
                "mat-drawer-content",
                "mat-sidenav-content",
              ],
              hostVars: 4,
              hostBindings: function (h, v) {
                2 & h &&
                  p.Udp("margin-left", v._container._contentMargins.left, "px")(
                    "margin-right",
                    v._container._contentMargins.right,
                    "px",
                  );
              },
              features: [p._Bn([{ provide: x.PQ, useExisting: d }]), p.qOj],
              ngContentSelectors: St,
              decls: 1,
              vars: 0,
              template: function (h, v) {
                1 & h && (p.F$t(), p.Hsn(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return d;
        })(),
        Vt = (() => {
          class d extends Ft {
            constructor() {
              super(...arguments),
                (this._fixedInViewport = !1),
                (this._fixedTopGap = 0),
                (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(r) {
              this._fixedInViewport = (0, B.Ig)(r);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(r) {
              this._fixedTopGap = (0, B.su)(r);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(r) {
              this._fixedBottomGap = (0, B.su)(r);
            }
            static #t = (this.ɵfac = (function () {
              let r;
              return function (v) {
                return (r || (r = p.n5z(d)))(v || d);
              };
            })());
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["mat-sidenav"]],
              hostAttrs: [
                "tabIndex",
                "-1",
                "ngSkipHydration",
                "",
                1,
                "mat-drawer",
                "mat-sidenav",
              ],
              hostVars: 17,
              hostBindings: function (h, v) {
                2 & h &&
                  (p.uIk("align", null),
                  p.Udp("top", v.fixedInViewport ? v.fixedTopGap : null, "px")(
                    "bottom",
                    v.fixedInViewport ? v.fixedBottomGap : null,
                    "px",
                  ),
                  p.ekj("mat-drawer-end", "end" === v.position)(
                    "mat-drawer-over",
                    "over" === v.mode,
                  )("mat-drawer-push", "push" === v.mode)(
                    "mat-drawer-side",
                    "side" === v.mode,
                  )("mat-drawer-opened", v.opened)(
                    "mat-sidenav-fixed",
                    v.fixedInViewport,
                  ));
              },
              inputs: {
                fixedInViewport: "fixedInViewport",
                fixedTopGap: "fixedTopGap",
                fixedBottomGap: "fixedBottomGap",
              },
              exportAs: ["matSidenav"],
              features: [p.qOj],
              ngContentSelectors: St,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (h, v) {
                1 & h && (p.F$t(), p.TgZ(0, "div", 0, 1), p.Hsn(2), p.qZA());
              },
              dependencies: [x.PQ],
              encapsulation: 2,
              data: { animation: [Vi.transformDrawer] },
              changeDetection: 0,
            }));
          }
          return d;
        })(),
        re = (() => {
          class d extends Mt {
            constructor() {
              super(...arguments),
                (this._allDrawers = void 0),
                (this._content = void 0);
            }
            static #t = (this.ɵfac = (function () {
              let r;
              return function (v) {
                return (r || (r = p.n5z(d)))(v || d);
              };
            })());
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["mat-sidenav-container"]],
              contentQueries: function (h, v, M) {
                if ((1 & h && (p.Suo(M, we, 5), p.Suo(M, Vt, 5)), 2 & h)) {
                  let O;
                  p.iGM((O = p.CRH())) && (v._content = O.first),
                    p.iGM((O = p.CRH())) && (v._allDrawers = O);
                }
              },
              hostAttrs: [
                "ngSkipHydration",
                "",
                1,
                "mat-drawer-container",
                "mat-sidenav-container",
              ],
              hostVars: 2,
              hostBindings: function (h, v) {
                2 & h &&
                  p.ekj(
                    "mat-drawer-container-explicit-backdrop",
                    v._backdropOverride,
                  );
              },
              exportAs: ["matSidenavContainer"],
              features: [p._Bn([{ provide: Fe, useExisting: d }]), p.qOj],
              ngContentSelectors: hi,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (h, v) {
                1 & h &&
                  (p.F$t(Ge),
                  p.YNc(0, ie, 1, 2, "div", 0),
                  p.Hsn(1),
                  p.Hsn(2, 1),
                  p.YNc(3, vi, 2, 0, "mat-sidenav-content", 1)),
                  2 & h &&
                    (p.Q6J("ngIf", v.hasBackdrop),
                    p.xp6(3),
                    p.Q6J("ngIf", !v._content));
              },
              dependencies: [C.O5, we],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;--mat-sidenav-container-shape:0;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return d;
        })(),
        Le = (() => {
          class d {
            static #t = (this.ɵfac = function (h) {
              return new (h || d)();
            });
            static #e = (this.ɵmod = p.oAB({ type: d }));
            static #i = (this.ɵinj = p.cJS({
              imports: [C.ez, at.BQ, x.ZD, x.ZD, at.BQ],
            }));
          }
          return d;
        })();
      var li = D(9038),
        ii = D(617),
        Mi = D(1274),
        fi = D(2596),
        ri = D(2296),
        te = D(9157),
        Be = D(5313),
        Ne = D(6223),
        Ri = D(2032),
        gi = D(1896),
        Xi = D(20),
        _i = D(5195);
      const de = function (d) {
          return { index: d };
        },
        ot = function (d, n) {
          return { value: d, params: n };
        };
      function Z(d, n) {
        if (
          (1 & d && (p.TgZ(0, "div", 3), p._UZ(1, "img", 4), p.qZA()), 2 & d)
        ) {
          const r = n.$implicit,
            h = n.index,
            v = p.oxw();
          p.Q6J(
            "@slideAnimation",
            p.WLB(
              5,
              ot,
              h === v.currentSlide ? "active" : "inactive",
              p.VKq(3, de, h),
            ),
          ),
            p.xp6(1),
            p.Q6J("src", r, p.LSH)("alt", "Slide " + (h + 1));
        }
      }
      let rt = (() => {
        class d {
          constructor() {
            (this.images = [
              "./assets/Stick Pack Layout (vertical).webp",
              "./assets/Liquid Sachet Layout 5.webp",
              "./assets/Image by Elsa Olofsson.webp",
            ]),
              (this.currentSlide = 0);
          }
          ngOnInit() {
            this.startAutoplay();
          }
          ngOnDestroy() {
            this.stopAutoplay();
          }
          startAutoplay() {
            this.intervalId = setInterval(() => {
              this.nextSlide();
            }, 7e3);
          }
          stopAutoplay() {
            clearInterval(this.intervalId);
          }
          nextSlide() {
            this.currentSlide = (this.currentSlide + 1) % this.images.length;
          }
          previousSlide() {
            this.currentSlide =
              (this.currentSlide + this.images.length - 1) % this.images.length;
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)();
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: d,
            selectors: [["app-carousel"]],
            decls: 8,
            vars: 1,
            consts: [
              [1, "carousel-container"],
              ["class", "carousel-slide", 4, "ngFor", "ngForOf"],
              ["mat-icon-button", "", 3, "click"],
              [1, "carousel-slide"],
              [3, "src", "alt"],
            ],
            template: function (h, v) {
              1 & h &&
                (p.TgZ(0, "div", 0),
                p.YNc(1, Z, 2, 8, "div", 1),
                p.TgZ(2, "button", 2),
                p.NdJ("click", function () {
                  return v.previousSlide();
                }),
                p.TgZ(3, "mat-icon"),
                p._uU(4, "chevron_left"),
                p.qZA()(),
                p.TgZ(5, "button", 2),
                p.NdJ("click", function () {
                  return v.nextSlide();
                }),
                p.TgZ(6, "mat-icon"),
                p._uU(7, "chevron_right"),
                p.qZA()()()),
                2 & h && (p.xp6(1), p.Q6J("ngForOf", v.images));
            },
            dependencies: [C.sg, ii.Hw, ri.RK],
            styles: [
              ".carousel-container[_ngcontent-%COMP%]{display:flex;position:relative;width:100%;height:100vh;overflow:hidden;background:linear-gradient(to right,rgba(0,0,0,.6),rgba(0,0,0,.8))}.carousel-slide[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;transition:transform .6s ease-in-out,opacity .6s ease;will-change:transform,opacity}img[_ngcontent-%COMP%]{width:100%;height:100vh;display:block;box-shadow:#00000026 2.4px 2.4px 3.2px}",
            ],
            data: {
              animation: [
                (0, _t.X$)("slideAnimation", [
                  (0, _t.SB)(
                    "inactive",
                    (0, _t.oB)({ opacity: 0, transform: "translateX(100%)" }),
                  ),
                  (0, _t.SB)(
                    "active",
                    (0, _t.oB)({ opacity: 1, transform: "translateX(0)" }),
                  ),
                  (0, _t.eR)(
                    "inactive => active",
                    (0, _t.jt)("600ms ease-out"),
                  ),
                  (0, _t.eR)("active => inactive", (0, _t.jt)("600ms ease-in")),
                ]),
              ],
            },
          }));
        }
        return d;
      })();
      function yt(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Email is required "), p.qZA());
      }
      function Rt(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Password is required "), p.qZA());
      }
      function Lt(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Password must be at least 6 characters "),
          p.qZA());
      }
      let ut = (() => {
        class d {
          constructor(r, h) {
            (this.authService = r),
              (this.router = h),
              (this.images = [
                "assets/Artboard1_0_25x.webp",
                "assets/batch-by-wisconsin-hemp-scientific-MoosTiMVbug-unsplash.webp",
              ]),
              (this.loginForm = new Ne.cw({
                email: new Ne.NI("", [Ne.kI.required, Ne.kI.email]),
                password: new Ne.NI("", [Ne.kI.required, Ne.kI.minLength(6)]),
              })),
              (this.errorMessage = "");
          }
          onSubmit() {
            if (this.loginForm.valid) {
              const r = this.loginForm.get("email").value || "",
                h = this.loginForm.get("password").value || "";
              this.authService.login(r, h).subscribe({
                next: () => {
                  this.router.navigate(["/dashboard"]);
                },
                error: (v) => {
                  (this.errorMessage = "Invalid username or password"),
                    console.error("Error logging in:", v);
                },
              });
            }
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(p.Y36(Xi.e), p.Y36(gi.F0));
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: d,
            selectors: [["app-login"]],
            decls: 27,
            vars: 4,
            consts: [
              ["fxLayout", "row", "fxLayoutGap", "0px", 1, "login-page"],
              ["fxFlex", "30", 1, "carousel-container"],
              ["fxFlex", "70", 1, "form-container"],
              [3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              ["matInput", "", "formControlName", "email", "required", ""],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "formControlName",
                "password",
                "type",
                "password",
                "required",
                "",
                "minlength",
                "6",
              ],
              ["mat-raised-button", "", "color", "primary", "type", "submit"],
              [1, "register-link"],
              ["routerLink", "/register"],
            ],
            template: function (h, v) {
              if (
                (1 & h &&
                  (p.TgZ(0, "div", 0)(1, "div", 1),
                  p._UZ(2, "app-carousel"),
                  p.qZA(),
                  p.TgZ(3, "div", 2)(4, "mat-card")(5, "mat-card-title"),
                  p._uU(6, "Login"),
                  p.qZA(),
                  p.TgZ(7, "mat-card-content")(8, "form", 3),
                  p.NdJ("ngSubmit", function () {
                    return v.onSubmit();
                  }),
                  p.TgZ(9, "mat-form-field", 4)(10, "mat-label"),
                  p._uU(11, "Email"),
                  p.qZA(),
                  p._UZ(12, "input", 5),
                  p.YNc(13, yt, 2, 0, "mat-error", 6),
                  p.qZA(),
                  p.TgZ(14, "mat-form-field", 4)(15, "mat-label"),
                  p._uU(16, "Password"),
                  p.qZA(),
                  p._UZ(17, "input", 7),
                  p.YNc(18, Rt, 2, 0, "mat-error", 6),
                  p.YNc(19, Lt, 2, 0, "mat-error", 6),
                  p.qZA(),
                  p.TgZ(20, "button", 8),
                  p._uU(21, "Login"),
                  p.qZA()()(),
                  p.TgZ(22, "mat-card-content", 9)(23, "p"),
                  p._uU(24, "Don't have an account? "),
                  p.TgZ(25, "a", 10),
                  p._uU(26, "Register"),
                  p.qZA()()()()()()),
                2 & h)
              ) {
                let M, O, V;
                p.xp6(8),
                  p.Q6J("formGroup", v.loginForm),
                  p.xp6(5),
                  p.Q6J(
                    "ngIf",
                    null == (M = v.loginForm.get("email"))
                      ? null
                      : M.hasError("required"),
                  ),
                  p.xp6(5),
                  p.Q6J(
                    "ngIf",
                    null == (O = v.loginForm.get("password"))
                      ? null
                      : O.hasError("required"),
                  ),
                  p.xp6(1),
                  p.Q6J(
                    "ngIf",
                    null == (V = v.loginForm.get("password"))
                      ? null
                      : V.hasError("minlength"),
                  );
              }
            },
            dependencies: [
              C.O5,
              gi.rH,
              ri.lW,
              te.KE,
              te.hX,
              te.TO,
              Ne._Y,
              Ne.Fj,
              Ne.JJ,
              Ne.JL,
              Ne.Q7,
              Ne.wO,
              Ne.sg,
              Ne.u,
              Ri.Nt,
              _i.a8,
              _i.dn,
              _i.n5,
              rt,
            ],
            styles: [
              ".login-page[_ngcontent-%COMP%]{height:100vh;display:flex;flex-direction:row}.login-page[_ngcontent-%COMP%]   .carousel-container[_ngcontent-%COMP%]{width:50%;background-size:cover;background-position:center}.login-page[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]{width:50%;display:flex;justify-content:center;align-items:center}.login-page[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{width:80%;max-width:600px;padding:20px;border-radius:8px;box-shadow:0 4px 8px #0003}.login-page[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:20px}.login-page[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}.login-page[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}.register-link[_ngcontent-%COMP%]{margin-top:20px;text-align:center}.register-link[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:.9rem}.register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-weight:500;color:#65aaee}.register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}",
            ],
          }));
        }
        return d;
      })();
      var q = D(703);
      let Ct = (() => {
        class d {
          constructor(r, h, v) {
            (this.authService = r), (this.router = h), (this.jwtHelper = v);
          }
          canActivate() {
            const r = localStorage.getItem("authData");
            if (r) {
              const { token: h } = JSON.parse(r);
              if (h && !this.jwtHelper.isTokenExpired(h)) return !0;
            }
            return this.router.navigate(["/login"]), !1;
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(p.LFG(Xi.e), p.LFG(gi.F0), p.LFG(q.N0));
          });
          static #e = (this.ɵprov = p.Yz7({
            token: d,
            factory: d.ɵfac,
            providedIn: "root",
          }));
        }
        return d;
      })();
      function H(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Email is required "), p.qZA());
      }
      function Nt(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Enter a valid email "), p.qZA());
      }
      function X(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"), p._uU(1, " Password is required "), p.qZA());
      }
      function se(d, n) {
        1 & d &&
          (p.TgZ(0, "mat-error"),
          p._uU(1, " Password must be at least 6 characters long "),
          p.qZA());
      }
      let it = (() => {
        class d {
          constructor(r) {
            this.fb = r;
          }
          ngOnInit() {
            this.registerForm = this.fb.group({
              username: ["", Ne.kI.required],
              password: ["", [Ne.kI.required, Ne.kI.minLength(6)]],
              email: ["", [Ne.kI.required, Ne.kI.email]],
              firstName: ["", Ne.kI.required],
              lastName: ["", Ne.kI.required],
              role: ["", Ne.kI.required],
              department: ["", Ne.kI.required],
              phoneNumber: ["", Ne.kI.required],
              status: [""],
            });
          }
          onSubmit() {
            this.registerForm.valid &&
              console.log("Registration Data:", this.registerForm.value);
          }
          onMicrosoftLogin() {}
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(p.Y36(Ne.qu));
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: d,
            selectors: [["app-register"]],
            decls: 40,
            vars: 5,
            consts: [
              ["fxLayout", "row", "fxLayoutGap", "0px", 1, "login-page"],
              ["fxFlex", "30", 1, "logo-container"],
              [
                "src",
                "./assets/Nufacturing - White Logo Stacked.webp",
                "alt",
                "Nufacturing Logo",
              ],
              ["fxFlex", "70", 1, "form-container"],
              [3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "formControlName",
                "email",
                "type",
                "email",
                "required",
                "",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "formControlName",
                "password",
                "type",
                "password",
                "required",
                "",
              ],
              ["matInput", "", "formControlName", "firstName", "required", ""],
              ["matInput", "", "formControlName", "lastName", "required", ""],
              [
                "matInput",
                "",
                "formControlName",
                "phoneNumber",
                "type",
                "tel",
                "required",
                "",
              ],
              ["mat-raised-button", "", "color", "primary", "type", "submit"],
              [1, "login-link"],
              ["routerLink", "/login"],
            ],
            template: function (h, v) {
              if (
                (1 & h &&
                  (p.TgZ(0, "div", 0)(1, "div", 1),
                  p._UZ(2, "img", 2),
                  p.qZA(),
                  p.TgZ(3, "div", 3)(4, "mat-card")(5, "mat-card-title"),
                  p._uU(6, "Register Your Account"),
                  p.qZA(),
                  p.TgZ(7, "mat-card-content")(8, "form", 4),
                  p.NdJ("ngSubmit", function () {
                    return v.onSubmit();
                  }),
                  p.TgZ(9, "mat-form-field", 5)(10, "mat-label"),
                  p._uU(11, "Email"),
                  p.qZA(),
                  p._UZ(12, "input", 6),
                  p.YNc(13, H, 2, 0, "mat-error", 7),
                  p.YNc(14, Nt, 2, 0, "mat-error", 7),
                  p.qZA(),
                  p.TgZ(15, "mat-form-field", 5)(16, "mat-label"),
                  p._uU(17, "Password"),
                  p.qZA(),
                  p._UZ(18, "input", 8),
                  p.YNc(19, X, 2, 0, "mat-error", 7),
                  p.YNc(20, se, 2, 0, "mat-error", 7),
                  p.qZA(),
                  p.TgZ(21, "mat-form-field", 5)(22, "mat-label"),
                  p._uU(23, "First Name"),
                  p.qZA(),
                  p._UZ(24, "input", 9),
                  p.qZA(),
                  p.TgZ(25, "mat-form-field", 5)(26, "mat-label"),
                  p._uU(27, "Last Name"),
                  p.qZA(),
                  p._UZ(28, "input", 10),
                  p.qZA(),
                  p.TgZ(29, "mat-form-field", 5)(30, "mat-label"),
                  p._uU(31, "Phone Number"),
                  p.qZA(),
                  p._UZ(32, "input", 11),
                  p.qZA(),
                  p.TgZ(33, "button", 12),
                  p._uU(34, " Register "),
                  p.qZA()()(),
                  p.TgZ(35, "mat-card-content", 13)(36, "p"),
                  p._uU(37, "Already have an account? "),
                  p.TgZ(38, "a", 14),
                  p._uU(39, "Login"),
                  p.qZA()()()()()()),
                2 & h)
              ) {
                let M, O, V, W;
                p.xp6(8),
                  p.Q6J("formGroup", v.registerForm),
                  p.xp6(5),
                  p.Q6J(
                    "ngIf",
                    null == (M = v.registerForm.get("email"))
                      ? null
                      : M.hasError("required"),
                  ),
                  p.xp6(1),
                  p.Q6J(
                    "ngIf",
                    null == (O = v.registerForm.get("email"))
                      ? null
                      : O.hasError("email"),
                  ),
                  p.xp6(5),
                  p.Q6J(
                    "ngIf",
                    null == (V = v.registerForm.get("password"))
                      ? null
                      : V.hasError("required"),
                  ),
                  p.xp6(1),
                  p.Q6J(
                    "ngIf",
                    null == (W = v.registerForm.get("password"))
                      ? null
                      : W.hasError("minlength"),
                  );
              }
            },
            dependencies: [
              C.O5,
              gi.rH,
              ri.lW,
              te.KE,
              te.hX,
              te.TO,
              Ne._Y,
              Ne.Fj,
              Ne.JJ,
              Ne.JL,
              Ne.Q7,
              Ne.sg,
              Ne.u,
              Ri.Nt,
              _i.a8,
              _i.dn,
              _i.n5,
            ],
            styles: [
              ".login-page[_ngcontent-%COMP%]{height:100vh;display:flex;flex-direction:row}.login-page[_ngcontent-%COMP%]   .logo-container[_ngcontent-%COMP%]{width:30%;display:flex;align-items:center;justify-content:center}.login-page[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]{width:70%;display:flex;justify-content:center;align-items:center;overflow-y:auto}.login-page[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{width:80%;max-width:600px;padding:20px;margin:20px;border-radius:8px;box-shadow:0 4px 8px #0003}.login-page[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:20px}.login-page[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}.login-page[_ngcontent-%COMP%]   .login-link[_ngcontent-%COMP%]{text-align:center;margin-top:20px}.login-page[_ngcontent-%COMP%]   .login-link[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:.9rem}.login-page[_ngcontent-%COMP%]   .login-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-weight:500;color:#65aaee}.login-page[_ngcontent-%COMP%]   .login-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}.login-page[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;text-align:center;line-height:64px}",
            ],
          }));
        }
        return d;
      })();
      var Ut = D(7700);
      let ve = (() => {
        class d {
          static #t = (this.ɵfac = function (h) {
            return new (h || d)();
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: d,
            selectors: [["app-logout-dialog"]],
            decls: 10,
            vars: 2,
            consts: [
              ["mat-dialog-title", ""],
              ["mat-dialog-content", ""],
              ["mat-dialog-actions", ""],
              ["mat-button", "", 3, "mat-dialog-close"],
            ],
            template: function (h, v) {
              1 & h &&
                (p.TgZ(0, "h1", 0),
                p._uU(1, "Logout"),
                p.qZA(),
                p.TgZ(2, "div", 1)(3, "p"),
                p._uU(4, "Are you sure you want to logout?"),
                p.qZA()(),
                p.TgZ(5, "div", 2)(6, "button", 3),
                p._uU(7, "Yes"),
                p.qZA(),
                p.TgZ(8, "button", 3),
                p._uU(9, "No"),
                p.qZA()()),
                2 & h &&
                  (p.xp6(6),
                  p.Q6J("mat-dialog-close", !0),
                  p.xp6(2),
                  p.Q6J("mat-dialog-close", !1));
            },
            dependencies: [ri.lW, Ut.ZT, Ut.uh, Ut.xY, Ut.H8],
            styles: [
              ".mat-dialog-content[_ngcontent-%COMP%]{font-size:16px}.mat-dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.mat-dialog-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0 5px}",
            ],
          }));
        }
        return d;
      })();
      const ki = [
        { path: "", pathMatch: "full", redirectTo: "login" },
        { path: "login", component: ut },
        { path: "register", component: it },
        {
          path: "dashboard",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 1942))
              .then((d) => d.DashboardModule),
          canActivate: [Ct],
        },
        {
          path: "sales",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 9031))
              .then((d) => d.SalesModule),
          canActivate: [Ct],
        },
        {
          path: "inventory",
          loadChildren: () =>
            D.e(574)
              .then(D.bind(D, 2574))
              .then((d) => d.InventoryModule),
          canActivate: [Ct],
        },
        {
          path: "receiving",
          loadChildren: () =>
            D.e(462)
              .then(D.bind(D, 6462))
              .then((d) => d.ReceivingModule),
          canActivate: [Ct],
        },
        {
          path: "vendors",
          loadChildren: () =>
            D.e(910)
              .then(D.bind(D, 3910))
              .then((d) => d.VendorsModule),
          canActivate: [Ct],
        },
        {
          path: "production",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 182))
              .then((d) => d.ProductionModule),
          canActivate: [Ct],
        },
        {
          path: "product-development",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 1573))
              .then((d) => d.ProductDevelopmentModule),
          canActivate: [Ct],
        },
        {
          path: "quality",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 7798))
              .then((d) => d.QualityModule),
          canActivate: [Ct],
        },
        {
          path: "human-resources",
          loadChildren: () =>
            Promise.resolve()
              .then(D.bind(D, 3648))
              .then((d) => d.HumanResourcesModule),
          canActivate: [Ct],
        },
        {
          path: "logout",
          component: (() => {
            class d {
              constructor(r, h) {
                (this.dialog = r), (this.router = h);
              }
              ngOnInit() {
                this.openLogoutDialog();
              }
              openLogoutDialog() {
                this.dialog
                  .open(ve, { width: "250px" })
                  .afterClosed()
                  .subscribe((h) => {
                    h
                      ? (localStorage.clear(),
                        window.location.reload(),
                        this.router.navigate(["/login"]))
                      : this.router.navigate(["/dashboard"]);
                  });
              }
              static #t = (this.ɵfac = function (h) {
                return new (h || d)(p.Y36(Ut.uw), p.Y36(gi.F0));
              });
              static #e = (this.ɵcmp = p.Xpm({
                type: d,
                selectors: [["app-logout"]],
                decls: 0,
                vars: 0,
                template: function (h, v) {},
              }));
            }
            return d;
          })(),
          pathMatch: "full",
          canActivate: [Ct],
        },
      ];
      let Xt = (() => {
        class d {
          static #t = (this.ɵfac = function (h) {
            return new (h || d)();
          });
          static #e = (this.ɵmod = p.oAB({ type: d }));
          static #i = (this.ɵinj = p.cJS({
            imports: [gi.Bz.forRoot(ki), gi.Bz],
          }));
        }
        return d;
      })();
      function ae(d, n) {
        if ((1 & d && (p.TgZ(0, "p", 10), p._uU(1), p.qZA()), 2 & d)) {
          const r = p.oxw().$implicit;
          p.xp6(1), p.Oqu(r.name);
        }
      }
      function ye(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "a", 6),
            p.NdJ("click", function () {
              const M = p.CHM(r).$implicit,
                O = p.oxw(2);
              return p.KtG(
                M.children.length
                  ? O.toggleSubMenu(M.name)
                  : O.navigateTo(M.link),
              );
            }),
            p.TgZ(1, "div", 7)(2, "div")(3, "mat-icon", 8),
            p._uU(4),
            p.qZA()(),
            p.TgZ(5, "div"),
            p.YNc(6, ae, 2, 1, "p", 9),
            p.qZA()()();
        }
        if (2 & d) {
          const r = n.$implicit,
            h = p.oxw(2);
          p.Q6J("routerLinkActive", "active-link"),
            p.xp6(3),
            p.Q6J("matTooltip", h.isExpanded ? "" : r.name),
            p.xp6(1),
            p.hij(" ", r.icon, " "),
            p.xp6(2),
            p.Q6J("ngIf", h.isExpanded);
        }
      }
      function $t(d, n) {
        if (
          (1 & d &&
            (p.TgZ(0, "mat-list", 4), p.YNc(1, ye, 7, 4, "a", 5), p.qZA()),
          2 & d)
        ) {
          const r = p.oxw();
          p.xp6(1), p.Q6J("ngForOf", r.routeLinks);
        }
      }
      function fe(d, n) {
        if ((1 & d && (p.TgZ(0, "p", 10), p._uU(1), p.qZA()), 2 & d)) {
          const r = p.oxw().$implicit;
          p.xp6(1), p.Oqu(r.name);
        }
      }
      function ke(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "a", 6),
            p.NdJ("click", function () {
              const M = p.CHM(r).$implicit,
                O = p.oxw(2);
              return p.KtG(
                null != M.subchildren && M.subchildren.length
                  ? O.toggleSubChildMenu(M.name)
                  : O.navigateTo(M.link),
              );
            }),
            p.TgZ(1, "div", 13)(2, "div")(3, "mat-icon", 8),
            p._uU(4),
            p.qZA()(),
            p.TgZ(5, "div"),
            p.YNc(6, fe, 2, 1, "p", 9),
            p.qZA()()();
        }
        if (2 & d) {
          const r = n.$implicit,
            h = p.oxw(2);
          p.Q6J("routerLinkActive", "active-link"),
            p.xp6(3),
            p.Q6J("matTooltip", h.isExpanded ? "" : r.name),
            p.xp6(1),
            p.hij(" ", r.icon, " "),
            p.xp6(2),
            p.Q6J("ngIf", h.isExpanded);
        }
      }
      function yi(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "mat-list", 4)(1, "a", 11),
            p.NdJ("click", function () {
              p.CHM(r);
              const v = p.oxw();
              return p.KtG(v.toggleSubMenu(null));
            }),
            p.TgZ(2, "mat-icon", 12),
            p._uU(3, "arrow_back"),
            p.qZA()(),
            p.YNc(4, ke, 7, 4, "a", 5),
            p.qZA();
        }
        if (2 & d) {
          const r = p.oxw();
          p.xp6(4), p.Q6J("ngForOf", r.getSubMenuItems());
        }
      }
      function pt(d, n) {
        if ((1 & d && (p.TgZ(0, "p", 10), p._uU(1), p.qZA()), 2 & d)) {
          const r = p.oxw().$implicit;
          p.xp6(1), p.Oqu(r.name);
        }
      }
      function vt(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "a", 6),
            p.NdJ("click", function () {
              const M = p.CHM(r).$implicit,
                O = p.oxw(2);
              return p.KtG(O.navigateTo(M.link));
            }),
            p.TgZ(1, "div", 13)(2, "div")(3, "mat-icon", 8),
            p._uU(4),
            p.qZA()(),
            p.TgZ(5, "div"),
            p.YNc(6, pt, 2, 1, "p", 9),
            p.qZA()()();
        }
        if (2 & d) {
          const r = n.$implicit,
            h = p.oxw(2);
          p.Q6J("routerLinkActive", "active-link"),
            p.xp6(3),
            p.Q6J("matTooltip", h.isExpanded ? "" : r.name),
            p.xp6(1),
            p.hij(" ", r.icon, " "),
            p.xp6(2),
            p.Q6J("ngIf", h.isExpanded);
        }
      }
      function U(d, n) {
        if (1 & d) {
          const r = p.EpF();
          p.TgZ(0, "mat-list", 4)(1, "a", 11),
            p.NdJ("click", function () {
              p.CHM(r);
              const v = p.oxw();
              return p.KtG(v.toggleSubChildMenu(null));
            }),
            p.TgZ(2, "mat-icon", 12),
            p._uU(3, "close"),
            p.qZA()(),
            p.YNc(4, vt, 7, 4, "a", 5),
            p.qZA();
        }
        if (2 & d) {
          const r = p.oxw();
          p.xp6(4), p.Q6J("ngForOf", r.getSubChildMenuItems(r.activeSubMenu));
        }
      }
      let j = (() => {
          class d {
            constructor(r) {
              (this.router = r),
                (this.isExpanded = !0),
                (this.toggleMenu = new p.vpe()),
                (this.activeMenu = null),
                (this.activeSubMenu = null),
                (this.routeLinks = [
                  {
                    link: "dashboard",
                    name: "Dashboard",
                    icon: "dashboard",
                    children: [],
                  },
                  {
                    link: "sales",
                    name: "Sales",
                    icon: "groups",
                    children: [
                      {
                        link: "sales/customers",
                        name: "Customers",
                        icon: "face",
                      },
                      {
                        link: "sales/orders",
                        name: "Orders",
                        icon: "shopping_cart",
                      },
                      {
                        link: "sales/quotes",
                        name: "Quotes",
                        icon: "attach_money",
                        subchildren: [
                          {
                            link: "sales/quotes/info",
                            name: "Info",
                            icon: "info",
                          },
                          {
                            link: "sales/quotes/ingredients",
                            name: "Ingredients",
                            icon: "grocery",
                          },
                          {
                            link: "sales/quotes/bom",
                            name: "BOM",
                            icon: "receipt_long",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    link: "inventory",
                    name: "Inventory",
                    icon: "inventory",
                    children: [],
                  },
                  {
                    link: "receiving",
                    name: "Receiving",
                    icon: "call_received",
                    children: [],
                  },
                  {
                    link: "vendors",
                    name: "Vendors",
                    icon: "diversity_2",
                    children: [],
                  },
                  {
                    link: "production",
                    name: "Production",
                    icon: "receipt_long",
                    children: [
                      {
                        link: "production/batch-records",
                        name: "Batch Records",
                        icon: "inventory_2",
                      },
                      {
                        link: "production/shifting-records",
                        name: "Shifting Records",
                        icon: "swap_horiz",
                      },
                      {
                        link: "production/depositor-records",
                        name: "Depositor Records",
                        icon: "payments",
                      },
                      {
                        link: "production/packaging-records",
                        name: "Packaging Records",
                        icon: "inventory",
                      },
                      {
                        link: "production/mixing-records",
                        name: "Mixing Records",
                        icon: "science",
                      },
                      {
                        link: "production/weighing-records",
                        name: "Weighing Records",
                        icon: "scale",
                      },
                      {
                        link: "production/bottling-records",
                        name: "Bottling Records",
                        icon: "local_drink",
                      },
                      {
                        link: "production/encapsulation-records",
                        name: "Encapsulation Records",
                        icon: "spa",
                      },
                      {
                        link: "production/master-manufacturing-records",
                        name: "Master Manifacturing Records",
                        icon: "factory",
                      },
                      {
                        link: "production/assets-and-machines",
                        name: "Assets and Machines",
                        icon: "build",
                      },
                      {
                        link: "production/production-planning",
                        name: "Production Planning",
                        icon: "event",
                      },
                      {
                        link: "production/reporting",
                        name: "Reporting",
                        icon: "summarize",
                      },
                    ],
                  },
                  {
                    link: "product-development",
                    name: "Product Development",
                    icon: "inventory_2",
                    children: [
                      {
                        link: "product-development/formulas",
                        name: "Formulas",
                        icon: "science",
                      },
                      {
                        link: "product-development/product-skus",
                        name: "Product SKUs",
                        icon: "label_important",
                      },
                      {
                        link: "product-development/product-types",
                        name: "Product Types",
                        icon: "merge_type",
                      },
                    ],
                  },
                  {
                    link: "quality",
                    name: "Quality",
                    icon: "precision_manufacturing",
                    children: [
                      {
                        link: "quality/fda-audits",
                        name: "Fda Audits",
                        icon: "receipt_long",
                      },
                      {
                        link: "quality/quality-audits",
                        name: "Quality Audits",
                        icon: "history_edu",
                      },
                    ],
                  },
                  {
                    link: "human-resources",
                    name: "Human Resources",
                    icon: "school",
                    children: [
                      {
                        link: "human-resources/training",
                        name: "Training",
                        icon: "model_training",
                      },
                      {
                        link: "human-resources/users",
                        name: "Users",
                        icon: "person",
                      },
                    ],
                  },
                  {
                    link: "logout",
                    name: "Logout",
                    icon: "logout",
                    children: [],
                  },
                ]);
            }
            ngOnInit() {
              this.router.events
                .pipe((0, gt.h)((r) => r instanceof gi.m2))
                .subscribe(() => this.checkActiveRoute()),
                this.checkActiveRoute();
            }
            checkActiveRoute() {
              const r = this.router.url;
              this.routeLinks.forEach((h) => {
                h.children.length &&
                  h.children.forEach((v) => {
                    r.includes(v.link) &&
                      ((this.activeMenu = h.name),
                      v.subchildren &&
                        v.subchildren.forEach((M) => {
                          r.includes(M.link) && (this.activeSubMenu = v.name);
                        }));
                  });
              });
            }
            toggle() {
              this.toggleMenu.emit(), (this.isExpanded = !this.isExpanded);
            }
            toggleSubMenu(r) {
              this.activeMenu = this.activeMenu === r ? null : r;
            }
            toggleSubChildMenu(r) {
              this.activeSubMenu = this.activeSubMenu === r ? null : r;
            }
            navigateTo(r) {
              this.router.navigate([r]),
                this.toggleSubMenu(null),
                this.toggleSubChildMenu(null);
            }
            getSubMenuItems() {
              const r = this.routeLinks.find((h) => h.name === this.activeMenu);
              return r ? r.children : [];
            }
            getSubChildMenuItems(r) {
              const h = this.routeLinks.find((v) => v.name === this.activeMenu);
              if (h && h?.children) {
                const v = h?.children.find((M) => M.name === r);
                return v?.subchildren ? v.subchildren : [];
              }
              return [];
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)(p.Y36(gi.F0));
            });
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["app-sidenav"]],
              inputs: { isExpanded: "isExpanded" },
              outputs: { toggleMenu: "toggleMenu" },
              decls: 8,
              vars: 6,
              consts: [
                [
                  2,
                  "display",
                  "flex",
                  "width",
                  "100%",
                  "max-width",
                  "300px",
                  "justify-content",
                  "start",
                  "align-items",
                  "center",
                  "gap",
                  "0",
                ],
                ["class", "nav", 4, "ngIf"],
                [1, "toggle"],
                [1, "toggle_icon", 3, "click"],
                [1, "nav"],
                [
                  "mat-list-item",
                  "",
                  "class",
                  "hover",
                  3,
                  "routerLinkActive",
                  "click",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "mat-list-item",
                  "",
                  1,
                  "hover",
                  3,
                  "routerLinkActive",
                  "click",
                ],
                [
                  2,
                  "display",
                  "flex",
                  "flex-direction",
                  "row",
                  "justify-content",
                  "flex-start",
                  "align-items",
                  "center",
                  "gap",
                  "10px",
                ],
                [
                  "mat-list-icon",
                  "",
                  "matTooltipPosition",
                  "right",
                  3,
                  "matTooltip",
                ],
                ["matLine", "", 4, "ngIf"],
                ["matLine", ""],
                ["mat-list-item", "", 3, "click"],
                ["mat-list-icon", ""],
                [
                  2,
                  "display",
                  "flex",
                  "flex-direction",
                  "row",
                  "justify-content",
                  "flex-start",
                  "gap",
                  "10px",
                ],
              ],
              template: function (h, v) {
                1 & h &&
                  (p.TgZ(0, "div", 0)(1, "section"),
                  p.YNc(2, $t, 2, 1, "mat-list", 1),
                  p.YNc(3, yi, 5, 1, "mat-list", 1),
                  p.YNc(4, U, 5, 1, "mat-list", 1),
                  p.qZA(),
                  p.TgZ(5, "div", 2)(6, "mat-icon", 3),
                  p.NdJ("click", function () {
                    return v.toggle();
                  }),
                  p._uU(7),
                  p.qZA()()()),
                  2 & h &&
                    (p.xp6(1),
                    p.ekj("sidenav", v.isExpanded),
                    p.xp6(1),
                    p.Q6J("ngIf", !v.activeMenu),
                    p.xp6(1),
                    p.Q6J("ngIf", v.activeMenu),
                    p.xp6(1),
                    p.Q6J("ngIf", v.activeSubMenu),
                    p.xp6(3),
                    p.hij(
                      " ",
                      v.isExpanded
                        ? "keyboard_arrow_left"
                        : "keyboard_arrow_right",
                      " ",
                    ));
              },
              dependencies: [C.sg, C.O5, gi.Od, li.i$, li.Tg, ii.Hw, fi.gM],
              styles: [
                ".sidenav[_ngcontent-%COMP%]{width:240px;height:auto;padding-top:20px;display:flex;flex-direction:column;overflow-x:auto;overflow-y:auto}.toggle[_ngcontent-%COMP%]{width:auto;height:100%;display:flex;justify-content:flex-end}.toggle[_ngcontent-%COMP%]:hover{cursor:pointer}.toggle_icon[_ngcontent-%COMP%]{z-index:999;right:0;height:24px;width:24px;background:#464141;border-radius:50%}.nav[_ngcontent-%COMP%]{justify-content:center}.nav[_ngcontent-%COMP%]   .active-link[_ngcontent-%COMP%]{background-color:#000;border-left:solid 3px #ffffff}.nav[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%], .nav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{border:none;box-sizing:border-box;text-decoration:none}.nav[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#000}.nav[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:#fff;height:24px;width:24px}",
              ],
            }));
          }
          return d;
        })(),
        ct = (() => {
          class d {
            constructor() {
              (this.isExpanded = !0), (this.route = "");
            }
            toggleMenu() {
              this.isExpanded = !this.isExpanded;
            }
            handleNavigation(r) {
              this.route = r;
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)();
            });
            static #e = (this.ɵcmp = p.Xpm({
              type: d,
              selectors: [["app-container"]],
              inputs: { route: "route" },
              decls: 6,
              vars: 5,
              consts: [
                ["autosize", "", 1, "sidenav-container"],
                [
                  "fixedInViewport",
                  "true",
                  "mode",
                  "side",
                  1,
                  "sidenav",
                  3,
                  "opened",
                ],
                ["sidenav", ""],
                [3, "isExpanded", "toggleMenu"],
                [1, "sidenav-content"],
                [3, "routerLink"],
              ],
              template: function (h, v) {
                1 & h &&
                  (p.TgZ(0, "mat-sidenav-container", 0)(1, "mat-sidenav", 1, 2)(
                    3,
                    "app-sidenav",
                    3,
                  ),
                  p.NdJ("toggleMenu", function () {
                    return v.toggleMenu();
                  }),
                  p.qZA()(),
                  p.TgZ(4, "mat-sidenav-content", 4),
                  p._UZ(5, "router-outlet", 5),
                  p.qZA()()),
                  2 & h &&
                    (p.xp6(1),
                    p.Udp("margin-left", v.isExpanded ? 0 : 80, "px"),
                    p.Q6J("opened", v.isExpanded),
                    p.xp6(2),
                    p.Q6J("isExpanded", v.isExpanded),
                    p.xp6(2),
                    p.s9C("routerLink", v.route));
              },
              dependencies: [gi.lC, gi.rH, Vt, re, we, j],
              styles: [
                ".sidenav-container[_ngcontent-%COMP%]{height:100vh;position:relative}mat-sidenav-content[_ngcontent-%COMP%]{margin-left:80px;z-index:10}mat-sidenav[_ngcontent-%COMP%]{width:auto;z-index:100;box-shadow:#66a0ff26 2.4px 2.4px 3.2px;border:none}",
              ],
            }));
          }
          return d;
        })();
      function ue(d, n) {
        if ((1 & d && p._UZ(0, "app-container", 1), 2 & d)) {
          const r = p.oxw();
          p.Q6J("route", r.route);
        }
      }
      let Wt = (() => {
        class d {
          constructor(r, h) {
            (this.authService = r),
              (this.router = h),
              (this.title = "Nufacturing"),
              (this.route = "quotes"),
              (this.isLoggedIn = !1);
          }
          ngOnInit() {
            this.loginStatusSubscription =
              this.authService.isLoggedIn.subscribe((r) => {
                (this.isLoggedIn = r),
                  this.router.navigate(
                    this.isLoggedIn ? ["/dashboard"] : ["/login"],
                  );
              });
          }
          ngOnDestroy() {
            this.loginStatusSubscription &&
              this.loginStatusSubscription.unsubscribe();
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(p.Y36(Xi.e), p.Y36(gi.F0));
          });
          static #e = (this.ɵcmp = p.Xpm({
            type: d,
            selectors: [["app-root"]],
            decls: 2,
            vars: 1,
            consts: [
              [3, "route", 4, "ngIf"],
              [3, "route"],
            ],
            template: function (h, v) {
              1 & h &&
                (p.YNc(0, ue, 1, 1, "app-container", 0),
                p._UZ(1, "router-outlet")),
                2 & h && p.Q6J("ngIf", v.isLoggedIn);
            },
            dependencies: [C.O5, gi.lC, ct],
          }));
        }
        return d;
      })();
      function It(d) {
        return new p.vHH(3e3, !1);
      }
      function ir(d) {
        switch (d.length) {
          case 0:
            return new _t.ZN();
          case 1:
            return d[0];
          default:
            return new _t.ZE(d);
        }
      }
      function Zr(d, n, r = new Map(), h = new Map()) {
        const v = [],
          M = [];
        let O = -1,
          V = null;
        if (
          (n.forEach((W) => {
            const et = W.get("offset"),
              At = et == O,
              zt = (At && V) || new Map();
            W.forEach((Qt, ge) => {
              let je = ge,
                Ye = Qt;
              if ("offset" !== ge)
                switch (((je = d.normalizePropertyName(je, v)), Ye)) {
                  case _t.k1:
                    Ye = r.get(ge);
                    break;
                  case _t.l3:
                    Ye = h.get(ge);
                    break;
                  default:
                    Ye = d.normalizeStyleValue(ge, je, Ye, v);
                }
              zt.set(je, Ye);
            }),
              At || M.push(zt),
              (V = zt),
              (O = et);
          }),
          v.length)
        )
          throw (function An(d) {
            return new p.vHH(3502, !1);
          })();
        return M;
      }
      function _s(d, n, r, h) {
        switch (n) {
          case "start":
            d.onStart(() => h(r && ro(r, "start", d)));
            break;
          case "done":
            d.onDone(() => h(r && ro(r, "done", d)));
            break;
          case "destroy":
            d.onDestroy(() => h(r && ro(r, "destroy", d)));
        }
      }
      function ro(d, n, r) {
        const M = ss(
            d.element,
            d.triggerName,
            d.fromState,
            d.toState,
            n || d.phaseName,
            r.totalTime ?? d.totalTime,
            !!r.disabled,
          ),
          O = d._data;
        return null != O && (M._data = O), M;
      }
      function ss(d, n, r, h, v = "", M = 0, O) {
        return {
          element: d,
          triggerName: n,
          fromState: r,
          toState: h,
          phaseName: v,
          totalTime: M,
          disabled: !!O,
        };
      }
      function Jn(d, n, r) {
        let h = d.get(n);
        return h || d.set(n, (h = r)), h;
      }
      function Dt(d) {
        const n = d.indexOf(":");
        return [d.substring(1, n), d.slice(n + 1)];
      }
      const Pe = (() =>
        typeof document > "u" ? null : document.documentElement)();
      function he(d) {
        const n = d.parentNode || d.host || null;
        return n === Pe ? null : n;
      }
      let Li = null,
        nn = !1;
      function un(d, n) {
        for (; n; ) {
          if (n === d) return !0;
          n = he(n);
        }
        return !1;
      }
      function Xn(d, n, r) {
        if (r) return Array.from(d.querySelectorAll(n));
        const h = d.querySelector(n);
        return h ? [h] : [];
      }
      let _o = (() => {
          class d {
            validateStyleProperty(r) {
              return (function $n(d) {
                Li ||
                  ((Li =
                    (function on() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (nn = !!Li.style && "WebkitAppearance" in Li.style));
                let n = !0;
                return (
                  Li.style &&
                    !(function Xe(d) {
                      return "ebkit" == d.substring(1, 6);
                    })(d) &&
                    ((n = d in Li.style),
                    !n &&
                      nn &&
                      (n =
                        "Webkit" + d.charAt(0).toUpperCase() + d.slice(1) in
                        Li.style)),
                  n
                );
              })(r);
            }
            matchesElement(r, h) {
              return !1;
            }
            containsElement(r, h) {
              return un(r, h);
            }
            getParentElement(r) {
              return he(r);
            }
            query(r, h, v) {
              return Xn(r, h, v);
            }
            computeStyle(r, h, v) {
              return v || "";
            }
            animate(r, h, v, M, O, V = [], W) {
              return new _t.ZN(v, M);
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)();
            });
            static #e = (this.ɵprov = p.Yz7({ token: d, factory: d.ɵfac }));
          }
          return d;
        })(),
        Oo = (() => {
          class d {
            static #t = (this.NOOP = new _o());
          }
          return d;
        })();
      const Rr = 1e3,
        Vo = "ng-enter",
        On = "ng-leave",
        Fi = "ng-trigger",
        sn = ".ng-trigger",
        In = "ng-animating",
        vo = ".ng-animating";
      function zo(d) {
        if ("number" == typeof d) return d;
        const n = d.match(/^(-?[\.\d]+)(m?s)/);
        return !n || n.length < 2 ? 0 : eo(parseFloat(n[1]), n[2]);
      }
      function eo(d, n) {
        return "s" === n ? d * Rr : d;
      }
      function xo(d, n, r) {
        return d.hasOwnProperty("duration")
          ? d
          : (function Vn(d, n, r) {
              let v,
                M = 0,
                O = "";
              if ("string" == typeof d) {
                const V = d.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i,
                );
                if (null === V)
                  return n.push(It()), { duration: 0, delay: 0, easing: "" };
                v = eo(parseFloat(V[1]), V[2]);
                const W = V[3];
                null != W && (M = eo(parseFloat(W), V[4]));
                const et = V[5];
                et && (O = et);
              } else v = d;
              if (!r) {
                let V = !1,
                  W = n.length;
                v < 0 &&
                  (n.push(
                    (function Yt() {
                      return new p.vHH(3100, !1);
                    })(),
                  ),
                  (V = !0)),
                  M < 0 &&
                    (n.push(
                      (function Ae() {
                        return new p.vHH(3101, !1);
                      })(),
                    ),
                    (V = !0)),
                  V && n.splice(W, 0, It());
              }
              return { duration: v, delay: M, easing: O };
            })(d, n, r);
      }
      function wo(d, n = {}) {
        return (
          Object.keys(d).forEach((r) => {
            n[r] = d[r];
          }),
          n
        );
      }
      function Yr(d) {
        const n = new Map();
        return (
          Object.keys(d).forEach((r) => {
            n.set(r, d[r]);
          }),
          n
        );
      }
      function Zo(d, n = new Map(), r) {
        if (r) for (let [h, v] of r) n.set(h, v);
        for (let [h, v] of d) n.set(h, v);
        return n;
      }
      function bo(d, n, r) {
        n.forEach((h, v) => {
          const M = Ko(v);
          r && !r.has(v) && r.set(v, d.style[M]), (d.style[M] = h);
        });
      }
      function xn(d, n) {
        n.forEach((r, h) => {
          const v = Ko(h);
          d.style[v] = "";
        });
      }
      function Wn(d) {
        return Array.isArray(d) ? (1 == d.length ? d[0] : (0, _t.vP)(d)) : d;
      }
      const Co = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function $r(d) {
        let n = [];
        if ("string" == typeof d) {
          let r;
          for (; (r = Co.exec(d)); ) n.push(r[1]);
          Co.lastIndex = 0;
        }
        return n;
      }
      function or(d, n, r) {
        const h = d.toString(),
          v = h.replace(Co, (M, O) => {
            let V = n[O];
            return (
              null == V &&
                (r.push(
                  (function pe(d) {
                    return new p.vHH(3003, !1);
                  })(),
                ),
                (V = "")),
              V.toString()
            );
          });
        return v == h ? d : v;
      }
      function Qo(d) {
        const n = [];
        let r = d.next();
        for (; !r.done; ) n.push(r.value), (r = d.next());
        return n;
      }
      const Io = /-+([a-z0-9])/g;
      function Ko(d) {
        return d.replace(Io, (...n) => n[1].toUpperCase());
      }
      function so(d, n, r) {
        switch (n.type) {
          case 7:
            return d.visitTrigger(n, r);
          case 0:
            return d.visitState(n, r);
          case 1:
            return d.visitTransition(n, r);
          case 2:
            return d.visitSequence(n, r);
          case 3:
            return d.visitGroup(n, r);
          case 4:
            return d.visitAnimate(n, r);
          case 5:
            return d.visitKeyframes(n, r);
          case 6:
            return d.visitStyle(n, r);
          case 8:
            return d.visitReference(n, r);
          case 9:
            return d.visitAnimateChild(n, r);
          case 10:
            return d.visitAnimateRef(n, r);
          case 11:
            return d.visitQuery(n, r);
          case 12:
            return d.visitStagger(n, r);
          default:
            throw (function ne(d) {
              return new p.vHH(3004, !1);
            })();
        }
      }
      function Do(d, n) {
        return window.getComputedStyle(d)[n];
      }
      const to = "*";
      function Eo(d, n) {
        const r = [];
        return (
          "string" == typeof d
            ? d.split(/\s*,\s*/).forEach((h) =>
                (function Us(d, n, r) {
                  if (":" == d[0]) {
                    const W = (function rr(d, n) {
                      switch (d) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (r, h) => parseFloat(h) > parseFloat(r);
                        case ":decrement":
                          return (r, h) => parseFloat(h) < parseFloat(r);
                        default:
                          return (
                            n.push(
                              (function ln(d) {
                                return new p.vHH(3016, !1);
                              })(),
                            ),
                            "* => *"
                          );
                      }
                    })(d, r);
                    if ("function" == typeof W) return void n.push(W);
                    d = W;
                  }
                  const h = d.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == h || h.length < 4)
                    return (
                      r.push(
                        (function Yi(d) {
                          return new p.vHH(3015, !1);
                        })(),
                      ),
                      n
                    );
                  const v = h[1],
                    M = h[2],
                    O = h[3];
                  n.push(js(v, O));
                  "<" == M[0] && !(v == to && O == to) && n.push(js(O, v));
                })(h, r, n),
              )
            : r.push(d),
          r
        );
      }
      const sr = new Set(["true", "1"]),
        Ro = new Set(["false", "0"]);
      function js(d, n) {
        const r = sr.has(d) || Ro.has(d),
          h = sr.has(n) || Ro.has(n);
        return (v, M) => {
          let O = d == to || d == v,
            V = n == to || n == M;
          return (
            !O && r && "boolean" == typeof v && (O = v ? sr.has(d) : Ro.has(d)),
            !V && h && "boolean" == typeof M && (V = M ? sr.has(n) : Ro.has(n)),
            O && V
          );
        };
      }
      const vs = new RegExp("s*:selfs*,?", "g");
      function ka(d, n, r, h) {
        return new J(d).build(n, r, h);
      }
      class J {
        constructor(n) {
          this._driver = n;
        }
        build(n, r, h) {
          const v = new Et(r);
          return this._resetContextStyleTimingState(v), so(this, Wn(n), v);
        }
        _resetContextStyleTimingState(n) {
          (n.currentQuerySelector = ""),
            (n.collectedStyles = new Map()),
            n.collectedStyles.set("", new Map()),
            (n.currentTime = 0);
        }
        visitTrigger(n, r) {
          let h = (r.queryCount = 0),
            v = (r.depCount = 0);
          const M = [],
            O = [];
          return (
            "@" == n.name.charAt(0) &&
              r.errors.push(
                (function me() {
                  return new p.vHH(3006, !1);
                })(),
              ),
            n.definitions.forEach((V) => {
              if ((this._resetContextStyleTimingState(r), 0 == V.type)) {
                const W = V,
                  et = W.name;
                et
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((At) => {
                    (W.name = At), M.push(this.visitState(W, r));
                  }),
                  (W.name = et);
              } else if (1 == V.type) {
                const W = this.visitTransition(V, r);
                (h += W.queryCount), (v += W.depCount), O.push(W);
              } else
                r.errors.push(
                  (function Bt() {
                    return new p.vHH(3007, !1);
                  })(),
                );
            }),
            {
              type: 7,
              name: n.name,
              states: M,
              transitions: O,
              queryCount: h,
              depCount: v,
              options: null,
            }
          );
        }
        visitState(n, r) {
          const h = this.visitStyle(n.styles, r),
            v = (n.options && n.options.params) || null;
          if (h.containsDynamicStyles) {
            const M = new Set(),
              O = v || {};
            h.styles.forEach((V) => {
              V instanceof Map &&
                V.forEach((W) => {
                  $r(W).forEach((et) => {
                    O.hasOwnProperty(et) || M.add(et);
                  });
                });
            }),
              M.size &&
                (Qo(M.values()),
                r.errors.push(
                  (function Te(d, n) {
                    return new p.vHH(3008, !1);
                  })(),
                ));
          }
          return {
            type: 0,
            name: n.name,
            style: h,
            options: v ? { params: v } : null,
          };
        }
        visitTransition(n, r) {
          (r.queryCount = 0), (r.depCount = 0);
          const h = so(this, Wn(n.animation), r);
          return {
            type: 1,
            matchers: Eo(n.expr, r.errors),
            animation: h,
            queryCount: r.queryCount,
            depCount: r.depCount,
            options: hn(n.options),
          };
        }
        visitSequence(n, r) {
          return {
            type: 2,
            steps: n.steps.map((h) => so(this, h, r)),
            options: hn(n.options),
          };
        }
        visitGroup(n, r) {
          const h = r.currentTime;
          let v = 0;
          const M = n.steps.map((O) => {
            r.currentTime = h;
            const V = so(this, O, r);
            return (v = Math.max(v, r.currentTime)), V;
          });
          return (
            (r.currentTime = v), { type: 3, steps: M, options: hn(n.options) }
          );
        }
        visitAnimate(n, r) {
          const h = (function Zi(d, n) {
            if (d.hasOwnProperty("duration")) return d;
            if ("number" == typeof d) return Po(xo(d, n).duration, 0, "");
            const r = d;
            if (
              r
                .split(/\s+/)
                .some((M) => "{" == M.charAt(0) && "{" == M.charAt(1))
            ) {
              const M = Po(0, 0, "");
              return (M.dynamic = !0), (M.strValue = r), M;
            }
            const v = xo(r, n);
            return Po(v.duration, v.delay, v.easing);
          })(n.timings, r.errors);
          r.currentAnimateTimings = h;
          let v,
            M = n.styles ? n.styles : (0, _t.oB)({});
          if (5 == M.type) v = this.visitKeyframes(M, r);
          else {
            let O = n.styles,
              V = !1;
            if (!O) {
              V = !0;
              const et = {};
              h.easing && (et.easing = h.easing), (O = (0, _t.oB)(et));
            }
            r.currentTime += h.duration + h.delay;
            const W = this.visitStyle(O, r);
            (W.isEmptyStep = V), (v = W);
          }
          return (
            (r.currentAnimateTimings = null),
            { type: 4, timings: h, style: v, options: null }
          );
        }
        visitStyle(n, r) {
          const h = this._makeStyleAst(n, r);
          return this._validateStyleAst(h, r), h;
        }
        _makeStyleAst(n, r) {
          const h = [],
            v = Array.isArray(n.styles) ? n.styles : [n.styles];
          for (let V of v)
            "string" == typeof V
              ? V === _t.l3
                ? h.push(V)
                : r.errors.push(new p.vHH(3002, !1))
              : h.push(Yr(V));
          let M = !1,
            O = null;
          return (
            h.forEach((V) => {
              if (
                V instanceof Map &&
                (V.has("easing") && ((O = V.get("easing")), V.delete("easing")),
                !M)
              )
                for (let W of V.values())
                  if (W.toString().indexOf("{{") >= 0) {
                    M = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: h,
              easing: O,
              offset: n.offset,
              containsDynamicStyles: M,
              options: null,
            }
          );
        }
        _validateStyleAst(n, r) {
          const h = r.currentAnimateTimings;
          let v = r.currentTime,
            M = r.currentTime;
          h && M > 0 && (M -= h.duration + h.delay),
            n.styles.forEach((O) => {
              "string" != typeof O &&
                O.forEach((V, W) => {
                  const et = r.collectedStyles.get(r.currentQuerySelector),
                    At = et.get(W);
                  let zt = !0;
                  At &&
                    (M != v &&
                      M >= At.startTime &&
                      v <= At.endTime &&
                      (r.errors.push(
                        (function Ze(d, n, r, h, v) {
                          return new p.vHH(3010, !1);
                        })(),
                      ),
                      (zt = !1)),
                    (M = At.startTime)),
                    zt && et.set(W, { startTime: M, endTime: v }),
                    r.options &&
                      (function jn(d, n, r) {
                        const h = n.params || {},
                          v = $r(d);
                        v.length &&
                          v.forEach((M) => {
                            h.hasOwnProperty(M) ||
                              r.push(
                                (function oi(d) {
                                  return new p.vHH(3001, !1);
                                })(),
                              );
                          });
                      })(V, r.options, r.errors);
                });
            });
        }
        visitKeyframes(n, r) {
          const h = { type: 5, styles: [], options: null };
          if (!r.currentAnimateTimings)
            return (
              r.errors.push(
                (function ft() {
                  return new p.vHH(3011, !1);
                })(),
              ),
              h
            );
          let M = 0;
          const O = [];
          let V = !1,
            W = !1,
            et = 0;
          const At = n.steps.map((ti) => {
            const Ci = this._makeStyleAst(ti, r);
            let di =
                null != Ci.offset
                  ? Ci.offset
                  : (function _e(d) {
                      if ("string" == typeof d) return null;
                      let n = null;
                      if (Array.isArray(d))
                        d.forEach((r) => {
                          if (r instanceof Map && r.has("offset")) {
                            const h = r;
                            (n = parseFloat(h.get("offset"))),
                              h.delete("offset");
                          }
                        });
                      else if (d instanceof Map && d.has("offset")) {
                        const r = d;
                        (n = parseFloat(r.get("offset"))), r.delete("offset");
                      }
                      return n;
                    })(Ci.styles),
              Pi = 0;
            return (
              null != di && (M++, (Pi = Ci.offset = di)),
              (W = W || Pi < 0 || Pi > 1),
              (V = V || Pi < et),
              (et = Pi),
              O.push(Pi),
              Ci
            );
          });
          W &&
            r.errors.push(
              (function Gt() {
                return new p.vHH(3012, !1);
              })(),
            ),
            V &&
              r.errors.push(
                (function Me() {
                  return new p.vHH(3200, !1);
                })(),
              );
          const zt = n.steps.length;
          let Qt = 0;
          M > 0 && M < zt
            ? r.errors.push(
                (function si() {
                  return new p.vHH(3202, !1);
                })(),
              )
            : 0 == M && (Qt = 1 / (zt - 1));
          const ge = zt - 1,
            je = r.currentTime,
            Ye = r.currentAnimateTimings,
            $e = Ye.duration;
          return (
            At.forEach((ti, Ci) => {
              const di = Qt > 0 ? (Ci == ge ? 1 : Qt * Ci) : O[Ci],
                Pi = di * $e;
              (r.currentTime = je + Ye.delay + Pi),
                (Ye.duration = Pi),
                this._validateStyleAst(ti, r),
                (ti.offset = di),
                h.styles.push(ti);
            }),
            h
          );
        }
        visitReference(n, r) {
          return {
            type: 8,
            animation: so(this, Wn(n.animation), r),
            options: hn(n.options),
          };
        }
        visitAnimateChild(n, r) {
          return r.depCount++, { type: 9, options: hn(n.options) };
        }
        visitAnimateRef(n, r) {
          return {
            type: 10,
            animation: this.visitReference(n.animation, r),
            options: hn(n.options),
          };
        }
        visitQuery(n, r) {
          const h = r.currentQuerySelector,
            v = n.options || {};
          r.queryCount++, (r.currentQuery = n);
          const [M, O] = (function st(d) {
            const n = !!d.split(/\s*,\s*/).find((r) => ":self" == r);
            return (
              n && (d = d.replace(vs, "")),
              (d = d
                .replace(/@\*/g, sn)
                .replace(/@\w+/g, (r) => sn + "-" + r.slice(1))
                .replace(/:animating/g, vo)),
              [d, n]
            );
          })(n.selector);
          (r.currentQuerySelector = h.length ? h + " " + M : M),
            Jn(r.collectedStyles, r.currentQuerySelector, new Map());
          const V = so(this, Wn(n.animation), r);
          return (
            (r.currentQuery = null),
            (r.currentQuerySelector = h),
            {
              type: 11,
              selector: M,
              limit: v.limit || 0,
              optional: !!v.optional,
              includeSelf: O,
              animation: V,
              originalSelector: n.selector,
              options: hn(n.options),
            }
          );
        }
        visitStagger(n, r) {
          r.currentQuery ||
            r.errors.push(
              (function Ei() {
                return new p.vHH(3013, !1);
              })(),
            );
          const h =
            "full" === n.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : xo(n.timings, r.errors, !0);
          return {
            type: 12,
            animation: so(this, Wn(n.animation), r),
            timings: h,
            options: null,
          };
        }
      }
      class Et {
        constructor(n) {
          (this.errors = n),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function hn(d) {
        return (
          d
            ? (d = wo(d)).params &&
              (d.params = (function z(d) {
                return d ? wo(d) : null;
              })(d.params))
            : (d = {}),
          d
        );
      }
      function Po(d, n, r) {
        return { duration: d, delay: n, easing: r };
      }
      function Jo(d, n, r, h, v, M, O = null, V = !1) {
        return {
          type: 1,
          element: d,
          keyframes: n,
          preStyleProps: r,
          postStyleProps: h,
          duration: v,
          delay: M,
          totalTime: v + M,
          easing: O,
          subTimeline: V,
        };
      }
      class bs {
        constructor() {
          this._map = new Map();
        }
        get(n) {
          return this._map.get(n) || [];
        }
        append(n, r) {
          let h = this._map.get(n);
          h || this._map.set(n, (h = [])), h.push(...r);
        }
        has(n) {
          return this._map.has(n);
        }
        clear() {
          this._map.clear();
        }
      }
      const Dc = new RegExp(":enter", "g"),
        ls = new RegExp(":leave", "g");
      function jl(d, n, r, h, v, M = new Map(), O = new Map(), V, W, et = []) {
        return new ua().buildKeyframes(d, n, r, h, v, M, O, V, W, et);
      }
      class ua {
        buildKeyframes(n, r, h, v, M, O, V, W, et, At = []) {
          et = et || new bs();
          const zt = new xr(n, r, et, v, M, At, []);
          zt.options = W;
          const Qt = W.delay ? zo(W.delay) : 0;
          zt.currentTimeline.delayNextStep(Qt),
            zt.currentTimeline.setStyles([O], null, zt.errors, W),
            so(this, h, zt);
          const ge = zt.timelines.filter((je) => je.containsAnimation());
          if (ge.length && V.size) {
            let je;
            for (let Ye = ge.length - 1; Ye >= 0; Ye--) {
              const $e = ge[Ye];
              if ($e.element === r) {
                je = $e;
                break;
              }
            }
            je &&
              !je.allowOnlyTimelineStyles() &&
              je.setStyles([V], null, zt.errors, W);
          }
          return ge.length
            ? ge.map((je) => je.buildKeyframes())
            : [Jo(r, [], [], [], 0, Qt, "", !1)];
        }
        visitTrigger(n, r) {}
        visitState(n, r) {}
        visitTransition(n, r) {}
        visitAnimateChild(n, r) {
          const h = r.subInstructions.get(r.element);
          if (h) {
            const v = r.createSubContext(n.options),
              M = r.currentTimeline.currentTime,
              O = this._visitSubInstructions(h, v, v.options);
            M != O && r.transformIntoNewTimeline(O);
          }
          r.previousNode = n;
        }
        visitAnimateRef(n, r) {
          const h = r.createSubContext(n.options);
          h.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [n.options, n.animation.options],
              r,
              h,
            ),
            this.visitReference(n.animation, h),
            r.transformIntoNewTimeline(h.currentTimeline.currentTime),
            (r.previousNode = n);
        }
        _applyAnimationRefDelays(n, r, h) {
          for (const v of n) {
            const M = v?.delay;
            if (M) {
              const O =
                "number" == typeof M ? M : zo(or(M, v?.params ?? {}, r.errors));
              h.delayNextStep(O);
            }
          }
        }
        _visitSubInstructions(n, r, h) {
          let M = r.currentTimeline.currentTime;
          const O = null != h.duration ? zo(h.duration) : null,
            V = null != h.delay ? zo(h.delay) : null;
          return (
            0 !== O &&
              n.forEach((W) => {
                const et = r.appendInstructionToTimeline(W, O, V);
                M = Math.max(M, et.duration + et.delay);
              }),
            M
          );
        }
        visitReference(n, r) {
          r.updateOptions(n.options, !0),
            so(this, n.animation, r),
            (r.previousNode = n);
        }
        visitSequence(n, r) {
          const h = r.subContextCount;
          let v = r;
          const M = n.options;
          if (
            M &&
            (M.params || M.delay) &&
            ((v = r.createSubContext(M)),
            v.transformIntoNewTimeline(),
            null != M.delay)
          ) {
            6 == v.previousNode.type &&
              (v.currentTimeline.snapshotCurrentStyles(),
              (v.previousNode = Ta));
            const O = zo(M.delay);
            v.delayNextStep(O);
          }
          n.steps.length &&
            (n.steps.forEach((O) => so(this, O, v)),
            v.currentTimeline.applyStylesToKeyframe(),
            v.subContextCount > h && v.transformIntoNewTimeline()),
            (r.previousNode = n);
        }
        visitGroup(n, r) {
          const h = [];
          let v = r.currentTimeline.currentTime;
          const M = n.options && n.options.delay ? zo(n.options.delay) : 0;
          n.steps.forEach((O) => {
            const V = r.createSubContext(n.options);
            M && V.delayNextStep(M),
              so(this, O, V),
              (v = Math.max(v, V.currentTimeline.currentTime)),
              h.push(V.currentTimeline);
          }),
            h.forEach((O) => r.currentTimeline.mergeTimelineCollectedStyles(O)),
            r.transformIntoNewTimeline(v),
            (r.previousNode = n);
        }
        _visitTiming(n, r) {
          if (n.dynamic) {
            const h = n.strValue;
            return xo(r.params ? or(h, r.params, r.errors) : h, r.errors);
          }
          return { duration: n.duration, delay: n.delay, easing: n.easing };
        }
        visitAnimate(n, r) {
          const h = (r.currentAnimateTimings = this._visitTiming(n.timings, r)),
            v = r.currentTimeline;
          h.delay && (r.incrementTime(h.delay), v.snapshotCurrentStyles());
          const M = n.style;
          5 == M.type
            ? this.visitKeyframes(M, r)
            : (r.incrementTime(h.duration),
              this.visitStyle(M, r),
              v.applyStylesToKeyframe()),
            (r.currentAnimateTimings = null),
            (r.previousNode = n);
        }
        visitStyle(n, r) {
          const h = r.currentTimeline,
            v = r.currentAnimateTimings;
          !v && h.hasCurrentStyleProperties() && h.forwardFrame();
          const M = (v && v.easing) || n.easing;
          n.isEmptyStep
            ? h.applyEmptyStep(M)
            : h.setStyles(n.styles, M, r.errors, r.options),
            (r.previousNode = n);
        }
        visitKeyframes(n, r) {
          const h = r.currentAnimateTimings,
            v = r.currentTimeline.duration,
            M = h.duration,
            V = r.createSubContext().currentTimeline;
          (V.easing = h.easing),
            n.styles.forEach((W) => {
              V.forwardTime((W.offset || 0) * M),
                V.setStyles(W.styles, W.easing, r.errors, r.options),
                V.applyStylesToKeyframe();
            }),
            r.currentTimeline.mergeTimelineCollectedStyles(V),
            r.transformIntoNewTimeline(v + M),
            (r.previousNode = n);
        }
        visitQuery(n, r) {
          const h = r.currentTimeline.currentTime,
            v = n.options || {},
            M = v.delay ? zo(v.delay) : 0;
          M &&
            (6 === r.previousNode.type ||
              (0 == h && r.currentTimeline.hasCurrentStyleProperties())) &&
            (r.currentTimeline.snapshotCurrentStyles(), (r.previousNode = Ta));
          let O = h;
          const V = r.invokeQuery(
            n.selector,
            n.originalSelector,
            n.limit,
            n.includeSelf,
            !!v.optional,
            r.errors,
          );
          r.currentQueryTotal = V.length;
          let W = null;
          V.forEach((et, At) => {
            r.currentQueryIndex = At;
            const zt = r.createSubContext(n.options, et);
            M && zt.delayNextStep(M),
              et === r.element && (W = zt.currentTimeline),
              so(this, n.animation, zt),
              zt.currentTimeline.applyStylesToKeyframe(),
              (O = Math.max(O, zt.currentTimeline.currentTime));
          }),
            (r.currentQueryIndex = 0),
            (r.currentQueryTotal = 0),
            r.transformIntoNewTimeline(O),
            W &&
              (r.currentTimeline.mergeTimelineCollectedStyles(W),
              r.currentTimeline.snapshotCurrentStyles()),
            (r.previousNode = n);
        }
        visitStagger(n, r) {
          const h = r.parentContext,
            v = r.currentTimeline,
            M = n.timings,
            O = Math.abs(M.duration),
            V = O * (r.currentQueryTotal - 1);
          let W = O * r.currentQueryIndex;
          switch (M.duration < 0 ? "reverse" : M.easing) {
            case "reverse":
              W = V - W;
              break;
            case "full":
              W = h.currentStaggerTime;
          }
          const At = r.currentTimeline;
          W && At.delayNextStep(W);
          const zt = At.currentTime;
          so(this, n.animation, r),
            (r.previousNode = n),
            (h.currentStaggerTime =
              v.currentTime - zt + (v.startTime - h.currentTimeline.startTime));
        }
      }
      const Ta = {};
      class xr {
        constructor(n, r, h, v, M, O, V, W) {
          (this._driver = n),
            (this.element = r),
            (this.subInstructions = h),
            (this._enterClassName = v),
            (this._leaveClassName = M),
            (this.errors = O),
            (this.timelines = V),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Ta),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = W || new ar(this._driver, r, 0)),
            V.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(n, r) {
          if (!n) return;
          const h = n;
          let v = this.options;
          null != h.duration && (v.duration = zo(h.duration)),
            null != h.delay && (v.delay = zo(h.delay));
          const M = h.params;
          if (M) {
            let O = v.params;
            O || (O = this.options.params = {}),
              Object.keys(M).forEach((V) => {
                (!r || !O.hasOwnProperty(V)) &&
                  (O[V] = or(M[V], O, this.errors));
              });
          }
        }
        _copyOptions() {
          const n = {};
          if (this.options) {
            const r = this.options.params;
            if (r) {
              const h = (n.params = {});
              Object.keys(r).forEach((v) => {
                h[v] = r[v];
              });
            }
          }
          return n;
        }
        createSubContext(n = null, r, h) {
          const v = r || this.element,
            M = new xr(
              this._driver,
              v,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(v, h || 0),
            );
          return (
            (M.previousNode = this.previousNode),
            (M.currentAnimateTimings = this.currentAnimateTimings),
            (M.options = this._copyOptions()),
            M.updateOptions(n),
            (M.currentQueryIndex = this.currentQueryIndex),
            (M.currentQueryTotal = this.currentQueryTotal),
            (M.parentContext = this),
            this.subContextCount++,
            M
          );
        }
        transformIntoNewTimeline(n) {
          return (
            (this.previousNode = Ta),
            (this.currentTimeline = this.currentTimeline.fork(this.element, n)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(n, r, h) {
          const v = {
              duration: r ?? n.duration,
              delay: this.currentTimeline.currentTime + (h ?? 0) + n.delay,
              easing: "",
            },
            M = new Wr(
              this._driver,
              n.element,
              n.keyframes,
              n.preStyleProps,
              n.postStyleProps,
              v,
              n.stretchStartingKeyframe,
            );
          return this.timelines.push(M), v;
        }
        incrementTime(n) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + n);
        }
        delayNextStep(n) {
          n > 0 && this.currentTimeline.delayNextStep(n);
        }
        invokeQuery(n, r, h, v, M, O) {
          let V = [];
          if ((v && V.push(this.element), n.length > 0)) {
            n = (n = n.replace(Dc, "." + this._enterClassName)).replace(
              ls,
              "." + this._leaveClassName,
            );
            let et = this._driver.query(this.element, n, 1 != h);
            0 !== h &&
              (et =
                h < 0 ? et.slice(et.length + h, et.length) : et.slice(0, h)),
              V.push(...et);
          }
          return (
            !M &&
              0 == V.length &&
              O.push(
                (function Hi(d) {
                  return new p.vHH(3014, !1);
                })(),
              ),
            V
          );
        }
      }
      class ar {
        constructor(n, r, h, v) {
          (this._driver = n),
            (this.element = r),
            (this.startTime = h),
            (this._elementTimelineStylesLookup = v),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(r)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                r,
                this._localTimelineStyles,
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(n) {
          const r = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || r
            ? (this.forwardTime(this.currentTime + n),
              r && this.snapshotCurrentStyles())
            : (this.startTime += n);
        }
        fork(n, r) {
          return (
            this.applyStylesToKeyframe(),
            new ar(
              this._driver,
              n,
              r || this.currentTime,
              this._elementTimelineStylesLookup,
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(n) {
          this.applyStylesToKeyframe(),
            (this.duration = n),
            this._loadKeyframe();
        }
        _updateStyle(n, r) {
          this._localTimelineStyles.set(n, r),
            this._globalTimelineStyles.set(n, r),
            this._styleSummary.set(n, { time: this.currentTime, value: r });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(n) {
          n && this._previousKeyframe.set("easing", n);
          for (let [r, h] of this._globalTimelineStyles)
            this._backFill.set(r, h || _t.l3),
              this._currentKeyframe.set(r, _t.l3);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(n, r, h, v) {
          r && this._previousKeyframe.set("easing", r);
          const M = (v && v.params) || {},
            O = (function ao(d, n) {
              const r = new Map();
              let h;
              return (
                d.forEach((v) => {
                  if ("*" === v) {
                    h = h || n.keys();
                    for (let M of h) r.set(M, _t.l3);
                  } else Zo(v, r);
                }),
                r
              );
            })(n, this._globalTimelineStyles);
          for (let [V, W] of O) {
            const et = or(W, M, h);
            this._pendingStyles.set(V, et),
              this._localTimelineStyles.has(V) ||
                this._backFill.set(
                  V,
                  this._globalTimelineStyles.get(V) ?? _t.l3,
                ),
              this._updateStyle(V, et);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((n, r) => {
              this._currentKeyframe.set(r, n);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((n, r) => {
              this._currentKeyframe.has(r) || this._currentKeyframe.set(r, n);
            }));
        }
        snapshotCurrentStyles() {
          for (let [n, r] of this._localTimelineStyles)
            this._pendingStyles.set(n, r), this._updateStyle(n, r);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const n = [];
          for (let r in this._currentKeyframe) n.push(r);
          return n;
        }
        mergeTimelineCollectedStyles(n) {
          n._styleSummary.forEach((r, h) => {
            const v = this._styleSummary.get(h);
            (!v || r.time > v.time) && this._updateStyle(h, r.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const n = new Set(),
            r = new Set(),
            h = 1 === this._keyframes.size && 0 === this.duration;
          let v = [];
          this._keyframes.forEach((V, W) => {
            const et = Zo(V, new Map(), this._backFill);
            et.forEach((At, zt) => {
              At === _t.k1 ? n.add(zt) : At === _t.l3 && r.add(zt);
            }),
              h || et.set("offset", W / this.duration),
              v.push(et);
          });
          const M = n.size ? Qo(n.values()) : [],
            O = r.size ? Qo(r.values()) : [];
          if (h) {
            const V = v[0],
              W = new Map(V);
            V.set("offset", 0), W.set("offset", 1), (v = [V, W]);
          }
          return Jo(
            this.element,
            v,
            M,
            O,
            this.duration,
            this.startTime,
            this.easing,
            !1,
          );
        }
      }
      class Wr extends ar {
        constructor(n, r, h, v, M, O, V = !1) {
          super(n, r, O.delay),
            (this.keyframes = h),
            (this.preStyleProps = v),
            (this.postStyleProps = M),
            (this._stretchStartingKeyframe = V),
            (this.timings = {
              duration: O.duration,
              delay: O.delay,
              easing: O.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let n = this.keyframes,
            { delay: r, duration: h, easing: v } = this.timings;
          if (this._stretchStartingKeyframe && r) {
            const M = [],
              O = h + r,
              V = r / O,
              W = Zo(n[0]);
            W.set("offset", 0), M.push(W);
            const et = Zo(n[0]);
            et.set("offset", cs(V)), M.push(et);
            const At = n.length - 1;
            for (let zt = 1; zt <= At; zt++) {
              let Qt = Zo(n[zt]);
              const ge = Qt.get("offset");
              Qt.set("offset", cs((r + ge * h) / O)), M.push(Qt);
            }
            (h = O), (r = 0), (v = ""), (n = M);
          }
          return Jo(
            this.element,
            n,
            this.preStyleProps,
            this.postStyleProps,
            h,
            r,
            v,
            !0,
          );
        }
      }
      function cs(d, n = 3) {
        const r = Math.pow(10, n - 1);
        return Math.round(d * r) / r;
      }
      class Yo {}
      const ys = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class Zs extends Yo {
        normalizePropertyName(n, r) {
          return Ko(n);
        }
        normalizeStyleValue(n, r, h, v) {
          let M = "";
          const O = h.toString().trim();
          if (ys.has(r) && 0 !== h && "0" !== h)
            if ("number" == typeof h) M = "px";
            else {
              const V = h.match(/^[+-]?[\d\.]+([a-z]*)$/);
              V &&
                0 == V[1].length &&
                v.push(
                  (function tt(d, n) {
                    return new p.vHH(3005, !1);
                  })(),
                );
            }
          return O + M;
        }
      }
      function Ys(d, n, r, h, v, M, O, V, W, et, At, zt, Qt) {
        return {
          type: 0,
          element: d,
          triggerName: n,
          isRemovalTransition: v,
          fromState: r,
          fromStyles: M,
          toState: h,
          toStyles: O,
          timelines: V,
          queriedElements: W,
          preStyleProps: et,
          postStyleProps: At,
          totalTime: zt,
          errors: Qt,
        };
      }
      const ds = {};
      class ha {
        constructor(n, r, h) {
          (this._triggerName = n), (this.ast = r), (this._stateStyles = h);
        }
        match(n, r, h, v) {
          return (function Oa(d, n, r, h, v) {
            return d.some((M) => M(n, r, h, v));
          })(this.ast.matchers, n, r, h, v);
        }
        buildStyles(n, r, h) {
          let v = this._stateStyles.get("*");
          return (
            void 0 !== n && (v = this._stateStyles.get(n?.toString()) || v),
            v ? v.buildStyles(r, h) : new Map()
          );
        }
        build(n, r, h, v, M, O, V, W, et, At) {
          const zt = [],
            Qt = (this.ast.options && this.ast.options.params) || ds,
            je = this.buildStyles(h, (V && V.params) || ds, zt),
            Ye = (W && W.params) || ds,
            $e = this.buildStyles(v, Ye, zt),
            ti = new Set(),
            Ci = new Map(),
            di = new Map(),
            Pi = "void" === v,
            zi = { params: ol(Ye, Qt), delay: this.ast.options?.delay },
            Gi = At
              ? []
              : jl(n, r, this.ast.animation, M, O, je, $e, zi, et, zt);
          let Ki = 0;
          if (
            (Gi.forEach((kn) => {
              Ki = Math.max(kn.duration + kn.delay, Ki);
            }),
            zt.length)
          )
            return Ys(
              r,
              this._triggerName,
              h,
              v,
              Pi,
              je,
              $e,
              [],
              [],
              Ci,
              di,
              Ki,
              zt,
            );
          Gi.forEach((kn) => {
            const Yn = kn.element,
              la = Jn(Ci, Yn, new Set());
            kn.preStyleProps.forEach((po) => la.add(po));
            const ns = Jn(di, Yn, new Set());
            kn.postStyleProps.forEach((po) => ns.add(po)),
              Yn !== r && ti.add(Yn);
          });
          const fn = Qo(ti.values());
          return Ys(r, this._triggerName, h, v, Pi, je, $e, Gi, fn, Ci, di, Ki);
        }
      }
      function ol(d, n) {
        const r = wo(n);
        for (const h in d) d.hasOwnProperty(h) && null != d[h] && (r[h] = d[h]);
        return r;
      }
      class Gl {
        constructor(n, r, h) {
          (this.styles = n), (this.defaultParams = r), (this.normalizer = h);
        }
        buildStyles(n, r) {
          const h = new Map(),
            v = wo(this.defaultParams);
          return (
            Object.keys(n).forEach((M) => {
              const O = n[M];
              null !== O && (v[M] = O);
            }),
            this.styles.styles.forEach((M) => {
              "string" != typeof M &&
                M.forEach((O, V) => {
                  O && (O = or(O, v, r));
                  const W = this.normalizer.normalizePropertyName(V, r);
                  (O = this.normalizer.normalizeStyleValue(V, W, O, r)),
                    h.set(V, O);
                });
            }),
            h
          );
        }
      }
      class Ia {
        constructor(n, r, h) {
          (this.name = n),
            (this.ast = r),
            (this._normalizer = h),
            (this.transitionFactories = []),
            (this.states = new Map()),
            r.states.forEach((v) => {
              this.states.set(
                v.name,
                new Gl(v.style, (v.options && v.options.params) || {}, h),
              );
            }),
            ws(this.states, "true", "1"),
            ws(this.states, "false", "0"),
            r.transitions.forEach((v) => {
              this.transitionFactories.push(new ha(n, v, this.states));
            }),
            (this.fallbackTransition = (function xs(d, n, r) {
              return new ha(
                d,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(O, V) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                n,
              );
            })(n, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(n, r, h, v) {
          return (
            this.transitionFactories.find((O) => O.match(n, r, h, v)) || null
          );
        }
        matchStyles(n, r, h) {
          return this.fallbackTransition.buildStyles(n, r, h);
        }
      }
      function ws(d, n, r) {
        d.has(n)
          ? d.has(r) || d.set(r, d.get(n))
          : d.has(r) && d.set(n, d.get(r));
      }
      const Ra = new bs();
      class Ec {
        constructor(n, r, h) {
          (this.bodyNode = n),
            (this._driver = r),
            (this._normalizer = h),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(n, r) {
          const h = [],
            M = ka(this._driver, r, h, []);
          if (h.length)
            throw (function yn(d) {
              return new p.vHH(3503, !1);
            })();
          this._animations.set(n, M);
        }
        _buildPlayer(n, r, h) {
          const v = n.element,
            M = Zr(this._normalizer, n.keyframes, r, h);
          return this._driver.animate(
            v,
            M,
            n.duration,
            n.delay,
            n.easing,
            [],
            !0,
          );
        }
        create(n, r, h = {}) {
          const v = [],
            M = this._animations.get(n);
          let O;
          const V = new Map();
          if (
            (M
              ? ((O = jl(
                  this._driver,
                  r,
                  M,
                  Vo,
                  On,
                  new Map(),
                  new Map(),
                  h,
                  Ra,
                  v,
                )),
                O.forEach((At) => {
                  const zt = Jn(V, At.element, new Map());
                  At.postStyleProps.forEach((Qt) => zt.set(Qt, null));
                }))
              : (v.push(
                  (function uo() {
                    return new p.vHH(3300, !1);
                  })(),
                ),
                (O = [])),
            v.length)
          )
            throw (function Tn(d) {
              return new p.vHH(3504, !1);
            })();
          V.forEach((At, zt) => {
            At.forEach((Qt, ge) => {
              At.set(ge, this._driver.computeStyle(zt, ge, _t.l3));
            });
          });
          const et = ir(
            O.map((At) => {
              const zt = V.get(At.element);
              return this._buildPlayer(At, new Map(), zt);
            }),
          );
          return (
            this._playersById.set(n, et),
            et.onDestroy(() => this.destroy(n)),
            this.players.push(et),
            et
          );
        }
        destroy(n) {
          const r = this._getPlayer(n);
          r.destroy(), this._playersById.delete(n);
          const h = this.players.indexOf(r);
          h >= 0 && this.players.splice(h, 1);
        }
        _getPlayer(n) {
          const r = this._playersById.get(n);
          if (!r)
            throw (function oo(d) {
              return new p.vHH(3301, !1);
            })();
          return r;
        }
        listen(n, r, h, v) {
          const M = ss(r, "", "", "");
          return _s(this._getPlayer(n), h, M, v), () => {};
        }
        command(n, r, h, v) {
          if ("register" == h) return void this.register(n, v[0]);
          if ("create" == h) return void this.create(n, r, v[0] || {});
          const M = this._getPlayer(n);
          switch (h) {
            case "play":
              M.play();
              break;
            case "pause":
              M.pause();
              break;
            case "reset":
              M.reset();
              break;
            case "restart":
              M.restart();
              break;
            case "finish":
              M.finish();
              break;
            case "init":
              M.init();
              break;
            case "setPosition":
              M.setPosition(parseFloat(v[0]));
              break;
            case "destroy":
              this.destroy(n);
          }
        }
      }
      const Sc = "ng-animate-queued",
        rl = "ng-animate-disabled",
        al = [],
        Yl = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        Pa = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        Lr = "__ng_removed";
      class $s {
        get params() {
          return this.options.params;
        }
        constructor(n, r = "") {
          this.namespaceId = r;
          const h = n && n.hasOwnProperty("value");
          if (
            ((this.value = (function ni(d) {
              return d ?? null;
            })(h ? n.value : n)),
            h)
          ) {
            const M = wo(n);
            delete M.value, (this.options = M);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(n) {
          const r = n.params;
          if (r) {
            const h = this.options.params;
            Object.keys(r).forEach((v) => {
              null == h[v] && (h[v] = r[v]);
            });
          }
        }
      }
      const Cs = "void",
        R = new $s(Cs);
      class ht {
        constructor(n, r, h) {
          (this.id = n),
            (this.hostElement = r),
            (this._engine = h),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + n),
            tn(r, this._hostClassName);
        }
        listen(n, r, h, v) {
          if (!this._triggers.has(r))
            throw (function go(d, n) {
              return new p.vHH(3302, !1);
            })();
          if (null == h || 0 == h.length)
            throw (function qo(d) {
              return new p.vHH(3303, !1);
            })();
          if (
            !(function $i(d) {
              return "start" == d || "done" == d;
            })(h)
          )
            throw (function Kn(d, n) {
              return new p.vHH(3400, !1);
            })();
          const M = Jn(this._elementListeners, n, []),
            O = { name: r, phase: h, callback: v };
          M.push(O);
          const V = Jn(this._engine.statesByElement, n, new Map());
          return (
            V.has(r) || (tn(n, Fi), tn(n, Fi + "-" + r), V.set(r, R)),
            () => {
              this._engine.afterFlush(() => {
                const W = M.indexOf(O);
                W >= 0 && M.splice(W, 1), this._triggers.has(r) || V.delete(r);
              });
            }
          );
        }
        register(n, r) {
          return !this._triggers.has(n) && (this._triggers.set(n, r), !0);
        }
        _getTrigger(n) {
          const r = this._triggers.get(n);
          if (!r)
            throw (function Ir(d) {
              return new p.vHH(3401, !1);
            })();
          return r;
        }
        trigger(n, r, h, v = !0) {
          const M = this._getTrigger(r),
            O = new nt(this.id, r, n);
          let V = this._engine.statesByElement.get(n);
          V ||
            (tn(n, Fi),
            tn(n, Fi + "-" + r),
            this._engine.statesByElement.set(n, (V = new Map())));
          let W = V.get(r);
          const et = new $s(h, this.id);
          if (
            (!(h && h.hasOwnProperty("value")) &&
              W &&
              et.absorbOptions(W.options),
            V.set(r, et),
            W || (W = R),
            et.value !== Cs && W.value === et.value)
          ) {
            if (
              !(function Xo(d, n) {
                const r = Object.keys(d),
                  h = Object.keys(n);
                if (r.length != h.length) return !1;
                for (let v = 0; v < r.length; v++) {
                  const M = r[v];
                  if (!n.hasOwnProperty(M) || d[M] !== n[M]) return !1;
                }
                return !0;
              })(W.params, et.params)
            ) {
              const Ye = [],
                $e = M.matchStyles(W.value, W.params, Ye),
                ti = M.matchStyles(et.value, et.params, Ye);
              Ye.length
                ? this._engine.reportError(Ye)
                : this._engine.afterFlush(() => {
                    xn(n, $e), bo(n, ti);
                  });
            }
            return;
          }
          const Qt = Jn(this._engine.playersByElement, n, []);
          Qt.forEach((Ye) => {
            Ye.namespaceId == this.id &&
              Ye.triggerName == r &&
              Ye.queued &&
              Ye.destroy();
          });
          let ge = M.matchTransition(W.value, et.value, n, et.params),
            je = !1;
          if (!ge) {
            if (!v) return;
            (ge = M.fallbackTransition), (je = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: n,
              triggerName: r,
              transition: ge,
              fromState: W,
              toState: et,
              player: O,
              isFallbackTransition: je,
            }),
            je ||
              (tn(n, Sc),
              O.onStart(() => {
                zn(n, Sc);
              })),
            O.onDone(() => {
              let Ye = this.players.indexOf(O);
              Ye >= 0 && this.players.splice(Ye, 1);
              const $e = this._engine.playersByElement.get(n);
              if ($e) {
                let ti = $e.indexOf(O);
                ti >= 0 && $e.splice(ti, 1);
              }
            }),
            this.players.push(O),
            Qt.push(O),
            O
          );
        }
        deregister(n) {
          this._triggers.delete(n),
            this._engine.statesByElement.forEach((r) => r.delete(n)),
            this._elementListeners.forEach((r, h) => {
              this._elementListeners.set(
                h,
                r.filter((v) => v.name != n),
              );
            });
        }
        clearElementCache(n) {
          this._engine.statesByElement.delete(n),
            this._elementListeners.delete(n);
          const r = this._engine.playersByElement.get(n);
          r &&
            (r.forEach((h) => h.destroy()),
            this._engine.playersByElement.delete(n));
        }
        _signalRemovalForInnerTriggers(n, r) {
          const h = this._engine.driver.query(n, sn, !0);
          h.forEach((v) => {
            if (v[Lr]) return;
            const M = this._engine.fetchNamespacesByElement(v);
            M.size
              ? M.forEach((O) => O.triggerLeaveAnimation(v, r, !1, !0))
              : this.clearElementCache(v);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              h.forEach((v) => this.clearElementCache(v)),
            );
        }
        triggerLeaveAnimation(n, r, h, v) {
          const M = this._engine.statesByElement.get(n),
            O = new Map();
          if (M) {
            const V = [];
            if (
              (M.forEach((W, et) => {
                if ((O.set(et, W.value), this._triggers.has(et))) {
                  const At = this.trigger(n, et, Cs, v);
                  At && V.push(At);
                }
              }),
              V.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, n, !0, r, O),
                h && ir(V).onDone(() => this._engine.processLeaveNode(n)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(n) {
          const r = this._elementListeners.get(n),
            h = this._engine.statesByElement.get(n);
          if (r && h) {
            const v = new Set();
            r.forEach((M) => {
              const O = M.name;
              if (v.has(O)) return;
              v.add(O);
              const W = this._triggers.get(O).fallbackTransition,
                et = h.get(O) || R,
                At = new $s(Cs),
                zt = new nt(this.id, O, n);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: n,
                  triggerName: O,
                  transition: W,
                  fromState: et,
                  toState: At,
                  player: zt,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(n, r) {
          const h = this._engine;
          if (
            (n.childElementCount && this._signalRemovalForInnerTriggers(n, r),
            this.triggerLeaveAnimation(n, r, !0))
          )
            return;
          let v = !1;
          if (h.totalAnimations) {
            const M = h.players.length ? h.playersByQueriedElement.get(n) : [];
            if (M && M.length) v = !0;
            else {
              let O = n;
              for (; (O = O.parentNode); )
                if (h.statesByElement.get(O)) {
                  v = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(n), v))
            h.markElementAsRemoved(this.id, n, !1, r);
          else {
            const M = n[Lr];
            (!M || M === Yl) &&
              (h.afterFlush(() => this.clearElementCache(n)),
              h.destroyInnerAnimations(n),
              h._onRemovalComplete(n, r));
          }
        }
        insertNode(n, r) {
          tn(n, this._hostClassName);
        }
        drainQueuedTransitions(n) {
          const r = [];
          return (
            this._queue.forEach((h) => {
              const v = h.player;
              if (v.destroyed) return;
              const M = h.element,
                O = this._elementListeners.get(M);
              O &&
                O.forEach((V) => {
                  if (V.name == h.triggerName) {
                    const W = ss(
                      M,
                      h.triggerName,
                      h.fromState.value,
                      h.toState.value,
                    );
                    (W._data = n), _s(h.player, V.phase, W, V.callback);
                  }
                }),
                v.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      v.destroy();
                    })
                  : r.push(h);
            }),
            (this._queue = []),
            r.sort((h, v) => {
              const M = h.transition.ast.depCount,
                O = v.transition.ast.depCount;
              return 0 == M || 0 == O
                ? M - O
                : this._engine.driver.containsElement(h.element, v.element)
                  ? 1
                  : -1;
            })
          );
        }
        destroy(n) {
          this.players.forEach((r) => r.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, n);
        }
      }
      class G {
        _onRemovalComplete(n, r) {
          this.onRemovalComplete(n, r);
        }
        constructor(n, r, h) {
          (this.bodyNode = n),
            (this.driver = r),
            (this._normalizer = h),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (v, M) => {});
        }
        get queuedPlayers() {
          const n = [];
          return (
            this._namespaceList.forEach((r) => {
              r.players.forEach((h) => {
                h.queued && n.push(h);
              });
            }),
            n
          );
        }
        createNamespace(n, r) {
          const h = new ht(n, r, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, r)
              ? this._balanceNamespaceList(h, r)
              : (this.newHostElements.set(r, h), this.collectEnterElement(r)),
            (this._namespaceLookup[n] = h)
          );
        }
        _balanceNamespaceList(n, r) {
          const h = this._namespaceList,
            v = this.namespacesByHostElement;
          if (h.length - 1 >= 0) {
            let O = !1,
              V = this.driver.getParentElement(r);
            for (; V; ) {
              const W = v.get(V);
              if (W) {
                const et = h.indexOf(W);
                h.splice(et + 1, 0, n), (O = !0);
                break;
              }
              V = this.driver.getParentElement(V);
            }
            O || h.unshift(n);
          } else h.push(n);
          return v.set(r, n), n;
        }
        register(n, r) {
          let h = this._namespaceLookup[n];
          return h || (h = this.createNamespace(n, r)), h;
        }
        registerTrigger(n, r, h) {
          let v = this._namespaceLookup[n];
          v && v.register(r, h) && this.totalAnimations++;
        }
        destroy(n, r) {
          n &&
            (this.afterFlush(() => {}),
            this.afterFlushAnimationsDone(() => {
              const h = this._fetchNamespace(n);
              this.namespacesByHostElement.delete(h.hostElement);
              const v = this._namespaceList.indexOf(h);
              v >= 0 && this._namespaceList.splice(v, 1),
                h.destroy(r),
                delete this._namespaceLookup[n];
            }));
        }
        _fetchNamespace(n) {
          return this._namespaceLookup[n];
        }
        fetchNamespacesByElement(n) {
          const r = new Set(),
            h = this.statesByElement.get(n);
          if (h)
            for (let v of h.values())
              if (v.namespaceId) {
                const M = this._fetchNamespace(v.namespaceId);
                M && r.add(M);
              }
          return r;
        }
        trigger(n, r, h, v) {
          if (pi(r)) {
            const M = this._fetchNamespace(n);
            if (M) return M.trigger(r, h, v), !0;
          }
          return !1;
        }
        insertNode(n, r, h, v) {
          if (!pi(r)) return;
          const M = r[Lr];
          if (M && M.setForRemoval) {
            (M.setForRemoval = !1), (M.setForMove = !0);
            const O = this.collectedLeaveElements.indexOf(r);
            O >= 0 && this.collectedLeaveElements.splice(O, 1);
          }
          if (n) {
            const O = this._fetchNamespace(n);
            O && O.insertNode(r, h);
          }
          v && this.collectEnterElement(r);
        }
        collectEnterElement(n) {
          this.collectedEnterElements.push(n);
        }
        markElementAsDisabled(n, r) {
          r
            ? this.disabledNodes.has(n) ||
              (this.disabledNodes.add(n), tn(n, rl))
            : this.disabledNodes.has(n) &&
              (this.disabledNodes.delete(n), zn(n, rl));
        }
        removeNode(n, r, h) {
          if (pi(r)) {
            const v = n ? this._fetchNamespace(n) : null;
            v ? v.removeNode(r, h) : this.markElementAsRemoved(n, r, !1, h);
            const M = this.namespacesByHostElement.get(r);
            M && M.id !== n && M.removeNode(r, h);
          } else this._onRemovalComplete(r, h);
        }
        markElementAsRemoved(n, r, h, v, M) {
          this.collectedLeaveElements.push(r),
            (r[Lr] = {
              namespaceId: n,
              setForRemoval: v,
              hasAnimation: h,
              removedBeforeQueried: !1,
              previousTriggersValues: M,
            });
        }
        listen(n, r, h, v, M) {
          return pi(r) ? this._fetchNamespace(n).listen(r, h, v, M) : () => {};
        }
        _buildInstruction(n, r, h, v, M) {
          return n.transition.build(
            this.driver,
            n.element,
            n.fromState.value,
            n.toState.value,
            h,
            v,
            n.fromState.options,
            n.toState.options,
            r,
            M,
          );
        }
        destroyInnerAnimations(n) {
          let r = this.driver.query(n, sn, !0);
          r.forEach((h) => this.destroyActiveAnimationsForElement(h)),
            0 != this.playersByQueriedElement.size &&
              ((r = this.driver.query(n, vo, !0)),
              r.forEach((h) => this.finishActiveQueriedAnimationOnElement(h)));
        }
        destroyActiveAnimationsForElement(n) {
          const r = this.playersByElement.get(n);
          r &&
            r.forEach((h) => {
              h.queued ? (h.markedForDestroy = !0) : h.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(n) {
          const r = this.playersByQueriedElement.get(n);
          r && r.forEach((h) => h.finish());
        }
        whenRenderingDone() {
          return new Promise((n) => {
            if (this.players.length) return ir(this.players).onDone(() => n());
            n();
          });
        }
        processLeaveNode(n) {
          const r = n[Lr];
          if (r && r.setForRemoval) {
            if (((n[Lr] = Yl), r.namespaceId)) {
              this.destroyInnerAnimations(n);
              const h = this._fetchNamespace(r.namespaceId);
              h && h.clearElementCache(n);
            }
            this._onRemovalComplete(n, r.setForRemoval);
          }
          n.classList?.contains(rl) && this.markElementAsDisabled(n, !1),
            this.driver.query(n, ".ng-animate-disabled", !0).forEach((h) => {
              this.markElementAsDisabled(h, !1);
            });
        }
        flush(n = -1) {
          let r = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((h, v) =>
                this._balanceNamespaceList(h, v),
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let h = 0; h < this.collectedEnterElements.length; h++)
              tn(this.collectedEnterElements[h], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const h = [];
            try {
              r = this._flushAnimations(h, n);
            } finally {
              for (let v = 0; v < h.length; v++) h[v]();
            }
          } else
            for (let h = 0; h < this.collectedLeaveElements.length; h++)
              this.processLeaveNode(this.collectedLeaveElements[h]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((h) => h()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const h = this._whenQuietFns;
            (this._whenQuietFns = []),
              r.length
                ? ir(r).onDone(() => {
                    h.forEach((v) => v());
                  })
                : h.forEach((v) => v());
          }
        }
        reportError(n) {
          throw (function Gr(d) {
            return new p.vHH(3402, !1);
          })();
        }
        _flushAnimations(n, r) {
          const h = new bs(),
            v = [],
            M = new Map(),
            O = [],
            V = new Map(),
            W = new Map(),
            et = new Map(),
            At = new Set();
          this.disabledNodes.forEach((Qi) => {
            At.add(Qi);
            const dn = this.driver.query(Qi, ".ng-animate-queued", !0);
            for (let mn = 0; mn < dn.length; mn++) At.add(dn[mn]);
          });
          const zt = this.bodyNode,
            Qt = Array.from(this.statesByElement.keys()),
            ge = Fn(Qt, this.collectedEnterElements),
            je = new Map();
          let Ye = 0;
          ge.forEach((Qi, dn) => {
            const mn = Vo + Ye++;
            je.set(dn, mn), Qi.forEach((vn) => tn(vn, mn));
          });
          const $e = [],
            ti = new Set(),
            Ci = new Set();
          for (let Qi = 0; Qi < this.collectedLeaveElements.length; Qi++) {
            const dn = this.collectedLeaveElements[Qi],
              mn = dn[Lr];
            mn &&
              mn.setForRemoval &&
              ($e.push(dn),
              ti.add(dn),
              mn.hasAnimation
                ? this.driver
                    .query(dn, ".ng-star-inserted", !0)
                    .forEach((vn) => ti.add(vn))
                : Ci.add(dn));
          }
          const di = new Map(),
            Pi = Fn(Qt, Array.from(ti));
          Pi.forEach((Qi, dn) => {
            const mn = On + Ye++;
            di.set(dn, mn), Qi.forEach((vn) => tn(vn, mn));
          }),
            n.push(() => {
              ge.forEach((Qi, dn) => {
                const mn = je.get(dn);
                Qi.forEach((vn) => zn(vn, mn));
              }),
                Pi.forEach((Qi, dn) => {
                  const mn = di.get(dn);
                  Qi.forEach((vn) => zn(vn, mn));
                }),
                $e.forEach((Qi) => {
                  this.processLeaveNode(Qi);
                });
            });
          const zi = [],
            Gi = [];
          for (let Qi = this._namespaceList.length - 1; Qi >= 0; Qi--)
            this._namespaceList[Qi].drainQueuedTransitions(r).forEach((mn) => {
              const vn = mn.player,
                tr = mn.element;
              if ((zi.push(vn), this.collectedEnterElements.length)) {
                const Or = tr[Lr];
                if (Or && Or.setForMove) {
                  if (
                    Or.previousTriggersValues &&
                    Or.previousTriggersValues.has(mn.triggerName)
                  ) {
                    const gr = Or.previousTriggersValues.get(mn.triggerName),
                      Fs = this.statesByElement.get(mn.element);
                    if (Fs && Fs.has(mn.triggerName)) {
                      const Uh = Fs.get(mn.triggerName);
                      (Uh.value = gr), Fs.set(mn.triggerName, Uh);
                    }
                  }
                  return void vn.destroy();
                }
              }
              const ps = !zt || !this.driver.containsElement(zt, tr),
                er = di.get(tr),
                Ps = je.get(tr),
                lo = this._buildInstruction(mn, h, Ps, er, ps);
              if (lo.errors && lo.errors.length) return void Gi.push(lo);
              if (ps)
                return (
                  vn.onStart(() => xn(tr, lo.fromStyles)),
                  vn.onDestroy(() => bo(tr, lo.toStyles)),
                  void v.push(vn)
                );
              if (mn.isFallbackTransition)
                return (
                  vn.onStart(() => xn(tr, lo.fromStyles)),
                  vn.onDestroy(() => bo(tr, lo.toStyles)),
                  void v.push(vn)
                );
              const bm = [];
              lo.timelines.forEach((Or) => {
                (Or.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Or.element) || bm.push(Or);
              }),
                (lo.timelines = bm),
                h.append(tr, lo.timelines),
                O.push({ instruction: lo, player: vn, element: tr }),
                lo.queriedElements.forEach((Or) => Jn(V, Or, []).push(vn)),
                lo.preStyleProps.forEach((Or, gr) => {
                  if (Or.size) {
                    let Fs = W.get(gr);
                    Fs || W.set(gr, (Fs = new Set())),
                      Or.forEach((Uh, kp) => Fs.add(kp));
                  }
                }),
                lo.postStyleProps.forEach((Or, gr) => {
                  let Fs = et.get(gr);
                  Fs || et.set(gr, (Fs = new Set())),
                    Or.forEach((Uh, kp) => Fs.add(kp));
                });
            });
          if (Gi.length) {
            const Qi = [];
            Gi.forEach((dn) => {
              Qi.push(
                (function rs(d, n) {
                  return new p.vHH(3505, !1);
                })(),
              );
            }),
              zi.forEach((dn) => dn.destroy()),
              this.reportError(Qi);
          }
          const Ki = new Map(),
            fn = new Map();
          O.forEach((Qi) => {
            const dn = Qi.element;
            h.has(dn) &&
              (fn.set(dn, dn),
              this._beforeAnimationBuild(
                Qi.player.namespaceId,
                Qi.instruction,
                Ki,
              ));
          }),
            v.forEach((Qi) => {
              const dn = Qi.element;
              this._getPreviousPlayers(
                dn,
                !1,
                Qi.namespaceId,
                Qi.triggerName,
                null,
              ).forEach((vn) => {
                Jn(Ki, dn, []).push(vn), vn.destroy();
              });
            });
          const kn = $e.filter((Qi) => Qr(Qi, W, et)),
            Yn = new Map();
          Gn(Yn, this.driver, Ci, et, _t.l3).forEach((Qi) => {
            Qr(Qi, W, et) && kn.push(Qi);
          });
          const ns = new Map();
          ge.forEach((Qi, dn) => {
            Gn(ns, this.driver, new Set(Qi), W, _t.k1);
          }),
            kn.forEach((Qi) => {
              const dn = Yn.get(Qi),
                mn = ns.get(Qi);
              Yn.set(
                Qi,
                new Map([...(dn?.entries() ?? []), ...(mn?.entries() ?? [])]),
              );
            });
          const po = [],
            Rs = [],
            Fl = {};
          O.forEach((Qi) => {
            const { element: dn, player: mn, instruction: vn } = Qi;
            if (h.has(dn)) {
              if (At.has(dn))
                return (
                  mn.onDestroy(() => bo(dn, vn.toStyles)),
                  (mn.disabled = !0),
                  mn.overrideTotalTime(vn.totalTime),
                  void v.push(mn)
                );
              let tr = Fl;
              if (fn.size > 1) {
                let er = dn;
                const Ps = [];
                for (; (er = er.parentNode); ) {
                  const lo = fn.get(er);
                  if (lo) {
                    tr = lo;
                    break;
                  }
                  Ps.push(er);
                }
                Ps.forEach((lo) => fn.set(lo, tr));
              }
              const ps = this._buildAnimation(
                mn.namespaceId,
                vn,
                Ki,
                M,
                ns,
                Yn,
              );
              if ((mn.setRealPlayer(ps), tr === Fl)) po.push(mn);
              else {
                const er = this.playersByElement.get(tr);
                er && er.length && (mn.parentPlayer = ir(er)), v.push(mn);
              }
            } else
              xn(dn, vn.fromStyles),
                mn.onDestroy(() => bo(dn, vn.toStyles)),
                Rs.push(mn),
                At.has(dn) && v.push(mn);
          }),
            Rs.forEach((Qi) => {
              const dn = M.get(Qi.element);
              if (dn && dn.length) {
                const mn = ir(dn);
                Qi.setRealPlayer(mn);
              }
            }),
            v.forEach((Qi) => {
              Qi.parentPlayer
                ? Qi.syncPlayerEvents(Qi.parentPlayer)
                : Qi.destroy();
            });
          for (let Qi = 0; Qi < $e.length; Qi++) {
            const dn = $e[Qi],
              mn = dn[Lr];
            if ((zn(dn, On), mn && mn.hasAnimation)) continue;
            let vn = [];
            if (V.size) {
              let ps = V.get(dn);
              ps && ps.length && vn.push(...ps);
              let er = this.driver.query(dn, vo, !0);
              for (let Ps = 0; Ps < er.length; Ps++) {
                let lo = V.get(er[Ps]);
                lo && lo.length && vn.push(...lo);
              }
            }
            const tr = vn.filter((ps) => !ps.destroyed);
            tr.length ? Bn(this, dn, tr) : this.processLeaveNode(dn);
          }
          return (
            ($e.length = 0),
            po.forEach((Qi) => {
              this.players.push(Qi),
                Qi.onDone(() => {
                  Qi.destroy();
                  const dn = this.players.indexOf(Qi);
                  this.players.splice(dn, 1);
                }),
                Qi.play();
            }),
            po
          );
        }
        afterFlush(n) {
          this._flushFns.push(n);
        }
        afterFlushAnimationsDone(n) {
          this._whenQuietFns.push(n);
        }
        _getPreviousPlayers(n, r, h, v, M) {
          let O = [];
          if (r) {
            const V = this.playersByQueriedElement.get(n);
            V && (O = V);
          } else {
            const V = this.playersByElement.get(n);
            if (V) {
              const W = !M || M == Cs;
              V.forEach((et) => {
                et.queued || (!W && et.triggerName != v) || O.push(et);
              });
            }
          }
          return (
            (h || v) &&
              (O = O.filter(
                (V) =>
                  !((h && h != V.namespaceId) || (v && v != V.triggerName)),
              )),
            O
          );
        }
        _beforeAnimationBuild(n, r, h) {
          const M = r.element,
            O = r.isRemovalTransition ? void 0 : n,
            V = r.isRemovalTransition ? void 0 : r.triggerName;
          for (const W of r.timelines) {
            const et = W.element,
              At = et !== M,
              zt = Jn(h, et, []);
            this._getPreviousPlayers(et, At, O, V, r.toState).forEach((ge) => {
              const je = ge.getRealPlayer();
              je.beforeDestroy && je.beforeDestroy(), ge.destroy(), zt.push(ge);
            });
          }
          xn(M, r.fromStyles);
        }
        _buildAnimation(n, r, h, v, M, O) {
          const V = r.triggerName,
            W = r.element,
            et = [],
            At = new Set(),
            zt = new Set(),
            Qt = r.timelines.map((je) => {
              const Ye = je.element;
              At.add(Ye);
              const $e = Ye[Lr];
              if ($e && $e.removedBeforeQueried)
                return new _t.ZN(je.duration, je.delay);
              const ti = Ye !== W,
                Ci = (function So(d) {
                  const n = [];
                  return Fo(d, n), n;
                })((h.get(Ye) || al).map((Ki) => Ki.getRealPlayer())).filter(
                  (Ki) => !!Ki.element && Ki.element === Ye,
                ),
                di = M.get(Ye),
                Pi = O.get(Ye),
                zi = Zr(this._normalizer, je.keyframes, di, Pi),
                Gi = this._buildPlayer(je, zi, Ci);
              if ((je.subTimeline && v && zt.add(Ye), ti)) {
                const Ki = new nt(n, V, Ye);
                Ki.setRealPlayer(Gi), et.push(Ki);
              }
              return Gi;
            });
          et.forEach((je) => {
            Jn(this.playersByQueriedElement, je.element, []).push(je),
              je.onDone(() =>
                (function ce(d, n, r) {
                  let h = d.get(n);
                  if (h) {
                    if (h.length) {
                      const v = h.indexOf(r);
                      h.splice(v, 1);
                    }
                    0 == h.length && d.delete(n);
                  }
                  return h;
                })(this.playersByQueriedElement, je.element, je),
              );
          }),
            At.forEach((je) => tn(je, In));
          const ge = ir(Qt);
          return (
            ge.onDestroy(() => {
              At.forEach((je) => zn(je, In)), bo(W, r.toStyles);
            }),
            zt.forEach((je) => {
              Jn(v, je, []).push(ge);
            }),
            ge
          );
        }
        _buildPlayer(n, r, h) {
          return r.length > 0
            ? this.driver.animate(
                n.element,
                r,
                n.duration,
                n.delay,
                n.easing,
                h,
              )
            : new _t.ZN(n.duration, n.delay);
        }
      }
      class nt {
        constructor(n, r, h) {
          (this.namespaceId = n),
            (this.triggerName = r),
            (this.element = h),
            (this._player = new _t.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(n) {
          this._containsRealPlayer ||
            ((this._player = n),
            this._queuedCallbacks.forEach((r, h) => {
              r.forEach((v) => _s(n, h, void 0, v));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(n.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(n) {
          this.totalTime = n;
        }
        syncPlayerEvents(n) {
          const r = this._player;
          r.triggerCallback && n.onStart(() => r.triggerCallback("start")),
            n.onDone(() => this.finish()),
            n.onDestroy(() => this.destroy());
        }
        _queueEvent(n, r) {
          Jn(this._queuedCallbacks, n, []).push(r);
        }
        onDone(n) {
          this.queued && this._queueEvent("done", n), this._player.onDone(n);
        }
        onStart(n) {
          this.queued && this._queueEvent("start", n), this._player.onStart(n);
        }
        onDestroy(n) {
          this.queued && this._queueEvent("destroy", n),
            this._player.onDestroy(n);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(n) {
          this.queued || this._player.setPosition(n);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(n) {
          const r = this._player;
          r.triggerCallback && r.triggerCallback(n);
        }
      }
      function pi(d) {
        return d && 1 === d.nodeType;
      }
      function Pn(d, n) {
        const r = d.style.display;
        return (d.style.display = n ?? "none"), r;
      }
      function Gn(d, n, r, h, v) {
        const M = [];
        r.forEach((W) => M.push(Pn(W)));
        const O = [];
        h.forEach((W, et) => {
          const At = new Map();
          W.forEach((zt) => {
            const Qt = n.computeStyle(et, zt, v);
            At.set(zt, Qt),
              (!Qt || 0 == Qt.length) && ((et[Lr] = Pa), O.push(et));
          }),
            d.set(et, At);
        });
        let V = 0;
        return r.forEach((W) => Pn(W, M[V++])), O;
      }
      function Fn(d, n) {
        const r = new Map();
        if ((d.forEach((V) => r.set(V, [])), 0 == n.length)) return r;
        const v = new Set(n),
          M = new Map();
        function O(V) {
          if (!V) return 1;
          let W = M.get(V);
          if (W) return W;
          const et = V.parentNode;
          return (W = r.has(et) ? et : v.has(et) ? 1 : O(et)), M.set(V, W), W;
        }
        return (
          n.forEach((V) => {
            const W = O(V);
            1 !== W && r.get(W).push(V);
          }),
          r
        );
      }
      function tn(d, n) {
        d.classList?.add(n);
      }
      function zn(d, n) {
        d.classList?.remove(n);
      }
      function Bn(d, n, r) {
        ir(r).onDone(() => d.processLeaveNode(n));
      }
      function Fo(d, n) {
        for (let r = 0; r < d.length; r++) {
          const h = d[r];
          h instanceof _t.ZE ? Fo(h.players, n) : n.push(h);
        }
      }
      function Qr(d, n, r) {
        const h = r.get(d);
        if (!h) return !1;
        let v = n.get(d);
        return v ? h.forEach((M) => v.add(M)) : n.set(d, h), r.delete(d), !0;
      }
      class Uo {
        constructor(n, r, h) {
          (this.bodyNode = n),
            (this._driver = r),
            (this._normalizer = h),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (v, M) => {}),
            (this._transitionEngine = new G(n, r, h)),
            (this._timelineEngine = new Ec(n, r, h)),
            (this._transitionEngine.onRemovalComplete = (v, M) =>
              this.onRemovalComplete(v, M));
        }
        registerTrigger(n, r, h, v, M) {
          const O = n + "-" + v;
          let V = this._triggerCache[O];
          if (!V) {
            const W = [],
              At = ka(this._driver, M, W, []);
            if (W.length)
              throw (function pn(d, n) {
                return new p.vHH(3404, !1);
              })();
            (V = (function fa(d, n, r) {
              return new Ia(d, n, r);
            })(v, At, this._normalizer)),
              (this._triggerCache[O] = V);
          }
          this._transitionEngine.registerTrigger(r, v, V);
        }
        register(n, r) {
          this._transitionEngine.register(n, r);
        }
        destroy(n, r) {
          this._transitionEngine.destroy(n, r);
        }
        onInsert(n, r, h, v) {
          this._transitionEngine.insertNode(n, r, h, v);
        }
        onRemove(n, r, h) {
          this._transitionEngine.removeNode(n, r, h);
        }
        disableAnimations(n, r) {
          this._transitionEngine.markElementAsDisabled(n, r);
        }
        process(n, r, h, v) {
          if ("@" == h.charAt(0)) {
            const [M, O] = Dt(h);
            this._timelineEngine.command(M, r, O, v);
          } else this._transitionEngine.trigger(n, r, h, v);
        }
        listen(n, r, h, v, M) {
          if ("@" == h.charAt(0)) {
            const [O, V] = Dt(h);
            return this._timelineEngine.listen(O, r, V, M);
          }
          return this._transitionEngine.listen(n, r, h, v, M);
        }
        flush(n = -1) {
          this._transitionEngine.flush(n);
        }
        get players() {
          return [
            ...this._transitionEngine.players,
            ...this._timelineEngine.players,
          ];
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
        afterFlushAnimationsDone(n) {
          this._transitionEngine.afterFlushAnimationsDone(n);
        }
      }
      let jo = (() => {
        class d {
          static #t = (this.initialStylesByElement = new WeakMap());
          constructor(r, h, v) {
            (this._element = r),
              (this._startStyles = h),
              (this._endStyles = v),
              (this._state = 0);
            let M = d.initialStylesByElement.get(r);
            M || d.initialStylesByElement.set(r, (M = new Map())),
              (this._initialStyles = M);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                bo(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (bo(this._element, this._initialStyles),
                this._endStyles &&
                  (bo(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (d.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (xn(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (xn(this._element, this._endStyles),
                  (this._endStyles = null)),
                bo(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return d;
      })();
      function Sr(d) {
        let n = null;
        return (
          d.forEach((r, h) => {
            (function lr(d) {
              return "display" === d || "position" === d;
            })(h) && ((n = n || new Map()), n.set(h, r));
          }),
          n
        );
      }
      class Zn {
        constructor(n, r, h, v) {
          (this.element = n),
            (this.keyframes = r),
            (this.options = h),
            (this._specialStyles = v),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = h.duration),
            (this._delay = h.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const n = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            n,
            this.options,
          )),
            (this._finalKeyframe = n.length ? n[n.length - 1] : new Map());
          const r = () => this._onFinish();
          this.domPlayer.addEventListener("finish", r),
            this.onDestroy(() => {
              this.domPlayer.removeEventListener("finish", r);
            });
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(n) {
          const r = [];
          return (
            n.forEach((h) => {
              r.push(Object.fromEntries(h));
            }),
            r
          );
        }
        _triggerWebAnimation(n, r, h) {
          return n.animate(this._convertKeyframesToObject(r), h);
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((n) => n()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        setPosition(n) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = n * this.time);
        }
        getPosition() {
          return +(this.domPlayer.currentTime ?? 0) / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const n = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((h, v) => {
              "offset" !== v &&
                n.set(v, this._finished ? h : Do(this.element, v));
            }),
            (this.currentSnapshot = n);
        }
        triggerCallback(n) {
          const r = "start" === n ? this._onStartFns : this._onDoneFns;
          r.forEach((h) => h()), (r.length = 0);
        }
      }
      class ll {
        validateStyleProperty(n) {
          return !0;
        }
        validateAnimatableStyleProperty(n) {
          return !0;
        }
        matchesElement(n, r) {
          return !1;
        }
        containsElement(n, r) {
          return un(n, r);
        }
        getParentElement(n) {
          return he(n);
        }
        query(n, r, h) {
          return Xn(n, r, h);
        }
        computeStyle(n, r, h) {
          return window.getComputedStyle(n)[r];
        }
        animate(n, r, h, v, M, O = []) {
          const W = {
            duration: h,
            delay: v,
            fill: 0 == v ? "both" : "forwards",
          };
          M && (W.easing = M);
          const et = new Map(),
            At = O.filter((ge) => ge instanceof Zn);
          (function _n(d, n) {
            return 0 === d || 0 === n;
          })(h, v) &&
            At.forEach((ge) => {
              ge.currentSnapshot.forEach((je, Ye) => et.set(Ye, je));
            });
          let zt = (function cn(d) {
            return d.length
              ? d[0] instanceof Map
                ? d
                : d.map((n) => Yr(n))
              : [];
          })(r).map((ge) => Zo(ge));
          zt = (function Aa(d, n, r) {
            if (r.size && n.length) {
              let h = n[0],
                v = [];
              if (
                (r.forEach((M, O) => {
                  h.has(O) || v.push(O), h.set(O, M);
                }),
                v.length)
              )
                for (let M = 1; M < n.length; M++) {
                  let O = n[M];
                  v.forEach((V) => O.set(V, Do(d, V)));
                }
            }
            return n;
          })(n, zt, et);
          const Qt = (function us(d, n) {
            let r = null,
              h = null;
            return (
              Array.isArray(n) && n.length
                ? ((r = Sr(n[0])), n.length > 1 && (h = Sr(n[n.length - 1])))
                : n instanceof Map && (r = Sr(n)),
              r || h ? new jo(d, r, h) : null
            );
          })(n, zt);
          return new Zn(n, zt, W, Qt);
        }
      }
      let Ws = (() => {
        class d extends _t._j {
          constructor(r, h) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = r.createRenderer(h.body, {
                id: "0",
                encapsulation: p.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(r) {
            const h = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const v = Array.isArray(r) ? (0, _t.vP)(r) : r;
            return (
              cl(this._renderer, null, h, "register", [v]),
              new cr(h, this._renderer)
            );
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(p.LFG(p.FYo), p.LFG(C.K0));
          });
          static #e = (this.ɵprov = p.Yz7({ token: d, factory: d.ɵfac }));
        }
        return d;
      })();
      class cr extends _t.LC {
        constructor(n, r) {
          super(), (this._id = n), (this._renderer = r);
        }
        create(n, r) {
          return new kc(this._id, n, r || {}, this._renderer);
        }
      }
      class kc {
        constructor(n, r, h, v) {
          (this.id = n),
            (this.element = r),
            (this._renderer = v),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", h);
        }
        _listen(n, r) {
          return this._renderer.listen(this.element, `@@${this.id}:${n}`, r);
        }
        _command(n, ...r) {
          return cl(this._renderer, this.element, this.id, n, r);
        }
        onDone(n) {
          this._listen("done", n);
        }
        onStart(n) {
          this._listen("start", n);
        }
        onDestroy(n) {
          this._listen("destroy", n);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(n) {
          this._command("setPosition", n);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function cl(d, n, r, h, v) {
        return d.setProperty(n, `@@${r}:${h}`, v);
      }
      const wr = "@.disabled";
      let _d = (() => {
        class d {
          constructor(r, h, v) {
            (this.delegate = r),
              (this.engine = h),
              (this._zone = v),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (h.onRemovalComplete = (M, O) => {
                const V = O?.parentNode(M);
                V && O.removeChild(V, M);
              });
          }
          createRenderer(r, h) {
            const M = this.delegate.createRenderer(r, h);
            if (!(r && h && h.data && h.data.animation)) {
              let At = this._rendererCache.get(M);
              return (
                At ||
                  ((At = new dl("", M, this.engine, () =>
                    this._rendererCache.delete(M),
                  )),
                  this._rendererCache.set(M, At)),
                At
              );
            }
            const O = h.id,
              V = h.id + "-" + this._currentId;
            this._currentId++, this.engine.register(V, r);
            const W = (At) => {
              Array.isArray(At)
                ? At.forEach(W)
                : this.engine.registerTrigger(O, V, r, At.name, At);
            };
            return h.data.animation.forEach(W), new Tc(this, V, M, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            queueMicrotask(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(r, h, v) {
            r >= 0 && r < this._microtaskId
              ? this._zone.run(() => h(v))
              : (0 == this._animationCallbacksBuffer.length &&
                  queueMicrotask(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((M) => {
                        const [O, V] = M;
                        O(V);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([h, v]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(p.LFG(p.FYo), p.LFG(Uo), p.LFG(p.R0b));
          });
          static #e = (this.ɵprov = p.Yz7({ token: d, factory: d.ɵfac }));
        }
        return d;
      })();
      class dl {
        constructor(n, r, h, v) {
          (this.namespaceId = n),
            (this.delegate = r),
            (this.engine = h),
            (this._onDestroy = v);
        }
        get data() {
          return this.delegate.data;
        }
        destroyNode(n) {
          this.delegate.destroyNode?.(n);
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.engine.afterFlushAnimationsDone(() => {
              queueMicrotask(() => {
                this.delegate.destroy();
              });
            }),
            this._onDestroy?.();
        }
        createElement(n, r) {
          return this.delegate.createElement(n, r);
        }
        createComment(n) {
          return this.delegate.createComment(n);
        }
        createText(n) {
          return this.delegate.createText(n);
        }
        appendChild(n, r) {
          this.delegate.appendChild(n, r),
            this.engine.onInsert(this.namespaceId, r, n, !1);
        }
        insertBefore(n, r, h, v = !0) {
          this.delegate.insertBefore(n, r, h),
            this.engine.onInsert(this.namespaceId, r, n, v);
        }
        removeChild(n, r, h) {
          this.engine.onRemove(this.namespaceId, r, this.delegate);
        }
        selectRootElement(n, r) {
          return this.delegate.selectRootElement(n, r);
        }
        parentNode(n) {
          return this.delegate.parentNode(n);
        }
        nextSibling(n) {
          return this.delegate.nextSibling(n);
        }
        setAttribute(n, r, h, v) {
          this.delegate.setAttribute(n, r, h, v);
        }
        removeAttribute(n, r, h) {
          this.delegate.removeAttribute(n, r, h);
        }
        addClass(n, r) {
          this.delegate.addClass(n, r);
        }
        removeClass(n, r) {
          this.delegate.removeClass(n, r);
        }
        setStyle(n, r, h, v) {
          this.delegate.setStyle(n, r, h, v);
        }
        removeStyle(n, r, h) {
          this.delegate.removeStyle(n, r, h);
        }
        setProperty(n, r, h) {
          "@" == r.charAt(0) && r == wr
            ? this.disableAnimations(n, !!h)
            : this.delegate.setProperty(n, r, h);
        }
        setValue(n, r) {
          this.delegate.setValue(n, r);
        }
        listen(n, r, h) {
          return this.delegate.listen(n, r, h);
        }
        disableAnimations(n, r) {
          this.engine.disableAnimations(n, r);
        }
      }
      class Tc extends dl {
        constructor(n, r, h, v, M) {
          super(r, h, v, M), (this.factory = n), (this.namespaceId = r);
        }
        setProperty(n, r, h) {
          "@" == r.charAt(0)
            ? "." == r.charAt(1) && r == wr
              ? this.disableAnimations(n, (h = void 0 === h || !!h))
              : this.engine.process(this.namespaceId, n, r.slice(1), h)
            : this.delegate.setProperty(n, r, h);
        }
        listen(n, r, h) {
          if ("@" == r.charAt(0)) {
            const v = (function fs(d) {
              switch (d) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return d;
              }
            })(n);
            let M = r.slice(1),
              O = "";
            return (
              "@" != M.charAt(0) &&
                ([M, O] = (function $l(d) {
                  const n = d.indexOf(".");
                  return [d.substring(0, n), d.slice(n + 1)];
                })(M)),
              this.engine.listen(this.namespaceId, v, M, O, (V) => {
                this.factory.scheduleListenerCallback(V._data || -1, h, V);
              })
            );
          }
          return this.delegate.listen(n, r, h);
        }
      }
      let Kr = (() => {
        class d extends Uo {
          constructor(r, h, v, M) {
            super(r.body, h, v);
          }
          ngOnDestroy() {
            this.flush();
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)(
              p.LFG(C.K0),
              p.LFG(Oo),
              p.LFG(Yo),
              p.LFG(p.z2F),
            );
          });
          static #e = (this.ɵprov = p.Yz7({ token: d, factory: d.ɵfac }));
        }
        return d;
      })();
      const bd = [
          { provide: _t._j, useClass: Ws },
          {
            provide: Yo,
            useFactory: function vd() {
              return new Zs();
            },
          },
          { provide: Uo, useClass: Kr },
          {
            provide: p.FYo,
            useFactory: function Nu(d, n, r) {
              return new _d(d, n, r);
            },
            deps: [s.se, Uo, p.R0b],
          },
        ],
        Oc = [
          { provide: Oo, useFactory: () => new ll() },
          { provide: p.QbO, useValue: "BrowserAnimations" },
          ...bd,
        ],
        en = [
          { provide: Oo, useClass: _o },
          { provide: p.QbO, useValue: "NoopAnimations" },
          ...bd,
        ];
      let Fa = (() => {
        class d {
          static withConfig(r) {
            return { ngModule: d, providers: r.disableAnimations ? en : Oc };
          }
          static #t = (this.ɵfac = function (h) {
            return new (h || d)();
          });
          static #e = (this.ɵmod = p.oAB({ type: d }));
          static #i = (this.ɵinj = p.cJS({ providers: Oc, imports: [s.b2] }));
        }
        return d;
      })();
      var Vu = D(9464),
        La = D(3e3),
        ma = D(9031),
        zu = D(8525),
        Ic = D(1573),
        xd = D(1942),
        wd = D(182),
        Cd = D(7798),
        xi = D(3648),
        Dn = D(5592),
        pa = D(1954),
        $o = D(2631);
      const Na = new (class Pc extends $o.v {})(
        class Rc extends pa.o {
          constructor(n, r) {
            super(n, r), (this.scheduler = n), (this.work = r);
          }
          schedule(n, r = 0) {
            return r > 0
              ? super.schedule(n, r)
              : ((this.delay = r),
                (this.state = n),
                this.scheduler.flush(this),
                this);
          }
          execute(n, r) {
            return r > 0 || this.closed
              ? super.execute(n, r)
              : this._execute(n, r);
          }
          requestAsyncId(n, r, h = 0) {
            return (null != h && h > 0) || (null == h && this.delay > 0)
              ? super.requestAsyncId(n, r, h)
              : (n.flush(this), 0);
          }
        },
      );
      var hl = D(4850),
        Ba = D(9666),
        qn = (function (d) {
          return (
            (d[(d.loading = 1)] = "loading"),
            (d[(d.setVariables = 2)] = "setVariables"),
            (d[(d.fetchMore = 3)] = "fetchMore"),
            (d[(d.refetch = 4)] = "refetch"),
            (d[(d.poll = 6)] = "poll"),
            (d[(d.ready = 7)] = "ready"),
            (d[(d.error = 8)] = "error"),
            d
          );
        })(qn || {});
      function Wl(d) {
        return !!d && d < 7;
      }
      var Ee = D(7582),
        Nr = "Invariant Violation",
        Wo = Object.setPrototypeOf,
        ga =
          void 0 === Wo
            ? function (d, n) {
                return (d.__proto__ = n), d;
              }
            : Wo,
        I = (function (d) {
          function n(r) {
            void 0 === r && (r = Nr);
            var h =
              d.call(
                this,
                "number" == typeof r
                  ? Nr +
                      ": " +
                      r +
                      " (see https://github.com/apollographql/invariant-packages)"
                  : r,
              ) || this;
            return (h.framesToPop = 1), (h.name = Nr), ga(h, n.prototype), h;
          }
          return (0, Ee.ZT)(n, d), n;
        })(Error);
      function L(d, n) {
        if (!d) throw new I(n);
      }
      var d,
        k = ["debug", "log", "warn", "error", "silent"],
        N = k.indexOf("log");
      function K(d) {
        return function () {
          if (k.indexOf(d) >= N)
            return (console[d] || console.log).apply(console, arguments);
        };
      }
      ((d = L || (L = {})).debug = K("debug")),
        (d.log = K("log")),
        (d.warn = K("warn")),
        (d.error = K("error"));
      var ei = "3.11.1";
      function Ke(d) {
        try {
          return d();
        } catch {}
      }
      const Bi =
        Ke(function () {
          return globalThis;
        }) ||
        Ke(function () {
          return window;
        }) ||
        Ke(function () {
          return self;
        }) ||
        Ke(function () {
          return global;
        }) ||
        Ke(function () {
          return Ke.constructor("return this")();
        });
      var gn = new Map();
      function Hn(d) {
        var n = gn.get(d) || 1;
        return (
          gn.set(d, n + 1),
          ""
            .concat(d, ":")
            .concat(n, ":")
            .concat(Math.random().toString(36).slice(2))
        );
      }
      function Mn(d, n) {
        void 0 === n && (n = 0);
        var r = Hn("stringifyForDisplay");
        return JSON.stringify(
          d,
          function (h, v) {
            return void 0 === v ? r : v;
          },
          n,
        )
          .split(JSON.stringify(r))
          .join("<undefined>");
      }
      function br(d) {
        return function (n) {
          for (var r = [], h = 1; h < arguments.length; h++)
            r[h - 1] = arguments[h];
          if ("number" == typeof n) {
            var v = n;
            (n = Va(v)) || ((n = dr(v, r)), (r = []));
          }
          d.apply(void 0, [n].concat(r));
        };
      }
      var rn = Object.assign(
        function (n, r) {
          for (var h = [], v = 2; v < arguments.length; v++)
            h[v - 2] = arguments[v];
          n || L(n, Va(r, h) || dr(r, h));
        },
        {
          debug: br(L.debug),
          log: br(L.log),
          warn: br(L.warn),
          error: br(L.error),
        },
      );
      function Ao(d) {
        for (var n = [], r = 1; r < arguments.length; r++)
          n[r - 1] = arguments[r];
        return new I(Va(d, n) || dr(d, n));
      }
      var _a = Symbol.for("ApolloErrorMessageHandler_" + ei);
      function qs(d) {
        if ("string" == typeof d) return d;
        try {
          return Mn(d, 2).slice(0, 1e3);
        } catch {
          return "<non-serializable>";
        }
      }
      function Va(d, n) {
        if ((void 0 === n && (n = []), d))
          return Bi[_a] && Bi[_a](d, n.map(qs));
      }
      function dr(d, n) {
        if ((void 0 === n && (n = []), d))
          return "An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#".concat(
            encodeURIComponent(
              JSON.stringify({ version: ei, message: d, args: n.map(qs) }),
            ),
          );
      }
      function Uu(d, n) {
        (null == n || n > d.length) && (n = d.length);
        for (var r = 0, h = new Array(n); r < n; r++) h[r] = d[r];
        return h;
      }
      function Dd(d, n) {
        for (var r = 0; r < n.length; r++) {
          var h = n[r];
          (h.enumerable = h.enumerable || !1),
            (h.configurable = !0),
            "value" in h && (h.writable = !0),
            Object.defineProperty(d, h.key, h);
        }
      }
      function Md(d, n, r) {
        return (
          n && Dd(d.prototype, n),
          r && Dd(d, r),
          Object.defineProperty(d, "prototype", { writable: !1 }),
          d
        );
      }
      globalThis;
      var Fc = function () {
          return "function" == typeof Symbol;
        },
        Lc = function (d) {
          return Fc() && !!Symbol[d];
        },
        Qs = function (d) {
          return Lc(d) ? Symbol[d] : "@@" + d;
        };
      Fc() && !Lc("observable") && (Symbol.observable = Symbol("observable"));
      var va = Qs("iterator"),
        Ed = Qs("observable"),
        pl = Qs("species");
      function ba(d, n) {
        var r = d[n];
        if (null != r) {
          if ("function" != typeof r)
            throw new TypeError(r + " is not a function");
          return r;
        }
      }
      function Ks(d) {
        var n = d.constructor;
        return (
          void 0 !== n && null === (n = n[pl]) && (n = void 0),
          void 0 !== n ? n : io
        );
      }
      function za(d) {
        za.log
          ? za.log(d)
          : setTimeout(function () {
              throw d;
            });
      }
      function Js(d) {
        Promise.resolve().then(function () {
          try {
            d();
          } catch (n) {
            za(n);
          }
        });
      }
      function Ad(d) {
        var n = d._cleanup;
        if (void 0 !== n && ((d._cleanup = void 0), n))
          try {
            if ("function" == typeof n) n();
            else {
              var r = ba(n, "unsubscribe");
              r && r.call(n);
            }
          } catch (h) {
            za(h);
          }
      }
      function ya(d) {
        (d._observer = void 0), (d._queue = void 0), (d._state = "closed");
      }
      function ju(d, n, r) {
        d._state = "running";
        var h = d._observer;
        try {
          var v = ba(h, n);
          switch (n) {
            case "next":
              v && v.call(h, r);
              break;
            case "error":
              if ((ya(d), !v)) throw r;
              v.call(h, r);
              break;
            case "complete":
              ya(d), v && v.call(h);
          }
        } catch (M) {
          za(M);
        }
        "closed" === d._state
          ? Ad(d)
          : "running" === d._state && (d._state = "ready");
      }
      function Hu(d, n, r) {
        if ("closed" !== d._state) {
          if ("buffering" === d._state)
            return void d._queue.push({ type: n, value: r });
          if ("ready" !== d._state)
            return (
              (d._state = "buffering"),
              (d._queue = [{ type: n, value: r }]),
              void Js(function () {
                return (function ql(d) {
                  var n = d._queue;
                  if (n) {
                    (d._queue = void 0), (d._state = "ready");
                    for (
                      var r = 0;
                      r < n.length &&
                      (ju(d, n[r].type, n[r].value), "closed" !== d._state);
                      ++r
                    );
                  }
                })(d);
              })
            );
          ju(d, n, r);
        }
      }
      var Xs = (function () {
          function d(r, h) {
            (this._cleanup = void 0),
              (this._observer = r),
              (this._queue = void 0),
              (this._state = "initializing");
            var v = new kd(this);
            try {
              this._cleanup = h.call(void 0, v);
            } catch (M) {
              v.error(M);
            }
            "initializing" === this._state && (this._state = "ready");
          }
          return (
            (d.prototype.unsubscribe = function () {
              "closed" !== this._state && (ya(this), Ad(this));
            }),
            Md(d, [
              {
                key: "closed",
                get: function () {
                  return "closed" === this._state;
                },
              },
            ]),
            d
          );
        })(),
        kd = (function () {
          function d(r) {
            this._subscription = r;
          }
          var n = d.prototype;
          return (
            (n.next = function (h) {
              Hu(this._subscription, "next", h);
            }),
            (n.error = function (h) {
              Hu(this._subscription, "error", h);
            }),
            (n.complete = function () {
              Hu(this._subscription, "complete");
            }),
            Md(d, [
              {
                key: "closed",
                get: function () {
                  return "closed" === this._subscription._state;
                },
              },
            ]),
            d
          );
        })(),
        io = (function () {
          function d(r) {
            if (!(this instanceof d))
              throw new TypeError("Observable cannot be called as a function");
            if ("function" != typeof r)
              throw new TypeError("Observable initializer must be a function");
            this._subscriber = r;
          }
          var n = d.prototype;
          return (
            (n.subscribe = function (h) {
              return (
                ("object" != typeof h || null === h) &&
                  (h = {
                    next: h,
                    error: arguments[1],
                    complete: arguments[2],
                  }),
                new Xs(h, this._subscriber)
              );
            }),
            (n.forEach = function (h) {
              var v = this;
              return new Promise(function (M, O) {
                if ("function" == typeof h)
                  var W = v.subscribe({
                    next: function (et) {
                      try {
                        h(et, V);
                      } catch (At) {
                        O(At), W.unsubscribe();
                      }
                    },
                    error: O,
                    complete: M,
                  });
                else O(new TypeError(h + " is not a function"));
                function V() {
                  W.unsubscribe(), M();
                }
              });
            }),
            (n.map = function (h) {
              var v = this;
              if ("function" != typeof h)
                throw new TypeError(h + " is not a function");
              return new (Ks(this))(function (O) {
                return v.subscribe({
                  next: function (V) {
                    try {
                      V = h(V);
                    } catch (W) {
                      return O.error(W);
                    }
                    O.next(V);
                  },
                  error: function (V) {
                    O.error(V);
                  },
                  complete: function () {
                    O.complete();
                  },
                });
              });
            }),
            (n.filter = function (h) {
              var v = this;
              if ("function" != typeof h)
                throw new TypeError(h + " is not a function");
              return new (Ks(this))(function (O) {
                return v.subscribe({
                  next: function (V) {
                    try {
                      if (!h(V)) return;
                    } catch (W) {
                      return O.error(W);
                    }
                    O.next(V);
                  },
                  error: function (V) {
                    O.error(V);
                  },
                  complete: function () {
                    O.complete();
                  },
                });
              });
            }),
            (n.reduce = function (h) {
              var v = this;
              if ("function" != typeof h)
                throw new TypeError(h + " is not a function");
              var M = Ks(this),
                O = arguments.length > 1,
                V = !1,
                et = arguments[1];
              return new M(function (At) {
                return v.subscribe({
                  next: function (zt) {
                    var Qt = !V;
                    if (((V = !0), !Qt || O))
                      try {
                        et = h(et, zt);
                      } catch (ge) {
                        return At.error(ge);
                      }
                    else et = zt;
                  },
                  error: function (zt) {
                    At.error(zt);
                  },
                  complete: function () {
                    if (!V && !O)
                      return At.error(
                        new TypeError("Cannot reduce an empty sequence"),
                      );
                    At.next(et), At.complete();
                  },
                });
              });
            }),
            (n.concat = function () {
              for (
                var h = this, v = arguments.length, M = new Array(v), O = 0;
                O < v;
                O++
              )
                M[O] = arguments[O];
              var V = Ks(this);
              return new V(function (W) {
                var et,
                  At = 0;
                return (
                  (function zt(Qt) {
                    et = Qt.subscribe({
                      next: function (ge) {
                        W.next(ge);
                      },
                      error: function (ge) {
                        W.error(ge);
                      },
                      complete: function () {
                        At === M.length
                          ? ((et = void 0), W.complete())
                          : zt(V.from(M[At++]));
                      },
                    });
                  })(h),
                  function () {
                    et && (et.unsubscribe(), (et = void 0));
                  }
                );
              });
            }),
            (n.flatMap = function (h) {
              var v = this;
              if ("function" != typeof h)
                throw new TypeError(h + " is not a function");
              var M = Ks(this);
              return new M(function (O) {
                var V = [],
                  W = v.subscribe({
                    next: function (At) {
                      if (h)
                        try {
                          At = h(At);
                        } catch (Qt) {
                          return O.error(Qt);
                        }
                      var zt = M.from(At).subscribe({
                        next: function (Qt) {
                          O.next(Qt);
                        },
                        error: function (Qt) {
                          O.error(Qt);
                        },
                        complete: function () {
                          var Qt = V.indexOf(zt);
                          Qt >= 0 && V.splice(Qt, 1), et();
                        },
                      });
                      V.push(zt);
                    },
                    error: function (At) {
                      O.error(At);
                    },
                    complete: function () {
                      et();
                    },
                  });
                function et() {
                  W.closed && 0 === V.length && O.complete();
                }
                return function () {
                  V.forEach(function (At) {
                    return At.unsubscribe();
                  }),
                    W.unsubscribe();
                };
              });
            }),
            (n[Ed] = function () {
              return this;
            }),
            (d.from = function (h) {
              var v = "function" == typeof this ? this : d;
              if (null == h) throw new TypeError(h + " is not an object");
              var M = ba(h, Ed);
              if (M) {
                var O = M.call(h);
                if (Object(O) !== O)
                  throw new TypeError(O + " is not an object");
                return (function Sd(d) {
                  return d instanceof io;
                })(O) && O.constructor === v
                  ? O
                  : new v(function (V) {
                      return O.subscribe(V);
                    });
              }
              if (Lc("iterator") && (M = ba(h, va)))
                return new v(function (V) {
                  Js(function () {
                    if (!V.closed) {
                      for (
                        var et,
                          W = (function yo(d, n) {
                            var r =
                              (typeof Symbol < "u" && d[Symbol.iterator]) ||
                              d["@@iterator"];
                            if (r) return (r = r.call(d)).next.bind(r);
                            if (
                              Array.isArray(d) ||
                              (r = (function Ds(d, n) {
                                if (d) {
                                  if ("string" == typeof d) return Uu(d, n);
                                  var r = Object.prototype.toString
                                    .call(d)
                                    .slice(8, -1);
                                  if (
                                    ("Object" === r &&
                                      d.constructor &&
                                      (r = d.constructor.name),
                                    "Map" === r || "Set" === r)
                                  )
                                    return Array.from(d);
                                  if (
                                    "Arguments" === r ||
                                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                      r,
                                    )
                                  )
                                    return Uu(d, n);
                                }
                              })(d)) ||
                              (n && d && "number" == typeof d.length)
                            ) {
                              r && (d = r);
                              var h = 0;
                              return function () {
                                return h >= d.length
                                  ? { done: !0 }
                                  : { done: !1, value: d[h++] };
                              };
                            }
                            throw new TypeError(
                              "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.",
                            );
                          })(M.call(h));
                        !(et = W()).done;

                      )
                        if ((V.next(et.value), V.closed)) return;
                      V.complete();
                    }
                  });
                });
              if (Array.isArray(h))
                return new v(function (V) {
                  Js(function () {
                    if (!V.closed) {
                      for (var W = 0; W < h.length; ++W)
                        if ((V.next(h[W]), V.closed)) return;
                      V.complete();
                    }
                  });
                });
              throw new TypeError(h + " is not observable");
            }),
            (d.of = function () {
              for (
                var h = arguments.length, v = new Array(h), M = 0;
                M < h;
                M++
              )
                v[M] = arguments[M];
              return new ("function" == typeof this ? this : d)(function (V) {
                Js(function () {
                  if (!V.closed) {
                    for (var W = 0; W < v.length; ++W)
                      if ((V.next(v[W]), V.closed)) return;
                    V.complete();
                  }
                });
              });
            }),
            Md(d, null, [
              {
                key: pl,
                get: function () {
                  return this;
                },
              },
            ]),
            d
          );
        })();
      function Lo(d) {
        return null !== d && "object" == typeof d;
      }
      function Xr(d, n) {
        var r = n,
          h = [];
        return (
          d.definitions.forEach(function (M) {
            if ("OperationDefinition" === M.kind)
              throw Ao(
                73,
                M.operation,
                M.name ? " named '".concat(M.name.value, "'") : "",
              );
            "FragmentDefinition" === M.kind && h.push(M);
          }),
          typeof r > "u" &&
            (rn(1 === h.length, 74, h.length), (r = h[0].name.value)),
          (0, Ee.pi)((0, Ee.pi)({}, d), {
            definitions: (0, Ee.ev)(
              [
                {
                  kind: "OperationDefinition",
                  operation: "query",
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: r },
                      },
                    ],
                  },
                },
              ],
              d.definitions,
              !0,
            ),
          })
        );
      }
      function xa(d) {
        void 0 === d && (d = []);
        var n = {};
        return (
          d.forEach(function (r) {
            n[r.name.value] = r;
          }),
          n
        );
      }
      function Nc(d, n) {
        switch (d.kind) {
          case "InlineFragment":
            return d;
          case "FragmentSpread":
            var r = d.name.value;
            if ("function" == typeof n) return n(r);
            var h = n && n[r];
            return rn(h, 75, r), h || null;
          default:
            return null;
        }
      }
      function Ua() {}
      Fc() &&
        Object.defineProperty(io, Symbol("extensions"), {
          value: { symbol: Ed, hostReportError: za },
          configurable: !0,
        });
      const Td = Ua,
        Bc =
          typeof WeakRef < "u"
            ? WeakRef
            : function (d) {
                return { deref: () => d };
              },
        Gu = typeof WeakMap < "u" ? WeakMap : Map,
        Zu =
          typeof FinalizationRegistry < "u"
            ? FinalizationRegistry
            : function () {
                return { register: Ua, unregister: Ua };
              };
      class Ql {
        constructor(n = 1 / 0, r = Td) {
          (this.max = n),
            (this.dispose = r),
            (this.map = new Gu()),
            (this.newest = null),
            (this.oldest = null),
            (this.unfinalizedNodes = new Set()),
            (this.finalizationScheduled = !1),
            (this.size = 0),
            (this.finalize = () => {
              const h = this.unfinalizedNodes.values();
              for (let v = 0; v < 10024; v++) {
                const M = h.next().value;
                if (!M) break;
                this.unfinalizedNodes.delete(M);
                const O = M.key;
                delete M.key,
                  (M.keyRef = new Bc(O)),
                  this.registry.register(O, M, M);
              }
              this.unfinalizedNodes.size > 0
                ? queueMicrotask(this.finalize)
                : (this.finalizationScheduled = !1);
            }),
            (this.registry = new Zu(this.deleteNode.bind(this)));
        }
        has(n) {
          return this.map.has(n);
        }
        get(n) {
          const r = this.getNode(n);
          return r && r.value;
        }
        getNode(n) {
          const r = this.map.get(n);
          if (r && r !== this.newest) {
            const { older: h, newer: v } = r;
            v && (v.older = h),
              h && (h.newer = v),
              (r.older = this.newest),
              (r.older.newer = r),
              (r.newer = null),
              (this.newest = r),
              r === this.oldest && (this.oldest = v);
          }
          return r;
        }
        set(n, r) {
          let h = this.getNode(n);
          return h
            ? (h.value = r)
            : ((h = { key: n, value: r, newer: null, older: this.newest }),
              this.newest && (this.newest.newer = h),
              (this.newest = h),
              (this.oldest = this.oldest || h),
              this.scheduleFinalization(h),
              this.map.set(n, h),
              this.size++,
              h.value);
        }
        clean() {
          for (; this.oldest && this.size > this.max; )
            this.deleteNode(this.oldest);
        }
        deleteNode(n) {
          n === this.newest && (this.newest = n.older),
            n === this.oldest && (this.oldest = n.newer),
            n.newer && (n.newer.older = n.older),
            n.older && (n.older.newer = n.newer),
            this.size--;
          const r = n.key || (n.keyRef && n.keyRef.deref());
          this.dispose(n.value, r),
            n.keyRef
              ? this.registry.unregister(n)
              : this.unfinalizedNodes.delete(n),
            r && this.map.delete(r);
        }
        delete(n) {
          const r = this.map.get(n);
          return !!r && (this.deleteNode(r), !0);
        }
        scheduleFinalization(n) {
          this.unfinalizedNodes.add(n),
            this.finalizationScheduled ||
              ((this.finalizationScheduled = !0),
              queueMicrotask(this.finalize));
        }
      }
      function Ms() {}
      class Kl {
        constructor(n = 1 / 0, r = Ms) {
          (this.max = n),
            (this.dispose = r),
            (this.map = new Map()),
            (this.newest = null),
            (this.oldest = null);
        }
        has(n) {
          return this.map.has(n);
        }
        get(n) {
          const r = this.getNode(n);
          return r && r.value;
        }
        get size() {
          return this.map.size;
        }
        getNode(n) {
          const r = this.map.get(n);
          if (r && r !== this.newest) {
            const { older: h, newer: v } = r;
            v && (v.older = h),
              h && (h.newer = v),
              (r.older = this.newest),
              (r.older.newer = r),
              (r.newer = null),
              (this.newest = r),
              r === this.oldest && (this.oldest = v);
          }
          return r;
        }
        set(n, r) {
          let h = this.getNode(n);
          return h
            ? (h.value = r)
            : ((h = { key: n, value: r, newer: null, older: this.newest }),
              this.newest && (this.newest.newer = h),
              (this.newest = h),
              (this.oldest = this.oldest || h),
              this.map.set(n, h),
              h.value);
        }
        clean() {
          for (; this.oldest && this.map.size > this.max; )
            this.delete(this.oldest.key);
        }
        delete(n) {
          const r = this.map.get(n);
          return (
            !!r &&
            (r === this.newest && (this.newest = r.older),
            r === this.oldest && (this.oldest = r.newer),
            r.newer && (r.newer.older = r.older),
            r.older && (r.older.newer = r.newer),
            this.map.delete(n),
            this.dispose(r.value, n),
            !0)
          );
        }
      }
      var ja = new WeakSet();
      function Vc(d) {
        d.size <= (d.max || -1) ||
          ja.has(d) ||
          (ja.add(d),
          setTimeout(function () {
            d.clean(), ja.delete(d);
          }, 100));
      }
      var Od = function (d, n) {
          var r = new Ql(d, n);
          return (
            (r.set = function (h, v) {
              var M = Ql.prototype.set.call(this, h, v);
              return Vc(this), M;
            }),
            r
          );
        },
        Jl = function (d, n) {
          var r = new Kl(d, n);
          return (
            (r.set = function (h, v) {
              var M = Kl.prototype.set.call(this, h, v);
              return Vc(this), M;
            }),
            r
          );
        },
        zc = Symbol.for("apollo.cacheSize"),
        ta = (0, Ee.pi)({}, Bi[zc]),
        ea = {};
      function Uc(d, n) {
        ea[d] = n;
      }
      var Xl =
          !1 !== globalThis.__DEV__
            ? function Ha() {
                var d, n, r, h, v;
                if (!1 === globalThis.__DEV__)
                  throw new Error("only supported in development mode");
                return {
                  limits: Object.fromEntries(
                    Object.entries({
                      parser: 1e3,
                      canonicalStringify: 1e3,
                      print: 2e3,
                      "documentTransform.cache": 2e3,
                      "queryManager.getDocumentInfo": 2e3,
                      "PersistedQueryLink.persistedQueryHashes": 2e3,
                      "fragmentRegistry.transform": 2e3,
                      "fragmentRegistry.lookup": 1e3,
                      "fragmentRegistry.findFragmentSpreads": 4e3,
                      "cache.fragmentQueryDocuments": 1e3,
                      "removeTypenameFromVariables.getVariableDefinitions": 2e3,
                      "inMemoryCache.maybeBroadcastWatch": 5e3,
                      "inMemoryCache.executeSelectionSet": 5e4,
                      "inMemoryCache.executeSubSelectedArray": 1e4,
                    }).map(function (n) {
                      var r = n[0];
                      return [r, ta[r] || n[1]];
                    }),
                  ),
                  sizes: (0, Ee.pi)(
                    {
                      print:
                        null === (d = ea.print) || void 0 === d
                          ? void 0
                          : d.call(ea),
                      parser:
                        null === (n = ea.parser) || void 0 === n
                          ? void 0
                          : n.call(ea),
                      canonicalStringify:
                        null === (r = ea.canonicalStringify) || void 0 === r
                          ? void 0
                          : r.call(ea),
                      links: ec(this.link),
                      queryManager: {
                        getDocumentInfo: this.queryManager.transformCache.size,
                        documentTransforms: ur(
                          this.queryManager.documentTransform,
                        ),
                      },
                    },
                    null === (v = (h = this.cache).getMemoryInternals) ||
                      void 0 === v
                      ? void 0
                      : v.call(h),
                  ),
                };
              }
            : void 0,
        gl =
          !1 !== globalThis.__DEV__
            ? function Wu() {
                var d = this.config.fragments;
                return (0, Ee.pi)((0, Ee.pi)({}, $u.apply(this)), {
                  addTypenameDocumentTransform: ur(this.addTypenameTransform),
                  inMemoryCache: {
                    executeSelectionSet: Br(
                      this.storeReader.executeSelectionSet,
                    ),
                    executeSubSelectedArray: Br(
                      this.storeReader.executeSubSelectedArray,
                    ),
                    maybeBroadcastWatch: Br(this.maybeBroadcastWatch),
                  },
                  fragmentRegistry: {
                    findFragmentSpreads: Br(d?.findFragmentSpreads),
                    lookup: Br(d?.lookup),
                    transform: Br(d?.transform),
                  },
                });
              }
            : void 0,
        lf = !1 !== globalThis.__DEV__ ? $u : void 0;
      function $u() {
        return { cache: { fragmentQueryDocuments: Br(this.getFragmentDoc) } };
      }
      function Br(d) {
        return (function qu(d) {
          return !!d && "dirtyKey" in d;
        })(d)
          ? d.size
          : void 0;
      }
      function Id(d) {
        return null != d;
      }
      function ur(d) {
        return Rd(d).map(function (n) {
          return { cache: n };
        });
      }
      function Rd(d) {
        return d
          ? (0, Ee.ev)(
              (0, Ee.ev)([Br(d?.performWork)], Rd(d?.left), !0),
              Rd(d?.right),
              !0,
            ).filter(Id)
          : [];
      }
      function ec(d) {
        var n;
        return d
          ? (0, Ee.ev)(
              (0, Ee.ev)(
                [
                  null === (n = d?.getMemoryInternals) || void 0 === n
                    ? void 0
                    : n.call(d),
                ],
                ec(d?.left),
                !0,
              ),
              ec(d?.right),
              !0,
            ).filter(Id)
          : [];
      }
      var Ga,
        Vr = Object.assign(
          function (n) {
            return JSON.stringify(n, Qu);
          },
          {
            reset: function () {
              Ga = new Jl(ta.canonicalStringify || 1e3);
            },
          },
        );
      function Qu(d, n) {
        if (n && "object" == typeof n) {
          var r = Object.getPrototypeOf(n);
          if (r === Object.prototype || null === r) {
            var h = Object.keys(n);
            if (h.every(Pd)) return n;
            var v = JSON.stringify(h),
              M = Ga.get(v);
            if (!M) {
              h.sort();
              var O = JSON.stringify(h);
              (M = Ga.get(O) || h), Ga.set(v, M), Ga.set(O, M);
            }
            var V = Object.create(r);
            return (
              M.forEach(function (W) {
                V[W] = n[W];
              }),
              V
            );
          }
        }
        return n;
      }
      function Pd(d, n, r) {
        return 0 === n || r[n - 1] <= d;
      }
      function Ar(d) {
        return { __ref: String(d) };
      }
      function Ln(d) {
        return !(!d || "object" != typeof d || "string" != typeof d.__ref);
      }
      function bl(d, n, r, h) {
        if (
          (function _l(d) {
            return "IntValue" === d.kind;
          })(r) ||
          (function Bm(d) {
            return "FloatValue" === d.kind;
          })(r)
        )
          d[n.value] = Number(r.value);
        else if (
          (function Ld(d) {
            return "BooleanValue" === d.kind;
          })(r) ||
          (function Fd(d) {
            return "StringValue" === d.kind;
          })(r)
        )
          d[n.value] = r.value;
        else if (
          (function Nd(d) {
            return "ObjectValue" === d.kind;
          })(r)
        ) {
          var v = {};
          r.fields.map(function (O) {
            return bl(v, O.name, O.value, h);
          }),
            (d[n.value] = v);
        } else if (
          (function vl(d) {
            return "Variable" === d.kind;
          })(r)
        )
          d[n.value] = (h || {})[r.name.value];
        else if (
          (function Vm(d) {
            return "ListValue" === d.kind;
          })(r)
        )
          d[n.value] = r.values.map(function (O) {
            var V = {};
            return bl(V, n, O, h), V[n.value];
          });
        else if (
          (function zm(d) {
            return "EnumValue" === d.kind;
          })(r)
        )
          d[n.value] = r.value;
        else {
          if (
            !(function Um(d) {
              return "NullValue" === d.kind;
            })(r)
          )
            throw Ao(84, n.value, r.kind);
          d[n.value] = null;
        }
      }
      !1 !== globalThis.__DEV__ &&
        Uc("canonicalStringify", function () {
          return Ga.size;
        }),
        Vr.reset();
      var yl = [
          "connection",
          "include",
          "skip",
          "client",
          "rest",
          "export",
          "nonreactive",
        ],
        xl = Vr,
        Ku = Object.assign(
          function (d, n, r) {
            if (n && r && r.connection && r.connection.key) {
              if (r.connection.filter && r.connection.filter.length > 0) {
                var h = r.connection.filter ? r.connection.filter : [];
                h.sort();
                var v = {};
                return (
                  h.forEach(function (V) {
                    v[V] = n[V];
                  }),
                  "".concat(r.connection.key, "(").concat(xl(v), ")")
                );
              }
              return r.connection.key;
            }
            var M = d;
            if (n) {
              var O = xl(n);
              M += "(".concat(O, ")");
            }
            return (
              r &&
                Object.keys(r).forEach(function (V) {
                  -1 === yl.indexOf(V) &&
                    (r[V] && Object.keys(r[V]).length
                      ? (M += "@".concat(V, "(").concat(xl(r[V]), ")"))
                      : (M += "@".concat(V)));
                }),
              M
            );
          },
          {
            setStringify: function (d) {
              var n = xl;
              return (xl = d), n;
            },
          },
        );
      function ko(d, n) {
        if (d.arguments && d.arguments.length) {
          var r = {};
          return (
            d.arguments.forEach(function (h) {
              return bl(r, h.name, h.value, n);
            }),
            r
          );
        }
        return null;
      }
      function Es(d) {
        return d.alias ? d.alias.value : d.name.value;
      }
      function Ya(d, n, r) {
        for (var h, v = 0, M = n.selections; v < M.length; v++)
          if (wa((O = M[v]))) {
            if ("__typename" === O.name.value) return d[Es(O)];
          } else h ? h.push(O) : (h = [O]);
        if ("string" == typeof d.__typename) return d.__typename;
        if (h)
          for (var V = 0, W = h; V < W.length; V++) {
            var O,
              et = Ya(d, Nc((O = W[V]), r).selectionSet, r);
            if ("string" == typeof et) return et;
          }
      }
      function wa(d) {
        return "Field" === d.kind;
      }
      function Ss(d) {
        rn(d && "Document" === d.kind, 76);
        var n = d.definitions
          .filter(function (r) {
            return "FragmentDefinition" !== r.kind;
          })
          .map(function (r) {
            if ("OperationDefinition" !== r.kind) throw Ao(77, r.kind);
            return r;
          });
        return rn(n.length <= 1, 78, n.length), d;
      }
      function wl(d) {
        return (
          Ss(d),
          d.definitions.filter(function (n) {
            return "OperationDefinition" === n.kind;
          })[0]
        );
      }
      function ia(d) {
        return (
          d.definitions
            .filter(function (n) {
              return "OperationDefinition" === n.kind && !!n.name;
            })
            .map(function (n) {
              return n.name.value;
            })[0] || null
        );
      }
      function na(d) {
        return d.definitions.filter(function (n) {
          return "FragmentDefinition" === n.kind;
        });
      }
      function Ju(d) {
        var n = wl(d);
        return rn(n && "query" === n.operation, 79), n;
      }
      function es(d) {
        Ss(d);
        for (var n, r = 0, h = d.definitions; r < h.length; r++) {
          var v = h[r];
          if ("OperationDefinition" === v.kind) {
            var M = v.operation;
            if ("query" === M || "mutation" === M || "subscription" === M)
              return v;
          }
          "FragmentDefinition" === v.kind && !n && (n = v);
        }
        if (n) return n;
        throw Ao(83);
      }
      function Xu(d) {
        var n = Object.create(null),
          r = d && d.variableDefinitions;
        return (
          r &&
            r.length &&
            r.forEach(function (h) {
              h.defaultValue && bl(n, h.variable.name, h.defaultValue);
            }),
          n
        );
      }
      function oa(d, n) {
        return n ? n(d) : io.of();
      }
      function jc(d) {
        return "function" == typeof d ? new Ca(d) : d;
      }
      function ic(d) {
        return d.request.length <= 1;
      }
      var Ca = (function () {
          function d(n) {
            n && (this.request = n);
          }
          return (
            (d.empty = function () {
              return new d(function () {
                return io.of();
              });
            }),
            (d.from = function (n) {
              return 0 === n.length
                ? d.empty()
                : n.map(jc).reduce(function (r, h) {
                    return r.concat(h);
                  });
            }),
            (d.split = function (n, r, h) {
              var O,
                v = jc(r),
                M = jc(h || new d(oa));
              return (
                (O =
                  ic(v) && ic(M)
                    ? new d(function (V) {
                        return n(V)
                          ? v.request(V) || io.of()
                          : M.request(V) || io.of();
                      })
                    : new d(function (V, W) {
                        return n(V)
                          ? v.request(V, W) || io.of()
                          : M.request(V, W) || io.of();
                      })),
                Object.assign(O, { left: v, right: M })
              );
            }),
            (d.execute = function (n, r) {
              return (
                n.request(
                  (function af(d, n) {
                    var r = (0, Ee.pi)({}, d);
                    return (
                      Object.defineProperty(n, "setContext", {
                        enumerable: !1,
                        value: function (M) {
                          r = (0, Ee.pi)(
                            (0, Ee.pi)({}, r),
                            "function" == typeof M ? M(r) : M,
                          );
                        },
                      }),
                      Object.defineProperty(n, "getContext", {
                        enumerable: !1,
                        value: function () {
                          return (0, Ee.pi)({}, r);
                        },
                      }),
                      n
                    );
                  })(
                    r.context,
                    (function zr(d) {
                      var n = {
                        variables: d.variables || {},
                        extensions: d.extensions || {},
                        operationName: d.operationName,
                        query: d.query,
                      };
                      return (
                        n.operationName ||
                          (n.operationName =
                            "string" != typeof n.query
                              ? ia(n.query) || void 0
                              : ""),
                        n
                      );
                    })(
                      (function Bd(d) {
                        for (
                          var n = [
                              "query",
                              "operationName",
                              "variables",
                              "extensions",
                              "context",
                            ],
                            r = 0,
                            h = Object.keys(d);
                          r < h.length;
                          r++
                        ) {
                          var v = h[r];
                          if (n.indexOf(v) < 0) throw Ao(43, v);
                        }
                        return d;
                      })(r),
                    ),
                  ),
                ) || io.of()
              );
            }),
            (d.concat = function (n, r) {
              var h = jc(n);
              if (ic(h)) return !1 !== globalThis.__DEV__ && rn.warn(35, h), h;
              var M,
                v = jc(r);
              return (
                (M = ic(v)
                  ? new d(function (O) {
                      return (
                        h.request(O, function (V) {
                          return v.request(V) || io.of();
                        }) || io.of()
                      );
                    })
                  : new d(function (O, V) {
                      return (
                        h.request(O, function (W) {
                          return v.request(W, V) || io.of();
                        }) || io.of()
                      );
                    })),
                Object.assign(M, { left: h, right: v })
              );
            }),
            (d.prototype.split = function (n, r, h) {
              return this.concat(d.split(n, r, h || new d(oa)));
            }),
            (d.prototype.concat = function (n) {
              return d.concat(this, n);
            }),
            (d.prototype.request = function (n, r) {
              throw Ao(36);
            }),
            (d.prototype.onError = function (n, r) {
              if (r && r.error) return r.error(n), !1;
              throw n;
            }),
            (d.prototype.setOnError = function (n) {
              return (this.onError = n), this;
            }),
            d
          );
        })(),
        Vd = Ca.execute;
      function df(d, n) {
        if (!d) throw new Error(n);
      }
      const zd = 10,
        Ud = 2;
      function th(d) {
        return $a(d, []);
      }
      function $a(d, n) {
        switch (typeof d) {
          case "string":
            return JSON.stringify(d);
          case "function":
            return d.name ? `[function ${d.name}]` : "[function]";
          case "object":
            return (function Hc(d, n) {
              if (null === d) return "null";
              if (n.includes(d)) return "[Circular]";
              const r = [...n, d];
              if (
                (function uf(d) {
                  return "function" == typeof d.toJSON;
                })(d)
              ) {
                const h = d.toJSON();
                if (h !== d) return "string" == typeof h ? h : $a(h, r);
              } else if (Array.isArray(d))
                return (function hf(d, n) {
                  if (0 === d.length) return "[]";
                  if (n.length > Ud) return "[Array]";
                  const r = Math.min(zd, d.length),
                    h = d.length - r,
                    v = [];
                  for (let M = 0; M < r; ++M) v.push($a(d[M], n));
                  return (
                    1 === h
                      ? v.push("... 1 more item")
                      : h > 1 && v.push(`... ${h} more items`),
                    "[" + v.join(", ") + "]"
                  );
                })(d, r);
              return (function Gc(d, n) {
                const r = Object.entries(d);
                return 0 === r.length
                  ? "{}"
                  : n.length > Ud
                    ? "[" +
                      (function nc(d) {
                        const n = Object.prototype.toString
                          .call(d)
                          .replace(/^\[object /, "")
                          .replace(/]$/, "");
                        if (
                          "Object" === n &&
                          "function" == typeof d.constructor
                        ) {
                          const r = d.constructor.name;
                          if ("string" == typeof r && "" !== r) return r;
                        }
                        return n;
                      })(d) +
                      "]"
                    : "{ " +
                      r.map(([v, M]) => v + ": " + $a(M, n)).join(", ") +
                      " }";
              })(d, r);
            })(d, n);
          default:
            return String(d);
        }
      }
      Symbol, Symbol;
      const Zc = {
          Name: [],
          Document: ["definitions"],
          OperationDefinition: [
            "name",
            "variableDefinitions",
            "directives",
            "selectionSet",
          ],
          VariableDefinition: [
            "variable",
            "type",
            "defaultValue",
            "directives",
          ],
          Variable: ["name"],
          SelectionSet: ["selections"],
          Field: ["alias", "name", "arguments", "directives", "selectionSet"],
          Argument: ["name", "value"],
          FragmentSpread: ["name", "directives"],
          InlineFragment: ["typeCondition", "directives", "selectionSet"],
          FragmentDefinition: [
            "name",
            "variableDefinitions",
            "typeCondition",
            "directives",
            "selectionSet",
          ],
          IntValue: [],
          FloatValue: [],
          StringValue: [],
          BooleanValue: [],
          NullValue: [],
          EnumValue: [],
          ListValue: ["values"],
          ObjectValue: ["fields"],
          ObjectField: ["name", "value"],
          Directive: ["name", "arguments"],
          NamedType: ["name"],
          ListType: ["type"],
          NonNullType: ["type"],
          SchemaDefinition: ["description", "directives", "operationTypes"],
          OperationTypeDefinition: ["type"],
          ScalarTypeDefinition: ["description", "name", "directives"],
          ObjectTypeDefinition: [
            "description",
            "name",
            "interfaces",
            "directives",
            "fields",
          ],
          FieldDefinition: [
            "description",
            "name",
            "arguments",
            "type",
            "directives",
          ],
          InputValueDefinition: [
            "description",
            "name",
            "type",
            "defaultValue",
            "directives",
          ],
          InterfaceTypeDefinition: [
            "description",
            "name",
            "interfaces",
            "directives",
            "fields",
          ],
          UnionTypeDefinition: ["description", "name", "directives", "types"],
          EnumTypeDefinition: ["description", "name", "directives", "values"],
          EnumValueDefinition: ["description", "name", "directives"],
          InputObjectTypeDefinition: [
            "description",
            "name",
            "directives",
            "fields",
          ],
          DirectiveDefinition: [
            "description",
            "name",
            "arguments",
            "locations",
          ],
          SchemaExtension: ["directives", "operationTypes"],
          ScalarTypeExtension: ["name", "directives"],
          ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
          InterfaceTypeExtension: [
            "name",
            "interfaces",
            "directives",
            "fields",
          ],
          UnionTypeExtension: ["name", "directives", "types"],
          EnumTypeExtension: ["name", "directives", "values"],
          InputObjectTypeExtension: ["name", "directives", "fields"],
        },
        Yc = new Set(Object.keys(Zc));
      function $c(d) {
        const n = d?.kind;
        return "string" == typeof n && Yc.has(n);
      }
      var hr = (function (d) {
        return (
          (d.NAME = "Name"),
          (d.DOCUMENT = "Document"),
          (d.OPERATION_DEFINITION = "OperationDefinition"),
          (d.VARIABLE_DEFINITION = "VariableDefinition"),
          (d.SELECTION_SET = "SelectionSet"),
          (d.FIELD = "Field"),
          (d.ARGUMENT = "Argument"),
          (d.FRAGMENT_SPREAD = "FragmentSpread"),
          (d.INLINE_FRAGMENT = "InlineFragment"),
          (d.FRAGMENT_DEFINITION = "FragmentDefinition"),
          (d.VARIABLE = "Variable"),
          (d.INT = "IntValue"),
          (d.FLOAT = "FloatValue"),
          (d.STRING = "StringValue"),
          (d.BOOLEAN = "BooleanValue"),
          (d.NULL = "NullValue"),
          (d.ENUM = "EnumValue"),
          (d.LIST = "ListValue"),
          (d.OBJECT = "ObjectValue"),
          (d.OBJECT_FIELD = "ObjectField"),
          (d.DIRECTIVE = "Directive"),
          (d.NAMED_TYPE = "NamedType"),
          (d.LIST_TYPE = "ListType"),
          (d.NON_NULL_TYPE = "NonNullType"),
          (d.SCHEMA_DEFINITION = "SchemaDefinition"),
          (d.OPERATION_TYPE_DEFINITION = "OperationTypeDefinition"),
          (d.SCALAR_TYPE_DEFINITION = "ScalarTypeDefinition"),
          (d.OBJECT_TYPE_DEFINITION = "ObjectTypeDefinition"),
          (d.FIELD_DEFINITION = "FieldDefinition"),
          (d.INPUT_VALUE_DEFINITION = "InputValueDefinition"),
          (d.INTERFACE_TYPE_DEFINITION = "InterfaceTypeDefinition"),
          (d.UNION_TYPE_DEFINITION = "UnionTypeDefinition"),
          (d.ENUM_TYPE_DEFINITION = "EnumTypeDefinition"),
          (d.ENUM_VALUE_DEFINITION = "EnumValueDefinition"),
          (d.INPUT_OBJECT_TYPE_DEFINITION = "InputObjectTypeDefinition"),
          (d.DIRECTIVE_DEFINITION = "DirectiveDefinition"),
          (d.SCHEMA_EXTENSION = "SchemaExtension"),
          (d.SCALAR_TYPE_EXTENSION = "ScalarTypeExtension"),
          (d.OBJECT_TYPE_EXTENSION = "ObjectTypeExtension"),
          (d.INTERFACE_TYPE_EXTENSION = "InterfaceTypeExtension"),
          (d.UNION_TYPE_EXTENSION = "UnionTypeExtension"),
          (d.ENUM_TYPE_EXTENSION = "EnumTypeExtension"),
          (d.INPUT_OBJECT_TYPE_EXTENSION = "InputObjectTypeExtension"),
          d
        );
      })(hr || {});
      const is = Object.freeze({});
      function Ur(d, n, r = Zc) {
        const h = new Map();
        for (const ti of Object.values(hr)) h.set(ti, nh(n, ti));
        let v,
          At,
          zt,
          M = Array.isArray(d),
          O = [d],
          V = -1,
          W = [],
          et = d;
        const Qt = [],
          ge = [];
        do {
          V++;
          const ti = V === O.length,
            Ci = ti && 0 !== W.length;
          if (ti) {
            if (
              ((At = 0 === ge.length ? void 0 : Qt[Qt.length - 1]),
              (et = zt),
              (zt = ge.pop()),
              Ci)
            )
              if (M) {
                et = et.slice();
                let Pi = 0;
                for (const [zi, Gi] of W) {
                  const Ki = zi - Pi;
                  null === Gi ? (et.splice(Ki, 1), Pi++) : (et[Ki] = Gi);
                }
              } else {
                et = Object.defineProperties(
                  {},
                  Object.getOwnPropertyDescriptors(et),
                );
                for (const [Pi, zi] of W) et[Pi] = zi;
              }
            (V = v.index),
              (O = v.keys),
              (W = v.edits),
              (M = v.inArray),
              (v = v.prev);
          } else if (zt) {
            if (((At = M ? V : O[V]), (et = zt[At]), null == et)) continue;
            Qt.push(At);
          }
          let di;
          if (!Array.isArray(et)) {
            var je, Ye;
            $c(et) || df(!1, `Invalid AST Node: ${th(et)}.`);
            const Pi = ti
              ? null === (je = h.get(et.kind)) || void 0 === je
                ? void 0
                : je.leave
              : null === (Ye = h.get(et.kind)) || void 0 === Ye
                ? void 0
                : Ye.enter;
            if (((di = Pi?.call(n, et, At, zt, Qt, ge)), di === is)) break;
            if (!1 === di) {
              if (!ti) {
                Qt.pop();
                continue;
              }
            } else if (void 0 !== di && (W.push([At, di]), !ti)) {
              if (!$c(di)) {
                Qt.pop();
                continue;
              }
              et = di;
            }
          }
          var $e;
          void 0 === di && Ci && W.push([At, et]),
            ti
              ? Qt.pop()
              : ((v = { inArray: M, index: V, keys: O, edits: W, prev: v }),
                (M = Array.isArray(et)),
                (O = M
                  ? et
                  : null !== ($e = r[et.kind]) && void 0 !== $e
                    ? $e
                    : []),
                (V = -1),
                (W = []),
                zt && ge.push(zt),
                (zt = et));
        } while (void 0 !== v);
        return 0 !== W.length ? W[W.length - 1][1] : d;
      }
      function nh(d, n) {
        const r = d[n];
        return "object" == typeof r
          ? r
          : "function" == typeof r
            ? { enter: r, leave: void 0 }
            : { enter: d.enter, leave: d.leave };
      }
      function Cl(d, n) {
        var r = d.directives;
        return (
          !r ||
          !r.length ||
          (function pf(d) {
            var n = [];
            return (
              d &&
                d.length &&
                d.forEach(function (r) {
                  if (
                    (function oh(d) {
                      var n = d.name.value;
                      return "skip" === n || "include" === n;
                    })(r)
                  ) {
                    var h = r.arguments,
                      v = r.name.value;
                    rn(h && 1 === h.length, 70, v);
                    var M = h[0];
                    rn(M.name && "if" === M.name.value, 71, v);
                    var O = M.value;
                    rn(
                      O && ("Variable" === O.kind || "BooleanValue" === O.kind),
                      72,
                      v,
                    ),
                      n.push({ directive: r, ifArgument: M });
                  }
                }),
              n
            );
          })(r).every(function (h) {
            var v = h.directive,
              M = h.ifArgument,
              O = !1;
            return (
              "Variable" === M.value.kind
                ? rn(
                    void 0 !== (O = n && n[M.value.name.value]),
                    69,
                    v.name.value,
                  )
                : (O = M.value.value),
              "skip" === v.name.value ? !O : O
            );
          })
        );
      }
      function Wa(d, n, r) {
        var h = new Set(d),
          v = h.size;
        return (
          Ur(n, {
            Directive: function (M) {
              if (h.delete(M.name.value) && (!r || !h.size)) return is;
            },
          }),
          r ? !h.size : h.size < v
        );
      }
      function Wc(d) {
        return d && Wa(["client", "export"], d, !0);
      }
      var qc = function (d, n) {
          var r;
          try {
            r = JSON.stringify(d);
          } catch (v) {
            var h = Ao(39, n, v.message);
            throw ((h.parseError = v), h);
          }
          return r;
        },
        Hd =
          "ReactNative" ==
          Ke(function () {
            return navigator.product;
          }),
        oc = "function" == typeof WeakMap && !(Hd && !global.HermesInternal),
        rh = "function" == typeof WeakSet,
        Gd = "function" == typeof Symbol && "function" == typeof Symbol.for,
        Dl = Gd && Symbol.asyncIterator;
      function lh(d) {
        var n = {
          next: function () {
            return d.read();
          },
        };
        return (
          Dl &&
            (n[Symbol.asyncIterator] = function () {
              return this;
            }),
          n
        );
      }
      function Yd(d) {
        var n = d;
        if (
          ((function gf(d) {
            return !!d.body;
          })(d) && (n = d.body),
          (function rc(d) {
            return !(!Dl || !d[Symbol.asyncIterator]);
          })(n))
        )
          return (function qm(d) {
            var n,
              r = d[Symbol.asyncIterator]();
            return (
              ((n = {
                next: function () {
                  return r.next();
                },
              })[Symbol.asyncIterator] = function () {
                return this;
              }),
              n
            );
          })(n);
        if (
          (function _f(d) {
            return !!d.getReader;
          })(n)
        )
          return lh(n.getReader());
        if (
          (function Qc(d) {
            return !!d.stream;
          })(n)
        )
          return lh(n.stream().getReader());
        if (
          (function Zd(d) {
            return !!d.arrayBuffer;
          })(n)
        )
          return (function Qm(d) {
            var n = !1,
              r = {
                next: function () {
                  return n
                    ? Promise.resolve({ value: void 0, done: !0 })
                    : ((n = !0),
                      new Promise(function (h, v) {
                        d.then(function (M) {
                          h({ value: M, done: !1 });
                        }).catch(v);
                      }));
                },
              };
            return (
              Dl &&
                (r[Symbol.asyncIterator] = function () {
                  return this;
                }),
              r
            );
          })(n.arrayBuffer());
        if (
          (function ch(d) {
            return !!d.pipe;
          })(n)
        )
          return (function ah(d) {
            var n = null,
              r = null,
              h = !1,
              v = [],
              M = [];
            function O(zt) {
              if (!r) {
                if (M.length) {
                  var Qt = M.shift();
                  if (Array.isArray(Qt) && Qt[0])
                    return Qt[0]({ value: zt, done: !1 });
                }
                v.push(zt);
              }
            }
            function V(zt) {
              (r = zt),
                M.slice().forEach(function (ge) {
                  ge[1](zt);
                }),
                !n || n();
            }
            function W() {
              (h = !0),
                M.slice().forEach(function (Qt) {
                  Qt[0]({ value: void 0, done: !0 });
                }),
                !n || n();
            }
            (n = function () {
              (n = null),
                d.removeListener("data", O),
                d.removeListener("error", V),
                d.removeListener("end", W),
                d.removeListener("finish", W),
                d.removeListener("close", W);
            }),
              d.on("data", O),
              d.on("error", V),
              d.on("end", W),
              d.on("finish", W),
              d.on("close", W);
            var At = {
              next: function () {
                return (function et() {
                  return new Promise(function (zt, Qt) {
                    return r
                      ? Qt(r)
                      : v.length
                        ? zt({ value: v.shift(), done: !1 })
                        : h
                          ? zt({ value: void 0, done: !0 })
                          : void M.push([zt, Qt]);
                  });
                })();
              },
            };
            return (
              Dl &&
                (At[Symbol.asyncIterator] = function () {
                  return this;
                }),
              At
            );
          })(n);
        throw new Error(
          "Unknown body type for responseIterator. Please pass a streamable response.",
        );
      }
      Ke(function () {
        return window.document.createElement;
      }),
        Ke(function () {
          return navigator.userAgent.indexOf("jsdom") >= 0;
        });
      var qa = function (d, n, r) {
          var h = new Error(r);
          throw (
            ((h.name = "ServerError"),
            (h.response = d),
            (h.statusCode = d.status),
            (h.result = n),
            h)
          );
        },
        Kc = Symbol(),
        ra = (function (d) {
          function n(r) {
            var h = r.graphQLErrors,
              v = r.protocolErrors,
              M = r.clientErrors,
              O = r.networkError,
              V = r.errorMessage,
              W = r.extraInfo,
              et = d.call(this, V) || this;
            return (
              (et.name = "ApolloError"),
              (et.graphQLErrors = h || []),
              (et.protocolErrors = v || []),
              (et.clientErrors = M || []),
              (et.networkError = O || null),
              (et.message =
                V ||
                (function (d) {
                  var n = (0, Ee.ev)(
                    (0, Ee.ev)(
                      (0, Ee.ev)([], d.graphQLErrors, !0),
                      d.clientErrors,
                      !0,
                    ),
                    d.protocolErrors,
                    !0,
                  );
                  return (
                    d.networkError && n.push(d.networkError),
                    n
                      .map(function (r) {
                        return (
                          (Lo(r) && r.message) || "Error message not found."
                        );
                      })
                      .join("\n")
                  );
                })(et)),
              (et.extraInfo = W),
              (et.cause =
                (0, Ee.ev)(
                  (0, Ee.ev)((0, Ee.ev)([O], h || [], !0), v || [], !0),
                  M || [],
                  !0,
                ).find(function (At) {
                  return !!At;
                }) || null),
              (et.__proto__ = n.prototype),
              et
            );
          }
          return (0, Ee.ZT)(n, d), n;
        })(Error),
        fo = Array.isArray;
      function As(d) {
        return Array.isArray(d) && d.length > 0;
      }
      var vf = Object.prototype.hasOwnProperty;
      function Ml() {
        for (var d = [], n = 0; n < arguments.length; n++) d[n] = arguments[n];
        return El(d);
      }
      function El(d) {
        var n = d[0] || {},
          r = d.length;
        if (r > 1)
          for (var h = new fr(), v = 1; v < r; ++v) n = h.merge(n, d[v]);
        return n;
      }
      var ac = function (d, n, r) {
          return this.merge(d[r], n[r]);
        },
        fr = (function () {
          function d(n) {
            void 0 === n && (n = ac),
              (this.reconciler = n),
              (this.isObject = Lo),
              (this.pastCopies = new Set());
          }
          return (
            (d.prototype.merge = function (n, r) {
              for (var h = this, v = [], M = 2; M < arguments.length; M++)
                v[M - 2] = arguments[M];
              return Lo(r) && Lo(n)
                ? (Object.keys(r).forEach(function (O) {
                    if (vf.call(n, O)) {
                      var V = n[O];
                      if (r[O] !== V) {
                        var W = h.reconciler.apply(
                          h,
                          (0, Ee.ev)([n, r, O], v, !1),
                        );
                        W !== V && ((n = h.shallowCopyForMerge(n))[O] = W);
                      }
                    } else (n = h.shallowCopyForMerge(n))[O] = r[O];
                  }),
                  n)
                : r;
            }),
            (d.prototype.shallowCopyForMerge = function (n) {
              return (
                Lo(n) &&
                  (this.pastCopies.has(n) ||
                    ((n = Array.isArray(n)
                      ? n.slice(0)
                      : (0, Ee.pi)({ __proto__: Object.getPrototypeOf(n) }, n)),
                    this.pastCopies.add(n))),
                n
              );
            }),
            d
          );
        })();
      function kr(d) {
        return "incremental" in d;
      }
      function bf(d) {
        return Lo(d) && "payload" in d;
      }
      function Cr(d, n) {
        var r = d,
          h = new fr();
        return (
          kr(n) &&
            As(n.incremental) &&
            n.incremental.forEach(function (v) {
              for (var M = v.data, O = v.path, V = O.length - 1; V >= 0; --V) {
                var W = O[V],
                  At = isNaN(+W) ? {} : [];
                (At[W] = M), (M = At);
              }
              r = h.merge(r, M);
            }),
          r
        );
      }
      var Xc = Object.prototype.hasOwnProperty;
      function Wd(d) {
        var n = {};
        return (
          d.split("\n").forEach(function (r) {
            var h = r.indexOf(":");
            if (h > -1) {
              var v = r.slice(0, h).trim().toLowerCase(),
                M = r.slice(h + 1).trim();
              n[v] = M;
            }
          }),
          n
        );
      }
      function mr(d, n) {
        d.status >= 300 &&
          qa(
            d,
            (function () {
              try {
                return JSON.parse(n);
              } catch {
                return n;
              }
            })(),
            "Response not successful: Received status code ".concat(d.status),
          );
        try {
          return JSON.parse(n);
        } catch (v) {
          var h = v;
          throw (
            ((h.name = "ServerParseError"),
            (h.response = d),
            (h.statusCode = d.status),
            (h.bodyText = n),
            h)
          );
        }
      }
      function fh(d) {
        return 9 === d || 32 === d;
      }
      const mh = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
      function cc(d) {
        return Cf[d.charCodeAt(0)];
      }
      const Cf = [
        "\\u0000",
        "\\u0001",
        "\\u0002",
        "\\u0003",
        "\\u0004",
        "\\u0005",
        "\\u0006",
        "\\u0007",
        "\\b",
        "\\t",
        "\\n",
        "\\u000B",
        "\\f",
        "\\r",
        "\\u000E",
        "\\u000F",
        "\\u0010",
        "\\u0011",
        "\\u0012",
        "\\u0013",
        "\\u0014",
        "\\u0015",
        "\\u0016",
        "\\u0017",
        "\\u0018",
        "\\u0019",
        "\\u001A",
        "\\u001B",
        "\\u001C",
        "\\u001D",
        "\\u001E",
        "\\u001F",
        "",
        "",
        '\\"',
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "\\\\",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "\\u007F",
        "\\u0080",
        "\\u0081",
        "\\u0082",
        "\\u0083",
        "\\u0084",
        "\\u0085",
        "\\u0086",
        "\\u0087",
        "\\u0088",
        "\\u0089",
        "\\u008A",
        "\\u008B",
        "\\u008C",
        "\\u008D",
        "\\u008E",
        "\\u008F",
        "\\u0090",
        "\\u0091",
        "\\u0092",
        "\\u0093",
        "\\u0094",
        "\\u0095",
        "\\u0096",
        "\\u0097",
        "\\u0098",
        "\\u0099",
        "\\u009A",
        "\\u009B",
        "\\u009C",
        "\\u009D",
        "\\u009E",
        "\\u009F",
      ];
      function tu(d) {
        return Ur(d, ph);
      }
      const ph = {
        Name: { leave: (d) => d.value },
        Variable: { leave: (d) => "$" + d.name },
        Document: { leave: (d) => Wi(d.definitions, "\n\n") },
        OperationDefinition: {
          leave(d) {
            const n = Sn("(", Wi(d.variableDefinitions, ", "), ")"),
              r = Wi(
                [d.operation, Wi([d.name, n]), Wi(d.directives, " ")],
                " ",
              );
            return ("query" === r ? "" : r + " ") + d.selectionSet;
          },
        },
        VariableDefinition: {
          leave: ({ variable: d, type: n, defaultValue: r, directives: h }) =>
            d + ": " + n + Sn(" = ", r) + Sn(" ", Wi(h, " ")),
        },
        SelectionSet: { leave: ({ selections: d }) => To(d) },
        Field: {
          leave({
            alias: d,
            name: n,
            arguments: r,
            directives: h,
            selectionSet: v,
          }) {
            const M = Sn("", d, ": ") + n;
            let O = M + Sn("(", Wi(r, ", "), ")");
            return (
              O.length > 80 && (O = M + Sn("(\n", Al(Wi(r, "\n")), "\n)")),
              Wi([O, Wi(h, " "), v], " ")
            );
          },
        },
        Argument: { leave: ({ name: d, value: n }) => d + ": " + n },
        FragmentSpread: {
          leave: ({ name: d, directives: n }) =>
            "..." + d + Sn(" ", Wi(n, " ")),
        },
        InlineFragment: {
          leave: ({ typeCondition: d, directives: n, selectionSet: r }) =>
            Wi(["...", Sn("on ", d), Wi(n, " "), r], " "),
        },
        FragmentDefinition: {
          leave: ({
            name: d,
            typeCondition: n,
            variableDefinitions: r,
            directives: h,
            selectionSet: v,
          }) =>
            `fragment ${d}${Sn("(", Wi(r, ", "), ")")} on ${n} ${Sn("", Wi(h, " "), " ")}` +
            v,
        },
        IntValue: { leave: ({ value: d }) => d },
        FloatValue: { leave: ({ value: d }) => d },
        StringValue: {
          leave: ({ value: d, block: n }) =>
            n
              ? (function Jd(d, n) {
                  const r = d.replace(/"""/g, '\\"""'),
                    h = r.split(/\r\n|[\n\r]/g),
                    v = 1 === h.length,
                    M =
                      h.length > 1 &&
                      h
                        .slice(1)
                        .every((ge) => 0 === ge.length || fh(ge.charCodeAt(0))),
                    O = r.endsWith('\\"""'),
                    V = d.endsWith('"') && !O,
                    W = d.endsWith("\\"),
                    et = V || W,
                    At =
                      !(null != n && n.minimize) &&
                      (!v || d.length > 70 || et || M || O);
                  let zt = "";
                  const Qt = v && fh(d.charCodeAt(0));
                  return (
                    ((At && !Qt) || M) && (zt += "\n"),
                    (zt += r),
                    (At || et) && (zt += "\n"),
                    '"""' + zt + '"""'
                  );
                })(d)
              : (function Xd(d) {
                  return `"${d.replace(mh, cc)}"`;
                })(d),
        },
        BooleanValue: { leave: ({ value: d }) => (d ? "true" : "false") },
        NullValue: { leave: () => "null" },
        EnumValue: { leave: ({ value: d }) => d },
        ListValue: { leave: ({ values: d }) => "[" + Wi(d, ", ") + "]" },
        ObjectValue: { leave: ({ fields: d }) => "{" + Wi(d, ", ") + "}" },
        ObjectField: { leave: ({ name: d, value: n }) => d + ": " + n },
        Directive: {
          leave: ({ name: d, arguments: n }) =>
            "@" + d + Sn("(", Wi(n, ", "), ")"),
        },
        NamedType: { leave: ({ name: d }) => d },
        ListType: { leave: ({ type: d }) => "[" + d + "]" },
        NonNullType: { leave: ({ type: d }) => d + "!" },
        SchemaDefinition: {
          leave: ({ description: d, directives: n, operationTypes: r }) =>
            Sn("", d, "\n") + Wi(["schema", Wi(n, " "), To(r)], " "),
        },
        OperationTypeDefinition: {
          leave: ({ operation: d, type: n }) => d + ": " + n,
        },
        ScalarTypeDefinition: {
          leave: ({ description: d, name: n, directives: r }) =>
            Sn("", d, "\n") + Wi(["scalar", n, Wi(r, " ")], " "),
        },
        ObjectTypeDefinition: {
          leave: ({
            description: d,
            name: n,
            interfaces: r,
            directives: h,
            fields: v,
          }) =>
            Sn("", d, "\n") +
            Wi(
              ["type", n, Sn("implements ", Wi(r, " & ")), Wi(h, " "), To(v)],
              " ",
            ),
        },
        FieldDefinition: {
          leave: ({
            description: d,
            name: n,
            arguments: r,
            type: h,
            directives: v,
          }) =>
            Sn("", d, "\n") +
            n +
            (td(r)
              ? Sn("(\n", Al(Wi(r, "\n")), "\n)")
              : Sn("(", Wi(r, ", "), ")")) +
            ": " +
            h +
            Sn(" ", Wi(v, " ")),
        },
        InputValueDefinition: {
          leave: ({
            description: d,
            name: n,
            type: r,
            defaultValue: h,
            directives: v,
          }) =>
            Sn("", d, "\n") + Wi([n + ": " + r, Sn("= ", h), Wi(v, " ")], " "),
        },
        InterfaceTypeDefinition: {
          leave: ({
            description: d,
            name: n,
            interfaces: r,
            directives: h,
            fields: v,
          }) =>
            Sn("", d, "\n") +
            Wi(
              [
                "interface",
                n,
                Sn("implements ", Wi(r, " & ")),
                Wi(h, " "),
                To(v),
              ],
              " ",
            ),
        },
        UnionTypeDefinition: {
          leave: ({ description: d, name: n, directives: r, types: h }) =>
            Sn("", d, "\n") +
            Wi(["union", n, Wi(r, " "), Sn("= ", Wi(h, " | "))], " "),
        },
        EnumTypeDefinition: {
          leave: ({ description: d, name: n, directives: r, values: h }) =>
            Sn("", d, "\n") + Wi(["enum", n, Wi(r, " "), To(h)], " "),
        },
        EnumValueDefinition: {
          leave: ({ description: d, name: n, directives: r }) =>
            Sn("", d, "\n") + Wi([n, Wi(r, " ")], " "),
        },
        InputObjectTypeDefinition: {
          leave: ({ description: d, name: n, directives: r, fields: h }) =>
            Sn("", d, "\n") + Wi(["input", n, Wi(r, " "), To(h)], " "),
        },
        DirectiveDefinition: {
          leave: ({
            description: d,
            name: n,
            arguments: r,
            repeatable: h,
            locations: v,
          }) =>
            Sn("", d, "\n") +
            "directive @" +
            n +
            (td(r)
              ? Sn("(\n", Al(Wi(r, "\n")), "\n)")
              : Sn("(", Wi(r, ", "), ")")) +
            (h ? " repeatable" : "") +
            " on " +
            Wi(v, " | "),
        },
        SchemaExtension: {
          leave: ({ directives: d, operationTypes: n }) =>
            Wi(["extend schema", Wi(d, " "), To(n)], " "),
        },
        ScalarTypeExtension: {
          leave: ({ name: d, directives: n }) =>
            Wi(["extend scalar", d, Wi(n, " ")], " "),
        },
        ObjectTypeExtension: {
          leave: ({ name: d, interfaces: n, directives: r, fields: h }) =>
            Wi(
              [
                "extend type",
                d,
                Sn("implements ", Wi(n, " & ")),
                Wi(r, " "),
                To(h),
              ],
              " ",
            ),
        },
        InterfaceTypeExtension: {
          leave: ({ name: d, interfaces: n, directives: r, fields: h }) =>
            Wi(
              [
                "extend interface",
                d,
                Sn("implements ", Wi(n, " & ")),
                Wi(r, " "),
                To(h),
              ],
              " ",
            ),
        },
        UnionTypeExtension: {
          leave: ({ name: d, directives: n, types: r }) =>
            Wi(["extend union", d, Wi(n, " "), Sn("= ", Wi(r, " | "))], " "),
        },
        EnumTypeExtension: {
          leave: ({ name: d, directives: n, values: r }) =>
            Wi(["extend enum", d, Wi(n, " "), To(r)], " "),
        },
        InputObjectTypeExtension: {
          leave: ({ name: d, directives: n, fields: r }) =>
            Wi(["extend input", d, Wi(n, " "), To(r)], " "),
        },
      };
      function Wi(d, n = "") {
        var r;
        return null !== (r = d?.filter((h) => h).join(n)) && void 0 !== r
          ? r
          : "";
      }
      function To(d) {
        return Sn("{\n", Al(Wi(d, "\n")), "\n}");
      }
      function Sn(d, n, r = "") {
        return null != n && "" !== n ? d + n + r : "";
      }
      function Al(d) {
        return Sn("  ", d.replace(/\n/g, "\n  "));
      }
      function td(d) {
        var n;
        return (
          null !== (n = d?.some((r) => r.includes("\n"))) && void 0 !== n && n
        );
      }
      var Da,
        ed = Object.assign(
          function (d) {
            var n = Da.get(d);
            return n || ((n = tu(d)), Da.set(d, n)), n;
          },
          {
            reset: function () {
              Da = new Od(ta.print || 2e3);
            },
          },
        );
      ed.reset(),
        !1 !== globalThis.__DEV__ &&
          Uc("print", function () {
            return Da ? Da.size : 0;
          });
      var Mf = {
          http: {
            includeQuery: !0,
            includeExtensions: !1,
            preserveHeaderCase: !1,
          },
          headers: { accept: "*/*", "content-type": "application/json" },
          options: { method: "POST" },
        },
        _h = function (d, n) {
          return n(d);
        };
      function ou(d) {
        return new io(function (n) {
          n.error(d);
        });
      }
      var id = { kind: hr.FIELD, name: { kind: hr.NAME, value: "__typename" } };
      function ru(d, n) {
        return (
          !d ||
          d.selectionSet.selections.every(function (r) {
            return r.kind === hr.FRAGMENT_SPREAD && ru(n[r.name.value], n);
          })
        );
      }
      function ks(d) {
        return ru(
          wl(d) ||
            (function cf(d) {
              rn("Document" === d.kind, 80), rn(d.definitions.length <= 1, 81);
              var n = d.definitions[0];
              return rn("FragmentDefinition" === n.kind, 82), n;
            })(d),
          xa(na(d)),
        )
          ? null
          : d;
      }
      function au(d) {
        var n = new Map();
        return function (h) {
          void 0 === h && (h = d);
          var v = n.get(h);
          return (
            v ||
              n.set(
                h,
                (v = { variables: new Set(), fragmentSpreads: new Set() }),
              ),
            v
          );
        };
      }
      function lu(d, n) {
        Ss(n);
        for (
          var r = au(""),
            h = au(""),
            v = function (ti) {
              for (
                var Ci = 0, di = void 0;
                Ci < ti.length && (di = ti[Ci]);
                ++Ci
              )
                if (!fo(di)) {
                  if (di.kind === hr.OPERATION_DEFINITION)
                    return r(di.name && di.name.value);
                  if (di.kind === hr.FRAGMENT_DEFINITION)
                    return h(di.name.value);
                }
              return !1 !== globalThis.__DEV__ && rn.error(85), null;
            },
            M = 0,
            O = n.definitions.length - 1;
          O >= 0;
          --O
        )
          n.definitions[O].kind === hr.OPERATION_DEFINITION && ++M;
        var V = (function su(d) {
            var n = new Map(),
              r = new Map();
            return (
              d.forEach(function (h) {
                h && (h.name ? n.set(h.name, h) : h.test && r.set(h.test, h));
              }),
              function (h) {
                var v = n.get(h.name.value);
                return (
                  !v &&
                    r.size &&
                    r.forEach(function (M, O) {
                      O(h) && (v = M);
                    }),
                  v
                );
              }
            );
          })(d),
          W = function (ti) {
            return (
              As(ti) &&
              ti.map(V).some(function (Ci) {
                return Ci && Ci.remove;
              })
            );
          },
          et = new Map(),
          At = !1,
          zt = {
            enter: function (ti) {
              if (W(ti.directives)) return (At = !0), null;
            },
          },
          Qt = Ur(n, {
            Field: zt,
            InlineFragment: zt,
            VariableDefinition: {
              enter: function () {
                return !1;
              },
            },
            Variable: {
              enter: function (ti, Ci, di, Pi, zi) {
                var Gi = v(zi);
                Gi && Gi.variables.add(ti.name.value);
              },
            },
            FragmentSpread: {
              enter: function (ti, Ci, di, Pi, zi) {
                if (W(ti.directives)) return (At = !0), null;
                var Gi = v(zi);
                Gi && Gi.fragmentSpreads.add(ti.name.value);
              },
            },
            FragmentDefinition: {
              enter: function (ti, Ci, di, Pi) {
                et.set(JSON.stringify(Pi), ti);
              },
              leave: function (ti, Ci, di, Pi) {
                return ti === et.get(JSON.stringify(Pi))
                  ? ti
                  : M > 0 &&
                      ti.selectionSet.selections.every(function (Gi) {
                        return (
                          Gi.kind === hr.FIELD && "__typename" === Gi.name.value
                        );
                      })
                    ? ((h(ti.name.value).removed = !0), (At = !0), null)
                    : void 0;
              },
            },
            Directive: {
              leave: function (ti) {
                if (V(ti)) return (At = !0), null;
              },
            },
          });
        if (!At) return n;
        var ge = function (ti) {
            return (
              ti.transitiveVars ||
                ((ti.transitiveVars = new Set(ti.variables)),
                ti.removed ||
                  ti.fragmentSpreads.forEach(function (Ci) {
                    ge(h(Ci)).transitiveVars.forEach(function (di) {
                      ti.transitiveVars.add(di);
                    });
                  })),
              ti
            );
          },
          je = new Set();
        Qt.definitions.forEach(function (ti) {
          ti.kind === hr.OPERATION_DEFINITION
            ? ge(r(ti.name && ti.name.value)).fragmentSpreads.forEach(
                function (Ci) {
                  je.add(Ci);
                },
              )
            : ti.kind === hr.FRAGMENT_DEFINITION &&
              0 === M &&
              !h(ti.name.value).removed &&
              je.add(ti.name.value);
        }),
          je.forEach(function (ti) {
            ge(h(ti)).fragmentSpreads.forEach(function (Ci) {
              je.add(Ci);
            });
          });
        var $e = {
          enter: function (ti) {
            if (
              (function (ti) {
                return !(je.has(ti) && !h(ti).removed);
              })(ti.name.value)
            )
              return null;
          },
        };
        return ks(
          Ur(Qt, {
            FragmentSpread: $e,
            FragmentDefinition: $e,
            OperationDefinition: {
              leave: function (ti) {
                if (ti.variableDefinitions) {
                  var Ci = ge(r(ti.name && ti.name.value)).transitiveVars;
                  if (Ci.size < ti.variableDefinitions.length)
                    return (0, Ee.pi)((0, Ee.pi)({}, ti), {
                      variableDefinitions: ti.variableDefinitions.filter(
                        function (di) {
                          return Ci.has(di.variable.name.value);
                        },
                      ),
                    });
                }
              },
            },
          }),
        );
      }
      var hc = Object.assign(
        function (d) {
          return Ur(d, {
            SelectionSet: {
              enter: function (n, r, h) {
                if (!h || h.kind !== hr.OPERATION_DEFINITION) {
                  var v = n.selections;
                  if (
                    v &&
                    !v.some(function (V) {
                      return (
                        wa(V) &&
                        ("__typename" === V.name.value ||
                          0 === V.name.value.lastIndexOf("__", 0))
                      );
                    })
                  ) {
                    var O = h;
                    if (
                      !(
                        wa(O) &&
                        O.directives &&
                        O.directives.some(function (V) {
                          return "export" === V.name.value;
                        })
                      )
                    )
                      return (0, Ee.pi)((0, Ee.pi)({}, n), {
                        selections: (0, Ee.ev)((0, Ee.ev)([], v, !0), [id], !1),
                      });
                  }
                }
              },
            },
          });
        },
        {
          added: function (d) {
            return d === id;
          },
        },
      );
      function nd(d) {
        return "query" === es(d).operation
          ? d
          : Ur(d, {
              OperationDefinition: {
                enter: function (v) {
                  return (0, Ee.pi)((0, Ee.pi)({}, v), { operation: "query" });
                },
              },
            });
      }
      function Qa(d) {
        return (
          Ss(d),
          lu(
            [
              {
                test: function (r) {
                  return "client" === r.name.value;
                },
                remove: !0,
              },
            ],
            d,
          )
        );
      }
      var fc = Ke(function () {
          return fetch;
        }),
        kl = function (d) {
          void 0 === d && (d = {});
          var n = d.uri,
            r = void 0 === n ? "/graphql" : n,
            h = d.fetch,
            v = d.print,
            M = void 0 === v ? _h : v,
            O = d.includeExtensions,
            V = d.preserveHeaderCase,
            W = d.useGETForQueries,
            et = d.includeUnusedVariables,
            At = void 0 !== et && et,
            zt = (0, Ee._T)(d, [
              "uri",
              "fetch",
              "print",
              "includeExtensions",
              "preserveHeaderCase",
              "useGETForQueries",
              "includeUnusedVariables",
            ]);
          !1 !== globalThis.__DEV__ &&
            (function (d) {
              if (!d && typeof fetch > "u") throw Ao(37);
            })(h || fc);
          var Qt = {
            http: { includeExtensions: O, preserveHeaderCase: V },
            options: zt.fetchOptions,
            credentials: zt.credentials,
            headers: zt.headers,
          };
          return new Ca(function (ge) {
            var je = (function (d, n) {
                return (
                  d.getContext().uri ||
                  ("function" == typeof n ? n(d) : n || "/graphql")
                );
              })(ge, r),
              Ye = ge.getContext(),
              $e = {};
            if (Ye.clientAwareness) {
              var ti = Ye.clientAwareness,
                Ci = ti.name,
                di = ti.version;
              Ci && ($e["apollographql-client-name"] = Ci),
                di && ($e["apollographql-client-version"] = di);
            }
            var Pi = (0, Ee.pi)((0, Ee.pi)({}, $e), Ye.headers),
              zi = {
                http: Ye.http,
                options: Ye.fetchOptions,
                credentials: Ye.credentials,
                headers: Pi,
              };
            if (Wa(["client"], ge.query)) {
              var Gi = Qa(ge.query);
              if (!Gi)
                return ou(
                  new Error(
                    "HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.",
                  ),
                );
              ge.query = Gi;
            }
            var Yn,
              Ki = (function uc(d, n) {
                for (var r = [], h = 2; h < arguments.length; h++)
                  r[h - 2] = arguments[h];
                var v = {},
                  M = {};
                r.forEach(function (zt) {
                  (v = (0, Ee.pi)((0, Ee.pi)((0, Ee.pi)({}, v), zt.options), {
                    headers: (0, Ee.pi)((0, Ee.pi)({}, v.headers), zt.headers),
                  })),
                    zt.credentials && (v.credentials = zt.credentials),
                    (M = (0, Ee.pi)((0, Ee.pi)({}, M), zt.http));
                }),
                  v.headers &&
                    (v.headers = (function iu(d, n) {
                      if (!n) {
                        var r = Object.create(null);
                        return (
                          Object.keys(Object(d)).forEach(function (M) {
                            r[M.toLowerCase()] = d[M];
                          }),
                          r
                        );
                      }
                      var h = Object.create(null);
                      Object.keys(Object(d)).forEach(function (M) {
                        h[M.toLowerCase()] = { originalName: M, value: d[M] };
                      });
                      var v = Object.create(null);
                      return (
                        Object.keys(h).forEach(function (M) {
                          v[h[M].originalName] = h[M].value;
                        }),
                        v
                      );
                    })(v.headers, M.preserveHeaderCase));
                var et = d.query,
                  At = {
                    operationName: d.operationName,
                    variables: d.variables,
                  };
                return (
                  M.includeExtensions && (At.extensions = d.extensions),
                  M.includeQuery && (At.query = n(et, ed)),
                  { options: v, body: At }
                );
              })(ge, M, Mf, Qt, zi),
              fn = Ki.options,
              kn = Ki.body;
            kn.variables &&
              !At &&
              (kn.variables = (function Sf(d, n) {
                var r = (0, Ee.pi)({}, d),
                  h = new Set(Object.keys(d));
                return (
                  Ur(n, {
                    Variable: function (v, M, O) {
                      O &&
                        "VariableDefinition" !== O.kind &&
                        h.delete(v.name.value);
                    },
                  }),
                  h.forEach(function (v) {
                    delete r[v];
                  }),
                  r
                );
              })(kn.variables, ge.query)),
              !fn.signal &&
                typeof AbortController < "u" &&
                ((Yn = new AbortController()), (fn.signal = Yn.signal));
            var vn,
              po =
                "OperationDefinition" === (vn = es(ge.query)).kind &&
                "subscription" === vn.operation,
              Rs = Wa(["defer"], ge.query);
            if (
              (W &&
                !ge.query.definitions.some(function (vn) {
                  return (
                    "OperationDefinition" === vn.kind &&
                    "mutation" === vn.operation
                  );
                }) &&
                (fn.method = "GET"),
              Rs || po)
            ) {
              fn.headers = fn.headers || {};
              var Fl = "multipart/mixed;";
              po && Rs && !1 !== globalThis.__DEV__ && rn.warn(38),
                po
                  ? (Fl +=
                      "boundary=graphql;subscriptionSpec=1.0,application/json")
                  : Rs && (Fl += "deferSpec=20220824,application/json"),
                (fn.headers.accept = Fl);
            }
            if ("GET" === fn.method) {
              var Qi = (function nu(d, n) {
                  var r = [],
                    h = function (zt, Qt) {
                      r.push("".concat(zt, "=").concat(encodeURIComponent(Qt)));
                    };
                  if (
                    ("query" in n && h("query", n.query),
                    n.operationName && h("operationName", n.operationName),
                    n.variables)
                  ) {
                    var v = void 0;
                    try {
                      v = qc(n.variables, "Variables map");
                    } catch (zt) {
                      return { parseError: zt };
                    }
                    h("variables", v);
                  }
                  if (n.extensions) {
                    var M = void 0;
                    try {
                      M = qc(n.extensions, "Extensions map");
                    } catch (zt) {
                      return { parseError: zt };
                    }
                    h("extensions", M);
                  }
                  var O = "",
                    V = d,
                    W = d.indexOf("#");
                  -1 !== W && ((O = d.substr(W)), (V = d.substr(0, W)));
                  var et = -1 === V.indexOf("?") ? "?" : "&";
                  return { newURI: V + et + r.join("&") + O };
                })(je, kn),
                dn = Qi.newURI,
                mn = Qi.parseError;
              if (mn) return ou(mn);
              je = dn;
            } else
              try {
                fn.body = qc(kn, "Payload");
              } catch (vn) {
                return ou(vn);
              }
            return new io(function (vn) {
              var tr =
                  h ||
                  Ke(function () {
                    return fetch;
                  }) ||
                  fc,
                ps = vn.next.bind(vn);
              return (
                tr(je, fn)
                  .then(function (er) {
                    var Ps;
                    ge.setContext({ response: er });
                    var lo =
                      null === (Ps = er.headers) || void 0 === Ps
                        ? void 0
                        : Ps.get("content-type");
                    return null !== lo && /^multipart\/mixed/i.test(lo)
                      ? (function $d(d, n) {
                          return (0, Ee.mG)(this, void 0, void 0, function () {
                            var r,
                              h,
                              v,
                              M,
                              O,
                              V,
                              W,
                              et,
                              At,
                              zt,
                              Qt,
                              ge,
                              je,
                              Ye,
                              $e,
                              ti,
                              Ci,
                              di,
                              Pi,
                              zi,
                              Gi,
                              Ki,
                              fn,
                              kn;
                            return (0, Ee.Jh)(this, function (Yn) {
                              switch (Yn.label) {
                                case 0:
                                  if (void 0 === TextDecoder)
                                    throw new Error(
                                      "TextDecoder must be defined in the environment: please import a polyfill.",
                                    );
                                  (r = new TextDecoder("utf-8")),
                                    (h =
                                      null === (kn = d.headers) || void 0 === kn
                                        ? void 0
                                        : kn.get("content-type")),
                                    (v = "boundary="),
                                    (M = h?.includes(v)
                                      ? h
                                          ?.substring(h?.indexOf(v) + 9)
                                          .replace(/['"]/g, "")
                                          .replace(/\;(.*)/gm, "")
                                          .trim()
                                      : "-"),
                                    (O = "\r\n--".concat(M)),
                                    (V = ""),
                                    (W = Yd(d)),
                                    (et = !0),
                                    (Yn.label = 1);
                                case 1:
                                  return et ? [4, W.next()] : [3, 3];
                                case 2:
                                  for (
                                    At = Yn.sent(),
                                      Qt = At.done,
                                      ge =
                                        "string" == typeof (zt = At.value)
                                          ? zt
                                          : r.decode(zt),
                                      je = V.length - O.length + 1,
                                      et = !Qt,
                                      Ye = (V += ge).indexOf(O, je);
                                    Ye > -1;

                                  ) {
                                    if (
                                      (($e = void 0),
                                      (Ki = [
                                        V.slice(0, Ye),
                                        V.slice(Ye + O.length),
                                      ]),
                                      (V = Ki[1]),
                                      (ti = ($e = Ki[0]).indexOf("\r\n\r\n")),
                                      (Ci = Wd($e.slice(0, ti))),
                                      (di = Ci["content-type"]) &&
                                        -1 ===
                                          di
                                            .toLowerCase()
                                            .indexOf("application/json"))
                                    )
                                      throw new Error(
                                        "Unsupported patch content type: application/json is required.",
                                      );
                                    if ((Pi = $e.slice(ti)))
                                      if (
                                        ((zi = mr(d, Pi)),
                                        Object.keys(zi).length > 1 ||
                                          "data" in zi ||
                                          "incremental" in zi ||
                                          "errors" in zi ||
                                          "payload" in zi)
                                      )
                                        if (bf(zi)) {
                                          if (((Gi = {}), "payload" in zi)) {
                                            if (
                                              1 === Object.keys(zi).length &&
                                              null === zi.payload
                                            )
                                              return [2];
                                            Gi = (0, Ee.pi)({}, zi.payload);
                                          }
                                          "errors" in zi &&
                                            (Gi = (0, Ee.pi)(
                                              (0, Ee.pi)({}, Gi),
                                              {
                                                extensions: (0, Ee.pi)(
                                                  (0, Ee.pi)(
                                                    {},
                                                    "extensions" in Gi
                                                      ? Gi.extensions
                                                      : null,
                                                  ),
                                                  ((fn = {}),
                                                  (fn[Kc] = zi.errors),
                                                  fn),
                                                ),
                                              },
                                            )),
                                            n(Gi);
                                        } else n(zi);
                                      else if (
                                        1 === Object.keys(zi).length &&
                                        "hasNext" in zi &&
                                        !zi.hasNext
                                      )
                                        return [2];
                                    Ye = V.indexOf(O);
                                  }
                                  return [3, 1];
                                case 3:
                                  return [2];
                              }
                            });
                          });
                        })(er, ps)
                      : (function lc(d) {
                          return function (n) {
                            return n
                              .text()
                              .then(function (r) {
                                return mr(n, r);
                              })
                              .then(function (r) {
                                return (
                                  !Array.isArray(r) &&
                                    !Xc.call(r, "data") &&
                                    !Xc.call(r, "errors") &&
                                    qa(
                                      n,
                                      r,
                                      "Server response was missing for query '".concat(
                                        Array.isArray(d)
                                          ? d.map(function (h) {
                                              return h.operationName;
                                            })
                                          : d.operationName,
                                        "'.",
                                      ),
                                    ),
                                  r
                                );
                              });
                          };
                        })(ge)(er).then(ps);
                  })
                  .then(function () {
                    (Yn = void 0), vn.complete();
                  })
                  .catch(function (er) {
                    (Yn = void 0),
                      (function Sl(d, n) {
                        d.result &&
                          d.result.errors &&
                          d.result.data &&
                          n.next(d.result),
                          n.error(d);
                      })(er, vn);
                  }),
                function () {
                  Yn && Yn.abort();
                }
              );
            });
          });
        },
        od = (function (d) {
          function n(r) {
            void 0 === r && (r = {});
            var h = d.call(this, kl(r).request) || this;
            return (h.options = r), h;
          }
          return (0, Ee.ZT)(n, d), n;
        })(Ca);
      const { toString: uu, hasOwnProperty: hu } = Object.prototype,
        l = Function.prototype.toString,
        a = new Map();
      function o(d, n) {
        try {
          return f(d, n);
        } finally {
          a.clear();
        }
      }
      const u = o;
      function f(d, n) {
        if (d === n) return !0;
        const r = uu.call(d);
        if (r !== uu.call(n)) return !1;
        switch (r) {
          case "[object Array]":
            if (d.length !== n.length) return !1;
          case "[object Object]": {
            if (P(d, n)) return !0;
            const v = g(d),
              M = g(n),
              O = v.length;
            if (O !== M.length) return !1;
            for (let V = 0; V < O; ++V) if (!hu.call(n, v[V])) return !1;
            for (let V = 0; V < O; ++V) {
              const W = v[V];
              if (!f(d[W], n[W])) return !1;
            }
            return !0;
          }
          case "[object Error]":
            return d.name === n.name && d.message === n.message;
          case "[object Number]":
            if (d != d) return n != n;
          case "[object Boolean]":
          case "[object Date]":
            return +d == +n;
          case "[object RegExp]":
          case "[object String]":
            return d == `${n}`;
          case "[object Map]":
          case "[object Set]": {
            if (d.size !== n.size) return !1;
            if (P(d, n)) return !0;
            const v = d.entries(),
              M = "[object Map]" === r;
            for (;;) {
              const O = v.next();
              if (O.done) break;
              const [V, W] = O.value;
              if (!n.has(V) || (M && !f(W, n.get(V)))) return !1;
            }
            return !0;
          }
          case "[object Uint16Array]":
          case "[object Uint8Array]":
          case "[object Uint32Array]":
          case "[object Int32Array]":
          case "[object Int8Array]":
          case "[object Int16Array]":
          case "[object ArrayBuffer]":
            (d = new Uint8Array(d)), (n = new Uint8Array(n));
          case "[object DataView]": {
            let v = d.byteLength;
            if (v === n.byteLength) for (; v-- && d[v] === n[v]; );
            return -1 === v;
          }
          case "[object AsyncFunction]":
          case "[object GeneratorFunction]":
          case "[object AsyncGeneratorFunction]":
          case "[object Function]": {
            const v = l.call(d);
            return (
              v === l.call(n) &&
              !(function S(d, n) {
                const r = d.length - n.length;
                return r >= 0 && d.indexOf(n, r) === r;
              })(v, w)
            );
          }
        }
        return !1;
      }
      function g(d) {
        return Object.keys(d).filter(y, d);
      }
      function y(d) {
        return void 0 !== this[d];
      }
      const w = "{ [native code] }";
      function P(d, n) {
        let r = a.get(d);
        if (r) {
          if (r.has(n)) return !0;
        } else a.set(d, (r = new Set()));
        return r.add(n), !1;
      }
      const Y = () => Object.create(null),
        { forEach: dt, slice: Tt } = Array.prototype,
        { hasOwnProperty: Ht } = Object.prototype;
      class be {
        constructor(n = !0, r = Y) {
          (this.weakness = n), (this.makeData = r);
        }
        lookup() {
          return this.lookupArray(arguments);
        }
        lookupArray(n) {
          let r = this;
          return (
            dt.call(n, (h) => (r = r.getChildTrie(h))),
            Ht.call(r, "data") ? r.data : (r.data = this.makeData(Tt.call(n)))
          );
        }
        peek() {
          return this.peekArray(arguments);
        }
        peekArray(n) {
          let r = this;
          for (let h = 0, v = n.length; r && h < v; ++h) {
            const M = r.mapFor(n[h], !1);
            r = M && M.get(n[h]);
          }
          return r && r.data;
        }
        remove() {
          return this.removeArray(arguments);
        }
        removeArray(n) {
          let r;
          if (n.length) {
            const h = n[0],
              v = this.mapFor(h, !1),
              M = v && v.get(h);
            M &&
              ((r = M.removeArray(Tt.call(n, 1))),
              !M.data &&
                !M.weak &&
                (!M.strong || !M.strong.size) &&
                v.delete(h));
          } else (r = this.data), delete this.data;
          return r;
        }
        getChildTrie(n) {
          const r = this.mapFor(n, !0);
          let h = r.get(n);
          return h || r.set(n, (h = new be(this.weakness, this.makeData))), h;
        }
        mapFor(n, r) {
          return this.weakness &&
            (function Ce(d) {
              switch (typeof d) {
                case "object":
                  if (null === d) break;
                case "function":
                  return !0;
              }
              return !1;
            })(n)
            ? this.weak || (r ? (this.weak = new WeakMap()) : void 0)
            : this.strong || (r ? (this.strong = new Map()) : void 0);
        }
      }
      const Se = () => Object.create(null),
        { forEach: ci, slice: ai } = Array.prototype,
        { hasOwnProperty: Ti } = Object.prototype;
      class Oi {
        constructor(n = !0, r = Se) {
          (this.weakness = n), (this.makeData = r);
        }
        lookup(...n) {
          return this.lookupArray(n);
        }
        lookupArray(n) {
          let r = this;
          return (
            ci.call(n, (h) => (r = r.getChildTrie(h))),
            Ti.call(r, "data") ? r.data : (r.data = this.makeData(ai.call(n)))
          );
        }
        peek(...n) {
          return this.peekArray(n);
        }
        peekArray(n) {
          let r = this;
          for (let h = 0, v = n.length; r && h < v; ++h) {
            const M = this.weakness && wi(n[h]) ? r.weak : r.strong;
            r = M && M.get(n[h]);
          }
          return r && r.data;
        }
        getChildTrie(n) {
          const r =
            this.weakness && wi(n)
              ? this.weak || (this.weak = new WeakMap())
              : this.strong || (this.strong = new Map());
          let h = r.get(n);
          return h || r.set(n, (h = new Oi(this.weakness, this.makeData))), h;
        }
      }
      function wi(d) {
        switch (typeof d) {
          case "object":
            if (null === d) break;
          case "function":
            return !0;
        }
        return !1;
      }
      let Di = null;
      const Ui = {};
      let Ni = 1;
      function En(d) {
        try {
          return d();
        } catch {}
      }
      const wn = "@wry/context:Slot",
        no = En(() => globalThis) || En(() => global) || Object.create(null),
        Ho =
          no[wn] ||
          Array[wn] ||
          (function (d) {
            try {
              Object.defineProperty(no, wn, {
                value: d,
                enumerable: !1,
                writable: !1,
                configurable: !0,
              });
            } finally {
              return d;
            }
          })(
            class {
              constructor() {
                this.id = [
                  "slot",
                  Ni++,
                  Date.now(),
                  Math.random().toString(36).slice(2),
                ].join(":");
              }
              hasValue() {
                for (let n = Di; n; n = n.parent)
                  if (this.id in n.slots) {
                    const r = n.slots[this.id];
                    if (r === Ui) break;
                    return n !== Di && (Di.slots[this.id] = r), !0;
                  }
                return Di && (Di.slots[this.id] = Ui), !1;
              }
              getValue() {
                if (this.hasValue()) return Di.slots[this.id];
              }
              withValue(n, r, h, v) {
                const O = Di;
                Di = { parent: O, slots: { __proto__: null, [this.id]: n } };
                try {
                  return r.apply(v, h);
                } finally {
                  Di = O;
                }
              }
              static bind(n) {
                const r = Di;
                return function () {
                  const h = Di;
                  try {
                    return (Di = r), n.apply(this, arguments);
                  } finally {
                    Di = h;
                  }
                };
              }
              static noContext(n, r, h) {
                if (!Di) return n.apply(h, r);
                {
                  const v = Di;
                  try {
                    return (Di = null), n.apply(h, r);
                  } finally {
                    Di = v;
                  }
                }
              }
            },
          ),
        Os = new Ho(),
        { hasOwnProperty: Ja } = Object.prototype,
        Xa =
          Array.from ||
          function (d) {
            const n = [];
            return d.forEach((r) => n.push(r)), n;
          };
      function jr(d) {
        const { unsubscribe: n } = d;
        "function" == typeof n && ((d.unsubscribe = void 0), n());
      }
      const ms = [],
        fu = 100;
      function mc(d, n) {
        if (!d) throw new Error(n || "assertion failure");
      }
      function kf(d, n) {
        const r = d.length;
        return r > 0 && r === n.length && d[r - 1] === n[r - 1];
      }
      function Tf(d) {
        switch (d.length) {
          case 0:
            throw new Error("unknown value");
          case 1:
            return d[0];
          case 2:
            throw d[1];
        }
      }
      function cg(d) {
        return d.slice(0);
      }
      let tv = (() => {
        class d {
          constructor(r) {
            (this.fn = r),
              (this.parents = new Set()),
              (this.childValues = new Map()),
              (this.dirtyChildren = null),
              (this.dirty = !0),
              (this.recomputing = !1),
              (this.value = []),
              (this.deps = null),
              ++d.count;
          }
          peek() {
            if (1 === this.value.length && !pc(this))
              return dg(this), this.value[0];
          }
          recompute(r) {
            return (
              mc(!this.recomputing, "already recomputing"),
              dg(this),
              pc(this)
                ? (function Of(d, n) {
                    return (
                      mu(d),
                      Os.withValue(d, If, [d, n]),
                      (function Nf(d, n) {
                        if ("function" == typeof d.subscribe)
                          try {
                            jr(d), (d.unsubscribe = d.subscribe.apply(null, n));
                          } catch {
                            return d.setDirty(), !1;
                          }
                        return !0;
                      })(d, n) &&
                        (function ev(d) {
                          (d.dirty = !1), !pc(d) && Jm(d);
                        })(d),
                      Tf(d.value)
                    );
                  })(this, r)
                : Tf(this.value)
            );
          }
          setDirty() {
            this.dirty || ((this.dirty = !0), Rf(this), jr(this));
          }
          dispose() {
            this.setDirty(),
              mu(this),
              Pf(this, (r, h) => {
                r.setDirty(), Lf(r, this);
              });
          }
          forget() {
            this.dispose();
          }
          dependOn(r) {
            r.add(this),
              this.deps || (this.deps = ms.pop() || new Set()),
              this.deps.add(r);
          }
          forgetDeps() {
            this.deps &&
              (Xa(this.deps).forEach((r) => r.delete(this)),
              this.deps.clear(),
              ms.push(this.deps),
              (this.deps = null));
          }
        }
        return (d.count = 0), d;
      })();
      function dg(d) {
        const n = Os.getValue();
        if (n)
          return (
            d.parents.add(n),
            n.childValues.has(d) || n.childValues.set(d, []),
            pc(d) ? Xm(n, d) : tp(n, d),
            n
          );
      }
      function If(d, n) {
        d.recomputing = !0;
        const { normalizeResult: r } = d;
        let h;
        r && 1 === d.value.length && (h = cg(d.value)), (d.value.length = 0);
        try {
          if (((d.value[0] = d.fn.apply(null, n)), r && h && !kf(h, d.value)))
            try {
              d.value[0] = r(d.value[0], h[0]);
            } catch {}
        } catch (v) {
          d.value[1] = v;
        }
        d.recomputing = !1;
      }
      function pc(d) {
        return d.dirty || !(!d.dirtyChildren || !d.dirtyChildren.size);
      }
      function Rf(d) {
        Pf(d, Xm);
      }
      function Jm(d) {
        Pf(d, tp);
      }
      function Pf(d, n) {
        const r = d.parents.size;
        if (r) {
          const h = Xa(d.parents);
          for (let v = 0; v < r; ++v) n(h[v], d);
        }
      }
      function Xm(d, n) {
        mc(d.childValues.has(n)), mc(pc(n));
        const r = !pc(d);
        if (d.dirtyChildren) {
          if (d.dirtyChildren.has(n)) return;
        } else d.dirtyChildren = ms.pop() || new Set();
        d.dirtyChildren.add(n), r && Rf(d);
      }
      function tp(d, n) {
        mc(d.childValues.has(n)), mc(!pc(n));
        const r = d.childValues.get(n);
        0 === r.length
          ? d.childValues.set(n, cg(n.value))
          : kf(r, n.value) || d.setDirty(),
          Ff(d, n),
          !pc(d) && Jm(d);
      }
      function Ff(d, n) {
        const r = d.dirtyChildren;
        r &&
          (r.delete(n),
          0 === r.size &&
            (ms.length < fu && ms.push(r), (d.dirtyChildren = null)));
      }
      function mu(d) {
        d.childValues.size > 0 &&
          d.childValues.forEach((n, r) => {
            Lf(d, r);
          }),
          d.forgetDeps(),
          mc(null === d.dirtyChildren);
      }
      function Lf(d, n) {
        n.parents.delete(d), d.childValues.delete(n), Ff(d, n);
      }
      const ug = { setDirty: !0, dispose: !0, forget: !0 };
      function Tl(d) {
        const n = new Map(),
          r = d && d.subscribe;
        function h(v) {
          const M = Os.getValue();
          if (M) {
            let O = n.get(v);
            O || n.set(v, (O = new Set())),
              M.dependOn(O),
              "function" == typeof r && (jr(O), (O.unsubscribe = r(v)));
          }
        }
        return (
          (h.dirty = function (M, O) {
            const V = n.get(M);
            if (V) {
              const W = O && Ja.call(ug, O) ? O : "setDirty";
              Xa(V).forEach((et) => et[W]()), n.delete(M), jr(V);
            }
          }),
          h
        );
      }
      let ep;
      function hg(...d) {
        return (ep || (ep = new Oi("function" == typeof WeakMap))).lookupArray(
          d,
        );
      }
      const pu = new Set();
      function ad(
        d,
        {
          max: n = Math.pow(2, 16),
          keyArgs: r,
          makeCacheKey: h = hg,
          normalizeResult: v,
          subscribe: M,
          cache: O = Kl,
        } = Object.create(null),
      ) {
        const V = "function" == typeof O ? new O(n, (Qt) => Qt.dispose()) : O,
          W = function () {
            const Qt = h.apply(null, r ? r.apply(null, arguments) : arguments);
            if (void 0 === Qt) return d.apply(null, arguments);
            let ge = V.get(Qt);
            ge ||
              (V.set(Qt, (ge = new tv(d))),
              (ge.normalizeResult = v),
              (ge.subscribe = M),
              (ge.forget = () => V.delete(Qt)));
            const je = ge.recompute(Array.prototype.slice.call(arguments));
            return (
              V.set(Qt, ge),
              pu.add(V),
              Os.hasValue() || (pu.forEach((Ye) => Ye.clean()), pu.clear()),
              je
            );
          };
        function et(Qt) {
          const ge = Qt && V.get(Qt);
          ge && ge.setDirty();
        }
        function At(Qt) {
          const ge = Qt && V.get(Qt);
          if (ge) return ge.peek();
        }
        function zt(Qt) {
          return !!Qt && V.delete(Qt);
        }
        return (
          Object.defineProperty(W, "size", {
            get: () => V.size,
            configurable: !1,
            enumerable: !1,
          }),
          Object.freeze(
            (W.options = {
              max: n,
              keyArgs: r,
              makeCacheKey: h,
              normalizeResult: v,
              subscribe: M,
              cache: V,
            }),
          ),
          (W.dirtyKey = et),
          (W.dirty = function () {
            et(h.apply(null, arguments));
          }),
          (W.peekKey = At),
          (W.peek = function () {
            return At(h.apply(null, arguments));
          }),
          (W.forgetKey = zt),
          (W.forget = function () {
            return zt(h.apply(null, arguments));
          }),
          (W.makeCacheKey = h),
          (W.getKey = r
            ? function () {
                return h.apply(null, r.apply(null, arguments));
              }
            : h),
          Object.freeze(W)
        );
      }
      function fg(d) {
        return d;
      }
      var ip = (function () {
        function d(n, r) {
          void 0 === r && (r = Object.create(null)),
            (this.resultCache = rh ? new WeakSet() : new Set()),
            (this.transform = n),
            r.getCacheKey && (this.getCacheKey = r.getCacheKey),
            (this.cached = !1 !== r.cache),
            this.resetCache();
        }
        return (
          (d.prototype.getCacheKey = function (n) {
            return [n];
          }),
          (d.identity = function () {
            return new d(fg, { cache: !1 });
          }),
          (d.split = function (n, r, h) {
            return (
              void 0 === h && (h = d.identity()),
              Object.assign(
                new d(
                  function (v) {
                    return (n(v) ? r : h).transformDocument(v);
                  },
                  { cache: !1 },
                ),
                { left: r, right: h },
              )
            );
          }),
          (d.prototype.resetCache = function () {
            var n = this;
            if (this.cached) {
              var r = new be(oc);
              this.performWork = ad(d.prototype.performWork.bind(this), {
                makeCacheKey: function (h) {
                  var v = n.getCacheKey(h);
                  if (v) return rn(Array.isArray(v), 68), r.lookupArray(v);
                },
                max: ta["documentTransform.cache"],
                cache: Ql,
              });
            }
          }),
          (d.prototype.performWork = function (n) {
            return Ss(n), this.transform(n);
          }),
          (d.prototype.transformDocument = function (n) {
            if (this.resultCache.has(n)) return n;
            var r = this.performWork(n);
            return this.resultCache.add(r), r;
          }),
          (d.prototype.concat = function (n) {
            var r = this;
            return Object.assign(
              new d(
                function (h) {
                  return n.transformDocument(r.transformDocument(h));
                },
                { cache: !1 },
              ),
              { left: this, right: n },
            );
          }),
          d
        );
      })();
      function Bf(d, n, r) {
        return new io(function (h) {
          var v = {
            then: function (W) {
              return new Promise(function (et) {
                return et(W());
              });
            },
          };
          function M(W, et) {
            return function (At) {
              if (W) {
                var zt = function () {
                  return h.closed ? 0 : W(At);
                };
                v = v.then(zt, zt).then(
                  function (Qt) {
                    return h.next(Qt);
                  },
                  function (Qt) {
                    return h.error(Qt);
                  },
                );
              } else h[et](At);
            };
          }
          var O = {
              next: M(n, "next"),
              error: M(r, "error"),
              complete: function () {
                v.then(function () {
                  return h.complete();
                });
              },
            },
            V = d.subscribe(O);
          return function () {
            return V.unsubscribe();
          };
        });
      }
      function xh(d) {
        return As(wh(d));
      }
      function wh(d) {
        var n = As(d.errors) ? d.errors.slice(0) : [];
        return (
          kr(d) &&
            As(d.incremental) &&
            d.incremental.forEach(function (r) {
              r.errors && n.push.apply(n, r.errors);
            }),
          n
        );
      }
      function Ch(d, n, r) {
        var h = [];
        d.forEach(function (v) {
          return v[n] && h.push(v);
        }),
          h.forEach(function (v) {
            return v[n](r);
          });
      }
      function mg(d) {
        function n(r) {
          Object.defineProperty(d, r, { value: io });
        }
        return Gd && Symbol.species && n(Symbol.species), n("@@species"), d;
      }
      function ld(d) {
        return d && "function" == typeof d.then;
      }
      var Ma = (function (d) {
        function n(r) {
          var h =
            d.call(this, function (v) {
              return (
                h.addObserver(v),
                function () {
                  return h.removeObserver(v);
                }
              );
            }) || this;
          return (
            (h.observers = new Set()),
            (h.promise = new Promise(function (v, M) {
              (h.resolve = v), (h.reject = M);
            })),
            (h.handlers = {
              next: function (v) {
                null !== h.sub &&
                  ((h.latest = ["next", v]),
                  h.notify("next", v),
                  Ch(h.observers, "next", v));
              },
              error: function (v) {
                var M = h.sub;
                null !== M &&
                  (M &&
                    setTimeout(function () {
                      return M.unsubscribe();
                    }),
                  (h.sub = null),
                  (h.latest = ["error", v]),
                  h.reject(v),
                  h.notify("error", v),
                  Ch(h.observers, "error", v));
              },
              complete: function () {
                var M = h.sub,
                  O = h.sources;
                if (null !== M) {
                  var W = (void 0 === O ? [] : O).shift();
                  W
                    ? ld(W)
                      ? W.then(function (et) {
                          return (h.sub = et.subscribe(h.handlers));
                        }, h.handlers.error)
                      : (h.sub = W.subscribe(h.handlers))
                    : (M &&
                        setTimeout(function () {
                          return M.unsubscribe();
                        }),
                      (h.sub = null),
                      h.latest && "next" === h.latest[0]
                        ? h.resolve(h.latest[1])
                        : h.resolve(),
                      h.notify("complete"),
                      Ch(h.observers, "complete"));
                }
              },
            }),
            (h.nextResultListeners = new Set()),
            (h.cancel = function (v) {
              h.reject(v), (h.sources = []), h.handlers.complete();
            }),
            h.promise.catch(function (v) {}),
            "function" == typeof r && (r = [new io(r)]),
            ld(r)
              ? r.then(function (v) {
                  return h.start(v);
                }, h.handlers.error)
              : h.start(r),
            h
          );
        }
        return (
          (0, Ee.ZT)(n, d),
          (n.prototype.start = function (r) {
            void 0 === this.sub &&
              ((this.sources = Array.from(r)), this.handlers.complete());
          }),
          (n.prototype.deliverLastMessage = function (r) {
            if (this.latest) {
              var h = this.latest[0],
                v = r[h];
              v && v.call(r, this.latest[1]),
                null === this.sub && "next" === h && r.complete && r.complete();
            }
          }),
          (n.prototype.addObserver = function (r) {
            this.observers.has(r) ||
              (this.deliverLastMessage(r), this.observers.add(r));
          }),
          (n.prototype.removeObserver = function (r) {
            this.observers.delete(r) &&
              this.observers.size < 1 &&
              this.handlers.complete();
          }),
          (n.prototype.notify = function (r, h) {
            var v = this.nextResultListeners;
            v.size &&
              ((this.nextResultListeners = new Set()),
              v.forEach(function (M) {
                return M(r, h);
              }));
          }),
          (n.prototype.beforeNext = function (r) {
            var h = !1;
            this.nextResultListeners.add(function (v, M) {
              h || ((h = !0), r(v, M));
            });
          }),
          n
        );
      })(io);
      function gc() {
        for (var d = [], n = 0; n < arguments.length; n++) d[n] = arguments[n];
        var r = Object.create(null);
        return (
          d.forEach(function (h) {
            h &&
              Object.keys(h).forEach(function (v) {
                var M = h[v];
                void 0 !== M && (r[v] = M);
              });
          }),
          r
        );
      }
      mg(Ma);
      var np = Object.prototype.toString;
      function Dh(d) {
        return gu(d);
      }
      function gu(d, n) {
        switch (np.call(d)) {
          case "[object Array]":
            if ((n = n || new Map()).has(d)) return n.get(d);
            var r = d.slice(0);
            return (
              n.set(d, r),
              r.forEach(function (v, M) {
                r[M] = gu(v, n);
              }),
              r
            );
          case "[object Object]":
            if ((n = n || new Map()).has(d)) return n.get(d);
            var h = Object.create(Object.getPrototypeOf(d));
            return (
              n.set(d, h),
              Object.keys(d).forEach(function (v) {
                h[v] = gu(d[v], n);
              }),
              h
            );
          default:
            return d;
        }
      }
      function op(d, n, r, h) {
        var v = n.data,
          M = (0, Ee._T)(n, ["data"]),
          O = r.data,
          V = (0, Ee._T)(r, ["data"]);
        return (
          u(M, V) &&
          _u(es(d).selectionSet, v, O, { fragmentMap: xa(na(d)), variables: h })
        );
      }
      function _u(d, n, r, h) {
        if (n === r) return !0;
        var v = new Set();
        return d.selections.every(function (M) {
          if (v.has(M) || (v.add(M), !Cl(M, h.variables)) || Vf(M)) return !0;
          if (wa(M)) {
            var O = Es(M),
              V = n && n[O],
              W = r && r[O],
              et = M.selectionSet;
            if (!et) return u(V, W);
            var At = Array.isArray(V),
              zt = Array.isArray(W);
            if (At !== zt) return !1;
            if (At && zt) {
              var Qt = V.length;
              if (W.length !== Qt) return !1;
              for (var ge = 0; ge < Qt; ++ge)
                if (!_u(et, V[ge], W[ge], h)) return !1;
              return !0;
            }
            return _u(et, V, W, h);
          }
          var je = Nc(M, h.fragmentMap);
          return je ? !!Vf(je) || _u(je.selectionSet, n, r, h) : void 0;
        });
      }
      function Vf(d) {
        return !!d.directives && d.directives.some(Mh);
      }
      function Mh(d) {
        return "nonreactive" === d.name.value;
      }
      var pg = Object.assign,
        zf = Object.hasOwnProperty,
        Uf = (function (d) {
          function n(r) {
            var h = r.queryManager,
              v = r.queryInfo,
              M = r.options,
              O =
                d.call(this, function ($e) {
                  try {
                    var ti = $e._subscription._observer;
                    ti && !ti.error && (ti.error = rp);
                  } catch {}
                  var Ci = !O.observers.size;
                  O.observers.add($e);
                  var di = O.last;
                  return (
                    di && di.error
                      ? $e.error && $e.error(di.error)
                      : di && di.result && $e.next && $e.next(di.result),
                    Ci && O.reobserve().catch(function () {}),
                    function () {
                      O.observers.delete($e) &&
                        !O.observers.size &&
                        O.tearDownQuery();
                    }
                  );
                }) || this;
            (O.observers = new Set()),
              (O.subscriptions = new Set()),
              (O.queryInfo = v),
              (O.queryManager = h),
              (O.waitForOwnResult = tl(M.fetchPolicy)),
              (O.isTornDown = !1),
              (O.subscribeToMore = O.subscribeToMore.bind(O));
            var V = h.defaultOptions.watchQuery,
              et = (void 0 === V ? {} : V).fetchPolicy,
              At = void 0 === et ? "cache-first" : et,
              zt = M.fetchPolicy,
              Qt = void 0 === zt ? At : zt,
              ge = M.initialFetchPolicy,
              je = void 0 === ge ? ("standby" === Qt ? At : Qt) : ge;
            (O.options = (0, Ee.pi)((0, Ee.pi)({}, M), {
              initialFetchPolicy: je,
              fetchPolicy: Qt,
            })),
              (O.queryId = v.queryId || h.generateQueryId());
            var Ye = wl(O.query);
            return (O.queryName = Ye && Ye.name && Ye.name.value), O;
          }
          return (
            (0, Ee.ZT)(n, d),
            Object.defineProperty(n.prototype, "query", {
              get: function () {
                return this.lastQuery || this.options.query;
              },
              enumerable: !1,
              configurable: !0,
            }),
            Object.defineProperty(n.prototype, "variables", {
              get: function () {
                return this.options.variables;
              },
              enumerable: !1,
              configurable: !0,
            }),
            (n.prototype.result = function () {
              var r = this;
              return new Promise(function (h, v) {
                var M = {
                    next: function (V) {
                      h(V),
                        r.observers.delete(M),
                        r.observers.size ||
                          r.queryManager.removeQuery(r.queryId),
                        setTimeout(function () {
                          O.unsubscribe();
                        }, 0);
                    },
                    error: v,
                  },
                  O = r.subscribe(M);
              });
            }),
            (n.prototype.resetDiff = function () {
              this.queryInfo.resetDiff();
            }),
            (n.prototype.getCurrentResult = function (r) {
              void 0 === r && (r = !0);
              var h = this.getLastResult(!0),
                v =
                  this.queryInfo.networkStatus ||
                  (h && h.networkStatus) ||
                  qn.ready,
                M = (0, Ee.pi)((0, Ee.pi)({}, h), {
                  loading: Wl(v),
                  networkStatus: v,
                }),
                O = this.options.fetchPolicy,
                V = void 0 === O ? "cache-first" : O;
              if (
                !tl(V) &&
                !this.queryManager.getDocumentInfo(this.query)
                  .hasForcedResolvers
              )
                if (this.waitForOwnResult) this.queryInfo.updateWatch();
                else {
                  var W = this.queryInfo.getDiff();
                  (W.complete || this.options.returnPartialData) &&
                    (M.data = W.result),
                    o(M.data, {}) && (M.data = void 0),
                    W.complete
                      ? (delete M.partial,
                        W.complete &&
                          M.networkStatus === qn.loading &&
                          ("cache-first" === V || "cache-only" === V) &&
                          ((M.networkStatus = qn.ready), (M.loading = !1)))
                      : (M.partial = !0),
                    !1 !== globalThis.__DEV__ &&
                      !W.complete &&
                      !this.options.partialRefetch &&
                      !M.loading &&
                      !M.data &&
                      !M.error &&
                      jf(W.missing);
                }
              return r && this.updateLastResult(M), M;
            }),
            (n.prototype.isDifferentFromLastResult = function (r, h) {
              return (
                !this.last ||
                (this.queryManager.getDocumentInfo(this.query)
                  .hasNonreactiveDirective
                  ? !op(this.query, this.last.result, r, this.variables)
                  : !o(this.last.result, r)) ||
                (h && !o(this.last.variables, h))
              );
            }),
            (n.prototype.getLast = function (r, h) {
              var v = this.last;
              if (v && v[r] && (!h || o(v.variables, this.variables)))
                return v[r];
            }),
            (n.prototype.getLastResult = function (r) {
              return this.getLast("result", r);
            }),
            (n.prototype.getLastError = function (r) {
              return this.getLast("error", r);
            }),
            (n.prototype.resetLastResults = function () {
              delete this.last, (this.isTornDown = !1);
            }),
            (n.prototype.resetQueryStoreErrors = function () {
              this.queryManager.resetErrors(this.queryId);
            }),
            (n.prototype.refetch = function (r) {
              var h,
                v = { pollInterval: 0 },
                M = this.options.fetchPolicy;
              if (
                ((v.fetchPolicy =
                  "cache-and-network" === M
                    ? M
                    : "no-cache" === M
                      ? "no-cache"
                      : "network-only"),
                !1 !== globalThis.__DEV__ && r && zf.call(r, "variables"))
              ) {
                var O = Ju(this.query),
                  V = O.variableDefinitions;
                (!V ||
                  !V.some(function (W) {
                    return "variables" === W.variable.name.value;
                  })) &&
                  !1 !== globalThis.__DEV__ &&
                  rn.warn(
                    20,
                    r,
                    (null === (h = O.name) || void 0 === h
                      ? void 0
                      : h.value) || O,
                  );
              }
              return (
                r &&
                  !o(this.options.variables, r) &&
                  (v.variables = this.options.variables =
                    (0, Ee.pi)((0, Ee.pi)({}, this.options.variables), r)),
                this.queryInfo.resetLastWrite(),
                this.reobserve(v, qn.refetch)
              );
            }),
            (n.prototype.fetchMore = function (r) {
              var h = this,
                v = (0, Ee.pi)(
                  (0, Ee.pi)(
                    {},
                    r.query
                      ? r
                      : (0, Ee.pi)(
                          (0, Ee.pi)(
                            (0, Ee.pi)((0, Ee.pi)({}, this.options), {
                              query: this.options.query,
                            }),
                            r,
                          ),
                          {
                            variables: (0, Ee.pi)(
                              (0, Ee.pi)({}, this.options.variables),
                              r.variables,
                            ),
                          },
                        ),
                  ),
                  { fetchPolicy: "no-cache" },
                );
              v.query = this.transformDocument(v.query);
              var M = this.queryManager.generateQueryId();
              this.lastQuery = r.query
                ? this.transformDocument(this.options.query)
                : v.query;
              var O = this.queryInfo,
                V = O.networkStatus;
              (O.networkStatus = qn.fetchMore),
                v.notifyOnNetworkStatusChange && this.observe();
              var W = new Set();
              return this.queryManager
                .fetchQuery(M, v, qn.fetchMore)
                .then(function (et) {
                  return (
                    h.queryManager.removeQuery(M),
                    O.networkStatus === qn.fetchMore && (O.networkStatus = V),
                    h.queryManager.cache.batch({
                      update: function (At) {
                        var zt = r.updateQuery;
                        zt
                          ? At.updateQuery(
                              {
                                query: h.query,
                                variables: h.variables,
                                returnPartialData: !0,
                                optimistic: !1,
                              },
                              function (Qt) {
                                return zt(Qt, {
                                  fetchMoreResult: et.data,
                                  variables: v.variables,
                                });
                              },
                            )
                          : At.writeQuery({
                              query: v.query,
                              variables: v.variables,
                              data: et.data,
                            });
                      },
                      onWatchUpdated: function (At) {
                        W.add(At.query);
                      },
                    }),
                    et
                  );
                })
                .finally(function () {
                  W.has(h.query) || Eh(h);
                });
            }),
            (n.prototype.subscribeToMore = function (r) {
              var h = this,
                v = this.queryManager
                  .startGraphQLSubscription({
                    query: r.document,
                    variables: r.variables,
                    context: r.context,
                  })
                  .subscribe({
                    next: function (M) {
                      var O = r.updateQuery;
                      O &&
                        h.updateQuery(function (V, W) {
                          return O(V, {
                            subscriptionData: M,
                            variables: W.variables,
                          });
                        });
                    },
                    error: function (M) {
                      r.onError
                        ? r.onError(M)
                        : !1 !== globalThis.__DEV__ && rn.error(21, M);
                    },
                  });
              return (
                this.subscriptions.add(v),
                function () {
                  h.subscriptions.delete(v) && v.unsubscribe();
                }
              );
            }),
            (n.prototype.setOptions = function (r) {
              return this.reobserve(r);
            }),
            (n.prototype.silentSetOptions = function (r) {
              var h = gc(this.options, r || {});
              pg(this.options, h);
            }),
            (n.prototype.setVariables = function (r) {
              return o(this.variables, r)
                ? this.observers.size
                  ? this.result()
                  : Promise.resolve()
                : ((this.options.variables = r),
                  this.observers.size
                    ? this.reobserve(
                        {
                          fetchPolicy: this.options.initialFetchPolicy,
                          variables: r,
                        },
                        qn.setVariables,
                      )
                    : Promise.resolve());
            }),
            (n.prototype.updateQuery = function (r) {
              var h = this.queryManager,
                M = r(
                  h.cache.diff({
                    query: this.options.query,
                    variables: this.variables,
                    returnPartialData: !0,
                    optimistic: !1,
                  }).result,
                  { variables: this.variables },
                );
              M &&
                (h.cache.writeQuery({
                  query: this.options.query,
                  data: M,
                  variables: this.variables,
                }),
                h.broadcastQueries());
            }),
            (n.prototype.startPolling = function (r) {
              (this.options.pollInterval = r), this.updatePolling();
            }),
            (n.prototype.stopPolling = function () {
              (this.options.pollInterval = 0), this.updatePolling();
            }),
            (n.prototype.applyNextFetchPolicy = function (r, h) {
              if (h.nextFetchPolicy) {
                var v = h.fetchPolicy,
                  M = void 0 === v ? "cache-first" : v,
                  O = h.initialFetchPolicy,
                  V = void 0 === O ? M : O;
                "standby" === M ||
                  (h.fetchPolicy =
                    "function" == typeof h.nextFetchPolicy
                      ? h.nextFetchPolicy(M, {
                          reason: r,
                          options: h,
                          observable: this,
                          initialFetchPolicy: V,
                        })
                      : "variables-changed" === r
                        ? V
                        : h.nextFetchPolicy);
              }
              return h.fetchPolicy;
            }),
            (n.prototype.fetch = function (r, h, v) {
              return (
                this.queryManager.setObservableQuery(this),
                this.queryManager.fetchConcastWithInfo(this.queryId, r, h, v)
              );
            }),
            (n.prototype.updatePolling = function () {
              var r = this;
              if (!this.queryManager.ssrMode) {
                var v = this.pollingInfo,
                  M = this.options.pollInterval;
                if (!M || !this.hasObservers())
                  return void (
                    v && (clearTimeout(v.timeout), delete this.pollingInfo)
                  );
                if (!v || v.interval !== M) {
                  rn(M, 22), ((v || (this.pollingInfo = {})).interval = M);
                  var V = function () {
                      var et, At;
                      r.pollingInfo &&
                        (Wl(r.queryInfo.networkStatus) ||
                        (null !== (At = (et = r.options).skipPollAttempt) &&
                          void 0 !== At &&
                          At.call(et))
                          ? W()
                          : r
                              .reobserve(
                                {
                                  fetchPolicy:
                                    "no-cache" === r.options.initialFetchPolicy
                                      ? "no-cache"
                                      : "network-only",
                                },
                                qn.poll,
                              )
                              .then(W, W));
                    },
                    W = function () {
                      var et = r.pollingInfo;
                      et &&
                        (clearTimeout(et.timeout),
                        (et.timeout = setTimeout(V, et.interval)));
                    };
                  W();
                }
              }
            }),
            (n.prototype.updateLastResult = function (r, h) {
              void 0 === h && (h = this.variables);
              var v = this.getLastError();
              return (
                v && this.last && !o(h, this.last.variables) && (v = void 0),
                (this.last = (0, Ee.pi)(
                  {
                    result: this.queryManager.assumeImmutableResults
                      ? r
                      : Dh(r),
                    variables: h,
                  },
                  v ? { error: v } : null,
                ))
              );
            }),
            (n.prototype.reobserveAsConcast = function (r, h) {
              var v = this;
              this.isTornDown = !1;
              var M = h === qn.refetch || h === qn.fetchMore || h === qn.poll,
                O = this.options.variables,
                V = this.options.fetchPolicy,
                W = gc(this.options, r || {}),
                et = M ? W : pg(this.options, W),
                At = this.transformDocument(et.query);
              (this.lastQuery = At),
                M ||
                  (this.updatePolling(),
                  r &&
                    r.variables &&
                    !o(r.variables, O) &&
                    "standby" !== et.fetchPolicy &&
                    (et.fetchPolicy === V ||
                      "function" == typeof et.nextFetchPolicy) &&
                    (this.applyNextFetchPolicy("variables-changed", et),
                    void 0 === h && (h = qn.setVariables))),
                this.waitForOwnResult &&
                  (this.waitForOwnResult = tl(et.fetchPolicy));
              var zt = function () {
                  v.concast === je && (v.waitForOwnResult = !1);
                },
                Qt = et.variables && (0, Ee.pi)({}, et.variables),
                ge = this.fetch(et, h, At),
                je = ge.concast,
                $e = {
                  next: function (ti) {
                    o(v.variables, Qt) && (zt(), v.reportResult(ti, Qt));
                  },
                  error: function (ti) {
                    o(v.variables, Qt) && (zt(), v.reportError(ti, Qt));
                  },
                };
              return (
                !M &&
                  (ge.fromLink || !this.concast) &&
                  (this.concast &&
                    this.observer &&
                    this.concast.removeObserver(this.observer),
                  (this.concast = je),
                  (this.observer = $e)),
                je.addObserver($e),
                je
              );
            }),
            (n.prototype.reobserve = function (r, h) {
              return this.reobserveAsConcast(r, h).promise;
            }),
            (n.prototype.resubscribeAfterError = function () {
              for (var r = [], h = 0; h < arguments.length; h++)
                r[h] = arguments[h];
              var v = this.last;
              this.resetLastResults();
              var M = this.subscribe.apply(this, r);
              return (this.last = v), M;
            }),
            (n.prototype.observe = function () {
              this.reportResult(this.getCurrentResult(!1), this.variables);
            }),
            (n.prototype.reportResult = function (r, h) {
              var v = this.getLastError(),
                M = this.isDifferentFromLastResult(r, h);
              (v || !r.partial || this.options.returnPartialData) &&
                this.updateLastResult(r, h),
                (v || M) && Ch(this.observers, "next", r);
            }),
            (n.prototype.reportError = function (r, h) {
              var v = (0, Ee.pi)((0, Ee.pi)({}, this.getLastResult()), {
                error: r,
                errors: r.graphQLErrors,
                networkStatus: qn.error,
                loading: !1,
              });
              this.updateLastResult(v, h),
                Ch(this.observers, "error", (this.last.error = r));
            }),
            (n.prototype.hasObservers = function () {
              return this.observers.size > 0;
            }),
            (n.prototype.tearDownQuery = function () {
              this.isTornDown ||
                (this.concast &&
                  this.observer &&
                  (this.concast.removeObserver(this.observer),
                  delete this.concast,
                  delete this.observer),
                this.stopPolling(),
                this.subscriptions.forEach(function (r) {
                  return r.unsubscribe();
                }),
                this.subscriptions.clear(),
                this.queryManager.stopQuery(this.queryId),
                this.observers.clear(),
                (this.isTornDown = !0));
            }),
            (n.prototype.transformDocument = function (r) {
              return this.queryManager.transform(r);
            }),
            n
          );
        })(io);
      function Eh(d) {
        var n = d.options,
          r = n.fetchPolicy,
          h = n.nextFetchPolicy;
        return "cache-and-network" === r || "network-only" === r
          ? d.reobserve({
              fetchPolicy: "cache-first",
              nextFetchPolicy: function (v, M) {
                return (
                  (this.nextFetchPolicy = h),
                  "function" == typeof this.nextFetchPolicy
                    ? this.nextFetchPolicy(v, M)
                    : r
                );
              },
            })
          : d.reobserve();
      }
      function rp(d) {
        !1 !== globalThis.__DEV__ && rn.error(23, d.message, d.stack);
      }
      function jf(d) {
        !1 !== globalThis.__DEV__ &&
          d &&
          !1 !== globalThis.__DEV__ &&
          rn.debug(24, d);
      }
      function tl(d) {
        return "network-only" === d || "no-cache" === d || "standby" === d;
      }
      mg(Uf);
      var cd = new (oc ? WeakMap : Map)();
      function vu(d, n) {
        var r = d[n];
        "function" == typeof r &&
          (d[n] = function () {
            return cd.set(d, (cd.get(d) + 1) % 1e15), r.apply(this, arguments);
          });
      }
      function bu(d) {
        d.notifyTimeout &&
          (clearTimeout(d.notifyTimeout), (d.notifyTimeout = void 0));
      }
      var Hf = (function () {
        function d(n, r) {
          void 0 === r && (r = n.generateQueryId()),
            (this.queryId = r),
            (this.listeners = new Set()),
            (this.document = null),
            (this.lastRequestId = 1),
            (this.stopped = !1),
            (this.dirty = !1),
            (this.observableQuery = null);
          var h = (this.cache = n.cache);
          cd.has(h) ||
            (cd.set(h, 0), vu(h, "evict"), vu(h, "modify"), vu(h, "reset"));
        }
        return (
          (d.prototype.init = function (n) {
            var r = n.networkStatus || qn.loading;
            return (
              this.variables &&
                this.networkStatus !== qn.loading &&
                !o(this.variables, n.variables) &&
                (r = qn.setVariables),
              o(n.variables, this.variables) || (this.lastDiff = void 0),
              Object.assign(this, {
                document: n.document,
                variables: n.variables,
                networkError: null,
                graphQLErrors: this.graphQLErrors || [],
                networkStatus: r,
              }),
              n.observableQuery && this.setObservableQuery(n.observableQuery),
              n.lastRequestId && (this.lastRequestId = n.lastRequestId),
              this
            );
          }),
          (d.prototype.reset = function () {
            bu(this), (this.dirty = !1);
          }),
          (d.prototype.resetDiff = function () {
            this.lastDiff = void 0;
          }),
          (d.prototype.getDiff = function () {
            var n = this.getDiffOptions();
            if (this.lastDiff && o(n, this.lastDiff.options))
              return this.lastDiff.diff;
            this.updateWatch(this.variables);
            var r = this.observableQuery;
            if (r && "no-cache" === r.options.fetchPolicy)
              return { complete: !1 };
            var h = this.cache.diff(n);
            return this.updateLastDiff(h, n), h;
          }),
          (d.prototype.updateLastDiff = function (n, r) {
            this.lastDiff = n
              ? { diff: n, options: r || this.getDiffOptions() }
              : void 0;
          }),
          (d.prototype.getDiffOptions = function (n) {
            var r;
            return (
              void 0 === n && (n = this.variables),
              {
                query: this.document,
                variables: n,
                returnPartialData: !0,
                optimistic: !0,
                canonizeResults:
                  null === (r = this.observableQuery) || void 0 === r
                    ? void 0
                    : r.options.canonizeResults,
              }
            );
          }),
          (d.prototype.setDiff = function (n) {
            var h,
              r = this,
              v = this.lastDiff && this.lastDiff.diff;
            (n &&
              !n.complete &&
              null !== (h = this.observableQuery) &&
              void 0 !== h &&
              h.getLastError()) ||
              (this.updateLastDiff(n),
              !this.dirty &&
                !o(v && v.result, n && n.result) &&
                ((this.dirty = !0),
                this.notifyTimeout ||
                  (this.notifyTimeout = setTimeout(function () {
                    return r.notify();
                  }, 0))));
          }),
          (d.prototype.setObservableQuery = function (n) {
            var r = this;
            n !== this.observableQuery &&
              (this.oqListener && this.listeners.delete(this.oqListener),
              (this.observableQuery = n),
              n
                ? ((n.queryInfo = this),
                  this.listeners.add(
                    (this.oqListener = function () {
                      r.getDiff().fromOptimisticTransaction
                        ? n.observe()
                        : Eh(n);
                    }),
                  ))
                : delete this.oqListener);
          }),
          (d.prototype.notify = function () {
            var n = this;
            bu(this),
              this.shouldNotify() &&
                this.listeners.forEach(function (r) {
                  return r(n);
                }),
              (this.dirty = !1);
          }),
          (d.prototype.shouldNotify = function () {
            if (!this.dirty || !this.listeners.size) return !1;
            if (Wl(this.networkStatus) && this.observableQuery) {
              var n = this.observableQuery.options.fetchPolicy;
              if ("cache-only" !== n && "cache-and-network" !== n) return !1;
            }
            return !0;
          }),
          (d.prototype.stop = function () {
            if (!this.stopped) {
              (this.stopped = !0),
                this.reset(),
                this.cancel(),
                (this.cancel = d.prototype.cancel);
              var n = this.observableQuery;
              n && n.stopPolling();
            }
          }),
          (d.prototype.cancel = function () {}),
          (d.prototype.updateWatch = function (n) {
            var r = this;
            void 0 === n && (n = this.variables);
            var h = this.observableQuery;
            if (!h || "no-cache" !== h.options.fetchPolicy) {
              var v = (0, Ee.pi)((0, Ee.pi)({}, this.getDiffOptions(n)), {
                watcher: this,
                callback: function (M) {
                  return r.setDiff(M);
                },
              });
              (!this.lastWatch || !o(v, this.lastWatch)) &&
                (this.cancel(),
                (this.cancel = this.cache.watch((this.lastWatch = v))));
            }
          }),
          (d.prototype.resetLastWrite = function () {
            this.lastWrite = void 0;
          }),
          (d.prototype.shouldWrite = function (n, r) {
            var h = this.lastWrite;
            return !(
              h &&
              h.dmCount === cd.get(this.cache) &&
              o(r, h.variables) &&
              o(n.data, h.result.data)
            );
          }),
          (d.prototype.markResult = function (n, r, h, v) {
            var M = this,
              O = new fr(),
              V = As(n.errors) ? n.errors.slice(0) : [];
            if ((this.reset(), "incremental" in n && As(n.incremental))) {
              var W = Cr(this.getDiff().result, n);
              n.data = W;
            } else if ("hasNext" in n && n.hasNext) {
              var et = this.getDiff();
              n.data = O.merge(et.result, n.data);
            }
            (this.graphQLErrors = V),
              "no-cache" === h.fetchPolicy
                ? this.updateLastDiff(
                    { result: n.data, complete: !0 },
                    this.getDiffOptions(h.variables),
                  )
                : 0 !== v &&
                  (yu(n, h.errorPolicy)
                    ? this.cache.performTransaction(function (At) {
                        if (M.shouldWrite(n, h.variables))
                          At.writeQuery({
                            query: r,
                            data: n.data,
                            variables: h.variables,
                            overwrite: 1 === v,
                          }),
                            (M.lastWrite = {
                              result: n,
                              variables: h.variables,
                              dmCount: cd.get(M.cache),
                            });
                        else if (M.lastDiff && M.lastDiff.diff.complete)
                          return void (n.data = M.lastDiff.diff.result);
                        var zt = M.getDiffOptions(h.variables),
                          Qt = At.diff(zt);
                        !M.stopped &&
                          o(M.variables, h.variables) &&
                          M.updateWatch(h.variables),
                          M.updateLastDiff(Qt, zt),
                          Qt.complete && (n.data = Qt.result);
                      })
                    : (this.lastWrite = void 0));
          }),
          (d.prototype.markReady = function () {
            return (this.networkError = null), (this.networkStatus = qn.ready);
          }),
          (d.prototype.markError = function (n) {
            return (
              (this.networkStatus = qn.error),
              (this.lastWrite = void 0),
              this.reset(),
              n.graphQLErrors && (this.graphQLErrors = n.graphQLErrors),
              n.networkError && (this.networkError = n.networkError),
              n
            );
          }),
          d
        );
      })();
      function yu(d, n) {
        void 0 === n && (n = "none");
        var r = "ignore" === n || "all" === n,
          h = !xh(d);
        return !h && r && d.data && (h = !0), h;
      }
      var Sh = Object.prototype.hasOwnProperty,
        sa = Object.create(null),
        dd = (function () {
          function d(n) {
            var r = this;
            (this.clientAwareness = {}),
              (this.queries = new Map()),
              (this.fetchCancelFns = new Map()),
              (this.transformCache = new Od(
                ta["queryManager.getDocumentInfo"] || 2e3,
              )),
              (this.queryIdCounter = 1),
              (this.requestIdCounter = 1),
              (this.mutationIdCounter = 1),
              (this.inFlightLinkObservables = new be(!1));
            var h = new ip(
              function (M) {
                return r.cache.transformDocument(M);
              },
              { cache: !1 },
            );
            (this.cache = n.cache),
              (this.link = n.link),
              (this.defaultOptions = n.defaultOptions),
              (this.queryDeduplication = n.queryDeduplication),
              (this.clientAwareness = n.clientAwareness),
              (this.localState = n.localState),
              (this.ssrMode = n.ssrMode),
              (this.assumeImmutableResults = n.assumeImmutableResults);
            var v = n.documentTransform;
            (this.documentTransform = v ? h.concat(v).concat(h) : h),
              (this.defaultContext = n.defaultContext || Object.create(null)),
              (this.onBroadcast = n.onBroadcast) &&
                (this.mutationStore = Object.create(null));
          }
          return (
            (d.prototype.stop = function () {
              var n = this;
              this.queries.forEach(function (r, h) {
                n.stopQueryNoBroadcast(h);
              }),
                this.cancelPendingFetches(Ao(25));
            }),
            (d.prototype.cancelPendingFetches = function (n) {
              this.fetchCancelFns.forEach(function (r) {
                return r(n);
              }),
                this.fetchCancelFns.clear();
            }),
            (d.prototype.mutate = function (n) {
              return (0, Ee.mG)(this, arguments, void 0, function (r) {
                var h,
                  v,
                  M,
                  O,
                  V,
                  W,
                  et,
                  At = r.mutation,
                  zt = r.variables,
                  Qt = r.optimisticResponse,
                  ge = r.updateQueries,
                  je = r.refetchQueries,
                  Ye = void 0 === je ? [] : je,
                  $e = r.awaitRefetchQueries,
                  ti = void 0 !== $e && $e,
                  Ci = r.update,
                  di = r.onQueryUpdated,
                  Pi = r.fetchPolicy,
                  zi =
                    void 0 === Pi
                      ? (null === (W = this.defaultOptions.mutate) ||
                        void 0 === W
                          ? void 0
                          : W.fetchPolicy) || "network-only"
                      : Pi,
                  Gi = r.errorPolicy,
                  Ki =
                    void 0 === Gi
                      ? (null === (et = this.defaultOptions.mutate) ||
                        void 0 === et
                          ? void 0
                          : et.errorPolicy) || "none"
                      : Gi,
                  fn = r.keepRootFields,
                  kn = r.context;
                return (0, Ee.Jh)(this, function (Yn) {
                  switch (Yn.label) {
                    case 0:
                      return (
                        rn(At, 26),
                        rn("network-only" === zi || "no-cache" === zi, 27),
                        (h = this.generateMutationId()),
                        (At = this.cache.transformForLink(this.transform(At))),
                        (v = this.getDocumentInfo(At).hasClientExports),
                        (zt = this.getVariables(At, zt)),
                        v
                          ? [
                              4,
                              this.localState.addExportedVariables(At, zt, kn),
                            ]
                          : [3, 2]
                      );
                    case 1:
                      (zt = Yn.sent()), (Yn.label = 2);
                    case 2:
                      return (
                        (M =
                          this.mutationStore &&
                          (this.mutationStore[h] = {
                            mutation: At,
                            variables: zt,
                            loading: !0,
                            error: null,
                          })),
                        (O =
                          Qt &&
                          this.markMutationOptimistic(Qt, {
                            mutationId: h,
                            document: At,
                            variables: zt,
                            fetchPolicy: zi,
                            errorPolicy: Ki,
                            context: kn,
                            updateQueries: ge,
                            update: Ci,
                            keepRootFields: fn,
                          })),
                        this.broadcastQueries(),
                        (V = this),
                        [
                          2,
                          new Promise(function (la, ns) {
                            return Bf(
                              V.getObservableFromLink(
                                At,
                                (0, Ee.pi)((0, Ee.pi)({}, kn), {
                                  optimisticResponse: O ? Qt : void 0,
                                }),
                                zt,
                                {},
                                !1,
                              ),
                              function (po) {
                                if (xh(po) && "none" === Ki)
                                  throw new ra({ graphQLErrors: wh(po) });
                                M && ((M.loading = !1), (M.error = null));
                                var Rs = (0, Ee.pi)({}, po);
                                return (
                                  "function" == typeof Ye && (Ye = Ye(Rs)),
                                  "ignore" === Ki && xh(Rs) && delete Rs.errors,
                                  V.markMutationResult({
                                    mutationId: h,
                                    result: Rs,
                                    document: At,
                                    variables: zt,
                                    fetchPolicy: zi,
                                    errorPolicy: Ki,
                                    context: kn,
                                    update: Ci,
                                    updateQueries: ge,
                                    awaitRefetchQueries: ti,
                                    refetchQueries: Ye,
                                    removeOptimistic: O ? h : void 0,
                                    onQueryUpdated: di,
                                    keepRootFields: fn,
                                  })
                                );
                              },
                            ).subscribe({
                              next: function (po) {
                                V.broadcastQueries(),
                                  (!("hasNext" in po) || !1 === po.hasNext) &&
                                    la(po);
                              },
                              error: function (po) {
                                M && ((M.loading = !1), (M.error = po)),
                                  O && V.cache.removeOptimistic(h),
                                  V.broadcastQueries(),
                                  ns(
                                    po instanceof ra
                                      ? po
                                      : new ra({ networkError: po }),
                                  );
                              },
                            });
                          }),
                        ]
                      );
                  }
                });
              });
            }),
            (d.prototype.markMutationResult = function (n, r) {
              var h = this;
              void 0 === r && (r = this.cache);
              var v = n.result,
                M = [],
                O = "no-cache" === n.fetchPolicy;
              if (!O && yu(v, n.errorPolicy)) {
                if (
                  (kr(v) ||
                    M.push({
                      result: v.data,
                      dataId: "ROOT_MUTATION",
                      query: n.document,
                      variables: n.variables,
                    }),
                  kr(v) && As(v.incremental))
                ) {
                  var V = r.diff({
                      id: "ROOT_MUTATION",
                      query: this.getDocumentInfo(n.document).asQuery,
                      variables: n.variables,
                      optimistic: !1,
                      returnPartialData: !0,
                    }),
                    W = void 0;
                  V.result && (W = Cr(V.result, v)),
                    typeof W < "u" &&
                      ((v.data = W),
                      M.push({
                        result: W,
                        dataId: "ROOT_MUTATION",
                        query: n.document,
                        variables: n.variables,
                      }));
                }
                var et = n.updateQueries;
                et &&
                  this.queries.forEach(function (zt, Qt) {
                    var ge = zt.observableQuery,
                      je = ge && ge.queryName;
                    if (je && Sh.call(et, je)) {
                      var Ye = et[je],
                        $e = h.queries.get(Qt),
                        ti = $e.document,
                        Ci = $e.variables,
                        di = r.diff({
                          query: ti,
                          variables: Ci,
                          returnPartialData: !0,
                          optimistic: !1,
                        }),
                        Pi = di.result;
                      if (di.complete && Pi) {
                        var Gi = Ye(Pi, {
                          mutationResult: v,
                          queryName: (ti && ia(ti)) || void 0,
                          queryVariables: Ci,
                        });
                        Gi &&
                          M.push({
                            result: Gi,
                            dataId: "ROOT_QUERY",
                            query: ti,
                            variables: Ci,
                          });
                      }
                    }
                  });
              }
              if (
                M.length > 0 ||
                (n.refetchQueries || "").length > 0 ||
                n.update ||
                n.onQueryUpdated ||
                n.removeOptimistic
              ) {
                var At = [];
                if (
                  (this.refetchQueries({
                    updateCache: function (zt) {
                      O ||
                        M.forEach(function (Ye) {
                          return zt.write(Ye);
                        });
                      var Qt = n.update,
                        ge =
                          !(function hh(d) {
                            return (
                              kr(d) ||
                              (function uh(d) {
                                return "hasNext" in d && "data" in d;
                              })(d)
                            );
                          })(v) ||
                          (kr(v) && !v.hasNext);
                      if (Qt) {
                        if (!O) {
                          var je = zt.diff({
                            id: "ROOT_MUTATION",
                            query: h.getDocumentInfo(n.document).asQuery,
                            variables: n.variables,
                            optimistic: !1,
                            returnPartialData: !0,
                          });
                          je.complete &&
                            ("incremental" in
                              (v = (0, Ee.pi)((0, Ee.pi)({}, v), {
                                data: je.result,
                              })) && delete v.incremental,
                            "hasNext" in v && delete v.hasNext);
                        }
                        ge &&
                          Qt(zt, v, {
                            context: n.context,
                            variables: n.variables,
                          });
                      }
                      !O &&
                        !n.keepRootFields &&
                        ge &&
                        zt.modify({
                          id: "ROOT_MUTATION",
                          fields: function (Ye, $e) {
                            return "__typename" === $e.fieldName
                              ? Ye
                              : $e.DELETE;
                          },
                        });
                    },
                    include: n.refetchQueries,
                    optimistic: !1,
                    removeOptimistic: n.removeOptimistic,
                    onQueryUpdated: n.onQueryUpdated || null,
                  }).forEach(function (zt) {
                    return At.push(zt);
                  }),
                  n.awaitRefetchQueries || n.onQueryUpdated)
                )
                  return Promise.all(At).then(function () {
                    return v;
                  });
              }
              return Promise.resolve(v);
            }),
            (d.prototype.markMutationOptimistic = function (n, r) {
              var h = this,
                v = "function" == typeof n ? n(r.variables, { IGNORE: sa }) : n;
              return (
                v !== sa &&
                (this.cache.recordOptimisticTransaction(function (M) {
                  try {
                    h.markMutationResult(
                      (0, Ee.pi)((0, Ee.pi)({}, r), { result: { data: v } }),
                      M,
                    );
                  } catch (O) {
                    !1 !== globalThis.__DEV__ && rn.error(O);
                  }
                }, r.mutationId),
                !0)
              );
            }),
            (d.prototype.fetchQuery = function (n, r, h) {
              return this.fetchConcastWithInfo(n, r, h).concast.promise;
            }),
            (d.prototype.getQueryStore = function () {
              var n = Object.create(null);
              return (
                this.queries.forEach(function (r, h) {
                  n[h] = {
                    variables: r.variables,
                    networkStatus: r.networkStatus,
                    networkError: r.networkError,
                    graphQLErrors: r.graphQLErrors,
                  };
                }),
                n
              );
            }),
            (d.prototype.resetErrors = function (n) {
              var r = this.queries.get(n);
              r && ((r.networkError = void 0), (r.graphQLErrors = []));
            }),
            (d.prototype.transform = function (n) {
              return this.documentTransform.transformDocument(n);
            }),
            (d.prototype.getDocumentInfo = function (n) {
              var r = this.transformCache;
              if (!r.has(n)) {
                var h = {
                  hasClientExports: Wc(n),
                  hasForcedResolvers: this.localState.shouldForceResolvers(n),
                  hasNonreactiveDirective: Wa(["nonreactive"], n),
                  clientQuery: this.localState.clientQuery(n),
                  serverQuery: lu(
                    [
                      { name: "client", remove: !0 },
                      { name: "connection" },
                      { name: "nonreactive" },
                    ],
                    n,
                  ),
                  defaultVars: Xu(wl(n)),
                  asQuery: (0, Ee.pi)((0, Ee.pi)({}, n), {
                    definitions: n.definitions.map(function (v) {
                      return "OperationDefinition" === v.kind &&
                        "query" !== v.operation
                        ? (0, Ee.pi)((0, Ee.pi)({}, v), { operation: "query" })
                        : v;
                    }),
                  }),
                };
                r.set(n, h);
              }
              return r.get(n);
            }),
            (d.prototype.getVariables = function (n, r) {
              return (0, Ee.pi)(
                (0, Ee.pi)({}, this.getDocumentInfo(n).defaultVars),
                r,
              );
            }),
            (d.prototype.watchQuery = function (n) {
              var r = this.transform(n.query);
              typeof (n = (0, Ee.pi)((0, Ee.pi)({}, n), {
                variables: this.getVariables(r, n.variables),
              })).notifyOnNetworkStatusChange > "u" &&
                (n.notifyOnNetworkStatusChange = !1);
              var h = new Hf(this),
                v = new Uf({ queryManager: this, queryInfo: h, options: n });
              return (
                (v.lastQuery = r),
                this.queries.set(v.queryId, h),
                h.init({
                  document: r,
                  observableQuery: v,
                  variables: v.variables,
                }),
                v
              );
            }),
            (d.prototype.query = function (n, r) {
              var h = this;
              return (
                void 0 === r && (r = this.generateQueryId()),
                rn(n.query, 28),
                rn("Document" === n.query.kind, 29),
                rn(!n.returnPartialData, 30),
                rn(!n.pollInterval, 31),
                this.fetchQuery(
                  r,
                  (0, Ee.pi)((0, Ee.pi)({}, n), {
                    query: this.transform(n.query),
                  }),
                ).finally(function () {
                  return h.stopQuery(r);
                })
              );
            }),
            (d.prototype.generateQueryId = function () {
              return String(this.queryIdCounter++);
            }),
            (d.prototype.generateRequestId = function () {
              return this.requestIdCounter++;
            }),
            (d.prototype.generateMutationId = function () {
              return String(this.mutationIdCounter++);
            }),
            (d.prototype.stopQueryInStore = function (n) {
              this.stopQueryInStoreNoBroadcast(n), this.broadcastQueries();
            }),
            (d.prototype.stopQueryInStoreNoBroadcast = function (n) {
              var r = this.queries.get(n);
              r && r.stop();
            }),
            (d.prototype.clearStore = function (n) {
              return (
                void 0 === n && (n = { discardWatches: !0 }),
                this.cancelPendingFetches(Ao(32)),
                this.queries.forEach(function (r) {
                  r.observableQuery ? (r.networkStatus = qn.loading) : r.stop();
                }),
                this.mutationStore &&
                  (this.mutationStore = Object.create(null)),
                this.cache.reset(n)
              );
            }),
            (d.prototype.getObservableQueries = function (n) {
              var r = this;
              void 0 === n && (n = "active");
              var h = new Map(),
                v = new Map(),
                M = new Set();
              return (
                Array.isArray(n) &&
                  n.forEach(function (O) {
                    "string" == typeof O
                      ? v.set(O, !1)
                      : (function Za(d) {
                            return (
                              Lo(d) &&
                              "Document" === d.kind &&
                              Array.isArray(d.definitions)
                            );
                          })(O)
                        ? v.set(r.transform(O), !1)
                        : Lo(O) && O.query && M.add(O);
                  }),
                this.queries.forEach(function (O, V) {
                  var W = O.observableQuery,
                    et = O.document;
                  if (W) {
                    if ("all" === n) return void h.set(V, W);
                    var At = W.queryName;
                    if (
                      "standby" === W.options.fetchPolicy ||
                      ("active" === n && !W.hasObservers())
                    )
                      return;
                    ("active" === n ||
                      (At && v.has(At)) ||
                      (et && v.has(et))) &&
                      (h.set(V, W), At && v.set(At, !0), et && v.set(et, !0));
                  }
                }),
                M.size &&
                  M.forEach(function (O) {
                    var V = Hn("legacyOneTimeQuery"),
                      W = r
                        .getQuery(V)
                        .init({ document: O.query, variables: O.variables }),
                      et = new Uf({
                        queryManager: r,
                        queryInfo: W,
                        options: (0, Ee.pi)((0, Ee.pi)({}, O), {
                          fetchPolicy: "network-only",
                        }),
                      });
                    rn(et.queryId === V),
                      W.setObservableQuery(et),
                      h.set(V, et);
                  }),
                !1 !== globalThis.__DEV__ &&
                  v.size &&
                  v.forEach(function (O, V) {
                    O ||
                      (!1 !== globalThis.__DEV__ &&
                        rn.warn("string" == typeof V ? 33 : 34, V));
                  }),
                h
              );
            }),
            (d.prototype.reFetchObservableQueries = function (n) {
              var r = this;
              void 0 === n && (n = !1);
              var h = [];
              return (
                this.getObservableQueries(n ? "all" : "active").forEach(
                  function (v, M) {
                    var O = v.options.fetchPolicy;
                    v.resetLastResults(),
                      (n || ("standby" !== O && "cache-only" !== O)) &&
                        h.push(v.refetch()),
                      r.getQuery(M).setDiff(null);
                  },
                ),
                this.broadcastQueries(),
                Promise.all(h)
              );
            }),
            (d.prototype.setObservableQuery = function (n) {
              this.getQuery(n.queryId).setObservableQuery(n);
            }),
            (d.prototype.startGraphQLSubscription = function (n) {
              var r = this,
                h = n.query,
                v = n.fetchPolicy,
                M = n.errorPolicy,
                O = void 0 === M ? "none" : M,
                V = n.variables,
                W = n.context,
                et = void 0 === W ? {} : W,
                At = n.extensions,
                zt = void 0 === At ? {} : At;
              (h = this.transform(h)), (V = this.getVariables(h, V));
              var Qt = function (je) {
                return r
                  .getObservableFromLink(h, et, je, zt)
                  .map(function (Ye) {
                    "no-cache" !== v &&
                      (yu(Ye, O) &&
                        r.cache.write({
                          query: h,
                          result: Ye.data,
                          dataId: "ROOT_SUBSCRIPTION",
                          variables: je,
                        }),
                      r.broadcastQueries());
                    var $e = xh(Ye),
                      ti = (function dh(d) {
                        return (
                          !!d.extensions && Array.isArray(d.extensions[Kc])
                        );
                      })(Ye);
                    if ($e || ti) {
                      var Ci = {};
                      if (
                        ($e && (Ci.graphQLErrors = Ye.errors),
                        ti && (Ci.protocolErrors = Ye.extensions[Kc]),
                        "none" === O || ti)
                      )
                        throw new ra(Ci);
                    }
                    return "ignore" === O && delete Ye.errors, Ye;
                  });
              };
              if (this.getDocumentInfo(h).hasClientExports) {
                var ge = this.localState
                  .addExportedVariables(h, V, et)
                  .then(Qt);
                return new io(function (je) {
                  var Ye = null;
                  return (
                    ge.then(function ($e) {
                      return (Ye = $e.subscribe(je));
                    }, je.error),
                    function () {
                      return Ye && Ye.unsubscribe();
                    }
                  );
                });
              }
              return Qt(V);
            }),
            (d.prototype.stopQuery = function (n) {
              this.stopQueryNoBroadcast(n), this.broadcastQueries();
            }),
            (d.prototype.stopQueryNoBroadcast = function (n) {
              this.stopQueryInStoreNoBroadcast(n), this.removeQuery(n);
            }),
            (d.prototype.removeQuery = function (n) {
              this.fetchCancelFns.delete(n),
                this.queries.has(n) &&
                  (this.getQuery(n).stop(), this.queries.delete(n));
            }),
            (d.prototype.broadcastQueries = function () {
              this.onBroadcast && this.onBroadcast(),
                this.queries.forEach(function (n) {
                  return n.notify();
                });
            }),
            (d.prototype.getLocalState = function () {
              return this.localState;
            }),
            (d.prototype.getObservableFromLink = function (n, r, h, v, M) {
              var V,
                O = this;
              void 0 === M &&
                (M =
                  null !== (V = r?.queryDeduplication) && void 0 !== V
                    ? V
                    : this.queryDeduplication);
              var W,
                et = this.getDocumentInfo(n),
                At = et.serverQuery,
                zt = et.clientQuery;
              if (At) {
                var ge = this.inFlightLinkObservables,
                  je = this.link,
                  Ye = {
                    query: At,
                    variables: h,
                    operationName: ia(At) || void 0,
                    context: this.prepareContext(
                      (0, Ee.pi)((0, Ee.pi)({}, r), { forceFetch: !M }),
                    ),
                    extensions: v,
                  };
                if (((r = Ye.context), M)) {
                  var $e = ed(At),
                    ti = Vr(h),
                    Ci = ge.lookup($e, ti);
                  if (!(W = Ci.observable)) {
                    var di = new Ma([Vd(je, Ye)]);
                    (W = Ci.observable = di),
                      di.beforeNext(function () {
                        ge.remove($e, ti);
                      });
                  }
                } else W = new Ma([Vd(je, Ye)]);
              } else
                (W = new Ma([io.of({ data: {} })])),
                  (r = this.prepareContext(r));
              return (
                zt &&
                  (W = Bf(W, function (Pi) {
                    return O.localState.runResolvers({
                      document: zt,
                      remoteResult: Pi,
                      context: r,
                      variables: h,
                    });
                  })),
                W
              );
            }),
            (d.prototype.getResultsFromLink = function (n, r, h) {
              var v = (n.lastRequestId = this.generateRequestId()),
                M = this.cache.transformForLink(h.query);
              return Bf(
                this.getObservableFromLink(M, h.context, h.variables),
                function (O) {
                  var V = wh(O),
                    W = V.length > 0;
                  if (v >= n.lastRequestId) {
                    if (W && "none" === h.errorPolicy)
                      throw n.markError(new ra({ graphQLErrors: V }));
                    n.markResult(O, M, h, r), n.markReady();
                  }
                  var et = {
                    data: O.data,
                    loading: !1,
                    networkStatus: qn.ready,
                  };
                  return (
                    W &&
                      "ignore" !== h.errorPolicy &&
                      ((et.errors = V), (et.networkStatus = qn.error)),
                    et
                  );
                },
                function (O) {
                  var V = (function sc(d) {
                    return d.hasOwnProperty("graphQLErrors");
                  })(O)
                    ? O
                    : new ra({ networkError: O });
                  throw (v >= n.lastRequestId && n.markError(V), V);
                },
              );
            }),
            (d.prototype.fetchConcastWithInfo = function (n, r, h, v) {
              var M = this;
              void 0 === h && (h = qn.loading), void 0 === v && (v = r.query);
              var Gi,
                Ki,
                O = this.getVariables(v, r.variables),
                V = this.getQuery(n),
                W = this.defaultOptions.watchQuery,
                et = r.fetchPolicy,
                zt = r.errorPolicy,
                ge = r.returnPartialData,
                Ye = r.notifyOnNetworkStatusChange,
                ti = r.context,
                di = Object.assign({}, r, {
                  query: v,
                  variables: O,
                  fetchPolicy:
                    void 0 === et ? (W && W.fetchPolicy) || "cache-first" : et,
                  errorPolicy:
                    void 0 === zt ? (W && W.errorPolicy) || "none" : zt,
                  returnPartialData: void 0 !== ge && ge,
                  notifyOnNetworkStatusChange: void 0 !== Ye && Ye,
                  context: void 0 === ti ? {} : ti,
                }),
                Pi = function (kn) {
                  di.variables = kn;
                  var Yn = M.fetchQueryByPolicy(V, di, h);
                  return (
                    "standby" !== di.fetchPolicy &&
                      Yn.sources.length > 0 &&
                      V.observableQuery &&
                      V.observableQuery.applyNextFetchPolicy("after-fetch", r),
                    Yn
                  );
                },
                zi = function () {
                  return M.fetchCancelFns.delete(n);
                };
              if (
                (this.fetchCancelFns.set(n, function (kn) {
                  zi(),
                    setTimeout(function () {
                      return Gi.cancel(kn);
                    });
                }),
                this.getDocumentInfo(di.query).hasClientExports)
              )
                (Gi = new Ma(
                  this.localState
                    .addExportedVariables(di.query, di.variables, di.context)
                    .then(Pi)
                    .then(function (kn) {
                      return kn.sources;
                    }),
                )),
                  (Ki = !0);
              else {
                var fn = Pi(di.variables);
                (Ki = fn.fromLink), (Gi = new Ma(fn.sources));
              }
              return Gi.promise.then(zi, zi), { concast: Gi, fromLink: Ki };
            }),
            (d.prototype.refetchQueries = function (n) {
              var r = this,
                h = n.updateCache,
                v = n.include,
                M = n.optimistic,
                O = void 0 !== M && M,
                V = n.removeOptimistic,
                W = void 0 === V ? (O ? Hn("refetchQueries") : void 0) : V,
                et = n.onQueryUpdated,
                At = new Map();
              v &&
                this.getObservableQueries(v).forEach(function (Qt, ge) {
                  At.set(ge, { oq: Qt, lastDiff: r.getQuery(ge).getDiff() });
                });
              var zt = new Map();
              return (
                h &&
                  this.cache.batch({
                    update: h,
                    optimistic: (O && W) || !1,
                    removeOptimistic: W,
                    onWatchUpdated: function (Qt, ge, je) {
                      var Ye =
                        Qt.watcher instanceof Hf && Qt.watcher.observableQuery;
                      if (Ye) {
                        if (et) {
                          At.delete(Ye.queryId);
                          var $e = et(Ye, ge, je);
                          return (
                            !0 === $e && ($e = Ye.refetch()),
                            !1 !== $e && zt.set(Ye, $e),
                            $e
                          );
                        }
                        null !== et &&
                          At.set(Ye.queryId, {
                            oq: Ye,
                            lastDiff: je,
                            diff: ge,
                          });
                      }
                    },
                  }),
                At.size &&
                  At.forEach(function (Qt, ge) {
                    var ti,
                      je = Qt.oq,
                      Ye = Qt.lastDiff,
                      $e = Qt.diff;
                    if (et) {
                      if (!$e) {
                        var Ci = je.queryInfo;
                        Ci.reset(), ($e = Ci.getDiff());
                      }
                      ti = et(je, $e, Ye);
                    }
                    (!et || !0 === ti) && (ti = je.refetch()),
                      !1 !== ti && zt.set(je, ti),
                      ge.indexOf("legacyOneTimeQuery") >= 0 &&
                        r.stopQueryNoBroadcast(ge);
                  }),
                W && this.cache.removeOptimistic(W),
                zt
              );
            }),
            (d.prototype.fetchQueryByPolicy = function (n, r, h) {
              var v = this,
                M = r.query,
                O = r.variables,
                V = r.fetchPolicy,
                W = r.refetchWritePolicy,
                et = r.errorPolicy,
                At = r.returnPartialData,
                zt = r.context,
                Qt = r.notifyOnNetworkStatusChange,
                ge = n.networkStatus;
              n.init({ document: M, variables: O, networkStatus: h });
              var je = function () {
                  return n.getDiff();
                },
                Ye = function (Pi, zi) {
                  void 0 === zi && (zi = n.networkStatus || qn.loading);
                  var Gi = Pi.result;
                  !1 !== globalThis.__DEV__ &&
                    !At &&
                    !o(Gi, {}) &&
                    jf(Pi.missing);
                  var Ki = function (fn) {
                    return io.of(
                      (0, Ee.pi)(
                        { data: fn, loading: Wl(zi), networkStatus: zi },
                        Pi.complete ? null : { partial: !0 },
                      ),
                    );
                  };
                  return Gi && v.getDocumentInfo(M).hasForcedResolvers
                    ? v.localState
                        .runResolvers({
                          document: M,
                          remoteResult: { data: Gi },
                          context: zt,
                          variables: O,
                          onlyRunForcedResolvers: !0,
                        })
                        .then(function (fn) {
                          return Ki(fn.data || void 0);
                        })
                    : "none" === et &&
                        zi === qn.refetch &&
                        Array.isArray(Pi.missing)
                      ? Ki(void 0)
                      : Ki(Gi);
                },
                $e =
                  "no-cache" === V
                    ? 0
                    : h === qn.refetch && "merge" !== W
                      ? 1
                      : 2,
                ti = function () {
                  return v.getResultsFromLink(n, $e, {
                    query: M,
                    variables: O,
                    context: zt,
                    fetchPolicy: V,
                    errorPolicy: et,
                  });
                },
                Ci = Qt && "number" == typeof ge && ge !== h && Wl(h);
              switch (V) {
                default:
                case "cache-first":
                  return (di = je()).complete
                    ? { fromLink: !1, sources: [Ye(di, n.markReady())] }
                    : At || Ci
                      ? { fromLink: !0, sources: [Ye(di), ti()] }
                      : { fromLink: !0, sources: [ti()] };
                case "cache-and-network":
                  var di;
                  return (di = je()).complete || At || Ci
                    ? { fromLink: !0, sources: [Ye(di), ti()] }
                    : { fromLink: !0, sources: [ti()] };
                case "cache-only":
                  return { fromLink: !1, sources: [Ye(je(), n.markReady())] };
                case "network-only":
                  return Ci
                    ? { fromLink: !0, sources: [Ye(je()), ti()] }
                    : { fromLink: !0, sources: [ti()] };
                case "no-cache":
                  return Ci
                    ? { fromLink: !0, sources: [Ye(n.getDiff()), ti()] }
                    : { fromLink: !0, sources: [ti()] };
                case "standby":
                  return { fromLink: !1, sources: [] };
              }
            }),
            (d.prototype.getQuery = function (n) {
              return (
                n &&
                  !this.queries.has(n) &&
                  this.queries.set(n, new Hf(this, n)),
                this.queries.get(n)
              );
            }),
            (d.prototype.prepareContext = function (n) {
              void 0 === n && (n = {});
              var r = this.localState.prepareContext(n);
              return (0, Ee.pi)(
                (0, Ee.pi)((0, Ee.pi)({}, this.defaultContext), r),
                { clientAwareness: this.clientAwareness },
              );
            }),
            d
          );
        })();
      function ap(d) {
        return (
          d.kind === hr.FIELD ||
          d.kind === hr.FRAGMENT_SPREAD ||
          d.kind === hr.INLINE_FRAGMENT
        );
      }
      var Zf = new Ho(),
        Yf = new WeakMap();
      function vc(d) {
        var n = Yf.get(d);
        return n || Yf.set(d, (n = { vars: new Set(), dep: Tl() })), n;
      }
      function bg(d) {
        vc(d).vars.forEach(function (n) {
          return n.forgetCache(d);
        });
      }
      function xg(d) {
        var n = new Set(),
          r = new Set(),
          h = function (M) {
            if (arguments.length > 0) {
              if (d !== M) {
                (d = M),
                  n.forEach(function (W) {
                    vc(W).dep.dirty(h),
                      (function wg(d) {
                        d.broadcastWatches && d.broadcastWatches();
                      })(W);
                  });
                var O = Array.from(r);
                r.clear(),
                  O.forEach(function (W) {
                    return W(d);
                  });
              }
            } else {
              var V = Zf.getValue();
              V && (v(V), vc(V).dep(h));
            }
            return d;
          };
        h.onNextChange = function (M) {
          return (
            r.add(M),
            function () {
              r.delete(M);
            }
          );
        };
        var v = (h.attachCache = function (M) {
          return n.add(M), vc(M).vars.add(h), h;
        });
        return (
          (h.forgetCache = function (M) {
            return n.delete(M);
          }),
          h
        );
      }
      var nv = (function () {
        function d(n) {
          var r = n.cache,
            h = n.client,
            v = n.resolvers,
            M = n.fragmentMatcher;
          (this.selectionsToResolveCache = new WeakMap()),
            (this.cache = r),
            h && (this.client = h),
            v && this.addResolvers(v),
            M && this.setFragmentMatcher(M);
        }
        return (
          (d.prototype.addResolvers = function (n) {
            var r = this;
            (this.resolvers = this.resolvers || {}),
              Array.isArray(n)
                ? n.forEach(function (h) {
                    r.resolvers = Ml(r.resolvers, h);
                  })
                : (this.resolvers = Ml(this.resolvers, n));
          }),
          (d.prototype.setResolvers = function (n) {
            (this.resolvers = {}), this.addResolvers(n);
          }),
          (d.prototype.getResolvers = function () {
            return this.resolvers || {};
          }),
          (d.prototype.runResolvers = function (n) {
            return (0, Ee.mG)(this, arguments, void 0, function (r) {
              var h = r.document,
                v = r.remoteResult,
                M = r.context,
                O = r.variables,
                V = r.onlyRunForcedResolvers,
                W = void 0 !== V && V;
              return (0, Ee.Jh)(this, function (et) {
                return h
                  ? [
                      2,
                      this.resolveDocument(
                        h,
                        v.data,
                        M,
                        O,
                        this.fragmentMatcher,
                        W,
                      ).then(function (At) {
                        return (0, Ee.pi)((0, Ee.pi)({}, v), {
                          data: At.result,
                        });
                      }),
                    ]
                  : [2, v];
              });
            });
          }),
          (d.prototype.setFragmentMatcher = function (n) {
            this.fragmentMatcher = n;
          }),
          (d.prototype.getFragmentMatcher = function () {
            return this.fragmentMatcher;
          }),
          (d.prototype.clientQuery = function (n) {
            return Wa(["client"], n) && this.resolvers ? n : null;
          }),
          (d.prototype.serverQuery = function (n) {
            return Qa(n);
          }),
          (d.prototype.prepareContext = function (n) {
            var r = this.cache;
            return (0, Ee.pi)((0, Ee.pi)({}, n), {
              cache: r,
              getCacheKey: function (h) {
                return r.identify(h);
              },
            });
          }),
          (d.prototype.addExportedVariables = function (n) {
            return (0, Ee.mG)(this, arguments, void 0, function (r, h, v) {
              return (
                void 0 === h && (h = {}),
                void 0 === v && (v = {}),
                (0, Ee.Jh)(this, function (M) {
                  return r
                    ? [
                        2,
                        this.resolveDocument(
                          r,
                          this.buildRootValueFromCache(r, h) || {},
                          this.prepareContext(v),
                          h,
                        ).then(function (O) {
                          return (0, Ee.pi)(
                            (0, Ee.pi)({}, h),
                            O.exportedVariables,
                          );
                        }),
                      ]
                    : [2, (0, Ee.pi)({}, h)];
                })
              );
            });
          }),
          (d.prototype.shouldForceResolvers = function (n) {
            var r = !1;
            return (
              Ur(n, {
                Directive: {
                  enter: function (h) {
                    if (
                      "client" === h.name.value &&
                      h.arguments &&
                      (r = h.arguments.some(function (v) {
                        return (
                          "always" === v.name.value &&
                          "BooleanValue" === v.value.kind &&
                          !0 === v.value.value
                        );
                      }))
                    )
                      return is;
                  },
                },
              }),
              r
            );
          }),
          (d.prototype.buildRootValueFromCache = function (n, r) {
            return this.cache.diff({
              query: nd(n),
              variables: r,
              returnPartialData: !0,
              optimistic: !1,
            }).result;
          }),
          (d.prototype.resolveDocument = function (n, r) {
            return (0, Ee.mG)(
              this,
              arguments,
              void 0,
              function (h, v, M, O, V, W) {
                var et, At, zt, Qt, ge, je, Ye, $e, ti, Ci;
                return (
                  void 0 === M && (M = {}),
                  void 0 === O && (O = {}),
                  void 0 === V &&
                    (V = function () {
                      return !0;
                    }),
                  void 0 === W && (W = !1),
                  (0, Ee.Jh)(this, function (Pi) {
                    return (
                      (et = es(h)),
                      (At = na(h)),
                      (zt = xa(At)),
                      (Qt = this.collectSelectionsToResolve(et, zt)),
                      (je = (ge = et.operation)
                        ? ge.charAt(0).toUpperCase() + ge.slice(1)
                        : "Query"),
                      ($e = (Ye = this).cache),
                      (ti = Ye.client),
                      (Ci = {
                        fragmentMap: zt,
                        context: (0, Ee.pi)((0, Ee.pi)({}, M), {
                          cache: $e,
                          client: ti,
                        }),
                        variables: O,
                        fragmentMatcher: V,
                        defaultOperationType: je,
                        exportedVariables: {},
                        selectionsToResolve: Qt,
                        onlyRunForcedResolvers: W,
                      }),
                      [
                        2,
                        this.resolveSelectionSet(
                          et.selectionSet,
                          !1,
                          v,
                          Ci,
                        ).then(function (zi) {
                          return {
                            result: zi,
                            exportedVariables: Ci.exportedVariables,
                          };
                        }),
                      ]
                    );
                  })
                );
              },
            );
          }),
          (d.prototype.resolveSelectionSet = function (n, r, h, v) {
            return (0, Ee.mG)(this, void 0, void 0, function () {
              var M,
                O,
                V,
                W,
                et,
                At = this;
              return (0, Ee.Jh)(this, function (zt) {
                return (
                  (M = v.fragmentMap),
                  (O = v.context),
                  (V = v.variables),
                  (W = [h]),
                  (et = function (Qt) {
                    return (0, Ee.mG)(At, void 0, void 0, function () {
                      var ge;
                      return (0, Ee.Jh)(this, function (Ye) {
                        return (r || v.selectionsToResolve.has(Qt)) && Cl(Qt, V)
                          ? wa(Qt)
                            ? [
                                2,
                                this.resolveField(Qt, r, h, v).then(
                                  function ($e) {
                                    var ti;
                                    typeof $e < "u" &&
                                      W.push((((ti = {})[Es(Qt)] = $e), ti));
                                  },
                                ),
                              ]
                            : ((function ts(d) {
                                return "InlineFragment" === d.kind;
                              })(Qt)
                                ? (ge = Qt)
                                : rn(
                                    (ge = M[Qt.name.value]),
                                    18,
                                    Qt.name.value,
                                  ),
                              ge &&
                              ge.typeCondition &&
                              v.fragmentMatcher(
                                h,
                                ge.typeCondition.name.value,
                                O,
                              )
                                ? [
                                    2,
                                    this.resolveSelectionSet(
                                      ge.selectionSet,
                                      r,
                                      h,
                                      v,
                                    ).then(function ($e) {
                                      W.push($e);
                                    }),
                                  ]
                                : [2])
                          : [2];
                      });
                    });
                  }),
                  [
                    2,
                    Promise.all(n.selections.map(et)).then(function () {
                      return El(W);
                    }),
                  ]
                );
              });
            });
          }),
          (d.prototype.resolveField = function (n, r, h, v) {
            return (0, Ee.mG)(this, void 0, void 0, function () {
              var M,
                O,
                V,
                W,
                et,
                At,
                zt,
                Qt,
                ge,
                je = this;
              return (0, Ee.Jh)(this, function (Ye) {
                return h
                  ? ((M = v.variables),
                    (O = n.name.value),
                    (V = Es(n)),
                    (W = O !== V),
                    (et = h[V] || h[O]),
                    (At = Promise.resolve(et)),
                    (!v.onlyRunForcedResolvers ||
                      this.shouldForceResolvers(n)) &&
                      ((zt = h.__typename || v.defaultOperationType),
                      (Qt = this.resolvers && this.resolvers[zt]) &&
                        (ge = Qt[W ? O : V]) &&
                        (At = Promise.resolve(
                          Zf.withValue(this.cache, ge, [
                            h,
                            ko(n, M),
                            v.context,
                            { field: n, fragmentMap: v.fragmentMap },
                          ]),
                        ))),
                    [
                      2,
                      At.then(function ($e) {
                        var ti, Ci;
                        if (
                          (void 0 === $e && ($e = et),
                          n.directives &&
                            n.directives.forEach(function (Pi) {
                              "export" === Pi.name.value &&
                                Pi.arguments &&
                                Pi.arguments.forEach(function (zi) {
                                  "as" === zi.name.value &&
                                    "StringValue" === zi.value.kind &&
                                    (v.exportedVariables[zi.value.value] = $e);
                                });
                            }),
                          !n.selectionSet || null == $e)
                        )
                          return $e;
                        var di =
                          null !==
                            (Ci =
                              null === (ti = n.directives) || void 0 === ti
                                ? void 0
                                : ti.some(function (Pi) {
                                    return "client" === Pi.name.value;
                                  })) &&
                          void 0 !== Ci &&
                          Ci;
                        return Array.isArray($e)
                          ? je.resolveSubSelectedArray(n, r || di, $e, v)
                          : n.selectionSet
                            ? je.resolveSelectionSet(
                                n.selectionSet,
                                r || di,
                                $e,
                                v,
                              )
                            : void 0;
                      }),
                    ])
                  : [2, null];
              });
            });
          }),
          (d.prototype.resolveSubSelectedArray = function (n, r, h, v) {
            var M = this;
            return Promise.all(
              h.map(function (O) {
                return null === O
                  ? null
                  : Array.isArray(O)
                    ? M.resolveSubSelectedArray(n, r, O, v)
                    : n.selectionSet
                      ? M.resolveSelectionSet(n.selectionSet, r, O, v)
                      : void 0;
              }),
            );
          }),
          (d.prototype.collectSelectionsToResolve = function (n, r) {
            var h = function (O) {
                return !Array.isArray(O);
              },
              v = this.selectionsToResolveCache;
            return (function M(O) {
              if (!v.has(O)) {
                var V = new Set();
                v.set(O, V),
                  Ur(O, {
                    Directive: function (W, et, At, zt, Qt) {
                      "client" === W.name.value &&
                        Qt.forEach(function (ge) {
                          h(ge) && ap(ge) && V.add(ge);
                        });
                    },
                    FragmentSpread: function (W, et, At, zt, Qt) {
                      var ge = r[W.name.value];
                      rn(ge, 19, W.name.value);
                      var je = M(ge);
                      je.size > 0 &&
                        (Qt.forEach(function (Ye) {
                          h(Ye) && ap(Ye) && V.add(Ye);
                        }),
                        V.add(W),
                        je.forEach(function (Ye) {
                          V.add(Ye);
                        }));
                    },
                  });
              }
              return v.get(O);
            })(n);
          }),
          d
        );
      })();
      function dp(d, n) {
        return gc(
          d,
          n,
          n.variables && {
            variables: gc(
              (0, Ee.pi)((0, Ee.pi)({}, d && d.variables), n.variables),
            ),
          },
        );
      }
      var xu = !1,
        $f = (function () {
          function d(n) {
            var r = this;
            if (
              ((this.resetStoreCallbacks = []),
              (this.clearStoreCallbacks = []),
              !n.cache)
            )
              throw Ao(15);
            var h = n.uri,
              O = n.cache,
              V = n.documentTransform,
              W = n.ssrMode,
              et = void 0 !== W && W,
              At = n.ssrForceFetchDelay,
              zt = void 0 === At ? 0 : At,
              Qt = n.connectToDevTools,
              ge = n.queryDeduplication,
              je = void 0 === ge || ge,
              Ye = n.defaultOptions,
              $e = n.defaultContext,
              ti = n.assumeImmutableResults,
              Ci = void 0 === ti ? O.assumeImmutableResults : ti,
              di = n.resolvers,
              Pi = n.typeDefs,
              zi = n.fragmentMatcher,
              Gi = n.name,
              Ki = n.version,
              fn = n.devtools,
              kn = n.link;
            kn ||
              (kn = h
                ? new od({
                    uri: h,
                    credentials: n.credentials,
                    headers: n.headers,
                  })
                : Ca.empty()),
              (this.link = kn),
              (this.cache = O),
              (this.disableNetworkFetches = et || zt > 0),
              (this.queryDeduplication = je),
              (this.defaultOptions = Ye || Object.create(null)),
              (this.typeDefs = Pi),
              (this.devtoolsConfig = (0, Ee.pi)((0, Ee.pi)({}, fn), {
                enabled: fn?.enabled || Qt,
              })),
              void 0 === this.devtoolsConfig.enabled &&
                (this.devtoolsConfig.enabled = !1 !== globalThis.__DEV__),
              zt &&
                setTimeout(function () {
                  return (r.disableNetworkFetches = !1);
                }, zt),
              (this.watchQuery = this.watchQuery.bind(this)),
              (this.query = this.query.bind(this)),
              (this.mutate = this.mutate.bind(this)),
              (this.watchFragment = this.watchFragment.bind(this)),
              (this.resetStore = this.resetStore.bind(this)),
              (this.reFetchObservableQueries =
                this.reFetchObservableQueries.bind(this)),
              (this.version = ei),
              (this.localState = new nv({
                cache: O,
                client: this,
                resolvers: di,
                fragmentMatcher: zi,
              })),
              (this.queryManager = new dd({
                cache: this.cache,
                link: this.link,
                defaultOptions: this.defaultOptions,
                defaultContext: $e,
                documentTransform: V,
                queryDeduplication: je,
                ssrMode: et,
                clientAwareness: { name: Gi, version: Ki },
                localState: this.localState,
                assumeImmutableResults: Ci,
                onBroadcast: this.devtoolsConfig.enabled
                  ? function () {
                      r.devToolsHookCb &&
                        r.devToolsHookCb({
                          action: {},
                          state: {
                            queries: r.queryManager.getQueryStore(),
                            mutations: r.queryManager.mutationStore || {},
                          },
                          dataWithOptimisticResults: r.cache.extract(!0),
                        });
                    }
                  : void 0,
              })),
              this.devtoolsConfig.enabled && this.connectToDevTools();
          }
          return (
            (d.prototype.connectToDevTools = function () {
              if (!(typeof window > "u")) {
                var n = window,
                  r = Symbol.for("apollo.devtools");
                (n[r] = n[r] || []).push(this),
                  (n.__APOLLO_CLIENT__ = this),
                  !xu &&
                    !1 !== globalThis.__DEV__ &&
                    ((xu = !0),
                    window.document &&
                      window.top === window.self &&
                      /^(https?|file):$/.test(window.location.protocol) &&
                      setTimeout(function () {
                        if (!window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {
                          var h = window.navigator,
                            v = h && h.userAgent,
                            M = void 0;
                          "string" == typeof v &&
                            (v.indexOf("Chrome/") > -1
                              ? (M =
                                  "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm")
                              : v.indexOf("Firefox/") > -1 &&
                                (M =
                                  "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")),
                            M &&
                              !1 !== globalThis.__DEV__ &&
                              rn.log(
                                "Download the Apollo DevTools for a better development experience: %s",
                                M,
                              );
                        }
                      }, 1e4));
              }
            }),
            Object.defineProperty(d.prototype, "documentTransform", {
              get: function () {
                return this.queryManager.documentTransform;
              },
              enumerable: !1,
              configurable: !0,
            }),
            (d.prototype.stop = function () {
              this.queryManager.stop();
            }),
            (d.prototype.watchQuery = function (n) {
              return (
                this.defaultOptions.watchQuery &&
                  (n = dp(this.defaultOptions.watchQuery, n)),
                this.disableNetworkFetches &&
                  ("network-only" === n.fetchPolicy ||
                    "cache-and-network" === n.fetchPolicy) &&
                  (n = (0, Ee.pi)((0, Ee.pi)({}, n), {
                    fetchPolicy: "cache-first",
                  })),
                this.queryManager.watchQuery(n)
              );
            }),
            (d.prototype.query = function (n) {
              return (
                this.defaultOptions.query &&
                  (n = dp(this.defaultOptions.query, n)),
                rn("cache-and-network" !== n.fetchPolicy, 16),
                this.disableNetworkFetches &&
                  "network-only" === n.fetchPolicy &&
                  (n = (0, Ee.pi)((0, Ee.pi)({}, n), {
                    fetchPolicy: "cache-first",
                  })),
                this.queryManager.query(n)
              );
            }),
            (d.prototype.mutate = function (n) {
              return (
                this.defaultOptions.mutate &&
                  (n = dp(this.defaultOptions.mutate, n)),
                this.queryManager.mutate(n)
              );
            }),
            (d.prototype.subscribe = function (n) {
              return this.queryManager.startGraphQLSubscription(n);
            }),
            (d.prototype.readQuery = function (n, r) {
              return void 0 === r && (r = !1), this.cache.readQuery(n, r);
            }),
            (d.prototype.watchFragment = function (n) {
              return this.cache.watchFragment(n);
            }),
            (d.prototype.readFragment = function (n, r) {
              return void 0 === r && (r = !1), this.cache.readFragment(n, r);
            }),
            (d.prototype.writeQuery = function (n) {
              var r = this.cache.writeQuery(n);
              return (
                !1 !== n.broadcast && this.queryManager.broadcastQueries(), r
              );
            }),
            (d.prototype.writeFragment = function (n) {
              var r = this.cache.writeFragment(n);
              return (
                !1 !== n.broadcast && this.queryManager.broadcastQueries(), r
              );
            }),
            (d.prototype.__actionHookForDevTools = function (n) {
              this.devToolsHookCb = n;
            }),
            (d.prototype.__requestRaw = function (n) {
              return Vd(this.link, n);
            }),
            (d.prototype.resetStore = function () {
              var n = this;
              return Promise.resolve()
                .then(function () {
                  return n.queryManager.clearStore({ discardWatches: !1 });
                })
                .then(function () {
                  return Promise.all(
                    n.resetStoreCallbacks.map(function (r) {
                      return r();
                    }),
                  );
                })
                .then(function () {
                  return n.reFetchObservableQueries();
                });
            }),
            (d.prototype.clearStore = function () {
              var n = this;
              return Promise.resolve()
                .then(function () {
                  return n.queryManager.clearStore({ discardWatches: !0 });
                })
                .then(function () {
                  return Promise.all(
                    n.clearStoreCallbacks.map(function (r) {
                      return r();
                    }),
                  );
                });
            }),
            (d.prototype.onResetStore = function (n) {
              var r = this;
              return (
                this.resetStoreCallbacks.push(n),
                function () {
                  r.resetStoreCallbacks = r.resetStoreCallbacks.filter(
                    function (h) {
                      return h !== n;
                    },
                  );
                }
              );
            }),
            (d.prototype.onClearStore = function (n) {
              var r = this;
              return (
                this.clearStoreCallbacks.push(n),
                function () {
                  r.clearStoreCallbacks = r.clearStoreCallbacks.filter(
                    function (h) {
                      return h !== n;
                    },
                  );
                }
              );
            }),
            (d.prototype.reFetchObservableQueries = function (n) {
              return this.queryManager.reFetchObservableQueries(n);
            }),
            (d.prototype.refetchQueries = function (n) {
              var r = this.queryManager.refetchQueries(n),
                h = [],
                v = [];
              r.forEach(function (O, V) {
                h.push(V), v.push(O);
              });
              var M = Promise.all(v);
              return (
                (M.queries = h),
                (M.results = v),
                M.catch(function (O) {
                  !1 !== globalThis.__DEV__ && rn.debug(17, O);
                }),
                M
              );
            }),
            (d.prototype.getObservableQueries = function (n) {
              return (
                void 0 === n && (n = "active"),
                this.queryManager.getObservableQueries(n)
              );
            }),
            (d.prototype.extract = function (n) {
              return this.cache.extract(n);
            }),
            (d.prototype.restore = function (n) {
              return this.cache.restore(n);
            }),
            (d.prototype.addResolvers = function (n) {
              this.localState.addResolvers(n);
            }),
            (d.prototype.setResolvers = function (n) {
              this.localState.setResolvers(n);
            }),
            (d.prototype.getResolvers = function () {
              return this.localState.getResolvers();
            }),
            (d.prototype.setLocalStateFragmentMatcher = function (n) {
              this.localState.setFragmentMatcher(n);
            }),
            (d.prototype.setLink = function (n) {
              this.link = this.queryManager.link = n;
            }),
            Object.defineProperty(d.prototype, "defaultContext", {
              get: function () {
                return this.queryManager.defaultContext;
              },
              enumerable: !1,
              configurable: !0,
            }),
            d
          );
        })();
      !1 !== globalThis.__DEV__ && ($f.prototype.getMemoryInternals = Xl);
      var Wf = D(3093);
      function Ah(d) {
        return new Dn.y(
          (n) => (
            d().then(
              (r) => {
                n.closed || (n.next(r), n.complete());
              },
              (r) => {
                n.closed || n.error(r);
              },
            ),
            () => n.unsubscribe()
          ),
        );
      }
      class qf {
        zone;
        constructor(n) {
          this.zone = n;
        }
        now = Date.now ? Date.now : () => +new Date();
        schedule(n, r = 0, h) {
          return this.zone.run(() => Na.schedule(n, r, h));
        }
      }
      function kh(d) {
        return (d[hl.L] = () => d), d;
      }
      function hd(d, n) {
        return d.pipe((0, Wf.Q)(new qf(n)));
      }
      function wu(d, n, r) {
        return d && typeof d[n] < "u" ? d[n] : r;
      }
      class Qf {
        obsQuery;
        valueChanges;
        queryId;
        constructor(n, r, h) {
          this.obsQuery = n;
          const v = hd((0, Ba.D)(kh(this.obsQuery)), r);
          (this.valueChanges = h.useInitialLoading
            ? v.pipe(
                (function fd(d) {
                  return function (r) {
                    return new Dn.y(function (v) {
                      const M = d.getCurrentResult(),
                        {
                          loading: O,
                          errors: V,
                          error: W,
                          partial: et,
                          data: At,
                        } = M,
                        { partialRefetch: zt, fetchPolicy: Qt } = d.options,
                        ge = V || W;
                      return (
                        zt &&
                          et &&
                          (!At || 0 === Object.keys(At).length) &&
                          "cache-only" !== Qt &&
                          !O &&
                          !ge &&
                          v.next({
                            ...M,
                            loading: !0,
                            networkStatus: qn.loading,
                          }),
                        r.subscribe(v)
                      );
                    });
                  };
                })(this.obsQuery),
              )
            : v),
            (this.queryId = this.obsQuery.queryId);
        }
        get options() {
          return this.obsQuery.options;
        }
        get variables() {
          return this.obsQuery.variables;
        }
        result() {
          return this.obsQuery.result();
        }
        getCurrentResult() {
          return this.obsQuery.getCurrentResult();
        }
        getLastResult() {
          return this.obsQuery.getLastResult();
        }
        getLastError() {
          return this.obsQuery.getLastError();
        }
        resetLastResults() {
          return this.obsQuery.resetLastResults();
        }
        refetch(n) {
          return this.obsQuery.refetch(n);
        }
        fetchMore(n) {
          return this.obsQuery.fetchMore(n);
        }
        subscribeToMore(n) {
          return this.obsQuery.subscribeToMore(n);
        }
        updateQuery(n) {
          return this.obsQuery.updateQuery(n);
        }
        stopPolling() {
          return this.obsQuery.stopPolling();
        }
        startPolling(n) {
          return this.obsQuery.startPolling(n);
        }
        setOptions(n) {
          return this.obsQuery.setOptions(n);
        }
        setVariables(n) {
          return this.obsQuery.setVariables(n);
        }
      }
      const Kf = new p.OlP("APOLLO_FLAGS"),
        Cu = new p.OlP("APOLLO_OPTIONS"),
        ov = new p.OlP("APOLLO_NAMED_OPTIONS");
      class Th {
        ngZone;
        flags;
        _client;
        useInitialLoading;
        useMutationLoading;
        constructor(n, r, h) {
          (this.ngZone = n),
            (this.flags = r),
            (this._client = h),
            (this.useInitialLoading = wu(r, "useInitialLoading", !1)),
            (this.useMutationLoading = wu(r, "useMutationLoading", !1));
        }
        watchQuery(n) {
          return new Qf(this.ensureClient().watchQuery({ ...n }), this.ngZone, {
            useInitialLoading: this.useInitialLoading,
            ...n,
          });
        }
        query(n) {
          return Ah(() => this.ensureClient().query({ ...n }));
        }
        mutate(n) {
          return (function ud(d, n) {
            return n
              ? d.pipe(
                  (0, Re.O)({ loading: !0 }),
                  (0, Jt.U)((r) => ({ ...r, loading: !!r.loading })),
                )
              : d.pipe((0, Jt.U)((r) => ({ ...r, loading: !1 })));
          })(
            Ah(() => this.ensureClient().mutate({ ...n })),
            n.useMutationLoading ?? this.useMutationLoading,
          );
        }
        subscribe(n, r) {
          const h = (0, Ba.D)(kh(this.ensureClient().subscribe({ ...n })));
          return r && !0 !== r.useZone ? h : hd(h, this.ngZone);
        }
        getClient() {
          return this.client;
        }
        setClient(n) {
          this.client = n;
        }
        get client() {
          return this._client;
        }
        set client(n) {
          if (this._client) throw new Error("Client has been already defined");
          this._client = n;
        }
        ensureClient() {
          return this.checkInstance(), this._client;
        }
        checkInstance() {
          if (!this._client) throw new Error("Client has not been defined yet");
        }
      }
      let Du = (() => {
        class d extends Th {
          _ngZone;
          map = new Map();
          constructor(r, h, v, M) {
            if (
              (super(r, M),
              (this._ngZone = r),
              h && this.createDefault(h),
              v && "object" == typeof v)
            )
              for (let O in v) v.hasOwnProperty(O) && this.create(v[O], O);
          }
          create(r, h) {
            Jf(h) ? this.createDefault(r) : this.createNamed(h, r);
          }
          default() {
            return this;
          }
          use(r) {
            return Jf(r) ? this.default() : this.map.get(r);
          }
          createDefault(r) {
            if (this.getClient())
              throw new Error("Apollo has been already created.");
            return this.setClient(new $f(r));
          }
          createNamed(r, h) {
            if (this.map.has(r))
              throw new Error(`Client ${r} has been already created`);
            this.map.set(r, new Th(this._ngZone, this.flags, new $f(h)));
          }
          removeClient(r) {
            Jf(r) ? (this._client = void 0) : this.map.delete(r);
          }
          static ɵfac = function (h) {
            return new (h || d)(
              p.LFG(p.R0b),
              p.LFG(Cu, 8),
              p.LFG(ov, 8),
              p.LFG(Kf, 8),
            );
          };
          static ɵprov = p.Yz7({ token: d, factory: d.ɵfac });
        }
        return d;
      })();
      function Jf(d) {
        return !d || "default" === d;
      }
      const up = [Du];
      let Cg = (() => {
        class d {
          static ɵfac = function (h) {
            return new (h || d)();
          };
          static ɵmod = p.oAB({ type: d });
          static ɵinj = p.cJS({ providers: up });
        }
        return d;
      })();
      var Ol = D(9862);
      class tm extends Ca {
        httpClient;
        options;
        requester;
        print = tu;
        constructor(n, r) {
          super(),
            (this.httpClient = n),
            (this.options = r),
            this.options.operationPrinter &&
              (this.print = this.options.operationPrinter),
            (this.requester = (h) =>
              new io((v) => {
                const M = h.getContext(),
                  O = (Ci, di) =>
                    (function bc(...d) {
                      const n = d.find((r) => typeof r < "u");
                      return typeof n > "u" ? d[d.length - 1] : n;
                    })(M[Ci], this.options[Ci], di);
                let V = O("method", "POST");
                const W = O("includeQuery", !0),
                  et = O("includeExtensions", !1),
                  At = O("uri", "graphql"),
                  zt = O("withCredentials"),
                  Qt = O("useMultipart"),
                  ge = !0 === this.options.useGETForQueries,
                  je = h.query.definitions.some(
                    (Ci) =>
                      "OperationDefinition" === Ci.kind &&
                      "query" === Ci.operation,
                  );
                ge && je && (V = "GET");
                const Ye = {
                  method: V,
                  url: "function" == typeof At ? At(h) : At,
                  body: {
                    operationName: h.operationName,
                    variables: h.variables,
                  },
                  options: {
                    withCredentials: zt,
                    useMultipart: Qt,
                    headers: this.options.headers,
                  },
                };
                et && (Ye.body.extensions = h.extensions),
                  W && (Ye.body.query = this.print(h.query));
                const $e = (function Xf(d) {
                  let n =
                    d.headers && d.headers instanceof Ol.WM
                      ? d.headers
                      : new Ol.WM(d.headers);
                  if (d.clientAwareness) {
                    const { name: r, version: h } = d.clientAwareness;
                    r &&
                      !n.has("apollographql-client-name") &&
                      (n = n.set("apollographql-client-name", r)),
                      h &&
                        !n.has("apollographql-client-version") &&
                        (n = n.set("apollographql-client-version", h));
                  }
                  return n;
                })(M);
                Ye.options.headers = ((d, n) =>
                  d && n
                    ? n.keys().reduce((h, v) => h.set(v, n.getAll(v)), d)
                    : n || d)(Ye.options.headers, $e);
                const ti = ((d, n, r) => {
                  const h =
                      -1 !==
                      ["POST", "PUT", "PATCH"].indexOf(d.method.toUpperCase()),
                    M = d.body.length;
                  let V,
                    O = d.options && d.options.useMultipart;
                  if (O) {
                    if (M)
                      return new Dn.y((et) =>
                        et.error(
                          new Error(
                            "File upload is not available when combined with Batching",
                          ),
                        ),
                      );
                    if (!h)
                      return new Dn.y((et) =>
                        et.error(
                          new Error(
                            "File upload is not available when GET is used",
                          ),
                        ),
                      );
                    if (!r)
                      return new Dn.y((et) =>
                        et.error(
                          new Error(
                            'To use File upload you need to pass "extractFiles" function from "extract-files" library to HttpLink\'s options',
                          ),
                        ),
                      );
                    (V = r(d.body)), (O = !!V.files.size);
                  }
                  let W = {};
                  if (M) {
                    if (!h)
                      return new Dn.y((et) =>
                        et.error(
                          new Error(
                            "Batching is not available for GET requests",
                          ),
                        ),
                      );
                    W = { body: d.body };
                  } else
                    W = h
                      ? { body: O ? V.clone : d.body }
                      : {
                          params: Object.keys(d.body).reduce((zt, Qt) => {
                            const ge = d.body[Qt];
                            return (
                              (zt[Qt] =
                                -1 !==
                                ["variables", "extensions"].indexOf(
                                  Qt.toLowerCase(),
                                )
                                  ? JSON.stringify(ge)
                                  : ge),
                              zt
                            );
                          }, {}),
                        };
                  if (O && h) {
                    const et = new FormData();
                    et.append("operations", JSON.stringify(W.body));
                    const At = {},
                      zt = V.files;
                    let Qt = 0;
                    zt.forEach((ge) => {
                      At[++Qt] = ge;
                    }),
                      et.append("map", JSON.stringify(At)),
                      (Qt = 0),
                      zt.forEach((ge, je) => {
                        et.append(++Qt + "", je, je.name);
                      }),
                      (W.body = et);
                  }
                  return n.request(d.method, d.url, {
                    observe: "response",
                    responseType: "json",
                    reportProgress: !1,
                    ...W,
                    ...d.options,
                  });
                })(Ye, this.httpClient, this.options.extractFiles).subscribe({
                  next: (Ci) => {
                    h.setContext({ response: Ci }), v.next(Ci.body);
                  },
                  error: (Ci) => v.error(Ci),
                  complete: () => v.complete(),
                });
                return () => {
                  ti.closed || ti.unsubscribe();
                };
              }));
        }
        request(n) {
          return this.requester(n);
        }
      }
      let Ih = (() => {
        class d {
          httpClient;
          constructor(r) {
            this.httpClient = r;
          }
          create(r) {
            return new tm(this.httpClient, r);
          }
          static ɵfac = function (h) {
            return new (h || d)(p.LFG(Ol.eN));
          };
          static ɵprov = p.Yz7({
            token: d,
            factory: d.ɵfac,
            providedIn: "root",
          });
        }
        return d;
      })();
      var em = (function () {
        function d() {
          (this.assumeImmutableResults = !1),
            (this.getFragmentDoc = ad(Xr, {
              max: ta["cache.fragmentQueryDocuments"] || 1e3,
              cache: Ql,
            }));
        }
        return (
          (d.prototype.batch = function (n) {
            var v,
              r = this;
            return (
              this.performTransaction(
                function () {
                  return (v = n.update(r));
                },
                "string" == typeof n.optimistic
                  ? n.optimistic
                  : !1 === n.optimistic
                    ? null
                    : void 0,
              ),
              v
            );
          }),
          (d.prototype.recordOptimisticTransaction = function (n, r) {
            this.performTransaction(n, r);
          }),
          (d.prototype.transformDocument = function (n) {
            return n;
          }),
          (d.prototype.transformForLink = function (n) {
            return n;
          }),
          (d.prototype.identify = function (n) {}),
          (d.prototype.gc = function () {
            return [];
          }),
          (d.prototype.modify = function (n) {
            return !1;
          }),
          (d.prototype.readQuery = function (n, r) {
            return (
              void 0 === r && (r = !!n.optimistic),
              this.read(
                (0, Ee.pi)((0, Ee.pi)({}, n), {
                  rootId: n.id || "ROOT_QUERY",
                  optimistic: r,
                }),
              )
            );
          }),
          (d.prototype.watchFragment = function (n) {
            var zt,
              r = this,
              h = n.fragment,
              v = n.fragmentName,
              M = n.from,
              O = n.optimistic,
              V = void 0 === O || O,
              W = (0, Ee._T)(n, [
                "fragment",
                "fragmentName",
                "from",
                "optimistic",
              ]),
              et = this.getFragmentDoc(h, v),
              At = (0, Ee.pi)((0, Ee.pi)({}, W), {
                returnPartialData: !0,
                id: "string" == typeof M ? M : this.identify(M),
                query: et,
                optimistic: V,
              });
            return new io(function (Qt) {
              return r.watch(
                (0, Ee.pi)((0, Ee.pi)({}, At), {
                  immediate: !0,
                  callback: function (ge) {
                    if (
                      !zt ||
                      !op(et, { data: zt?.result }, { data: ge.result })
                    ) {
                      var je = { data: ge.result, complete: !!ge.complete };
                      ge.missing &&
                        (je.missing = El(
                          ge.missing.map(function (Ye) {
                            return Ye.missing;
                          }),
                        )),
                        (zt = ge),
                        Qt.next(je);
                    }
                  },
                }),
              );
            });
          }),
          (d.prototype.readFragment = function (n, r) {
            return (
              void 0 === r && (r = !!n.optimistic),
              this.read(
                (0, Ee.pi)((0, Ee.pi)({}, n), {
                  query: this.getFragmentDoc(n.fragment, n.fragmentName),
                  rootId: n.id,
                  optimistic: r,
                }),
              )
            );
          }),
          (d.prototype.writeQuery = function (n) {
            var r = n.id,
              h = n.data,
              v = (0, Ee._T)(n, ["id", "data"]);
            return this.write(
              Object.assign(v, { dataId: r || "ROOT_QUERY", result: h }),
            );
          }),
          (d.prototype.writeFragment = function (n) {
            var r = n.id,
              h = n.data,
              v = n.fragment,
              M = n.fragmentName,
              O = (0, Ee._T)(n, ["id", "data", "fragment", "fragmentName"]);
            return this.write(
              Object.assign(O, {
                query: this.getFragmentDoc(v, M),
                dataId: r,
                result: h,
              }),
            );
          }),
          (d.prototype.updateQuery = function (n, r) {
            return this.batch({
              update: function (h) {
                var v = h.readQuery(n),
                  M = r(v);
                return null == M
                  ? v
                  : (h.writeQuery((0, Ee.pi)((0, Ee.pi)({}, n), { data: M })),
                    M);
              },
            });
          }),
          (d.prototype.updateFragment = function (n, r) {
            return this.batch({
              update: function (h) {
                var v = h.readFragment(n),
                  M = r(v);
                return null == M
                  ? v
                  : (h.writeFragment(
                      (0, Ee.pi)((0, Ee.pi)({}, n), { data: M }),
                    ),
                    M);
              },
            });
          }),
          d
        );
      })();
      !1 !== globalThis.__DEV__ && (em.prototype.getMemoryInternals = lf);
      var Eg = (function (d) {
        function n(r, h, v, M) {
          var O,
            V = d.call(this, r) || this;
          if (
            ((V.message = r),
            (V.path = h),
            (V.query = v),
            (V.variables = M),
            Array.isArray(V.path))
          ) {
            V.missing = V.message;
            for (var W = V.path.length - 1; W >= 0; --W)
              V.missing = (((O = {})[V.path[W]] = V.missing), O);
          } else V.missing = V.path;
          return (V.__proto__ = n.prototype), V;
        }
        return (0, Ee.ZT)(n, d), n;
      })(Error);
      function im(d) {
        return (
          !1 !== globalThis.__DEV__ &&
            (function Sg(d) {
              var n = new Set([d]);
              return (
                n.forEach(function (r) {
                  Lo(r) &&
                    (function Eu(d) {
                      if (!1 !== globalThis.__DEV__ && !Object.isFrozen(d))
                        try {
                          Object.freeze(d);
                        } catch (n) {
                          if (n instanceof TypeError) return null;
                          throw n;
                        }
                      return d;
                    })(r) === r &&
                    Object.getOwnPropertyNames(r).forEach(function (h) {
                      Lo(r[h]) && n.add(r[h]);
                    });
                }),
                d
              );
            })(d),
          d
        );
      }
      var No = Object.prototype.hasOwnProperty;
      function el(d) {
        return null == d;
      }
      function fp(d, n) {
        var r = d.__typename,
          h = d.id,
          v = d._id;
        if (
          "string" == typeof r &&
          (n &&
            (n.keyObject = el(h) ? (el(v) ? void 0 : { _id: v }) : { id: h }),
          el(h) && !el(v) && (h = v),
          !el(h))
        )
          return ""
            .concat(r, ":")
            .concat(
              "number" == typeof h || "string" == typeof h
                ? h
                : JSON.stringify(h),
            );
      }
      var nm = {
        dataIdFromObject: fp,
        addTypename: !0,
        resultCaching: !0,
        canonizeResults: !1,
      };
      function mp(d) {
        var n = d.canonizeResults;
        return void 0 === n ? nm.canonizeResults : n;
      }
      var om = /^[_a-z][_0-9a-z]*/i;
      function Il(d) {
        var n = d.match(om);
        return n ? n[0] : d;
      }
      function Su(d, n, r) {
        return (
          !!Lo(n) &&
          (fo(n)
            ? n.every(function (h) {
                return Su(d, h, r);
              })
            : d.selections.every(function (h) {
                if (wa(h) && Cl(h, r)) {
                  var v = Es(h);
                  return (
                    No.call(n, v) &&
                    (!h.selectionSet || Su(h.selectionSet, n[v], r))
                  );
                }
                return !0;
              }))
        );
      }
      function Au(d) {
        return Lo(d) && !Ln(d) && !fo(d);
      }
      function sm(d, n) {
        var r = xa(na(d));
        return {
          fragmentMap: r,
          lookupFragment: function (h) {
            var v = r[h];
            return !v && n && (v = n.lookup(h)), v || null;
          },
        };
      }
      var Ph = Object.create(null),
        am = function () {
          return Ph;
        },
        lm = Object.create(null),
        ku = (function () {
          function d(n, r) {
            var h = this;
            (this.policies = n),
              (this.group = r),
              (this.data = Object.create(null)),
              (this.rootIds = Object.create(null)),
              (this.refs = Object.create(null)),
              (this.getFieldValue = function (v, M) {
                return im(Ln(v) ? h.get(v.__ref, M) : v && v[M]);
              }),
              (this.canRead = function (v) {
                return Ln(v) ? h.has(v.__ref) : "object" == typeof v;
              }),
              (this.toReference = function (v, M) {
                if ("string" == typeof v) return Ar(v);
                if (Ln(v)) return v;
                var O = h.policies.identify(v)[0];
                if (O) {
                  var V = Ar(O);
                  return M && h.merge(O, v), V;
                }
              });
          }
          return (
            (d.prototype.toObject = function () {
              return (0, Ee.pi)({}, this.data);
            }),
            (d.prototype.has = function (n) {
              return void 0 !== this.lookup(n, !0);
            }),
            (d.prototype.get = function (n, r) {
              if ((this.group.depend(n, r), No.call(this.data, n))) {
                var h = this.data[n];
                if (h && No.call(h, r)) return h[r];
              }
              return "__typename" === r &&
                No.call(this.policies.rootTypenamesById, n)
                ? this.policies.rootTypenamesById[n]
                : this instanceof yc
                  ? this.parent.get(n, r)
                  : void 0;
            }),
            (d.prototype.lookup = function (n, r) {
              return (
                r && this.group.depend(n, "__exists"),
                No.call(this.data, n)
                  ? this.data[n]
                  : this instanceof yc
                    ? this.parent.lookup(n, r)
                    : this.policies.rootTypenamesById[n]
                      ? Object.create(null)
                      : void 0
              );
            }),
            (d.prototype.merge = function (n, r) {
              var v,
                h = this;
              Ln(n) && (n = n.__ref), Ln(r) && (r = r.__ref);
              var M = "string" == typeof n ? this.lookup((v = n)) : n,
                O = "string" == typeof r ? this.lookup((v = r)) : r;
              if (O) {
                rn("string" == typeof v, 1);
                var V = new fr(_p).merge(M, O);
                if (
                  ((this.data[v] = V),
                  V !== M && (delete this.refs[v], this.group.caching))
                ) {
                  var W = Object.create(null);
                  M || (W.__exists = 1),
                    Object.keys(O).forEach(function (et) {
                      if (!M || M[et] !== V[et]) {
                        W[et] = 1;
                        var At = Il(et);
                        At !== et &&
                          !h.policies.hasKeyArgs(V.__typename, At) &&
                          (W[At] = 1),
                          void 0 === V[et] &&
                            !(h instanceof yc) &&
                            delete V[et];
                      }
                    }),
                    W.__typename &&
                      !(M && M.__typename) &&
                      this.policies.rootTypenamesById[v] === V.__typename &&
                      delete W.__typename,
                    Object.keys(W).forEach(function (et) {
                      return h.group.dirty(v, et);
                    });
                }
              }
            }),
            (d.prototype.modify = function (n, r) {
              var h = this,
                v = this.lookup(n);
              if (v) {
                var M = Object.create(null),
                  O = !1,
                  V = !0,
                  W = {
                    DELETE: Ph,
                    INVALIDATE: lm,
                    isReference: Ln,
                    toReference: this.toReference,
                    canRead: this.canRead,
                    readField: function (et, At) {
                      return h.policies.readField(
                        "string" == typeof et
                          ? { fieldName: et, from: At || Ar(n) }
                          : et,
                        { store: h },
                      );
                    },
                  };
                if (
                  (Object.keys(v).forEach(function (et) {
                    var At = Il(et),
                      zt = v[et];
                    if (void 0 !== zt) {
                      var Qt = "function" == typeof r ? r : r[et] || r[At];
                      if (Qt) {
                        var ge =
                          Qt === am
                            ? Ph
                            : Qt(
                                im(zt),
                                (0, Ee.pi)((0, Ee.pi)({}, W), {
                                  fieldName: At,
                                  storeFieldName: et,
                                  storage: h.getStorage(n, et),
                                }),
                              );
                        if (ge === lm) h.group.dirty(n, et);
                        else if (
                          (ge === Ph && (ge = void 0),
                          ge !== zt &&
                            ((M[et] = ge),
                            (O = !0),
                            (zt = ge),
                            !1 !== globalThis.__DEV__))
                        ) {
                          var je = function (zi) {
                            if (void 0 === h.lookup(zi.__ref))
                              return (
                                !1 !== globalThis.__DEV__ && rn.warn(2, zi), !0
                              );
                          };
                          if (Ln(ge)) je(ge);
                          else if (Array.isArray(ge))
                            for (
                              var Ye = !1, $e = void 0, ti = 0, Ci = ge;
                              ti < Ci.length;
                              ti++
                            ) {
                              var di = Ci[ti];
                              if (Ln(di)) {
                                if (((Ye = !0), je(di))) break;
                              } else
                                "object" == typeof di &&
                                  di &&
                                  h.policies.identify(di)[0] &&
                                  ($e = di);
                              if (Ye && void 0 !== $e) {
                                !1 !== globalThis.__DEV__ && rn.warn(3, $e);
                                break;
                              }
                            }
                        }
                      }
                      void 0 !== zt && (V = !1);
                    }
                  }),
                  O)
                )
                  return (
                    this.merge(n, M),
                    V &&
                      (this instanceof yc
                        ? (this.data[n] = void 0)
                        : delete this.data[n],
                      this.group.dirty(n, "__exists")),
                    !0
                  );
              }
              return !1;
            }),
            (d.prototype.delete = function (n, r, h) {
              var v,
                M = this.lookup(n);
              if (M) {
                var O = this.getFieldValue(M, "__typename"),
                  V =
                    r && h
                      ? this.policies.getStoreFieldName({
                          typename: O,
                          fieldName: r,
                          args: h,
                        })
                      : r;
                return this.modify(n, V ? (((v = {})[V] = am), v) : am);
              }
              return !1;
            }),
            (d.prototype.evict = function (n, r) {
              var h = !1;
              return (
                n.id &&
                  (No.call(this.data, n.id) &&
                    (h = this.delete(n.id, n.fieldName, n.args)),
                  this instanceof yc &&
                    this !== r &&
                    (h = this.parent.evict(n, r) || h),
                  (n.fieldName || h) &&
                    this.group.dirty(n.id, n.fieldName || "__exists")),
                h
              );
            }),
            (d.prototype.clear = function () {
              this.replace(null);
            }),
            (d.prototype.extract = function () {
              var n = this,
                r = this.toObject(),
                h = [];
              return (
                this.getRootIdSet().forEach(function (v) {
                  No.call(n.policies.rootTypenamesById, v) || h.push(v);
                }),
                h.length && (r.__META = { extraRootIds: h.sort() }),
                r
              );
            }),
            (d.prototype.replace = function (n) {
              var r = this;
              if (
                (Object.keys(this.data).forEach(function (M) {
                  (n && No.call(n, M)) || r.delete(M);
                }),
                n)
              ) {
                var h = n.__META,
                  v = (0, Ee._T)(n, ["__META"]);
                Object.keys(v).forEach(function (M) {
                  r.merge(M, v[M]);
                }),
                  h && h.extraRootIds.forEach(this.retain, this);
              }
            }),
            (d.prototype.retain = function (n) {
              return (this.rootIds[n] = (this.rootIds[n] || 0) + 1);
            }),
            (d.prototype.release = function (n) {
              if (this.rootIds[n] > 0) {
                var r = --this.rootIds[n];
                return r || delete this.rootIds[n], r;
              }
              return 0;
            }),
            (d.prototype.getRootIdSet = function (n) {
              return (
                void 0 === n && (n = new Set()),
                Object.keys(this.rootIds).forEach(n.add, n),
                this instanceof yc
                  ? this.parent.getRootIdSet(n)
                  : Object.keys(this.policies.rootTypenamesById).forEach(
                      n.add,
                      n,
                    ),
                n
              );
            }),
            (d.prototype.gc = function () {
              var n = this,
                r = this.getRootIdSet(),
                h = this.toObject();
              r.forEach(function (O) {
                No.call(h, O) &&
                  (Object.keys(n.findChildRefIds(O)).forEach(r.add, r),
                  delete h[O]);
              });
              var v = Object.keys(h);
              if (v.length) {
                for (var M = this; M instanceof yc; ) M = M.parent;
                v.forEach(function (O) {
                  return M.delete(O);
                });
              }
              return v;
            }),
            (d.prototype.findChildRefIds = function (n) {
              if (!No.call(this.refs, n)) {
                var r = (this.refs[n] = Object.create(null)),
                  h = this.data[n];
                if (!h) return r;
                var v = new Set([h]);
                v.forEach(function (M) {
                  Ln(M) && (r[M.__ref] = !0),
                    Lo(M) &&
                      Object.keys(M).forEach(function (O) {
                        var V = M[O];
                        Lo(V) && v.add(V);
                      });
                });
              }
              return this.refs[n];
            }),
            (d.prototype.makeCacheKey = function () {
              return this.group.keyMaker.lookupArray(arguments);
            }),
            d
          );
        })(),
        cm = (function () {
          function d(n, r) {
            void 0 === r && (r = null),
              (this.caching = n),
              (this.parent = r),
              (this.d = null),
              this.resetCaching();
          }
          return (
            (d.prototype.resetCaching = function () {
              (this.d = this.caching ? Tl() : null),
                (this.keyMaker = new be(oc));
            }),
            (d.prototype.depend = function (n, r) {
              if (this.d) {
                this.d(dm(n, r));
                var h = Il(r);
                h !== r && this.d(dm(n, h)),
                  this.parent && this.parent.depend(n, r);
              }
            }),
            (d.prototype.dirty = function (n, r) {
              this.d &&
                this.d.dirty(
                  dm(n, r),
                  "__exists" === r ? "forget" : "setDirty",
                );
            }),
            d
          );
        })();
      function dm(d, n) {
        return n + "#" + d;
      }
      function pp(d, n) {
        Hr(d) && d.group.depend(n, "__exists");
      }
      !(function (d) {
        var n = (function (r) {
          function h(v) {
            var O = v.resultCaching,
              W = v.seed,
              et = r.call(this, v.policies, new cm(void 0 === O || O)) || this;
            return (
              (et.stump = new gp(et)),
              (et.storageTrie = new be(oc)),
              W && et.replace(W),
              et
            );
          }
          return (
            (0, Ee.ZT)(h, r),
            (h.prototype.addLayer = function (v, M) {
              return this.stump.addLayer(v, M);
            }),
            (h.prototype.removeLayer = function () {
              return this;
            }),
            (h.prototype.getStorage = function () {
              return this.storageTrie.lookupArray(arguments);
            }),
            h
          );
        })(d);
        d.Root = n;
      })(ku || (ku = {}));
      var yc = (function (d) {
          function n(r, h, v, M) {
            var O = d.call(this, h.policies, M) || this;
            return (
              (O.id = r), (O.parent = h), (O.replay = v), (O.group = M), v(O), O
            );
          }
          return (
            (0, Ee.ZT)(n, d),
            (n.prototype.addLayer = function (r, h) {
              return new n(r, this, h, this.group);
            }),
            (n.prototype.removeLayer = function (r) {
              var h = this,
                v = this.parent.removeLayer(r);
              return r === this.id
                ? (this.group.caching &&
                    Object.keys(this.data).forEach(function (M) {
                      var O = h.data[M],
                        V = v.lookup(M);
                      V
                        ? O
                          ? O !== V &&
                            Object.keys(O).forEach(function (W) {
                              o(O[W], V[W]) || h.group.dirty(M, W);
                            })
                          : (h.group.dirty(M, "__exists"),
                            Object.keys(V).forEach(function (W) {
                              h.group.dirty(M, W);
                            }))
                        : h.delete(M);
                    }),
                  v)
                : v === this.parent
                  ? this
                  : v.addLayer(this.id, this.replay);
            }),
            (n.prototype.toObject = function () {
              return (0, Ee.pi)(
                (0, Ee.pi)({}, this.parent.toObject()),
                this.data,
              );
            }),
            (n.prototype.findChildRefIds = function (r) {
              var h = this.parent.findChildRefIds(r);
              return No.call(this.data, r)
                ? (0, Ee.pi)(
                    (0, Ee.pi)({}, h),
                    d.prototype.findChildRefIds.call(this, r),
                  )
                : h;
            }),
            (n.prototype.getStorage = function () {
              for (var r = this.parent; r.parent; ) r = r.parent;
              return r.getStorage.apply(r, arguments);
            }),
            n
          );
        })(ku),
        gp = (function (d) {
          function n(r) {
            return (
              d.call(
                this,
                "EntityStore.Stump",
                r,
                function () {},
                new cm(r.group.caching, r.group),
              ) || this
            );
          }
          return (
            (0, Ee.ZT)(n, d),
            (n.prototype.removeLayer = function () {
              return this;
            }),
            (n.prototype.merge = function (r, h) {
              return this.parent.merge(r, h);
            }),
            n
          );
        })(yc);
      function _p(d, n, r) {
        var h = d[r],
          v = n[r];
        return o(h, v) ? h : v;
      }
      function Hr(d) {
        return !!(d instanceof ku && d.group.caching);
      }
      var Tg = (function () {
        function d() {
          (this.known = new (rh ? WeakSet : Set)()),
            (this.pool = new be(oc)),
            (this.passes = new WeakMap()),
            (this.keysByJSON = new Map()),
            (this.empty = this.admit({}));
        }
        return (
          (d.prototype.isKnown = function (n) {
            return Lo(n) && this.known.has(n);
          }),
          (d.prototype.pass = function (n) {
            if (Lo(n)) {
              var r = (function vp(d) {
                return Lo(d)
                  ? fo(d)
                    ? d.slice(0)
                    : (0, Ee.pi)({ __proto__: Object.getPrototypeOf(d) }, d)
                  : d;
              })(n);
              return this.passes.set(r, n), r;
            }
            return n;
          }),
          (d.prototype.admit = function (n) {
            var r = this;
            if (Lo(n)) {
              var h = this.passes.get(n);
              if (h) return h;
              switch (Object.getPrototypeOf(n)) {
                case Array.prototype:
                  if (this.known.has(n)) return n;
                  var M = n.map(this.admit, this);
                  return (
                    (O = this.pool.lookupArray(M)).array ||
                      (this.known.add((O.array = M)),
                      !1 !== globalThis.__DEV__ && Object.freeze(M)),
                    O.array
                  );
                case null:
                case Object.prototype:
                  if (this.known.has(n)) return n;
                  var V = Object.getPrototypeOf(n),
                    W = [V],
                    et = this.sortedKeys(n);
                  W.push(et.json);
                  var O,
                    At = W.length;
                  if (
                    (et.sorted.forEach(function (ge) {
                      W.push(r.admit(n[ge]));
                    }),
                    !(O = this.pool.lookupArray(W)).object)
                  ) {
                    var zt = (O.object = Object.create(V));
                    this.known.add(zt),
                      et.sorted.forEach(function (ge, je) {
                        zt[ge] = W[At + je];
                      }),
                      !1 !== globalThis.__DEV__ && Object.freeze(zt);
                  }
                  return O.object;
              }
            }
            return n;
          }),
          (d.prototype.sortedKeys = function (n) {
            var r = Object.keys(n),
              h = this.pool.lookupArray(r);
            if (!h.keys) {
              r.sort();
              var v = JSON.stringify(r);
              (h.keys = this.keysByJSON.get(v)) ||
                this.keysByJSON.set(v, (h.keys = { sorted: r, json: v }));
            }
            return h.keys;
          }),
          d
        );
      })();
      function Fh(d) {
        return [
          d.selectionSet,
          d.objectOrReference,
          d.context,
          d.context.canonizeResults,
        ];
      }
      var Rl = (function () {
        function d(n) {
          var r = this;
          (this.knownResults = new (oc ? WeakMap : Map)()),
            (this.config = gc(n, {
              addTypename: !1 !== n.addTypename,
              canonizeResults: mp(n),
            })),
            (this.canon = n.canon || new Tg()),
            (this.executeSelectionSet = ad(
              function (h) {
                var v,
                  M = h.context.canonizeResults,
                  O = Fh(h);
                O[3] = !M;
                var V = (v = r.executeSelectionSet).peek.apply(v, O);
                return V
                  ? M
                    ? (0, Ee.pi)((0, Ee.pi)({}, V), {
                        result: r.canon.admit(V.result),
                      })
                    : V
                  : (pp(h.context.store, h.enclosingRef.__ref),
                    r.execSelectionSetImpl(h));
              },
              {
                max:
                  this.config.resultCacheMaxSize ||
                  ta["inMemoryCache.executeSelectionSet"] ||
                  5e4,
                keyArgs: Fh,
                makeCacheKey: function (h, v, M, O) {
                  if (Hr(M.store))
                    return M.store.makeCacheKey(
                      h,
                      Ln(v) ? v.__ref : v,
                      M.varString,
                      O,
                    );
                },
              },
            )),
            (this.executeSubSelectedArray = ad(
              function (h) {
                return (
                  pp(h.context.store, h.enclosingRef.__ref),
                  r.execSubSelectedArrayImpl(h)
                );
              },
              {
                max:
                  this.config.resultCacheMaxSize ||
                  ta["inMemoryCache.executeSubSelectedArray"] ||
                  1e4,
                makeCacheKey: function (h) {
                  var v = h.field,
                    M = h.array,
                    O = h.context;
                  if (Hr(O.store))
                    return O.store.makeCacheKey(v, M, O.varString);
                },
              },
            ));
        }
        return (
          (d.prototype.resetCanon = function () {
            this.canon = new Tg();
          }),
          (d.prototype.diffQueryAgainstStore = function (n) {
            var r = n.store,
              h = n.query,
              v = n.rootId,
              M = void 0 === v ? "ROOT_QUERY" : v,
              O = n.variables,
              V = n.returnPartialData,
              W = void 0 === V || V,
              et = n.canonizeResults,
              At = void 0 === et ? this.config.canonizeResults : et,
              zt = this.config.cache.policies;
            O = (0, Ee.pi)((0, Ee.pi)({}, Xu(Ju(h))), O);
            var je,
              Qt = Ar(M),
              ge = this.executeSelectionSet({
                selectionSet: es(h).selectionSet,
                objectOrReference: Qt,
                enclosingRef: Qt,
                context: (0, Ee.pi)(
                  {
                    store: r,
                    query: h,
                    policies: zt,
                    variables: O,
                    varString: Vr(O),
                    canonizeResults: At,
                  },
                  sm(h, this.config.fragments),
                ),
              });
            if (
              ge.missing &&
              ((je = [new Eg(um(ge.missing), ge.missing, h, O)]), !W)
            )
              throw je[0];
            return { result: ge.result, complete: !je, missing: je };
          }),
          (d.prototype.isFresh = function (n, r, h, v) {
            if (Hr(v.store) && this.knownResults.get(n) === h) {
              var M = this.executeSelectionSet.peek(
                h,
                r,
                v,
                this.canon.isKnown(n),
              );
              if (M && n === M.result) return !0;
            }
            return !1;
          }),
          (d.prototype.execSelectionSetImpl = function (n) {
            var r = this,
              h = n.selectionSet,
              v = n.objectOrReference,
              M = n.enclosingRef,
              O = n.context;
            if (
              Ln(v) &&
              !O.policies.rootTypenamesById[v.__ref] &&
              !O.store.has(v.__ref)
            )
              return {
                result: this.canon.empty,
                missing: "Dangling reference to missing ".concat(
                  v.__ref,
                  " object",
                ),
              };
            var Qt,
              V = O.variables,
              W = O.policies,
              At = O.store.getFieldValue(v, "__typename"),
              zt = [],
              ge = new fr();
            function je(di, Pi) {
              var zi;
              return (
                di.missing &&
                  (Qt = ge.merge(Qt, (((zi = {})[Pi] = di.missing), zi))),
                di.result
              );
            }
            this.config.addTypename &&
              "string" == typeof At &&
              !W.rootIdsByTypename[At] &&
              zt.push({ __typename: At });
            var Ye = new Set(h.selections);
            Ye.forEach(function (di) {
              var Pi, zi;
              if (Cl(di, V))
                if (wa(di)) {
                  var Gi = W.readField(
                      {
                        fieldName: di.name.value,
                        field: di,
                        variables: O.variables,
                        from: v,
                      },
                      O,
                    ),
                    Ki = Es(di);
                  void 0 === Gi
                    ? hc.added(di) ||
                      (Qt = ge.merge(
                        Qt,
                        (((Pi = {})[Ki] = "Can't find field '"
                          .concat(di.name.value, "' on ")
                          .concat(
                            Ln(v)
                              ? v.__ref + " object"
                              : "object " + JSON.stringify(v, null, 2),
                          )),
                        Pi),
                      ))
                    : fo(Gi)
                      ? Gi.length > 0 &&
                        (Gi = je(
                          r.executeSubSelectedArray({
                            field: di,
                            array: Gi,
                            enclosingRef: M,
                            context: O,
                          }),
                          Ki,
                        ))
                      : di.selectionSet
                        ? null != Gi &&
                          (Gi = je(
                            r.executeSelectionSet({
                              selectionSet: di.selectionSet,
                              objectOrReference: Gi,
                              enclosingRef: Ln(Gi) ? Gi : M,
                              context: O,
                            }),
                            Ki,
                          ))
                        : O.canonizeResults && (Gi = r.canon.pass(Gi)),
                    void 0 !== Gi && zt.push((((zi = {})[Ki] = Gi), zi));
                } else {
                  var fn = Nc(di, O.lookupFragment);
                  if (!fn && di.kind === hr.FRAGMENT_SPREAD)
                    throw Ao(9, di.name.value);
                  fn &&
                    W.fragmentMatches(fn, At) &&
                    fn.selectionSet.selections.forEach(Ye.add, Ye);
                }
            });
            var ti = { result: El(zt), missing: Qt },
              Ci = O.canonizeResults ? this.canon.admit(ti) : im(ti);
            return Ci.result && this.knownResults.set(Ci.result, h), Ci;
          }),
          (d.prototype.execSubSelectedArrayImpl = function (n) {
            var V,
              r = this,
              h = n.field,
              v = n.array,
              M = n.enclosingRef,
              O = n.context,
              W = new fr();
            function et(At, zt) {
              var Qt;
              return (
                At.missing &&
                  (V = W.merge(V, (((Qt = {})[zt] = At.missing), Qt))),
                At.result
              );
            }
            return (
              h.selectionSet && (v = v.filter(O.store.canRead)),
              (v = v.map(function (At, zt) {
                return null === At
                  ? null
                  : fo(At)
                    ? et(
                        r.executeSubSelectedArray({
                          field: h,
                          array: At,
                          enclosingRef: M,
                          context: O,
                        }),
                        zt,
                      )
                    : h.selectionSet
                      ? et(
                          r.executeSelectionSet({
                            selectionSet: h.selectionSet,
                            objectOrReference: At,
                            enclosingRef: Ln(At) ? At : M,
                            context: O,
                          }),
                          zt,
                        )
                      : (!1 !== globalThis.__DEV__ &&
                          (function Og(d, n, r) {
                            if (!n.selectionSet) {
                              var h = new Set([r]);
                              h.forEach(function (v) {
                                Lo(v) &&
                                  (rn(
                                    !Ln(v),
                                    10,
                                    (function kg(d, n) {
                                      return Ln(n)
                                        ? d.get(n.__ref, "__typename")
                                        : n && n.__typename;
                                    })(d, v),
                                    n.name.value,
                                  ),
                                  Object.values(v).forEach(h.add, h));
                              });
                            }
                          })(O.store, h, At),
                        At);
              })),
              {
                result: O.canonizeResults ? this.canon.admit(v) : v,
                missing: V,
              }
            );
          }),
          d
        );
      })();
      function um(d) {
        try {
          JSON.stringify(d, function (n, r) {
            if ("string" == typeof r) throw r;
            return r;
          });
        } catch (n) {
          return n;
        }
      }
      var Ig = Object.create(null);
      function hm(d) {
        var n = JSON.stringify(d);
        return Ig[n] || (Ig[n] = Object.create(null));
      }
      function Lh(d) {
        var n = hm(d);
        return (
          n.keyFieldsFn ||
          (n.keyFieldsFn = function (r, h) {
            var v = function (O, V) {
                return h.readField(V, O);
              },
              M = (h.keyObject = Nh(d, function (O) {
                var V = Bo(h.storeObject, O, v);
                return (
                  void 0 === V &&
                    r !== h.storeObject &&
                    No.call(r, O[0]) &&
                    (V = Bo(r, O, Rg)),
                  rn(void 0 !== V, 4, O.join("."), r),
                  V
                );
              }));
            return "".concat(h.typename, ":").concat(JSON.stringify(M));
          })
        );
      }
      function aa(d) {
        var n = hm(d);
        return (
          n.keyArgsFn ||
          (n.keyArgsFn = function (r, h) {
            var v = h.field,
              M = h.variables,
              O = h.fieldName,
              V = Nh(d, function (et) {
                var At = et[0],
                  zt = At.charAt(0);
                if ("@" !== zt)
                  if ("$" !== zt) {
                    if (r) return Bo(r, et);
                  } else {
                    var Ye = At.slice(1);
                    if (M && No.call(M, Ye)) {
                      var $e = et.slice(0);
                      return ($e[0] = Ye), Bo(M, $e);
                    }
                  }
                else if (v && As(v.directives)) {
                  var Qt = At.slice(1),
                    ge = v.directives.find(function (ti) {
                      return ti.name.value === Qt;
                    }),
                    je = ge && ko(ge, M);
                  return je && Bo(je, et.slice(1));
                }
              }),
              W = JSON.stringify(V);
            return (r || "{}" !== W) && (O += ":" + W), O;
          })
        );
      }
      function Nh(d, n) {
        var r = new fr();
        return bp(d).reduce(function (h, v) {
          var M,
            O = n(v);
          if (void 0 !== O) {
            for (var V = v.length - 1; V >= 0; --V)
              ((M = {})[v[V]] = O), (O = M);
            h = r.merge(h, O);
          }
          return h;
        }, Object.create(null));
      }
      function bp(d) {
        var n = hm(d);
        if (!n.paths) {
          var r = (n.paths = []),
            h = [];
          d.forEach(function (v, M) {
            fo(v)
              ? (bp(v).forEach(function (O) {
                  return r.push(h.concat(O));
                }),
                (h.length = 0))
              : (h.push(v),
                fo(d[M + 1]) || (r.push(h.slice(0)), (h.length = 0)));
          });
        }
        return n.paths;
      }
      function Rg(d, n) {
        return d[n];
      }
      function Bo(d, n, r) {
        return (
          (r = r || Rg),
          yp(
            n.reduce(function h(v, M) {
              return fo(v)
                ? v.map(function (O) {
                    return h(O, M);
                  })
                : v && r(v, M);
            }, d),
          )
        );
      }
      function yp(d) {
        return Lo(d)
          ? fo(d)
            ? d.map(yp)
            : Nh(Object.keys(d).sort(), function (n) {
                return Bo(d, n);
              })
          : d;
      }
      function Tu(d) {
        return void 0 !== d.args
          ? d.args
          : d.field
            ? ko(d.field, d.variables)
            : null;
      }
      var Pg = function () {},
        xp = function (d, n) {
          return n.fieldName;
        },
        Bh = function (d, n, r) {
          return (0, r.mergeObjects)(d, n);
        },
        fm = function (d, n) {
          return n;
        },
        wp = (function () {
          function d(n) {
            (this.config = n),
              (this.typePolicies = Object.create(null)),
              (this.toBeAdded = Object.create(null)),
              (this.supertypeMap = new Map()),
              (this.fuzzySubtypes = new Map()),
              (this.rootIdsByTypename = Object.create(null)),
              (this.rootTypenamesById = Object.create(null)),
              (this.usingPossibleTypes = !1),
              (this.config = (0, Ee.pi)({ dataIdFromObject: fp }, n)),
              (this.cache = this.config.cache),
              this.setRootTypename("Query"),
              this.setRootTypename("Mutation"),
              this.setRootTypename("Subscription"),
              n.possibleTypes && this.addPossibleTypes(n.possibleTypes),
              n.typePolicies && this.addTypePolicies(n.typePolicies);
          }
          return (
            (d.prototype.identify = function (n, r) {
              var h,
                v = this,
                M =
                  (r &&
                    (r.typename ||
                      (null === (h = r.storeObject) || void 0 === h
                        ? void 0
                        : h.__typename))) ||
                  n.__typename;
              if (M === this.rootTypenamesById.ROOT_QUERY)
                return ["ROOT_QUERY"];
              for (
                var W,
                  O = (r && r.storeObject) || n,
                  V = (0, Ee.pi)((0, Ee.pi)({}, r), {
                    typename: M,
                    storeObject: O,
                    readField:
                      (r && r.readField) ||
                      function () {
                        var Qt = Vh(arguments, O);
                        return v.readField(Qt, {
                          store: v.cache.data,
                          variables: Qt.variables,
                        });
                      },
                  }),
                  et = M && this.getTypePolicy(M),
                  At = (et && et.keyFn) || this.config.dataIdFromObject;
                At;

              ) {
                var zt = At((0, Ee.pi)((0, Ee.pi)({}, n), O), V);
                if (!fo(zt)) {
                  W = zt;
                  break;
                }
                At = Lh(zt);
              }
              return (
                (W = W ? String(W) : void 0),
                V.keyObject ? [W, V.keyObject] : [W]
              );
            }),
            (d.prototype.addTypePolicies = function (n) {
              var r = this;
              Object.keys(n).forEach(function (h) {
                var v = n[h],
                  M = v.queryType,
                  O = v.mutationType,
                  V = v.subscriptionType,
                  W = (0, Ee._T)(v, [
                    "queryType",
                    "mutationType",
                    "subscriptionType",
                  ]);
                M && r.setRootTypename("Query", h),
                  O && r.setRootTypename("Mutation", h),
                  V && r.setRootTypename("Subscription", h),
                  No.call(r.toBeAdded, h)
                    ? r.toBeAdded[h].push(W)
                    : (r.toBeAdded[h] = [W]);
              });
            }),
            (d.prototype.updateTypePolicy = function (n, r) {
              var h = this,
                v = this.getTypePolicy(n),
                M = r.keyFields,
                O = r.fields;
              function V(W, et) {
                W.merge =
                  "function" == typeof et
                    ? et
                    : !0 === et
                      ? Bh
                      : !1 === et
                        ? fm
                        : W.merge;
              }
              V(v, r.merge),
                (v.keyFn =
                  !1 === M
                    ? Pg
                    : fo(M)
                      ? Lh(M)
                      : "function" == typeof M
                        ? M
                        : v.keyFn),
                O &&
                  Object.keys(O).forEach(function (W) {
                    var et = h.getFieldPolicy(n, W, !0),
                      At = O[W];
                    if ("function" == typeof At) et.read = At;
                    else {
                      var zt = At.keyArgs,
                        Qt = At.read,
                        ge = At.merge;
                      (et.keyFn =
                        !1 === zt
                          ? xp
                          : fo(zt)
                            ? aa(zt)
                            : "function" == typeof zt
                              ? zt
                              : et.keyFn),
                        "function" == typeof Qt && (et.read = Qt),
                        V(et, ge);
                    }
                    et.read && et.merge && (et.keyFn = et.keyFn || xp);
                  });
            }),
            (d.prototype.setRootTypename = function (n, r) {
              void 0 === r && (r = n);
              var h = "ROOT_" + n.toUpperCase(),
                v = this.rootTypenamesById[h];
              r !== v &&
                (rn(!v || v === n, 5, n),
                v && delete this.rootIdsByTypename[v],
                (this.rootIdsByTypename[r] = h),
                (this.rootTypenamesById[h] = r));
            }),
            (d.prototype.addPossibleTypes = function (n) {
              var r = this;
              (this.usingPossibleTypes = !0),
                Object.keys(n).forEach(function (h) {
                  r.getSupertypeSet(h, !0),
                    n[h].forEach(function (v) {
                      r.getSupertypeSet(v, !0).add(h);
                      var M = v.match(om);
                      (!M || M[0] !== v) &&
                        r.fuzzySubtypes.set(v, new RegExp(v));
                    });
                });
            }),
            (d.prototype.getTypePolicy = function (n) {
              var r = this;
              if (!No.call(this.typePolicies, n)) {
                var h = (this.typePolicies[n] = Object.create(null));
                h.fields = Object.create(null);
                var v = this.supertypeMap.get(n);
                !v &&
                  this.fuzzySubtypes.size &&
                  ((v = this.getSupertypeSet(n, !0)),
                  this.fuzzySubtypes.forEach(function (O, V) {
                    if (O.test(n)) {
                      var W = r.supertypeMap.get(V);
                      W &&
                        W.forEach(function (et) {
                          return v.add(et);
                        });
                    }
                  })),
                  v &&
                    v.size &&
                    v.forEach(function (O) {
                      var V = r.getTypePolicy(O),
                        W = V.fields,
                        et = (0, Ee._T)(V, ["fields"]);
                      Object.assign(h, et), Object.assign(h.fields, W);
                    });
              }
              var M = this.toBeAdded[n];
              return (
                M &&
                  M.length &&
                  M.splice(0).forEach(function (O) {
                    r.updateTypePolicy(n, O);
                  }),
                this.typePolicies[n]
              );
            }),
            (d.prototype.getFieldPolicy = function (n, r, h) {
              if (n) {
                var v = this.getTypePolicy(n).fields;
                return v[r] || (h && (v[r] = Object.create(null)));
              }
            }),
            (d.prototype.getSupertypeSet = function (n, r) {
              var h = this.supertypeMap.get(n);
              return !h && r && this.supertypeMap.set(n, (h = new Set())), h;
            }),
            (d.prototype.fragmentMatches = function (n, r, h, v) {
              var M = this;
              if (!n.typeCondition) return !0;
              if (!r) return !1;
              var O = n.typeCondition.name.value;
              if (r === O) return !0;
              if (this.usingPossibleTypes && this.supertypeMap.has(O))
                for (
                  var V = this.getSupertypeSet(r, !0),
                    W = [V],
                    et = function (je) {
                      var Ye = M.getSupertypeSet(je, !1);
                      Ye && Ye.size && W.indexOf(Ye) < 0 && W.push(Ye);
                    },
                    At = !(!h || !this.fuzzySubtypes.size),
                    zt = !1,
                    Qt = 0;
                  Qt < W.length;
                  ++Qt
                ) {
                  var ge = W[Qt];
                  if (ge.has(O))
                    return (
                      V.has(O) ||
                        (zt && !1 !== globalThis.__DEV__ && rn.warn(6, r, O),
                        V.add(O)),
                      !0
                    );
                  ge.forEach(et),
                    At &&
                      Qt === W.length - 1 &&
                      Su(n.selectionSet, h, v) &&
                      ((At = !1),
                      (zt = !0),
                      this.fuzzySubtypes.forEach(function (je, Ye) {
                        var $e = r.match(je);
                        $e && $e[0] === r && et(Ye);
                      }));
                }
              return !1;
            }),
            (d.prototype.hasKeyArgs = function (n, r) {
              var h = this.getFieldPolicy(n, r, !1);
              return !(!h || !h.keyFn);
            }),
            (d.prototype.getStoreFieldName = function (n) {
              var M,
                r = n.typename,
                h = n.fieldName,
                v = this.getFieldPolicy(r, h, !1),
                O = v && v.keyFn;
              if (O && r)
                for (
                  var V = {
                      typename: r,
                      fieldName: h,
                      field: n.field || null,
                      variables: n.variables,
                    },
                    W = Tu(n);
                  O;

                ) {
                  var et = O(W, V);
                  if (!fo(et)) {
                    M = et || h;
                    break;
                  }
                  O = aa(et);
                }
              return (
                void 0 === M &&
                  (M = n.field
                    ? (function jm(d, n) {
                        var r = null;
                        d.directives &&
                          ((r = {}),
                          d.directives.forEach(function (v) {
                            (r[v.name.value] = {}),
                              v.arguments &&
                                v.arguments.forEach(function (M) {
                                  return bl(
                                    r[v.name.value],
                                    M.name,
                                    M.value,
                                    n,
                                  );
                                });
                          }));
                        var h = null;
                        return (
                          d.arguments &&
                            d.arguments.length &&
                            ((h = {}),
                            d.arguments.forEach(function (v) {
                              return bl(h, v.name, v.value, n);
                            })),
                          Ku(d.name.value, h, r)
                        );
                      })(n.field, n.variables)
                    : Ku(h, Tu(n))),
                !1 === M ? h : h === Il(M) ? M : h + ":" + M
              );
            }),
            (d.prototype.readField = function (n, r) {
              var h = n.from;
              if (h && (n.field || n.fieldName)) {
                if (void 0 === n.typename) {
                  var M = r.store.getFieldValue(h, "__typename");
                  M && (n.typename = M);
                }
                var O = this.getStoreFieldName(n),
                  V = Il(O),
                  W = r.store.getFieldValue(h, O),
                  et = this.getFieldPolicy(n.typename, V, !1),
                  At = et && et.read;
                if (At) {
                  var zt = Cp(
                    this,
                    h,
                    n,
                    r,
                    r.store.getStorage(Ln(h) ? h.__ref : h, O),
                  );
                  return Zf.withValue(this.cache, At, [W, zt]);
                }
                return W;
              }
            }),
            (d.prototype.getReadFunction = function (n, r) {
              var h = this.getFieldPolicy(n, r, !1);
              return h && h.read;
            }),
            (d.prototype.getMergeFunction = function (n, r, h) {
              var v = this.getFieldPolicy(n, r, !1),
                M = v && v.merge;
              return !M && h && (M = (v = this.getTypePolicy(h)) && v.merge), M;
            }),
            (d.prototype.runMergeFunction = function (n, r, h, v, M) {
              var O = h.field,
                V = h.typename,
                W = h.merge;
              return W === Bh
                ? mm(v.store)(n, r)
                : W === fm
                  ? r
                  : (v.overwrite && (n = void 0),
                    W(
                      n,
                      r,
                      Cp(
                        this,
                        void 0,
                        {
                          typename: V,
                          fieldName: O.name.value,
                          field: O,
                          variables: v.variables,
                        },
                        v,
                        M || Object.create(null),
                      ),
                    ));
            }),
            d
          );
        })();
      function Cp(d, n, r, h, v) {
        var M = d.getStoreFieldName(r),
          O = Il(M),
          V = r.variables || h.variables,
          W = h.store,
          et = W.toReference,
          At = W.canRead;
        return {
          args: Tu(r),
          field: r.field || null,
          fieldName: O,
          storeFieldName: M,
          variables: V,
          isReference: Ln,
          toReference: et,
          storage: v,
          cache: d.cache,
          canRead: At,
          readField: function () {
            return d.readField(Vh(arguments, n, V), h);
          },
          mergeObjects: mm(h.store),
        };
      }
      function Vh(d, n, r) {
        var O,
          h = d[0];
        return (
          "string" == typeof h
            ? (O = { fieldName: h, from: d.length > 1 ? d[1] : n })
            : ((O = (0, Ee.pi)({}, h)), No.call(O, "from") || (O.from = n)),
          !1 !== globalThis.__DEV__ &&
            void 0 === O.from &&
            !1 !== globalThis.__DEV__ &&
            rn.warn(7, Mn(Array.from(d))),
          void 0 === O.variables && (O.variables = r),
          O
        );
      }
      function mm(d) {
        return function (r, h) {
          if (fo(r) || fo(h)) throw Ao(8);
          if (Lo(r) && Lo(h)) {
            var v = d.getFieldValue(r, "__typename"),
              M = d.getFieldValue(h, "__typename");
            if (v && M && v !== M) return h;
            if (Ln(r) && Au(h)) return d.merge(r.__ref, h), r;
            if (Au(r) && Ln(h)) return d.merge(r, h.__ref), h;
            if (Au(r) && Au(h)) return (0, Ee.pi)((0, Ee.pi)({}, r), h);
          }
          return h;
        };
      }
      function pm(d, n, r) {
        var h = "".concat(n).concat(r),
          v = d.flavors.get(h);
        return (
          v ||
            d.flavors.set(
              h,
              (v =
                d.clientOnly === n && d.deferred === r
                  ? d
                  : (0, Ee.pi)((0, Ee.pi)({}, d), {
                      clientOnly: n,
                      deferred: r,
                    })),
            ),
          v
        );
      }
      var Fg = (function () {
          function d(n, r, h) {
            (this.cache = n), (this.reader = r), (this.fragments = h);
          }
          return (
            (d.prototype.writeToStore = function (n, r) {
              var h = this,
                v = r.query,
                M = r.result,
                O = r.dataId,
                V = r.variables,
                W = r.overwrite,
                et = wl(v),
                At = (function rm() {
                  return new fr();
                })();
              V = (0, Ee.pi)((0, Ee.pi)({}, Xu(et)), V);
              var zt = (0, Ee.pi)(
                  (0, Ee.pi)(
                    {
                      store: n,
                      written: Object.create(null),
                      merge: function (ge, je) {
                        return At.merge(ge, je);
                      },
                      variables: V,
                      varString: Vr(V),
                    },
                    sm(v, this.fragments),
                  ),
                  {
                    overwrite: !!W,
                    incomingById: new Map(),
                    clientOnly: !1,
                    deferred: !1,
                    flavors: new Map(),
                  },
                ),
                Qt = this.processSelectionSet({
                  result: M || Object.create(null),
                  dataId: O,
                  selectionSet: et.selectionSet,
                  mergeTree: { map: new Map() },
                  context: zt,
                });
              if (!Ln(Qt)) throw Ao(11, M);
              return (
                zt.incomingById.forEach(function (ge, je) {
                  var Ye = ge.storeObject,
                    $e = ge.mergeTree,
                    ti = ge.fieldNodeSet,
                    Ci = Ar(je);
                  if ($e && $e.map.size) {
                    var di = h.applyMerges($e, Ci, Ye, zt);
                    if (Ln(di)) return;
                    Ye = di;
                  }
                  if (!1 !== globalThis.__DEV__ && !zt.overwrite) {
                    var Pi = Object.create(null);
                    ti.forEach(function (Ki) {
                      Ki.selectionSet && (Pi[Ki.name.value] = !0);
                    }),
                      Object.keys(Ye).forEach(function (Ki) {
                        (function (Ki) {
                          return !0 === Pi[Il(Ki)];
                        })(Ki) &&
                          !(function (Ki) {
                            var fn = $e && $e.map.get(Ki);
                            return !!(fn && fn.info && fn.info.merge);
                          })(Ki) &&
                          (function Lg(d, n, r, h) {
                            var v = function (zt) {
                                var Qt = h.getFieldValue(zt, r);
                                return "object" == typeof Qt && Qt;
                              },
                              M = v(d);
                            if (M) {
                              var O = v(n);
                              if (
                                O &&
                                !Ln(M) &&
                                !o(M, O) &&
                                !Object.keys(M).every(function (zt) {
                                  return void 0 !== h.getFieldValue(O, zt);
                                })
                              ) {
                                var V =
                                    h.getFieldValue(d, "__typename") ||
                                    h.getFieldValue(n, "__typename"),
                                  W = Il(r),
                                  et = "".concat(V, ".").concat(W);
                                if (!Mp.has(et)) {
                                  Mp.add(et);
                                  var At = [];
                                  !fo(M) &&
                                    !fo(O) &&
                                    [M, O].forEach(function (zt) {
                                      var Qt = h.getFieldValue(
                                        zt,
                                        "__typename",
                                      );
                                      "string" == typeof Qt &&
                                        !At.includes(Qt) &&
                                        At.push(Qt);
                                    }),
                                    !1 !== globalThis.__DEV__ &&
                                      rn.warn(
                                        14,
                                        W,
                                        V,
                                        At.length
                                          ? "either ensure all objects of type " +
                                              At.join(" and ") +
                                              " have an ID or a custom merge function, or "
                                          : "",
                                        et,
                                        (0, Ee.pi)({}, M),
                                        (0, Ee.pi)({}, O),
                                      );
                                }
                              }
                            }
                          })(Ci, Ye, Ki, zt.store);
                      });
                  }
                  n.merge(je, Ye);
                }),
                n.retain(Qt.__ref),
                Qt
              );
            }),
            (d.prototype.processSelectionSet = function (n) {
              var r = this,
                h = n.dataId,
                v = n.result,
                M = n.selectionSet,
                O = n.context,
                V = n.mergeTree,
                W = this.cache.policies,
                et = Object.create(null),
                At =
                  (h && W.rootTypenamesById[h]) ||
                  Ya(v, M, O.fragmentMap) ||
                  (h && O.store.get(h, "__typename"));
              "string" == typeof At && (et.__typename = At);
              var zt = function () {
                  var di = Vh(arguments, et, O.variables);
                  if (Ln(di.from)) {
                    var Pi = O.incomingById.get(di.from.__ref);
                    if (Pi) {
                      var zi = W.readField(
                        (0, Ee.pi)((0, Ee.pi)({}, di), {
                          from: Pi.storeObject,
                        }),
                        O,
                      );
                      if (void 0 !== zi) return zi;
                    }
                  }
                  return W.readField(di, O);
                },
                Qt = new Set();
              this.flattenFields(M, v, O, At).forEach(function (di, Pi) {
                var zi,
                  Gi = Es(Pi),
                  Ki = v[Gi];
                if ((Qt.add(Pi), void 0 !== Ki)) {
                  var fn = W.getStoreFieldName({
                      typename: At,
                      fieldName: Pi.name.value,
                      field: Pi,
                      variables: di.variables,
                    }),
                    kn = gm(V, fn),
                    Yn = r.processFieldValue(
                      Ki,
                      Pi,
                      Pi.selectionSet ? pm(di, !1, !1) : di,
                      kn,
                    ),
                    la = void 0;
                  Pi.selectionSet &&
                    (Ln(Yn) || Au(Yn)) &&
                    (la = zt("__typename", Yn));
                  var ns = W.getMergeFunction(At, Pi.name.value, la);
                  ns
                    ? (kn.info = { field: Pi, typename: At, merge: ns })
                    : xc(V, fn),
                    (et = di.merge(et, (((zi = {})[fn] = Yn), zi)));
                } else
                  !1 !== globalThis.__DEV__ &&
                    !di.clientOnly &&
                    !di.deferred &&
                    !hc.added(Pi) &&
                    !W.getReadFunction(At, Pi.name.value) &&
                    !1 !== globalThis.__DEV__ &&
                    rn.error(12, Es(Pi), v);
              });
              try {
                var ge = W.identify(v, {
                    typename: At,
                    selectionSet: M,
                    fragmentMap: O.fragmentMap,
                    storeObject: et,
                    readField: zt,
                  }),
                  Ye = ge[1];
                (h = h || ge[0]), Ye && (et = O.merge(et, Ye));
              } catch (di) {
                if (!h) throw di;
              }
              if ("string" == typeof h) {
                var $e = Ar(h),
                  ti = O.written[h] || (O.written[h] = []);
                if (
                  ti.indexOf(M) >= 0 ||
                  (ti.push(M), this.reader && this.reader.isFresh(v, $e, M, O))
                )
                  return $e;
                var Ci = O.incomingById.get(h);
                return (
                  Ci
                    ? ((Ci.storeObject = O.merge(Ci.storeObject, et)),
                      (Ci.mergeTree = Pl(Ci.mergeTree, V)),
                      Qt.forEach(function (di) {
                        return Ci.fieldNodeSet.add(di);
                      }))
                    : O.incomingById.set(h, {
                        storeObject: et,
                        mergeTree: Is(V) ? void 0 : V,
                        fieldNodeSet: Qt,
                      }),
                  $e
                );
              }
              return et;
            }),
            (d.prototype.processFieldValue = function (n, r, h, v) {
              var M = this;
              return r.selectionSet && null !== n
                ? fo(n)
                  ? n.map(function (O, V) {
                      var W = M.processFieldValue(O, r, h, gm(v, V));
                      return xc(v, V), W;
                    })
                  : this.processSelectionSet({
                      result: n,
                      selectionSet: r.selectionSet,
                      context: h,
                      mergeTree: v,
                    })
                : !1 !== globalThis.__DEV__
                  ? Dh(n)
                  : n;
            }),
            (d.prototype.flattenFields = function (n, r, h, v) {
              void 0 === v && (v = Ya(r, n, h.fragmentMap));
              var M = new Map(),
                O = this.cache.policies,
                V = new be(!1);
              return (
                (function W(et, At) {
                  var zt = V.lookup(et, At.clientOnly, At.deferred);
                  zt.visited ||
                    ((zt.visited = !0),
                    et.selections.forEach(function (Qt) {
                      if (Cl(Qt, h.variables)) {
                        var ge = At.clientOnly,
                          je = At.deferred;
                        if (
                          (!(ge && je) &&
                            As(Qt.directives) &&
                            Qt.directives.forEach(function (ti) {
                              var Ci = ti.name.value;
                              if (
                                ("client" === Ci && (ge = !0), "defer" === Ci)
                              ) {
                                var di = ko(ti, h.variables);
                                (!di || !1 !== di.if) && (je = !0);
                              }
                            }),
                          wa(Qt))
                        ) {
                          var Ye = M.get(Qt);
                          Ye &&
                            ((ge = ge && Ye.clientOnly),
                            (je = je && Ye.deferred)),
                            M.set(Qt, pm(h, ge, je));
                        } else {
                          var $e = Nc(Qt, h.lookupFragment);
                          if (!$e && Qt.kind === hr.FRAGMENT_SPREAD)
                            throw Ao(13, Qt.name.value);
                          $e &&
                            O.fragmentMatches($e, v, r, h.variables) &&
                            W($e.selectionSet, pm(h, ge, je));
                        }
                      }
                    }));
                })(n, h),
                M
              );
            }),
            (d.prototype.applyMerges = function (n, r, h, v, M) {
              var O,
                V = this;
              if (n.map.size && !Ln(h)) {
                var W = fo(h) || (!Ln(r) && !Au(r)) ? void 0 : r,
                  et = h;
                W && !M && (M = [Ln(W) ? W.__ref : W]);
                var At,
                  zt = function (Qt, ge) {
                    return fo(Qt)
                      ? "number" == typeof ge
                        ? Qt[ge]
                        : void 0
                      : v.store.getFieldValue(Qt, String(ge));
                  };
                n.map.forEach(function (Qt, ge) {
                  var je = zt(W, ge),
                    Ye = zt(et, ge);
                  if (void 0 !== Ye) {
                    M && M.push(ge);
                    var $e = V.applyMerges(Qt, je, Ye, v, M);
                    $e !== Ye && (At = At || new Map()).set(ge, $e),
                      M && rn(M.pop() === ge);
                  }
                }),
                  At &&
                    ((h = fo(et) ? et.slice(0) : (0, Ee.pi)({}, et)),
                    At.forEach(function (Qt, ge) {
                      h[ge] = Qt;
                    }));
              }
              return n.info
                ? this.cache.policies.runMergeFunction(
                    r,
                    h,
                    n.info,
                    v,
                    M && (O = v.store).getStorage.apply(O, M),
                  )
                : h;
            }),
            d
          );
        })(),
        Dp = [];
      function gm(d, n) {
        var r = d.map;
        return r.has(n) || r.set(n, Dp.pop() || { map: new Map() }), r.get(n);
      }
      function Pl(d, n) {
        if (d === n || !n || Is(n)) return d;
        if (!d || Is(d)) return n;
        var r =
            d.info && n.info
              ? (0, Ee.pi)((0, Ee.pi)({}, d.info), n.info)
              : d.info || n.info,
          h = d.map.size && n.map.size,
          M = { info: r, map: h ? new Map() : d.map.size ? d.map : n.map };
        if (h) {
          var O = new Set(n.map.keys());
          d.map.forEach(function (V, W) {
            M.map.set(W, Pl(V, n.map.get(W))), O.delete(W);
          }),
            O.forEach(function (V) {
              M.map.set(V, Pl(n.map.get(V), d.map.get(V)));
            });
        }
        return M;
      }
      function Is(d) {
        return !d || !(d.info || d.map.size);
      }
      function xc(d, n) {
        var r = d.map,
          h = r.get(n);
        h && Is(h) && (Dp.push(h), r.delete(n));
      }
      var Mp = new Set(),
        _m = (function (d) {
          function n(r) {
            void 0 === r && (r = {});
            var h = d.call(this) || this;
            return (
              (h.watches = new Set()),
              (h.addTypenameTransform = new ip(hc)),
              (h.assumeImmutableResults = !0),
              (h.makeVar = xg),
              (h.txCount = 0),
              (h.config = (function Ag(d) {
                return gc(nm, d);
              })(r)),
              (h.addTypename = !!h.config.addTypename),
              (h.policies = new wp({
                cache: h,
                dataIdFromObject: h.config.dataIdFromObject,
                possibleTypes: h.config.possibleTypes,
                typePolicies: h.config.typePolicies,
              })),
              h.init(),
              h
            );
          }
          return (
            (0, Ee.ZT)(n, d),
            (n.prototype.init = function () {
              var r = (this.data = new ku.Root({
                policies: this.policies,
                resultCaching: this.config.resultCaching,
              }));
              (this.optimisticData = r.stump), this.resetResultCache();
            }),
            (n.prototype.resetResultCache = function (r) {
              var h = this,
                v = this.storeReader,
                M = this.config.fragments;
              (this.storeWriter = new Fg(
                this,
                (this.storeReader = new Rl({
                  cache: this,
                  addTypename: this.addTypename,
                  resultCacheMaxSize: this.config.resultCacheMaxSize,
                  canonizeResults: mp(this.config),
                  canon: r ? void 0 : v && v.canon,
                  fragments: M,
                })),
                M,
              )),
                (this.maybeBroadcastWatch = ad(
                  function (O, V) {
                    return h.broadcastWatch(O, V);
                  },
                  {
                    max:
                      this.config.resultCacheMaxSize ||
                      ta["inMemoryCache.maybeBroadcastWatch"] ||
                      5e3,
                    makeCacheKey: function (O) {
                      var V = O.optimistic ? h.optimisticData : h.data;
                      if (Hr(V))
                        return V.makeCacheKey(
                          O.query,
                          O.callback,
                          Vr({
                            optimistic: O.optimistic,
                            id: O.id,
                            variables: O.variables,
                          }),
                        );
                    },
                  },
                )),
                new Set([this.data.group, this.optimisticData.group]).forEach(
                  function (O) {
                    return O.resetCaching();
                  },
                );
            }),
            (n.prototype.restore = function (r) {
              return this.init(), r && this.data.replace(r), this;
            }),
            (n.prototype.extract = function (r) {
              return (
                void 0 === r && (r = !1),
                (r ? this.optimisticData : this.data).extract()
              );
            }),
            (n.prototype.read = function (r) {
              var h = r.returnPartialData,
                v = void 0 !== h && h;
              try {
                return (
                  this.storeReader.diffQueryAgainstStore(
                    (0, Ee.pi)((0, Ee.pi)({}, r), {
                      store: r.optimistic ? this.optimisticData : this.data,
                      config: this.config,
                      returnPartialData: v,
                    }),
                  ).result || null
                );
              } catch (M) {
                if (M instanceof Eg) return null;
                throw M;
              }
            }),
            (n.prototype.write = function (r) {
              try {
                return (
                  ++this.txCount, this.storeWriter.writeToStore(this.data, r)
                );
              } finally {
                !--this.txCount &&
                  !1 !== r.broadcast &&
                  this.broadcastWatches();
              }
            }),
            (n.prototype.modify = function (r) {
              if (No.call(r, "id") && !r.id) return !1;
              var h = r.optimistic ? this.optimisticData : this.data;
              try {
                return ++this.txCount, h.modify(r.id || "ROOT_QUERY", r.fields);
              } finally {
                !--this.txCount &&
                  !1 !== r.broadcast &&
                  this.broadcastWatches();
              }
            }),
            (n.prototype.diff = function (r) {
              return this.storeReader.diffQueryAgainstStore(
                (0, Ee.pi)((0, Ee.pi)({}, r), {
                  store: r.optimistic ? this.optimisticData : this.data,
                  rootId: r.id || "ROOT_QUERY",
                  config: this.config,
                }),
              );
            }),
            (n.prototype.watch = function (r) {
              var h = this;
              return (
                this.watches.size ||
                  (function yg(d) {
                    vc(d).vars.forEach(function (n) {
                      return n.attachCache(d);
                    });
                  })(this),
                this.watches.add(r),
                r.immediate && this.maybeBroadcastWatch(r),
                function () {
                  h.watches.delete(r) && !h.watches.size && bg(h),
                    h.maybeBroadcastWatch.forget(r);
                }
              );
            }),
            (n.prototype.gc = function (r) {
              var h;
              Vr.reset(),
                ed.reset(),
                this.addTypenameTransform.resetCache(),
                null === (h = this.config.fragments) ||
                  void 0 === h ||
                  h.resetCaches();
              var v = this.optimisticData.gc();
              return (
                r &&
                  !this.txCount &&
                  (r.resetResultCache
                    ? this.resetResultCache(r.resetResultIdentities)
                    : r.resetResultIdentities && this.storeReader.resetCanon()),
                v
              );
            }),
            (n.prototype.retain = function (r, h) {
              return (h ? this.optimisticData : this.data).retain(r);
            }),
            (n.prototype.release = function (r, h) {
              return (h ? this.optimisticData : this.data).release(r);
            }),
            (n.prototype.identify = function (r) {
              if (Ln(r)) return r.__ref;
              try {
                return this.policies.identify(r)[0];
              } catch (h) {
                !1 !== globalThis.__DEV__ && rn.warn(h);
              }
            }),
            (n.prototype.evict = function (r) {
              if (!r.id) {
                if (No.call(r, "id")) return !1;
                r = (0, Ee.pi)((0, Ee.pi)({}, r), { id: "ROOT_QUERY" });
              }
              try {
                return ++this.txCount, this.optimisticData.evict(r, this.data);
              } finally {
                !--this.txCount &&
                  !1 !== r.broadcast &&
                  this.broadcastWatches();
              }
            }),
            (n.prototype.reset = function (r) {
              var h = this;
              return (
                this.init(),
                Vr.reset(),
                r && r.discardWatches
                  ? (this.watches.forEach(function (v) {
                      return h.maybeBroadcastWatch.forget(v);
                    }),
                    this.watches.clear(),
                    bg(this))
                  : this.broadcastWatches(),
                Promise.resolve()
              );
            }),
            (n.prototype.removeOptimistic = function (r) {
              var h = this.optimisticData.removeLayer(r);
              h !== this.optimisticData &&
                ((this.optimisticData = h), this.broadcastWatches());
            }),
            (n.prototype.batch = function (r) {
              var et,
                h = this,
                v = r.update,
                M = r.optimistic,
                O = void 0 === M || M,
                V = r.removeOptimistic,
                W = r.onWatchUpdated,
                At = function (Qt) {
                  var je = h.data,
                    Ye = h.optimisticData;
                  ++h.txCount, Qt && (h.data = h.optimisticData = Qt);
                  try {
                    return (et = v(h));
                  } finally {
                    --h.txCount, (h.data = je), (h.optimisticData = Ye);
                  }
                },
                zt = new Set();
              return (
                W &&
                  !this.txCount &&
                  this.broadcastWatches(
                    (0, Ee.pi)((0, Ee.pi)({}, r), {
                      onWatchUpdated: function (Qt) {
                        return zt.add(Qt), !1;
                      },
                    }),
                  ),
                "string" == typeof O
                  ? (this.optimisticData = this.optimisticData.addLayer(O, At))
                  : !1 === O
                    ? At(this.data)
                    : At(),
                "string" == typeof V &&
                  (this.optimisticData = this.optimisticData.removeLayer(V)),
                W && zt.size
                  ? (this.broadcastWatches(
                      (0, Ee.pi)((0, Ee.pi)({}, r), {
                        onWatchUpdated: function (Qt, ge) {
                          var je = W.call(this, Qt, ge);
                          return !1 !== je && zt.delete(Qt), je;
                        },
                      }),
                    ),
                    zt.size &&
                      zt.forEach(function (Qt) {
                        return h.maybeBroadcastWatch.dirty(Qt);
                      }))
                  : this.broadcastWatches(r),
                et
              );
            }),
            (n.prototype.performTransaction = function (r, h) {
              return this.batch({ update: r, optimistic: h || null !== h });
            }),
            (n.prototype.transformDocument = function (r) {
              return this.addTypenameToDocument(this.addFragmentsToDocument(r));
            }),
            (n.prototype.broadcastWatches = function (r) {
              var h = this;
              this.txCount ||
                this.watches.forEach(function (v) {
                  return h.maybeBroadcastWatch(v, r);
                });
            }),
            (n.prototype.addFragmentsToDocument = function (r) {
              var h = this.config.fragments;
              return h ? h.transform(r) : r;
            }),
            (n.prototype.addTypenameToDocument = function (r) {
              return this.addTypename
                ? this.addTypenameTransform.transformDocument(r)
                : r;
            }),
            (n.prototype.broadcastWatch = function (r, h) {
              var v = r.lastDiff,
                M = this.diff(r);
              (h &&
                (r.optimistic &&
                  "string" == typeof h.optimistic &&
                  (M.fromOptimisticTransaction = !0),
                h.onWatchUpdated &&
                  !1 === h.onWatchUpdated.call(this, r, M, v))) ||
                ((!v || !o(v.result, M.result)) &&
                  r.callback((r.lastDiff = M), v));
            }),
            n
          );
        })(em);
      !1 !== globalThis.__DEV__ && (_m.prototype.getMemoryInternals = gl);
      function Ou(d) {
        const n = new Ol.WM().set(
          "x-hasura-admin-secret",
          "ERr7wpu9rzn4AVA7YAk31aa1bNk0jnYebCr4zOSf2eYCSUiRqc4BV8xfzermcar2",
        );
        return {
          link: d.create({
            uri: "https://perfect-mackerel-74.hasura.app/api/rest",
            headers: n,
          }),
          cache: new _m(),
        };
      }
      let zh = (() => {
        class d {
          static #t = (this.ɵfac = function (h) {
            return new (h || d)();
          });
          static #e = (this.ɵmod = p.oAB({ type: d }));
          static #i = (this.ɵinj = p.cJS({
            providers: [{ provide: Cu, useFactory: Ou, deps: [Ih] }],
            imports: [Cg, Ol.JF],
          }));
        }
        return d;
      })();
      var Sp = D(4506);
      let Ap = (() => {
          class d {
            constructor() {}
            intercept(r, h) {
              const M = r.clone({
                headers: r.headers.set(
                  "x-hasura-admin-secret",
                  Sp.N.HASURA_SERCER_KEY,
                ),
              });
              return h.handle(M);
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)();
            });
            static #e = (this.ɵprov = p.Yz7({ token: d, factory: d.ɵfac }));
          }
          return d;
        })(),
        Ng = (() => {
          class d {
            constructor() {}
            intercept(r, h) {
              const M = JSON.parse(
                localStorage.getItem("authData") || "{}",
              )?.token;
              return (
                M &&
                  (r = r.clone({
                    setHeaders: { Authorization: `Bearer ${M}` },
                  })),
                h.handle(r)
              );
            }
            static #t = (this.ɵfac = function (h) {
              return new (h || d)();
            });
            static #e = (this.ɵprov = p.Yz7({ token: d, factory: d.ɵfac }));
          }
          return d;
        })(),
        Bg = (() => {
          class d {
            static #t = (this.ɵfac = function (h) {
              return new (h || d)();
            });
            static #e = (this.ɵmod = p.oAB({ type: d, bootstrap: [Wt] }));
            static #i = (this.ɵinj = p.cJS({
              providers: [
                Xi.e,
                Ct,
                { provide: q.A4, useValue: q.A4 },
                q.N0,
                { provide: Ol.TP, useClass: Ng, multi: !0 },
                { provide: Ol.TP, useClass: Ap, multi: !0 },
              ],
              imports: [
                s.b2,
                Xt,
                Fa,
                Le,
                li.ie,
                ii.Ps,
                Mi.g0,
                fi.AV,
                ri.ot,
                te.lN,
                Be.p0,
                Ne.UX,
                Ri.c,
                La.IngredientsModule,
                ma.SalesModule,
                Vu.InfoModule,
                _i.QW,
                zu.LD,
                at.us,
                Ut.Is,
                Ic.ProductDevelopmentModule,
                wd.ProductionModule,
                xd.DashboardModule,
                Cd.QualityModule,
                xi.HumanResourcesModule,
                zh,
                Ol.JF,
              ],
            }));
          }
          return d;
        })();
      s.q6()
        .bootstrapModule(Bg)
        .catch((d) => console.error(d));
    },
    5619: (ui, Zt, D) => {
      D.d(Zt, { X: () => x });
      var s = D(8645);
      class x extends s.x {
        constructor(p) {
          super(), (this._value = p);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(p) {
          const at = super._subscribe(p);
          return !at.closed && p.next(this._value), at;
        }
        getValue() {
          const { hasError: p, thrownError: at, _value: lt } = this;
          if (p) throw at;
          return this._throwIfClosed(), lt;
        }
        next(p) {
          super.next((this._value = p));
        }
      }
    },
    5592: (ui, Zt, D) => {
      D.d(Zt, { y: () => B });
      var s = D(305),
        x = D(7394),
        C = D(4850),
        p = D(8407),
        at = D(2653),
        lt = D(4674),
        bt = D(1441);
      let B = (() => {
        class A {
          constructor(gt) {
            gt && (this._subscribe = gt);
          }
          lift(gt) {
            const Jt = new A();
            return (Jt.source = this), (Jt.operator = gt), Jt;
          }
          subscribe(gt, Jt, De) {
            const Ve = (function _(A) {
              return (
                (A && A instanceof s.Lv) ||
                ((function $(A) {
                  return (
                    A &&
                    (0, lt.m)(A.next) &&
                    (0, lt.m)(A.error) &&
                    (0, lt.m)(A.complete)
                  );
                })(A) &&
                  (0, x.Nn)(A))
              );
            })(gt)
              ? gt
              : new s.Hp(gt, Jt, De);
            return (
              (0, bt.x)(() => {
                const { operator: He, source: We } = this;
                Ve.add(
                  He
                    ? He.call(Ve, We)
                    : We
                      ? this._subscribe(Ve)
                      : this._trySubscribe(Ve),
                );
              }),
              Ve
            );
          }
          _trySubscribe(gt) {
            try {
              return this._subscribe(gt);
            } catch (Jt) {
              gt.error(Jt);
            }
          }
          forEach(gt, Jt) {
            return new (Jt = kt(Jt))((De, Ve) => {
              const He = new s.Hp({
                next: (We) => {
                  try {
                    gt(We);
                  } catch (Re) {
                    Ve(Re), He.unsubscribe();
                  }
                },
                error: Ve,
                complete: De,
              });
              this.subscribe(He);
            });
          }
          _subscribe(gt) {
            var Jt;
            return null === (Jt = this.source) || void 0 === Jt
              ? void 0
              : Jt.subscribe(gt);
          }
          [C.L]() {
            return this;
          }
          pipe(...gt) {
            return (0, p.U)(gt)(this);
          }
          toPromise(gt) {
            return new (gt = kt(gt))((Jt, De) => {
              let Ve;
              this.subscribe(
                (He) => (Ve = He),
                (He) => De(He),
                () => Jt(Ve),
              );
            });
          }
        }
        return (A.create = (jt) => new A(jt)), A;
      })();
      function kt(A) {
        var jt;
        return null !== (jt = A ?? at.config.Promise) && void 0 !== jt
          ? jt
          : Promise;
      }
    },
    8645: (ui, Zt, D) => {
      D.d(Zt, { x: () => bt });
      var s = D(5592),
        x = D(7394);
      const p = (0, D(2306).d)(
        (kt) =>
          function () {
            kt(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          },
      );
      var at = D(9039),
        lt = D(1441);
      let bt = (() => {
        class kt extends s.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(_) {
            const A = new B(this, this);
            return (A.operator = _), A;
          }
          _throwIfClosed() {
            if (this.closed) throw new p();
          }
          next(_) {
            (0, lt.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const A of this.currentObservers) A.next(_);
              }
            });
          }
          error(_) {
            (0, lt.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = _);
                const { observers: A } = this;
                for (; A.length; ) A.shift().error(_);
              }
            });
          }
          complete() {
            (0, lt.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: _ } = this;
                for (; _.length; ) _.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var _;
            return (
              (null === (_ = this.observers) || void 0 === _
                ? void 0
                : _.length) > 0
            );
          }
          _trySubscribe(_) {
            return this._throwIfClosed(), super._trySubscribe(_);
          }
          _subscribe(_) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(_),
              this._innerSubscribe(_)
            );
          }
          _innerSubscribe(_) {
            const { hasError: A, isStopped: jt, observers: gt } = this;
            return A || jt
              ? x.Lc
              : ((this.currentObservers = null),
                gt.push(_),
                new x.w0(() => {
                  (this.currentObservers = null), (0, at.P)(gt, _);
                }));
          }
          _checkFinalizedStatuses(_) {
            const { hasError: A, thrownError: jt, isStopped: gt } = this;
            A ? _.error(jt) : gt && _.complete();
          }
          asObservable() {
            const _ = new s.y();
            return (_.source = this), _;
          }
        }
        return (kt.create = ($, _) => new B($, _)), kt;
      })();
      class B extends bt {
        constructor($, _) {
          super(), (this.destination = $), (this.source = _);
        }
        next($) {
          var _, A;
          null ===
            (A =
              null === (_ = this.destination) || void 0 === _
                ? void 0
                : _.next) ||
            void 0 === A ||
            A.call(_, $);
        }
        error($) {
          var _, A;
          null ===
            (A =
              null === (_ = this.destination) || void 0 === _
                ? void 0
                : _.error) ||
            void 0 === A ||
            A.call(_, $);
        }
        complete() {
          var $, _;
          null ===
            (_ =
              null === ($ = this.destination) || void 0 === $
                ? void 0
                : $.complete) ||
            void 0 === _ ||
            _.call($);
        }
        _subscribe($) {
          var _, A;
          return null !==
            (A =
              null === (_ = this.source) || void 0 === _
                ? void 0
                : _.subscribe($)) && void 0 !== A
            ? A
            : x.Lc;
        }
      }
    },
    305: (ui, Zt, D) => {
      D.d(Zt, { Hp: () => De, Lv: () => A });
      var s = D(4674),
        x = D(7394),
        C = D(2653),
        p = D(3894),
        at = D(2420);
      const lt = kt("C", void 0, void 0);
      function kt(wt, _t, St) {
        return { kind: wt, value: _t, error: St };
      }
      var $ = D(7599),
        _ = D(1441);
      class A extends x.w0 {
        constructor(_t) {
          super(),
            (this.isStopped = !1),
            _t
              ? ((this.destination = _t), (0, x.Nn)(_t) && _t.add(this))
              : (this.destination = Re);
        }
        static create(_t, St, Pt) {
          return new De(_t, St, Pt);
        }
        next(_t) {
          this.isStopped
            ? We(
                (function B(wt) {
                  return kt("N", wt, void 0);
                })(_t),
                this,
              )
            : this._next(_t);
        }
        error(_t) {
          this.isStopped
            ? We(
                (function bt(wt) {
                  return kt("E", void 0, wt);
                })(_t),
                this,
              )
            : ((this.isStopped = !0), this._error(_t));
        }
        complete() {
          this.isStopped
            ? We(lt, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(_t) {
          this.destination.next(_t);
        }
        _error(_t) {
          try {
            this.destination.error(_t);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const jt = Function.prototype.bind;
      function gt(wt, _t) {
        return jt.call(wt, _t);
      }
      class Jt {
        constructor(_t) {
          this.partialObserver = _t;
        }
        next(_t) {
          const { partialObserver: St } = this;
          if (St.next)
            try {
              St.next(_t);
            } catch (Pt) {
              Ve(Pt);
            }
        }
        error(_t) {
          const { partialObserver: St } = this;
          if (St.error)
            try {
              St.error(_t);
            } catch (Pt) {
              Ve(Pt);
            }
          else Ve(_t);
        }
        complete() {
          const { partialObserver: _t } = this;
          if (_t.complete)
            try {
              _t.complete();
            } catch (St) {
              Ve(St);
            }
        }
      }
      class De extends A {
        constructor(_t, St, Pt) {
          let ee;
          if ((super(), (0, s.m)(_t) || !_t))
            ee = {
              next: _t ?? void 0,
              error: St ?? void 0,
              complete: Pt ?? void 0,
            };
          else {
            let Kt;
            this && C.config.useDeprecatedNextContext
              ? ((Kt = Object.create(_t)),
                (Kt.unsubscribe = () => this.unsubscribe()),
                (ee = {
                  next: _t.next && gt(_t.next, Kt),
                  error: _t.error && gt(_t.error, Kt),
                  complete: _t.complete && gt(_t.complete, Kt),
                }))
              : (ee = _t);
          }
          this.destination = new Jt(ee);
        }
      }
      function Ve(wt) {
        C.config.useDeprecatedSynchronousErrorHandling
          ? (0, _.O)(wt)
          : (0, p.h)(wt);
      }
      function We(wt, _t) {
        const { onStoppedNotification: St } = C.config;
        St && $.z.setTimeout(() => St(wt, _t));
      }
      const Re = {
        closed: !0,
        next: at.Z,
        error: function He(wt) {
          throw wt;
        },
        complete: at.Z,
      };
    },
    7394: (ui, Zt, D) => {
      D.d(Zt, { Lc: () => lt, w0: () => at, Nn: () => bt });
      var s = D(4674);
      const C = (0, D(2306).d)(
        (kt) =>
          function (_) {
            kt(this),
              (this.message = _
                ? `${_.length} errors occurred during unsubscription:\n${_.map((A, jt) => `${jt + 1}) ${A.toString()}`).join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = _);
          },
      );
      var p = D(9039);
      class at {
        constructor($) {
          (this.initialTeardown = $),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let $;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: _ } = this;
            if (_)
              if (((this._parentage = null), Array.isArray(_)))
                for (const gt of _) gt.remove(this);
              else _.remove(this);
            const { initialTeardown: A } = this;
            if ((0, s.m)(A))
              try {
                A();
              } catch (gt) {
                $ = gt instanceof C ? gt.errors : [gt];
              }
            const { _finalizers: jt } = this;
            if (jt) {
              this._finalizers = null;
              for (const gt of jt)
                try {
                  B(gt);
                } catch (Jt) {
                  ($ = $ ?? []),
                    Jt instanceof C ? ($ = [...$, ...Jt.errors]) : $.push(Jt);
                }
            }
            if ($) throw new C($);
          }
        }
        add($) {
          var _;
          if ($ && $ !== this)
            if (this.closed) B($);
            else {
              if ($ instanceof at) {
                if ($.closed || $._hasParent(this)) return;
                $._addParent(this);
              }
              (this._finalizers =
                null !== (_ = this._finalizers) && void 0 !== _ ? _ : []).push(
                $,
              );
            }
        }
        _hasParent($) {
          const { _parentage: _ } = this;
          return _ === $ || (Array.isArray(_) && _.includes($));
        }
        _addParent($) {
          const { _parentage: _ } = this;
          this._parentage = Array.isArray(_) ? (_.push($), _) : _ ? [_, $] : $;
        }
        _removeParent($) {
          const { _parentage: _ } = this;
          _ === $
            ? (this._parentage = null)
            : Array.isArray(_) && (0, p.P)(_, $);
        }
        remove($) {
          const { _finalizers: _ } = this;
          _ && (0, p.P)(_, $), $ instanceof at && $._removeParent(this);
        }
      }
      at.EMPTY = (() => {
        const kt = new at();
        return (kt.closed = !0), kt;
      })();
      const lt = at.EMPTY;
      function bt(kt) {
        return (
          kt instanceof at ||
          (kt &&
            "closed" in kt &&
            (0, s.m)(kt.remove) &&
            (0, s.m)(kt.add) &&
            (0, s.m)(kt.unsubscribe))
        );
      }
      function B(kt) {
        (0, s.m)(kt) ? kt() : kt.unsubscribe();
      }
    },
    2653: (ui, Zt, D) => {
      D.d(Zt, { config: () => s });
      const s = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    3168: (ui, Zt, D) => {
      D.d(Zt, { c: () => lt });
      var s = D(5592),
        x = D(7394),
        C = D(6196),
        p = D(8251),
        at = D(9360);
      class lt extends s.y {
        constructor(B, kt) {
          super(),
            (this.source = B),
            (this.subjectFactory = kt),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, at.A)(B) && (this.lift = B.lift);
        }
        _subscribe(B) {
          return this.getSubject().subscribe(B);
        }
        getSubject() {
          const B = this._subject;
          return (
            (!B || B.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: B } = this;
          (this._subject = this._connection = null), B?.unsubscribe();
        }
        connect() {
          let B = this._connection;
          if (!B) {
            B = this._connection = new x.w0();
            const kt = this.getSubject();
            B.add(
              this.source.subscribe(
                (0, p.x)(
                  kt,
                  void 0,
                  () => {
                    this._teardown(), kt.complete();
                  },
                  ($) => {
                    this._teardown(), kt.error($);
                  },
                  () => this._teardown(),
                ),
              ),
            ),
              B.closed && ((this._connection = null), (B = x.w0.EMPTY));
          }
          return B;
        }
        refCount() {
          return (0, C.x)()(this);
        }
      }
    },
    2572: (ui, Zt, D) => {
      D.d(Zt, { a: () => $ });
      var s = D(5592),
        x = D(7453),
        C = D(9666),
        p = D(2737),
        at = D(7400),
        lt = D(9940),
        bt = D(2714),
        B = D(8251),
        kt = D(7103);
      function $(...jt) {
        const gt = (0, lt.yG)(jt),
          Jt = (0, lt.jO)(jt),
          { args: De, keys: Ve } = (0, x.D)(jt);
        if (0 === De.length) return (0, C.D)([], gt);
        const He = new s.y(
          (function _(jt, gt, Jt = p.y) {
            return (De) => {
              A(
                gt,
                () => {
                  const { length: Ve } = jt,
                    He = new Array(Ve);
                  let We = Ve,
                    Re = Ve;
                  for (let wt = 0; wt < Ve; wt++)
                    A(
                      gt,
                      () => {
                        const _t = (0, C.D)(jt[wt], gt);
                        let St = !1;
                        _t.subscribe(
                          (0, B.x)(
                            De,
                            (Pt) => {
                              (He[wt] = Pt),
                                St || ((St = !0), Re--),
                                Re || De.next(Jt(He.slice()));
                            },
                            () => {
                              --We || De.complete();
                            },
                          ),
                        );
                      },
                      De,
                    );
                },
                De,
              );
            };
          })(De, gt, Ve ? (We) => (0, bt.n)(Ve, We) : p.y),
        );
        return Jt ? He.pipe((0, at.Z)(Jt)) : He;
      }
      function A(jt, gt, Jt) {
        jt ? (0, kt.f)(Jt, jt, gt) : gt();
      }
    },
    5211: (ui, Zt, D) => {
      D.d(Zt, { z: () => at });
      var s = D(7537),
        C = D(9940),
        p = D(9666);
      function at(...lt) {
        return (function x() {
          return (0, s.J)(1);
        })()((0, p.D)(lt, (0, C.yG)(lt)));
      }
    },
    4911: (ui, Zt, D) => {
      D.d(Zt, { P: () => C });
      var s = D(5592),
        x = D(4829);
      function C(p) {
        return new s.y((at) => {
          (0, x.Xf)(p()).subscribe(at);
        });
      }
    },
    6232: (ui, Zt, D) => {
      D.d(Zt, { E: () => x });
      const x = new (D(5592).y)((at) => at.complete());
    },
    9315: (ui, Zt, D) => {
      D.d(Zt, { D: () => B });
      var s = D(5592),
        x = D(7453),
        C = D(4829),
        p = D(9940),
        at = D(8251),
        lt = D(7400),
        bt = D(2714);
      function B(...kt) {
        const $ = (0, p.jO)(kt),
          { args: _, keys: A } = (0, x.D)(kt),
          jt = new s.y((gt) => {
            const { length: Jt } = _;
            if (!Jt) return void gt.complete();
            const De = new Array(Jt);
            let Ve = Jt,
              He = Jt;
            for (let We = 0; We < Jt; We++) {
              let Re = !1;
              (0, C.Xf)(_[We]).subscribe(
                (0, at.x)(
                  gt,
                  (wt) => {
                    Re || ((Re = !0), He--), (De[We] = wt);
                  },
                  () => Ve--,
                  void 0,
                  () => {
                    (!Ve || !Re) &&
                      (He || gt.next(A ? (0, bt.n)(A, De) : De), gt.complete());
                  },
                ),
              );
            }
          });
        return $ ? jt.pipe((0, lt.Z)($)) : jt;
      }
    },
    9666: (ui, Zt, D) => {
      D.d(Zt, { D: () => St });
      var s = D(4829),
        x = D(3093),
        C = D(9360);
      function p(Pt, ee = 0) {
        return (0, C.e)((Kt, ze) => {
          ze.add(Pt.schedule(() => Kt.subscribe(ze), ee));
        });
      }
      var bt = D(5592),
        kt = D(4971),
        $ = D(4674),
        _ = D(7103);
      function jt(Pt, ee) {
        if (!Pt) throw new Error("Iterable cannot be null");
        return new bt.y((Kt) => {
          (0, _.f)(Kt, ee, () => {
            const ze = Pt[Symbol.asyncIterator]();
            (0, _.f)(
              Kt,
              ee,
              () => {
                ze.next().then((mi) => {
                  mi.done ? Kt.complete() : Kt.next(mi.value);
                });
              },
              0,
              !0,
            );
          });
        });
      }
      var gt = D(8382),
        Jt = D(4026),
        De = D(4266),
        Ve = D(3664),
        He = D(5726),
        We = D(9853),
        Re = D(541);
      function St(Pt, ee) {
        return ee
          ? (function _t(Pt, ee) {
              if (null != Pt) {
                if ((0, gt.c)(Pt))
                  return (function at(Pt, ee) {
                    return (0, s.Xf)(Pt).pipe(p(ee), (0, x.Q)(ee));
                  })(Pt, ee);
                if ((0, De.z)(Pt))
                  return (function B(Pt, ee) {
                    return new bt.y((Kt) => {
                      let ze = 0;
                      return ee.schedule(function () {
                        ze === Pt.length
                          ? Kt.complete()
                          : (Kt.next(Pt[ze++]), Kt.closed || this.schedule());
                      });
                    });
                  })(Pt, ee);
                if ((0, Jt.t)(Pt))
                  return (function lt(Pt, ee) {
                    return (0, s.Xf)(Pt).pipe(p(ee), (0, x.Q)(ee));
                  })(Pt, ee);
                if ((0, He.D)(Pt)) return jt(Pt, ee);
                if ((0, Ve.T)(Pt))
                  return (function A(Pt, ee) {
                    return new bt.y((Kt) => {
                      let ze;
                      return (
                        (0, _.f)(Kt, ee, () => {
                          (ze = Pt[kt.h]()),
                            (0, _.f)(
                              Kt,
                              ee,
                              () => {
                                let mi, ie;
                                try {
                                  ({ value: mi, done: ie } = ze.next());
                                } catch (vi) {
                                  return void Kt.error(vi);
                                }
                                ie ? Kt.complete() : Kt.next(mi);
                              },
                              0,
                              !0,
                            );
                        }),
                        () => (0, $.m)(ze?.return) && ze.return()
                      );
                    });
                  })(Pt, ee);
                if ((0, Re.L)(Pt))
                  return (function wt(Pt, ee) {
                    return jt((0, Re.Q)(Pt), ee);
                  })(Pt, ee);
              }
              throw (0, We.z)(Pt);
            })(Pt, ee)
          : (0, s.Xf)(Pt);
      }
    },
    2438: (ui, Zt, D) => {
      D.d(Zt, { R: () => $ });
      var s = D(4829),
        x = D(5592),
        C = D(1631),
        p = D(4266),
        at = D(4674),
        lt = D(7400);
      const bt = ["addListener", "removeListener"],
        B = ["addEventListener", "removeEventListener"],
        kt = ["on", "off"];
      function $(Jt, De, Ve, He) {
        if (((0, at.m)(Ve) && ((He = Ve), (Ve = void 0)), He))
          return $(Jt, De, Ve).pipe((0, lt.Z)(He));
        const [We, Re] = (function gt(Jt) {
          return (
            (0, at.m)(Jt.addEventListener) && (0, at.m)(Jt.removeEventListener)
          );
        })(Jt)
          ? B.map((wt) => (_t) => Jt[wt](De, _t, Ve))
          : (function A(Jt) {
                return (
                  (0, at.m)(Jt.addListener) && (0, at.m)(Jt.removeListener)
                );
              })(Jt)
            ? bt.map(_(Jt, De))
            : (function jt(Jt) {
                  return (0, at.m)(Jt.on) && (0, at.m)(Jt.off);
                })(Jt)
              ? kt.map(_(Jt, De))
              : [];
        if (!We && (0, p.z)(Jt))
          return (0, C.z)((wt) => $(wt, De, Ve))((0, s.Xf)(Jt));
        if (!We) throw new TypeError("Invalid event target");
        return new x.y((wt) => {
          const _t = (...St) => wt.next(1 < St.length ? St : St[0]);
          return We(_t), () => Re(_t);
        });
      }
      function _(Jt, De) {
        return (Ve) => (He) => Jt[Ve](De, He);
      }
    },
    4829: (ui, Zt, D) => {
      D.d(Zt, { Xf: () => jt });
      var s = D(7582),
        x = D(4266),
        C = D(4026),
        p = D(5592),
        at = D(8382),
        lt = D(5726),
        bt = D(9853),
        B = D(3664),
        kt = D(541),
        $ = D(4674),
        _ = D(3894),
        A = D(4850);
      function jt(wt) {
        if (wt instanceof p.y) return wt;
        if (null != wt) {
          if ((0, at.c)(wt))
            return (function gt(wt) {
              return new p.y((_t) => {
                const St = wt[A.L]();
                if ((0, $.m)(St.subscribe)) return St.subscribe(_t);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable",
                );
              });
            })(wt);
          if ((0, x.z)(wt))
            return (function Jt(wt) {
              return new p.y((_t) => {
                for (let St = 0; St < wt.length && !_t.closed; St++)
                  _t.next(wt[St]);
                _t.complete();
              });
            })(wt);
          if ((0, C.t)(wt))
            return (function De(wt) {
              return new p.y((_t) => {
                wt.then(
                  (St) => {
                    _t.closed || (_t.next(St), _t.complete());
                  },
                  (St) => _t.error(St),
                ).then(null, _.h);
              });
            })(wt);
          if ((0, lt.D)(wt)) return He(wt);
          if ((0, B.T)(wt))
            return (function Ve(wt) {
              return new p.y((_t) => {
                for (const St of wt) if ((_t.next(St), _t.closed)) return;
                _t.complete();
              });
            })(wt);
          if ((0, kt.L)(wt))
            return (function We(wt) {
              return He((0, kt.Q)(wt));
            })(wt);
        }
        throw (0, bt.z)(wt);
      }
      function He(wt) {
        return new p.y((_t) => {
          (function Re(wt, _t) {
            var St, Pt, ee, Kt;
            return (0, s.mG)(this, void 0, void 0, function* () {
              try {
                for (St = (0, s.KL)(wt); !(Pt = yield St.next()).done; )
                  if ((_t.next(Pt.value), _t.closed)) return;
              } catch (ze) {
                ee = { error: ze };
              } finally {
                try {
                  Pt && !Pt.done && (Kt = St.return) && (yield Kt.call(St));
                } finally {
                  if (ee) throw ee.error;
                }
              }
              _t.complete();
            });
          })(wt, _t).catch((St) => _t.error(St));
        });
      }
    },
    3019: (ui, Zt, D) => {
      D.d(Zt, { T: () => lt });
      var s = D(7537),
        x = D(4829),
        C = D(6232),
        p = D(9940),
        at = D(9666);
      function lt(...bt) {
        const B = (0, p.yG)(bt),
          kt = (0, p._6)(bt, 1 / 0),
          $ = bt;
        return $.length
          ? 1 === $.length
            ? (0, x.Xf)($[0])
            : (0, s.J)(kt)((0, at.D)($, B))
          : C.E;
      }
    },
    2096: (ui, Zt, D) => {
      D.d(Zt, { of: () => C });
      var s = D(9940),
        x = D(9666);
      function C(...p) {
        const at = (0, s.yG)(p);
        return (0, x.D)(p, at);
      }
    },
    8504: (ui, Zt, D) => {
      D.d(Zt, { _: () => C });
      var s = D(5592),
        x = D(4674);
      function C(p, at) {
        const lt = (0, x.m)(p) ? p : () => p,
          bt = (B) => B.error(lt());
        return new s.y(at ? (B) => at.schedule(bt, 0, B) : bt);
      }
    },
    4825: (ui, Zt, D) => {
      D.d(Zt, { H: () => at });
      var s = D(5592),
        x = D(6321),
        C = D(671);
      function at(lt = 0, bt, B = x.P) {
        let kt = -1;
        return (
          null != bt && ((0, C.K)(bt) ? (B = bt) : (kt = bt)),
          new s.y(($) => {
            let _ = (function p(lt) {
              return lt instanceof Date && !isNaN(lt);
            })(lt)
              ? +lt - B.now()
              : lt;
            _ < 0 && (_ = 0);
            let A = 0;
            return B.schedule(function () {
              $.closed ||
                ($.next(A++),
                0 <= kt ? this.schedule(void 0, kt) : $.complete());
            }, _);
          })
        );
      }
    },
    8251: (ui, Zt, D) => {
      D.d(Zt, { x: () => x });
      var s = D(305);
      function x(p, at, lt, bt, B) {
        return new C(p, at, lt, bt, B);
      }
      class C extends s.Lv {
        constructor(at, lt, bt, B, kt, $) {
          super(at),
            (this.onFinalize = kt),
            (this.shouldUnsubscribe = $),
            (this._next = lt
              ? function (_) {
                  try {
                    lt(_);
                  } catch (A) {
                    at.error(A);
                  }
                }
              : super._next),
            (this._error = B
              ? function (_) {
                  try {
                    B(_);
                  } catch (A) {
                    at.error(A);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = bt
              ? function () {
                  try {
                    bt();
                  } catch (_) {
                    at.error(_);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var at;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: lt } = this;
            super.unsubscribe(),
              !lt &&
                (null === (at = this.onFinalize) ||
                  void 0 === at ||
                  at.call(this));
          }
        }
      }
    },
    6306: (ui, Zt, D) => {
      D.d(Zt, { K: () => p });
      var s = D(4829),
        x = D(8251),
        C = D(9360);
      function p(at) {
        return (0, C.e)((lt, bt) => {
          let $,
            B = null,
            kt = !1;
          (B = lt.subscribe(
            (0, x.x)(bt, void 0, void 0, (_) => {
              ($ = (0, s.Xf)(at(_, p(at)(lt)))),
                B ? (B.unsubscribe(), (B = null), $.subscribe(bt)) : (kt = !0);
            }),
          )),
            kt && (B.unsubscribe(), (B = null), $.subscribe(bt));
        });
      }
    },
    6328: (ui, Zt, D) => {
      D.d(Zt, { b: () => C });
      var s = D(1631),
        x = D(4674);
      function C(p, at) {
        return (0, x.m)(at) ? (0, s.z)(p, at, 1) : (0, s.z)(p, 1);
      }
    },
    3620: (ui, Zt, D) => {
      D.d(Zt, { b: () => p });
      var s = D(6321),
        x = D(9360),
        C = D(8251);
      function p(at, lt = s.z) {
        return (0, x.e)((bt, B) => {
          let kt = null,
            $ = null,
            _ = null;
          const A = () => {
            if (kt) {
              kt.unsubscribe(), (kt = null);
              const gt = $;
              ($ = null), B.next(gt);
            }
          };
          function jt() {
            const gt = _ + at,
              Jt = lt.now();
            if (Jt < gt)
              return (kt = this.schedule(void 0, gt - Jt)), void B.add(kt);
            A();
          }
          bt.subscribe(
            (0, C.x)(
              B,
              (gt) => {
                ($ = gt),
                  (_ = lt.now()),
                  kt || ((kt = lt.schedule(jt, at)), B.add(kt));
              },
              () => {
                A(), B.complete();
              },
              void 0,
              () => {
                $ = kt = null;
              },
            ),
          );
        });
      }
    },
    3997: (ui, Zt, D) => {
      D.d(Zt, { x: () => p });
      var s = D(2737),
        x = D(9360),
        C = D(8251);
      function p(lt, bt = s.y) {
        return (
          (lt = lt ?? at),
          (0, x.e)((B, kt) => {
            let $,
              _ = !0;
            B.subscribe(
              (0, C.x)(kt, (A) => {
                const jt = bt(A);
                (_ || !lt($, jt)) && ((_ = !1), ($ = jt), kt.next(A));
              }),
            );
          })
        );
      }
      function at(lt, bt) {
        return lt === bt;
      }
    },
    2181: (ui, Zt, D) => {
      D.d(Zt, { h: () => C });
      var s = D(9360),
        x = D(8251);
      function C(p, at) {
        return (0, s.e)((lt, bt) => {
          let B = 0;
          lt.subscribe(
            (0, x.x)(bt, (kt) => p.call(at, kt, B++) && bt.next(kt)),
          );
        });
      }
    },
    4716: (ui, Zt, D) => {
      D.d(Zt, { x: () => x });
      var s = D(9360);
      function x(C) {
        return (0, s.e)((p, at) => {
          try {
            p.subscribe(at);
          } finally {
            at.add(C);
          }
        });
      }
    },
    7398: (ui, Zt, D) => {
      D.d(Zt, { U: () => C });
      var s = D(9360),
        x = D(8251);
      function C(p, at) {
        return (0, s.e)((lt, bt) => {
          let B = 0;
          lt.subscribe(
            (0, x.x)(bt, (kt) => {
              bt.next(p.call(at, kt, B++));
            }),
          );
        });
      }
    },
    975: (ui, Zt, D) => {
      D.d(Zt, { h: () => x });
      var s = D(7398);
      function x(C) {
        return (0, s.U)(() => C);
      }
    },
    7537: (ui, Zt, D) => {
      D.d(Zt, { J: () => C });
      var s = D(1631),
        x = D(2737);
      function C(p = 1 / 0) {
        return (0, s.z)(x.y, p);
      }
    },
    1631: (ui, Zt, D) => {
      D.d(Zt, { z: () => B });
      var s = D(7398),
        x = D(4829),
        C = D(9360),
        p = D(7103),
        at = D(8251),
        bt = D(4674);
      function B(kt, $, _ = 1 / 0) {
        return (0, bt.m)($)
          ? B(
              (A, jt) =>
                (0, s.U)((gt, Jt) => $(A, gt, jt, Jt))((0, x.Xf)(kt(A, jt))),
              _,
            )
          : ("number" == typeof $ && (_ = $),
            (0, C.e)((A, jt) =>
              (function lt(kt, $, _, A, jt, gt, Jt, De) {
                const Ve = [];
                let He = 0,
                  We = 0,
                  Re = !1;
                const wt = () => {
                    Re && !Ve.length && !He && $.complete();
                  },
                  _t = (Pt) => (He < A ? St(Pt) : Ve.push(Pt)),
                  St = (Pt) => {
                    gt && $.next(Pt), He++;
                    let ee = !1;
                    (0, x.Xf)(_(Pt, We++)).subscribe(
                      (0, at.x)(
                        $,
                        (Kt) => {
                          jt?.(Kt), gt ? _t(Kt) : $.next(Kt);
                        },
                        () => {
                          ee = !0;
                        },
                        void 0,
                        () => {
                          if (ee)
                            try {
                              for (He--; Ve.length && He < A; ) {
                                const Kt = Ve.shift();
                                Jt ? (0, p.f)($, Jt, () => St(Kt)) : St(Kt);
                              }
                              wt();
                            } catch (Kt) {
                              $.error(Kt);
                            }
                        },
                      ),
                    );
                  };
                return (
                  kt.subscribe(
                    (0, at.x)($, _t, () => {
                      (Re = !0), wt();
                    }),
                  ),
                  () => {
                    De?.();
                  }
                );
              })(A, jt, kt, _),
            ));
      }
    },
    3093: (ui, Zt, D) => {
      D.d(Zt, { Q: () => p });
      var s = D(7103),
        x = D(9360),
        C = D(8251);
      function p(at, lt = 0) {
        return (0, x.e)((bt, B) => {
          bt.subscribe(
            (0, C.x)(
              B,
              (kt) => (0, s.f)(B, at, () => B.next(kt), lt),
              () => (0, s.f)(B, at, () => B.complete(), lt),
              (kt) => (0, s.f)(B, at, () => B.error(kt), lt),
            ),
          );
        });
      }
    },
    6196: (ui, Zt, D) => {
      D.d(Zt, { x: () => C });
      var s = D(9360),
        x = D(8251);
      function C() {
        return (0, s.e)((p, at) => {
          let lt = null;
          p._refCount++;
          const bt = (0, x.x)(at, void 0, void 0, void 0, () => {
            if (!p || p._refCount <= 0 || 0 < --p._refCount)
              return void (lt = null);
            const B = p._connection,
              kt = lt;
            (lt = null),
              B && (!kt || B === kt) && B.unsubscribe(),
              at.unsubscribe();
          });
          p.subscribe(bt), bt.closed || (lt = p.connect());
        });
      }
    },
    3020: (ui, Zt, D) => {
      D.d(Zt, { B: () => at });
      var s = D(4829),
        x = D(8645),
        C = D(305),
        p = D(9360);
      function at(bt = {}) {
        const {
          connector: B = () => new x.x(),
          resetOnError: kt = !0,
          resetOnComplete: $ = !0,
          resetOnRefCountZero: _ = !0,
        } = bt;
        return (A) => {
          let jt,
            gt,
            Jt,
            De = 0,
            Ve = !1,
            He = !1;
          const We = () => {
              gt?.unsubscribe(), (gt = void 0);
            },
            Re = () => {
              We(), (jt = Jt = void 0), (Ve = He = !1);
            },
            wt = () => {
              const _t = jt;
              Re(), _t?.unsubscribe();
            };
          return (0, p.e)((_t, St) => {
            De++, !He && !Ve && We();
            const Pt = (Jt = Jt ?? B());
            St.add(() => {
              De--, 0 === De && !He && !Ve && (gt = lt(wt, _));
            }),
              Pt.subscribe(St),
              !jt &&
                De > 0 &&
                ((jt = new C.Hp({
                  next: (ee) => Pt.next(ee),
                  error: (ee) => {
                    (He = !0), We(), (gt = lt(Re, kt, ee)), Pt.error(ee);
                  },
                  complete: () => {
                    (Ve = !0), We(), (gt = lt(Re, $)), Pt.complete();
                  },
                })),
                (0, s.Xf)(_t).subscribe(jt));
          })(A);
        };
      }
      function lt(bt, B, ...kt) {
        if (!0 === B) return void bt();
        if (!1 === B) return;
        const $ = new C.Hp({
          next: () => {
            $.unsubscribe(), bt();
          },
        });
        return (0, s.Xf)(B(...kt)).subscribe($);
      }
    },
    7921: (ui, Zt, D) => {
      D.d(Zt, { O: () => p });
      var s = D(5211),
        x = D(9940),
        C = D(9360);
      function p(...at) {
        const lt = (0, x.yG)(at);
        return (0, C.e)((bt, B) => {
          (lt ? (0, s.z)(at, bt, lt) : (0, s.z)(at, bt)).subscribe(B);
        });
      }
    },
    4664: (ui, Zt, D) => {
      D.d(Zt, { w: () => p });
      var s = D(4829),
        x = D(9360),
        C = D(8251);
      function p(at, lt) {
        return (0, x.e)((bt, B) => {
          let kt = null,
            $ = 0,
            _ = !1;
          const A = () => _ && !kt && B.complete();
          bt.subscribe(
            (0, C.x)(
              B,
              (jt) => {
                kt?.unsubscribe();
                let gt = 0;
                const Jt = $++;
                (0, s.Xf)(at(jt, Jt)).subscribe(
                  (kt = (0, C.x)(
                    B,
                    (De) => B.next(lt ? lt(jt, De, Jt, gt++) : De),
                    () => {
                      (kt = null), A();
                    },
                  )),
                );
              },
              () => {
                (_ = !0), A();
              },
            ),
          );
        });
      }
    },
    8180: (ui, Zt, D) => {
      D.d(Zt, { q: () => p });
      var s = D(6232),
        x = D(9360),
        C = D(8251);
      function p(at) {
        return at <= 0
          ? () => s.E
          : (0, x.e)((lt, bt) => {
              let B = 0;
              lt.subscribe(
                (0, C.x)(bt, (kt) => {
                  ++B <= at && (bt.next(kt), at <= B && bt.complete());
                }),
              );
            });
      }
    },
    9773: (ui, Zt, D) => {
      D.d(Zt, { R: () => at });
      var s = D(9360),
        x = D(8251),
        C = D(4829),
        p = D(2420);
      function at(lt) {
        return (0, s.e)((bt, B) => {
          (0, C.Xf)(lt).subscribe((0, x.x)(B, () => B.complete(), p.Z)),
            !B.closed && bt.subscribe(B);
        });
      }
    },
    9397: (ui, Zt, D) => {
      D.d(Zt, { b: () => at });
      var s = D(4674),
        x = D(9360),
        C = D(8251),
        p = D(2737);
      function at(lt, bt, B) {
        const kt =
          (0, s.m)(lt) || bt || B ? { next: lt, error: bt, complete: B } : lt;
        return kt
          ? (0, x.e)(($, _) => {
              var A;
              null === (A = kt.subscribe) || void 0 === A || A.call(kt);
              let jt = !0;
              $.subscribe(
                (0, C.x)(
                  _,
                  (gt) => {
                    var Jt;
                    null === (Jt = kt.next) || void 0 === Jt || Jt.call(kt, gt),
                      _.next(gt);
                  },
                  () => {
                    var gt;
                    (jt = !1),
                      null === (gt = kt.complete) ||
                        void 0 === gt ||
                        gt.call(kt),
                      _.complete();
                  },
                  (gt) => {
                    var Jt;
                    (jt = !1),
                      null === (Jt = kt.error) ||
                        void 0 === Jt ||
                        Jt.call(kt, gt),
                      _.error(gt);
                  },
                  () => {
                    var gt, Jt;
                    jt &&
                      (null === (gt = kt.unsubscribe) ||
                        void 0 === gt ||
                        gt.call(kt)),
                      null === (Jt = kt.finalize) ||
                        void 0 === Jt ||
                        Jt.call(kt);
                  },
                ),
              );
            })
          : p.y;
      }
    },
    1954: (ui, Zt, D) => {
      D.d(Zt, { o: () => at });
      var s = D(7394);
      class x extends s.w0 {
        constructor(bt, B) {
          super();
        }
        schedule(bt, B = 0) {
          return this;
        }
      }
      const C = {
        setInterval(lt, bt, ...B) {
          const { delegate: kt } = C;
          return kt?.setInterval
            ? kt.setInterval(lt, bt, ...B)
            : setInterval(lt, bt, ...B);
        },
        clearInterval(lt) {
          const { delegate: bt } = C;
          return (bt?.clearInterval || clearInterval)(lt);
        },
        delegate: void 0,
      };
      var p = D(9039);
      class at extends x {
        constructor(bt, B) {
          super(bt, B),
            (this.scheduler = bt),
            (this.work = B),
            (this.pending = !1);
        }
        schedule(bt, B = 0) {
          var kt;
          if (this.closed) return this;
          this.state = bt;
          const $ = this.id,
            _ = this.scheduler;
          return (
            null != $ && (this.id = this.recycleAsyncId(_, $, B)),
            (this.pending = !0),
            (this.delay = B),
            (this.id =
              null !== (kt = this.id) && void 0 !== kt
                ? kt
                : this.requestAsyncId(_, this.id, B)),
            this
          );
        }
        requestAsyncId(bt, B, kt = 0) {
          return C.setInterval(bt.flush.bind(bt, this), kt);
        }
        recycleAsyncId(bt, B, kt = 0) {
          if (null != kt && this.delay === kt && !1 === this.pending) return B;
          null != B && C.clearInterval(B);
        }
        execute(bt, B) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const kt = this._execute(bt, B);
          if (kt) return kt;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(bt, B) {
          let $,
            kt = !1;
          try {
            this.work(bt);
          } catch (_) {
            (kt = !0),
              ($ = _ || new Error("Scheduled action threw falsy error"));
          }
          if (kt) return this.unsubscribe(), $;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: bt, scheduler: B } = this,
              { actions: kt } = B;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, p.P)(kt, this),
              null != bt && (this.id = this.recycleAsyncId(B, bt, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    2631: (ui, Zt, D) => {
      D.d(Zt, { v: () => C });
      var s = D(4552);
      class x {
        constructor(at, lt = x.now) {
          (this.schedulerActionCtor = at), (this.now = lt);
        }
        schedule(at, lt = 0, bt) {
          return new this.schedulerActionCtor(this, at).schedule(bt, lt);
        }
      }
      x.now = s.l.now;
      class C extends x {
        constructor(at, lt = x.now) {
          super(at, lt), (this.actions = []), (this._active = !1);
        }
        flush(at) {
          const { actions: lt } = this;
          if (this._active) return void lt.push(at);
          let bt;
          this._active = !0;
          do {
            if ((bt = at.execute(at.state, at.delay))) break;
          } while ((at = lt.shift()));
          if (((this._active = !1), bt)) {
            for (; (at = lt.shift()); ) at.unsubscribe();
            throw bt;
          }
        }
      }
    },
    927: (ui, Zt, D) => {
      D.d(Zt, { Z: () => bt });
      var s = D(1954),
        x = D(7394);
      const C = {
        schedule(kt) {
          let $ = requestAnimationFrame,
            _ = cancelAnimationFrame;
          const { delegate: A } = C;
          A && (($ = A.requestAnimationFrame), (_ = A.cancelAnimationFrame));
          const jt = $((gt) => {
            (_ = void 0), kt(gt);
          });
          return new x.w0(() => _?.(jt));
        },
        requestAnimationFrame(...kt) {
          const { delegate: $ } = C;
          return ($?.requestAnimationFrame || requestAnimationFrame)(...kt);
        },
        cancelAnimationFrame(...kt) {
          const { delegate: $ } = C;
          return ($?.cancelAnimationFrame || cancelAnimationFrame)(...kt);
        },
        delegate: void 0,
      };
      var at = D(2631);
      const bt = new (class lt extends at.v {
        flush($) {
          this._active = !0;
          const _ = this._scheduled;
          this._scheduled = void 0;
          const { actions: A } = this;
          let jt;
          $ = $ || A.shift();
          do {
            if ((jt = $.execute($.state, $.delay))) break;
          } while (($ = A[0]) && $.id === _ && A.shift());
          if (((this._active = !1), jt)) {
            for (; ($ = A[0]) && $.id === _ && A.shift(); ) $.unsubscribe();
            throw jt;
          }
        }
      })(
        class p extends s.o {
          constructor($, _) {
            super($, _), (this.scheduler = $), (this.work = _);
          }
          requestAsyncId($, _, A = 0) {
            return null !== A && A > 0
              ? super.requestAsyncId($, _, A)
              : ($.actions.push(this),
                $._scheduled ||
                  ($._scheduled = C.requestAnimationFrame(() =>
                    $.flush(void 0),
                  )));
          }
          recycleAsyncId($, _, A = 0) {
            var jt;
            if (null != A ? A > 0 : this.delay > 0)
              return super.recycleAsyncId($, _, A);
            const { actions: gt } = $;
            null != _ &&
              (null === (jt = gt[gt.length - 1]) || void 0 === jt
                ? void 0
                : jt.id) !== _ &&
              (C.cancelAnimationFrame(_), ($._scheduled = void 0));
          }
        },
      );
    },
    6321: (ui, Zt, D) => {
      D.d(Zt, { P: () => p, z: () => C });
      var s = D(1954);
      const C = new (D(2631).v)(s.o),
        p = C;
    },
    4552: (ui, Zt, D) => {
      D.d(Zt, { l: () => s });
      const s = { now: () => (s.delegate || Date).now(), delegate: void 0 };
    },
    7599: (ui, Zt, D) => {
      D.d(Zt, { z: () => s });
      const s = {
        setTimeout(x, C, ...p) {
          const { delegate: at } = s;
          return at?.setTimeout
            ? at.setTimeout(x, C, ...p)
            : setTimeout(x, C, ...p);
        },
        clearTimeout(x) {
          const { delegate: C } = s;
          return (C?.clearTimeout || clearTimeout)(x);
        },
        delegate: void 0,
      };
    },
    4971: (ui, Zt, D) => {
      D.d(Zt, { h: () => x });
      const x = (function s() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
    },
    4850: (ui, Zt, D) => {
      D.d(Zt, { L: () => s });
      const s =
        ("function" == typeof Symbol && Symbol.observable) || "@@observable";
    },
    9940: (ui, Zt, D) => {
      D.d(Zt, { _6: () => lt, jO: () => p, yG: () => at });
      var s = D(4674),
        x = D(671);
      function C(bt) {
        return bt[bt.length - 1];
      }
      function p(bt) {
        return (0, s.m)(C(bt)) ? bt.pop() : void 0;
      }
      function at(bt) {
        return (0, x.K)(C(bt)) ? bt.pop() : void 0;
      }
      function lt(bt, B) {
        return "number" == typeof C(bt) ? bt.pop() : B;
      }
    },
    7453: (ui, Zt, D) => {
      D.d(Zt, { D: () => at });
      const { isArray: s } = Array,
        { getPrototypeOf: x, prototype: C, keys: p } = Object;
      function at(bt) {
        if (1 === bt.length) {
          const B = bt[0];
          if (s(B)) return { args: B, keys: null };
          if (
            (function lt(bt) {
              return bt && "object" == typeof bt && x(bt) === C;
            })(B)
          ) {
            const kt = p(B);
            return { args: kt.map(($) => B[$]), keys: kt };
          }
        }
        return { args: bt, keys: null };
      }
    },
    9039: (ui, Zt, D) => {
      function s(x, C) {
        if (x) {
          const p = x.indexOf(C);
          0 <= p && x.splice(p, 1);
        }
      }
      D.d(Zt, { P: () => s });
    },
    2306: (ui, Zt, D) => {
      function s(x) {
        const p = x((at) => {
          Error.call(at), (at.stack = new Error().stack);
        });
        return (
          (p.prototype = Object.create(Error.prototype)),
          (p.prototype.constructor = p),
          p
        );
      }
      D.d(Zt, { d: () => s });
    },
    2714: (ui, Zt, D) => {
      function s(x, C) {
        return x.reduce((p, at, lt) => ((p[at] = C[lt]), p), {});
      }
      D.d(Zt, { n: () => s });
    },
    1441: (ui, Zt, D) => {
      D.d(Zt, { O: () => p, x: () => C });
      var s = D(2653);
      let x = null;
      function C(at) {
        if (s.config.useDeprecatedSynchronousErrorHandling) {
          const lt = !x;
          if ((lt && (x = { errorThrown: !1, error: null }), at(), lt)) {
            const { errorThrown: bt, error: B } = x;
            if (((x = null), bt)) throw B;
          }
        } else at();
      }
      function p(at) {
        s.config.useDeprecatedSynchronousErrorHandling &&
          x &&
          ((x.errorThrown = !0), (x.error = at));
      }
    },
    7103: (ui, Zt, D) => {
      function s(x, C, p, at = 0, lt = !1) {
        const bt = C.schedule(function () {
          p(), lt ? x.add(this.schedule(null, at)) : this.unsubscribe();
        }, at);
        if ((x.add(bt), !lt)) return bt;
      }
      D.d(Zt, { f: () => s });
    },
    2737: (ui, Zt, D) => {
      function s(x) {
        return x;
      }
      D.d(Zt, { y: () => s });
    },
    4266: (ui, Zt, D) => {
      D.d(Zt, { z: () => s });
      const s = (x) =>
        x && "number" == typeof x.length && "function" != typeof x;
    },
    5726: (ui, Zt, D) => {
      D.d(Zt, { D: () => x });
      var s = D(4674);
      function x(C) {
        return Symbol.asyncIterator && (0, s.m)(C?.[Symbol.asyncIterator]);
      }
    },
    4674: (ui, Zt, D) => {
      function s(x) {
        return "function" == typeof x;
      }
      D.d(Zt, { m: () => s });
    },
    8382: (ui, Zt, D) => {
      D.d(Zt, { c: () => C });
      var s = D(4850),
        x = D(4674);
      function C(p) {
        return (0, x.m)(p[s.L]);
      }
    },
    3664: (ui, Zt, D) => {
      D.d(Zt, { T: () => C });
      var s = D(4971),
        x = D(4674);
      function C(p) {
        return (0, x.m)(p?.[s.h]);
      }
    },
    2664: (ui, Zt, D) => {
      D.d(Zt, { b: () => C });
      var s = D(5592),
        x = D(4674);
      function C(p) {
        return (
          !!p &&
          (p instanceof s.y || ((0, x.m)(p.lift) && (0, x.m)(p.subscribe)))
        );
      }
    },
    4026: (ui, Zt, D) => {
      D.d(Zt, { t: () => x });
      var s = D(4674);
      function x(C) {
        return (0, s.m)(C?.then);
      }
    },
    541: (ui, Zt, D) => {
      D.d(Zt, { L: () => p, Q: () => C });
      var s = D(7582),
        x = D(4674);
      function C(at) {
        return (0, s.FC)(this, arguments, function* () {
          const bt = at.getReader();
          try {
            for (;;) {
              const { value: B, done: kt } = yield (0, s.qq)(bt.read());
              if (kt) return yield (0, s.qq)(void 0);
              yield yield (0, s.qq)(B);
            }
          } finally {
            bt.releaseLock();
          }
        });
      }
      function p(at) {
        return (0, x.m)(at?.getReader);
      }
    },
    671: (ui, Zt, D) => {
      D.d(Zt, { K: () => x });
      var s = D(4674);
      function x(C) {
        return C && (0, s.m)(C.schedule);
      }
    },
    9360: (ui, Zt, D) => {
      D.d(Zt, { A: () => x, e: () => C });
      var s = D(4674);
      function x(p) {
        return (0, s.m)(p?.lift);
      }
      function C(p) {
        return (at) => {
          if (x(at))
            return at.lift(function (lt) {
              try {
                return p(lt, this);
              } catch (bt) {
                this.error(bt);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
    },
    7400: (ui, Zt, D) => {
      D.d(Zt, { Z: () => p });
      var s = D(7398);
      const { isArray: x } = Array;
      function p(at) {
        return (0, s.U)((lt) =>
          (function C(at, lt) {
            return x(lt) ? at(...lt) : at(lt);
          })(at, lt),
        );
      }
    },
    2420: (ui, Zt, D) => {
      function s() {}
      D.d(Zt, { Z: () => s });
    },
    8407: (ui, Zt, D) => {
      D.d(Zt, { U: () => C, z: () => x });
      var s = D(2737);
      function x(...p) {
        return C(p);
      }
      function C(p) {
        return 0 === p.length
          ? s.y
          : 1 === p.length
            ? p[0]
            : function (lt) {
                return p.reduce((bt, B) => B(bt), lt);
              };
      }
    },
    3894: (ui, Zt, D) => {
      D.d(Zt, { h: () => C });
      var s = D(2653),
        x = D(7599);
      function C(p) {
        x.z.setTimeout(() => {
          const { onUnhandledError: at } = s.config;
          if (!at) throw p;
          at(p);
        });
      }
    },
    9853: (ui, Zt, D) => {
      function s(x) {
        return new TypeError(
          `You provided ${null !== x && "object" == typeof x ? "an invalid object" : `'${x}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`,
        );
      }
      D.d(Zt, { z: () => s });
    },
    6825: (ui, Zt, D) => {
      D.d(Zt, {
        F4: () => $,
        IO: () => Jt,
        LC: () => x,
        SB: () => kt,
        X$: () => p,
        ZE: () => He,
        ZN: () => Ve,
        _j: () => s,
        eR: () => _,
        jt: () => at,
        k1: () => We,
        l3: () => C,
        oB: () => B,
        pV: () => jt,
        ru: () => lt,
        vP: () => bt,
      });
      class s {}
      class x {}
      const C = "*";
      function p(Re, wt) {
        return { type: 7, name: Re, definitions: wt, options: {} };
      }
      function at(Re, wt = null) {
        return { type: 4, styles: wt, timings: Re };
      }
      function lt(Re, wt = null) {
        return { type: 3, steps: Re, options: wt };
      }
      function bt(Re, wt = null) {
        return { type: 2, steps: Re, options: wt };
      }
      function B(Re) {
        return { type: 6, styles: Re, offset: null };
      }
      function kt(Re, wt, _t) {
        return { type: 0, name: Re, styles: wt, options: _t };
      }
      function $(Re) {
        return { type: 5, steps: Re };
      }
      function _(Re, wt, _t = null) {
        return { type: 1, expr: Re, animation: wt, options: _t };
      }
      function jt(Re = null) {
        return { type: 9, options: Re };
      }
      function Jt(Re, wt, _t = null) {
        return { type: 11, selector: Re, animation: wt, options: _t };
      }
      class Ve {
        constructor(wt = 0, _t = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = wt + _t);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((wt) => wt()),
            (this._onDoneFns = []));
        }
        onStart(wt) {
          this._originalOnStartFns.push(wt), this._onStartFns.push(wt);
        }
        onDone(wt) {
          this._originalOnDoneFns.push(wt), this._onDoneFns.push(wt);
        }
        onDestroy(wt) {
          this._onDestroyFns.push(wt);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          queueMicrotask(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((wt) => wt()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((wt) => wt()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(wt) {
          this._position = this.totalTime ? wt * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(wt) {
          const _t = "start" == wt ? this._onStartFns : this._onDoneFns;
          _t.forEach((St) => St()), (_t.length = 0);
        }
      }
      class He {
        constructor(wt) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = wt);
          let _t = 0,
            St = 0,
            Pt = 0;
          const ee = this.players.length;
          0 == ee
            ? queueMicrotask(() => this._onFinish())
            : this.players.forEach((Kt) => {
                Kt.onDone(() => {
                  ++_t == ee && this._onFinish();
                }),
                  Kt.onDestroy(() => {
                    ++St == ee && this._onDestroy();
                  }),
                  Kt.onStart(() => {
                    ++Pt == ee && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (Kt, ze) => Math.max(Kt, ze.totalTime),
              0,
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((wt) => wt()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((wt) => wt.init());
        }
        onStart(wt) {
          this._onStartFns.push(wt);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((wt) => wt()),
            (this._onStartFns = []));
        }
        onDone(wt) {
          this._onDoneFns.push(wt);
        }
        onDestroy(wt) {
          this._onDestroyFns.push(wt);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((wt) => wt.play());
        }
        pause() {
          this.players.forEach((wt) => wt.pause());
        }
        restart() {
          this.players.forEach((wt) => wt.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((wt) => wt.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((wt) => wt.destroy()),
            this._onDestroyFns.forEach((wt) => wt()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((wt) => wt.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(wt) {
          const _t = wt * this.totalTime;
          this.players.forEach((St) => {
            const Pt = St.totalTime ? Math.min(1, _t / St.totalTime) : 1;
            St.setPosition(Pt);
          });
        }
        getPosition() {
          const wt = this.players.reduce(
            (_t, St) => (null === _t || St.totalTime > _t.totalTime ? St : _t),
            null,
          );
          return null != wt ? wt.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((wt) => {
            wt.beforeDestroy && wt.beforeDestroy();
          });
        }
        triggerCallback(wt) {
          const _t = "start" == wt ? this._onStartFns : this._onDoneFns;
          _t.forEach((St) => St()), (_t.length = 0);
        }
      }
      const We = "!";
    },
    7849: (ui, Zt, D) => {
      D.d(Zt, {
        rt: () => ue,
        s1: () => re,
        $s: () => Ft,
        Em: () => Le,
        tE: () => yi,
        qV: () => rt,
        qm: () => ct,
        ic: () => ii,
        Kd: () => ye,
        Zf: () => Si,
        X6: () => H,
        yG: () => Nt,
        iD: () => Vi,
      });
      var s = D(6814),
        x = D(5879),
        C = D(2831),
        p = D(8645),
        at = D(7394),
        lt = D(5619),
        bt = D(2096),
        B = D(6028),
        kt = D(9397),
        $ = D(3620),
        _ = D(2181),
        A = D(7398),
        jt = D(8180);
      function gt(Wt) {
        return (0, _.h)((le, It) => Wt <= It);
      }
      var Jt = D(3997),
        De = D(9773),
        Ve = D(2495),
        He = D(7131),
        We = D(2572),
        Re = D(5211),
        wt = D(5592),
        _t = D(7921);
      const Pt = new Set();
      let ee,
        Kt = (() => {
          class Wt {
            constructor(It, Yt) {
              (this._platform = It),
                (this._nonce = Yt),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : mi);
            }
            matchMedia(It) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function ze(Wt, le) {
                    if (!Pt.has(Wt))
                      try {
                        ee ||
                          ((ee = document.createElement("style")),
                          le && (ee.nonce = le),
                          ee.setAttribute("type", "text/css"),
                          document.head.appendChild(ee)),
                          ee.sheet &&
                            (ee.sheet.insertRule(`@media ${Wt} {body{ }}`, 0),
                            Pt.add(Wt));
                      } catch (It) {
                        console.error(It);
                      }
                  })(It, this._nonce),
                this._matchMedia(It)
              );
            }
            static #t = (this.ɵfac = function (Yt) {
              return new (Yt || Wt)(x.LFG(C.t4), x.LFG(x.Ojb, 8));
            });
            static #e = (this.ɵprov = x.Yz7({
              token: Wt,
              factory: Wt.ɵfac,
              providedIn: "root",
            }));
          }
          return Wt;
        })();
      function mi(Wt) {
        return {
          matches: "all" === Wt || "" === Wt,
          media: Wt,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let ie = (() => {
        class Wt {
          constructor(It, Yt) {
            (this._mediaMatcher = It),
              (this._zone = Yt),
              (this._queries = new Map()),
              (this._destroySubject = new p.x());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(It) {
            return vi((0, Ve.Eq)(It)).some(
              (Ae) => this._registerQuery(Ae).mql.matches,
            );
          }
          observe(It) {
            const Ae = vi((0, Ve.Eq)(It)).map(
              (pe) => this._registerQuery(pe).observable,
            );
            let oi = (0, We.a)(Ae);
            return (
              (oi = (0, Re.z)(
                oi.pipe((0, jt.q)(1)),
                oi.pipe(gt(1), (0, $.b)(0)),
              )),
              oi.pipe(
                (0, A.U)((pe) => {
                  const ne = { matches: !1, breakpoints: {} };
                  return (
                    pe.forEach(({ matches: tt, query: me }) => {
                      (ne.matches = ne.matches || tt),
                        (ne.breakpoints[me] = tt);
                    }),
                    ne
                  );
                }),
              )
            );
          }
          _registerQuery(It) {
            if (this._queries.has(It)) return this._queries.get(It);
            const Yt = this._mediaMatcher.matchMedia(It),
              oi = {
                observable: new wt.y((pe) => {
                  const ne = (tt) => this._zone.run(() => pe.next(tt));
                  return (
                    Yt.addListener(ne),
                    () => {
                      Yt.removeListener(ne);
                    }
                  );
                }).pipe(
                  (0, _t.O)(Yt),
                  (0, A.U)(({ matches: pe }) => ({ query: It, matches: pe })),
                  (0, De.R)(this._destroySubject),
                ),
                mql: Yt,
              };
            return this._queries.set(It, oi), oi;
          }
          static #t = (this.ɵfac = function (Yt) {
            return new (Yt || Wt)(x.LFG(Kt), x.LFG(x.R0b));
          });
          static #e = (this.ɵprov = x.Yz7({
            token: Wt,
            factory: Wt.ɵfac,
            providedIn: "root",
          }));
        }
        return Wt;
      })();
      function vi(Wt) {
        return Wt.map((le) => le.split(","))
          .reduce((le, It) => le.concat(It))
          .map((le) => le.trim());
      }
      const hi = " ";
      function Si(Wt, le, It) {
        const Yt = qi(Wt, le);
        Yt.some((Ae) => Ae.trim() == It.trim()) ||
          (Yt.push(It.trim()), Wt.setAttribute(le, Yt.join(hi)));
      }
      function Vi(Wt, le, It) {
        const Ae = qi(Wt, le).filter((oi) => oi != It.trim());
        Ae.length ? Wt.setAttribute(le, Ae.join(hi)) : Wt.removeAttribute(le);
      }
      function qi(Wt, le) {
        return (Wt.getAttribute(le) || "").match(/\S+/g) || [];
      }
      const Fe = "cdk-describedby-message",
        xe = "cdk-describedby-host";
      let Ue = 0,
        Ft = (() => {
          class Wt {
            constructor(It, Yt) {
              (this._platform = Yt),
                (this._messageRegistry = new Map()),
                (this._messagesContainer = null),
                (this._id = "" + Ue++),
                (this._document = It),
                (this._id = (0, x.f3M)(x.AFp) + "-" + Ue++);
            }
            describe(It, Yt, Ae) {
              if (!this._canBeDescribed(It, Yt)) return;
              const oi = Mt(Yt, Ae);
              "string" != typeof Yt
                ? (we(Yt, this._id),
                  this._messageRegistry.set(oi, {
                    messageElement: Yt,
                    referenceCount: 0,
                  }))
                : this._messageRegistry.has(oi) ||
                  this._createMessageElement(Yt, Ae),
                this._isElementDescribedByMessage(It, oi) ||
                  this._addMessageReference(It, oi);
            }
            removeDescription(It, Yt, Ae) {
              if (!Yt || !this._isElementNode(It)) return;
              const oi = Mt(Yt, Ae);
              if (
                (this._isElementDescribedByMessage(It, oi) &&
                  this._removeMessageReference(It, oi),
                "string" == typeof Yt)
              ) {
                const pe = this._messageRegistry.get(oi);
                pe && 0 === pe.referenceCount && this._deleteMessageElement(oi);
              }
              0 === this._messagesContainer?.childNodes.length &&
                (this._messagesContainer.remove(),
                (this._messagesContainer = null));
            }
            ngOnDestroy() {
              const It = this._document.querySelectorAll(
                `[${xe}="${this._id}"]`,
              );
              for (let Yt = 0; Yt < It.length; Yt++)
                this._removeCdkDescribedByReferenceIds(It[Yt]),
                  It[Yt].removeAttribute(xe);
              this._messagesContainer?.remove(),
                (this._messagesContainer = null),
                this._messageRegistry.clear();
            }
            _createMessageElement(It, Yt) {
              const Ae = this._document.createElement("div");
              we(Ae, this._id),
                (Ae.textContent = It),
                Yt && Ae.setAttribute("role", Yt),
                this._createMessagesContainer(),
                this._messagesContainer.appendChild(Ae),
                this._messageRegistry.set(Mt(It, Yt), {
                  messageElement: Ae,
                  referenceCount: 0,
                });
            }
            _deleteMessageElement(It) {
              this._messageRegistry.get(It)?.messageElement?.remove(),
                this._messageRegistry.delete(It);
            }
            _createMessagesContainer() {
              if (this._messagesContainer) return;
              const It = "cdk-describedby-message-container",
                Yt = this._document.querySelectorAll(
                  `.${It}[platform="server"]`,
                );
              for (let oi = 0; oi < Yt.length; oi++) Yt[oi].remove();
              const Ae = this._document.createElement("div");
              (Ae.style.visibility = "hidden"),
                Ae.classList.add(It),
                Ae.classList.add("cdk-visually-hidden"),
                this._platform &&
                  !this._platform.isBrowser &&
                  Ae.setAttribute("platform", "server"),
                this._document.body.appendChild(Ae),
                (this._messagesContainer = Ae);
            }
            _removeCdkDescribedByReferenceIds(It) {
              const Yt = qi(It, "aria-describedby").filter(
                (Ae) => 0 != Ae.indexOf(Fe),
              );
              It.setAttribute("aria-describedby", Yt.join(" "));
            }
            _addMessageReference(It, Yt) {
              const Ae = this._messageRegistry.get(Yt);
              Si(It, "aria-describedby", Ae.messageElement.id),
                It.setAttribute(xe, this._id),
                Ae.referenceCount++;
            }
            _removeMessageReference(It, Yt) {
              const Ae = this._messageRegistry.get(Yt);
              Ae.referenceCount--,
                Vi(It, "aria-describedby", Ae.messageElement.id),
                It.removeAttribute(xe);
            }
            _isElementDescribedByMessage(It, Yt) {
              const Ae = qi(It, "aria-describedby"),
                oi = this._messageRegistry.get(Yt),
                pe = oi && oi.messageElement.id;
              return !!pe && -1 != Ae.indexOf(pe);
            }
            _canBeDescribed(It, Yt) {
              if (!this._isElementNode(It)) return !1;
              if (Yt && "object" == typeof Yt) return !0;
              const Ae = null == Yt ? "" : `${Yt}`.trim(),
                oi = It.getAttribute("aria-label");
              return !(!Ae || (oi && oi.trim() === Ae));
            }
            _isElementNode(It) {
              return It.nodeType === this._document.ELEMENT_NODE;
            }
            static #t = (this.ɵfac = function (Yt) {
              return new (Yt || Wt)(x.LFG(s.K0), x.LFG(C.t4));
            });
            static #e = (this.ɵprov = x.Yz7({
              token: Wt,
              factory: Wt.ɵfac,
              providedIn: "root",
            }));
          }
          return Wt;
        })();
      function Mt(Wt, le) {
        return "string" == typeof Wt ? `${le || ""}/${Wt}` : Wt;
      }
      function we(Wt, le) {
        Wt.id || (Wt.id = `${Fe}-${le}-${Ue++}`);
      }
      class Vt {
        constructor(le) {
          (this._items = le),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new p.x()),
            (this._typeaheadSubscription = at.w0.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = (It) => It.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new p.x()),
            (this.change = new p.x()),
            le instanceof x.n_E &&
              (this._itemChangesSubscription = le.changes.subscribe((It) => {
                if (this._activeItem) {
                  const Ae = It.toArray().indexOf(this._activeItem);
                  Ae > -1 &&
                    Ae !== this._activeItemIndex &&
                    (this._activeItemIndex = Ae);
                }
              }));
        }
        skipPredicate(le) {
          return (this._skipPredicateFn = le), this;
        }
        withWrap(le = !0) {
          return (this._wrap = le), this;
        }
        withVerticalOrientation(le = !0) {
          return (this._vertical = le), this;
        }
        withHorizontalOrientation(le) {
          return (this._horizontal = le), this;
        }
        withAllowedModifierKeys(le) {
          return (this._allowedModifierKeys = le), this;
        }
        withTypeAhead(le = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, kt.b)((It) => this._pressedLetters.push(It)),
                (0, $.b)(le),
                (0, _.h)(() => this._pressedLetters.length > 0),
                (0, A.U)(() => this._pressedLetters.join("")),
              )
              .subscribe((It) => {
                const Yt = this._getItemsArray();
                for (let Ae = 1; Ae < Yt.length + 1; Ae++) {
                  const oi = (this._activeItemIndex + Ae) % Yt.length,
                    pe = Yt[oi];
                  if (
                    !this._skipPredicateFn(pe) &&
                    0 === pe.getLabel().toUpperCase().trim().indexOf(It)
                  ) {
                    this.setActiveItem(oi);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(le = !0) {
          return (this._homeAndEnd = le), this;
        }
        withPageUpDown(le = !0, It = 10) {
          return (this._pageUpAndDown = { enabled: le, delta: It }), this;
        }
        setActiveItem(le) {
          const It = this._activeItem;
          this.updateActiveItem(le),
            this._activeItem !== It && this.change.next(this._activeItemIndex);
        }
        onKeydown(le) {
          const It = le.keyCode,
            Ae = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (oi) => !le[oi] || this._allowedModifierKeys.indexOf(oi) > -1,
            );
          switch (It) {
            case B.Mf:
              return void this.tabOut.next();
            case B.JH:
              if (this._vertical && Ae) {
                this.setNextItemActive();
                break;
              }
              return;
            case B.LH:
              if (this._vertical && Ae) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case B.SV:
              if (this._horizontal && Ae) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case B.oh:
              if (this._horizontal && Ae) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case B.Sd:
              if (this._homeAndEnd && Ae) {
                this.setFirstItemActive();
                break;
              }
              return;
            case B.uR:
              if (this._homeAndEnd && Ae) {
                this.setLastItemActive();
                break;
              }
              return;
            case B.Ku:
              if (this._pageUpAndDown.enabled && Ae) {
                const oi = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex(oi > 0 ? oi : 0, 1);
                break;
              }
              return;
            case B.VM:
              if (this._pageUpAndDown.enabled && Ae) {
                const oi = this._activeItemIndex + this._pageUpAndDown.delta,
                  pe = this._getItemsArray().length;
                this._setActiveItemByIndex(oi < pe ? oi : pe - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (Ae || (0, B.Vb)(le, "shiftKey")) &&
                (le.key && 1 === le.key.length
                  ? this._letterKeyStream.next(le.key.toLocaleUpperCase())
                  : ((It >= B.A && It <= B.Z) || (It >= B.xE && It <= B.aO)) &&
                    this._letterKeyStream.next(String.fromCharCode(It)))
              );
          }
          (this._pressedLetters = []), le.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(le) {
          const It = this._getItemsArray(),
            Yt = "number" == typeof le ? le : It.indexOf(le);
          (this._activeItem = It[Yt] ?? null), (this._activeItemIndex = Yt);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(le) {
          this._wrap
            ? this._setActiveInWrapMode(le)
            : this._setActiveInDefaultMode(le);
        }
        _setActiveInWrapMode(le) {
          const It = this._getItemsArray();
          for (let Yt = 1; Yt <= It.length; Yt++) {
            const Ae =
              (this._activeItemIndex + le * Yt + It.length) % It.length;
            if (!this._skipPredicateFn(It[Ae]))
              return void this.setActiveItem(Ae);
          }
        }
        _setActiveInDefaultMode(le) {
          this._setActiveItemByIndex(this._activeItemIndex + le, le);
        }
        _setActiveItemByIndex(le, It) {
          const Yt = this._getItemsArray();
          if (Yt[le]) {
            for (; this._skipPredicateFn(Yt[le]); ) if (!Yt[(le += It)]) return;
            this.setActiveItem(le);
          }
        }
        _getItemsArray() {
          return this._items instanceof x.n_E
            ? this._items.toArray()
            : this._items;
        }
      }
      class re extends Vt {
        setActiveItem(le) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(le),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class Le extends Vt {
        constructor() {
          super(...arguments), (this._origin = "program");
        }
        setFocusOrigin(le) {
          return (this._origin = le), this;
        }
        setActiveItem(le) {
          super.setActiveItem(le),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let ii = (() => {
        class Wt {
          constructor(It) {
            this._platform = It;
          }
          isDisabled(It) {
            return It.hasAttribute("disabled");
          }
          isVisible(It) {
            return (
              (function fi(Wt) {
                return !!(
                  Wt.offsetWidth ||
                  Wt.offsetHeight ||
                  ("function" == typeof Wt.getClientRects &&
                    Wt.getClientRects().length)
                );
              })(It) && "visible" === getComputedStyle(It).visibility
            );
          }
          isTabbable(It) {
            if (!this._platform.isBrowser) return !1;
            const Yt = (function Mi(Wt) {
              try {
                return Wt.frameElement;
              } catch {
                return null;
              }
            })(
              (function ot(Wt) {
                return (
                  (Wt.ownerDocument && Wt.ownerDocument.defaultView) || window
                );
              })(It),
            );
            if (Yt && (-1 === Xi(Yt) || !this.isVisible(Yt))) return !1;
            let Ae = It.nodeName.toLowerCase(),
              oi = Xi(It);
            return It.hasAttribute("contenteditable")
              ? -1 !== oi
              : !(
                  "iframe" === Ae ||
                  "object" === Ae ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function _i(Wt) {
                      let le = Wt.nodeName.toLowerCase(),
                        It = "input" === le && Wt.type;
                      return (
                        "text" === It ||
                        "password" === It ||
                        "select" === le ||
                        "textarea" === le
                      );
                    })(It))
                ) &&
                  ("audio" === Ae
                    ? !!It.hasAttribute("controls") && -1 !== oi
                    : "video" === Ae
                      ? -1 !== oi &&
                        (null !== oi ||
                          this._platform.FIREFOX ||
                          It.hasAttribute("controls"))
                      : It.tabIndex >= 0);
          }
          isFocusable(It, Yt) {
            return (
              (function de(Wt) {
                return (
                  !(function te(Wt) {
                    return (
                      (function Ne(Wt) {
                        return "input" == Wt.nodeName.toLowerCase();
                      })(Wt) && "hidden" == Wt.type
                    );
                  })(Wt) &&
                  ((function ri(Wt) {
                    let le = Wt.nodeName.toLowerCase();
                    return (
                      "input" === le ||
                      "select" === le ||
                      "button" === le ||
                      "textarea" === le
                    );
                  })(Wt) ||
                    (function Be(Wt) {
                      return (
                        (function Ri(Wt) {
                          return "a" == Wt.nodeName.toLowerCase();
                        })(Wt) && Wt.hasAttribute("href")
                      );
                    })(Wt) ||
                    Wt.hasAttribute("contenteditable") ||
                    gi(Wt))
                );
              })(It) &&
              !this.isDisabled(It) &&
              (Yt?.ignoreVisibility || this.isVisible(It))
            );
          }
          static #t = (this.ɵfac = function (Yt) {
            return new (Yt || Wt)(x.LFG(C.t4));
          });
          static #e = (this.ɵprov = x.Yz7({
            token: Wt,
            factory: Wt.ɵfac,
            providedIn: "root",
          }));
        }
        return Wt;
      })();
      function gi(Wt) {
        if (!Wt.hasAttribute("tabindex") || void 0 === Wt.tabIndex) return !1;
        let le = Wt.getAttribute("tabindex");
        return !(!le || isNaN(parseInt(le, 10)));
      }
      function Xi(Wt) {
        if (!gi(Wt)) return null;
        const le = parseInt(Wt.getAttribute("tabindex") || "", 10);
        return isNaN(le) ? -1 : le;
      }
      class Z {
        get enabled() {
          return this._enabled;
        }
        set enabled(le) {
          (this._enabled = le),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(le, this._startAnchor),
              this._toggleAnchorTabIndex(le, this._endAnchor));
        }
        constructor(le, It, Yt, Ae, oi = !1) {
          (this._element = le),
            (this._checker = It),
            (this._ngZone = Yt),
            (this._document = Ae),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            oi || this.attachAnchors();
        }
        destroy() {
          const le = this._startAnchor,
            It = this._endAnchor;
          le &&
            (le.removeEventListener("focus", this.startAnchorListener),
            le.remove()),
            It &&
              (It.removeEventListener("focus", this.endAnchorListener),
              It.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener,
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener,
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element,
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling,
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(le) {
          return new Promise((It) => {
            this._executeOnStable(() => It(this.focusInitialElement(le)));
          });
        }
        focusFirstTabbableElementWhenReady(le) {
          return new Promise((It) => {
            this._executeOnStable(() => It(this.focusFirstTabbableElement(le)));
          });
        }
        focusLastTabbableElementWhenReady(le) {
          return new Promise((It) => {
            this._executeOnStable(() => It(this.focusLastTabbableElement(le)));
          });
        }
        _getRegionBoundary(le) {
          const It = this._element.querySelectorAll(
            `[cdk-focus-region-${le}], [cdkFocusRegion${le}], [cdk-focus-${le}]`,
          );
          return "start" == le
            ? It.length
              ? It[0]
              : this._getFirstTabbableElement(this._element)
            : It.length
              ? It[It.length - 1]
              : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(le) {
          const It = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]",
          );
          if (It) {
            if (!this._checker.isFocusable(It)) {
              const Yt = this._getFirstTabbableElement(It);
              return Yt?.focus(le), !!Yt;
            }
            return It.focus(le), !0;
          }
          return this.focusFirstTabbableElement(le);
        }
        focusFirstTabbableElement(le) {
          const It = this._getRegionBoundary("start");
          return It && It.focus(le), !!It;
        }
        focusLastTabbableElement(le) {
          const It = this._getRegionBoundary("end");
          return It && It.focus(le), !!It;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(le) {
          if (this._checker.isFocusable(le) && this._checker.isTabbable(le))
            return le;
          const It = le.children;
          for (let Yt = 0; Yt < It.length; Yt++) {
            const Ae =
              It[Yt].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(It[Yt])
                : null;
            if (Ae) return Ae;
          }
          return null;
        }
        _getLastTabbableElement(le) {
          if (this._checker.isFocusable(le) && this._checker.isTabbable(le))
            return le;
          const It = le.children;
          for (let Yt = It.length - 1; Yt >= 0; Yt--) {
            const Ae =
              It[Yt].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(It[Yt])
                : null;
            if (Ae) return Ae;
          }
          return null;
        }
        _createAnchor() {
          const le = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, le),
            le.classList.add("cdk-visually-hidden"),
            le.classList.add("cdk-focus-trap-anchor"),
            le.setAttribute("aria-hidden", "true"),
            le
          );
        }
        _toggleAnchorTabIndex(le, It) {
          le
            ? It.setAttribute("tabindex", "0")
            : It.removeAttribute("tabindex");
        }
        toggleAnchors(le) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(le, this._startAnchor),
            this._toggleAnchorTabIndex(le, this._endAnchor));
        }
        _executeOnStable(le) {
          this._ngZone.isStable
            ? le()
            : this._ngZone.onStable.pipe((0, jt.q)(1)).subscribe(le);
        }
      }
      let rt = (() => {
        class Wt {
          constructor(It, Yt, Ae) {
            (this._checker = It), (this._ngZone = Yt), (this._document = Ae);
          }
          create(It, Yt = !1) {
            return new Z(It, this._checker, this._ngZone, this._document, Yt);
          }
          static #t = (this.ɵfac = function (Yt) {
            return new (Yt || Wt)(x.LFG(ii), x.LFG(x.R0b), x.LFG(s.K0));
          });
          static #e = (this.ɵprov = x.Yz7({
            token: Wt,
            factory: Wt.ɵfac,
            providedIn: "root",
          }));
        }
        return Wt;
      })();
      function H(Wt) {
        return 0 === Wt.buttons || 0 === Wt.detail;
      }
      function Nt(Wt) {
        const le =
          (Wt.touches && Wt.touches[0]) ||
          (Wt.changedTouches && Wt.changedTouches[0]);
        return !(
          !le ||
          -1 !== le.identifier ||
          (null != le.radiusX && 1 !== le.radiusX) ||
          (null != le.radiusY && 1 !== le.radiusY)
        );
      }
      const X = new x.OlP("cdk-input-modality-detector-options"),
        se = { ignoreKeys: [B.zL, B.jx, B.b2, B.MW, B.JU] },
        Ut = (0, C.i$)({ passive: !0, capture: !0 });
      let ve = (() => {
        class Wt {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(It, Yt, Ae, oi) {
            (this._platform = It),
              (this._mostRecentTarget = null),
              (this._modality = new lt.X(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (pe) => {
                this._options?.ignoreKeys?.some((ne) => ne === pe.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = (0, C.sA)(pe)));
              }),
              (this._onMousedown = (pe) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(H(pe) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = (0, C.sA)(pe)));
              }),
              (this._onTouchstart = (pe) => {
                Nt(pe)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = (0, C.sA)(pe)));
              }),
              (this._options = { ...se, ...oi }),
              (this.modalityDetected = this._modality.pipe(gt(1))),
              (this.modalityChanged = this.modalityDetected.pipe((0, Jt.x)())),
              It.isBrowser &&
                Yt.runOutsideAngular(() => {
                  Ae.addEventListener("keydown", this._onKeydown, Ut),
                    Ae.addEventListener("mousedown", this._onMousedown, Ut),
                    Ae.addEventListener("touchstart", this._onTouchstart, Ut);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, Ut),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  Ut,
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  Ut,
                ));
          }
          static #t = (this.ɵfac = function (Yt) {
            return new (Yt || Wt)(
              x.LFG(C.t4),
              x.LFG(x.R0b),
              x.LFG(s.K0),
              x.LFG(X, 8),
            );
          });
          static #e = (this.ɵprov = x.Yz7({
            token: Wt,
            factory: Wt.ɵfac,
            providedIn: "root",
          }));
        }
        return Wt;
      })();
      const qe = new x.OlP("liveAnnouncerElement", {
          providedIn: "root",
          factory: function ki() {
            return null;
          },
        }),
        Xt = new x.OlP("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let ae = 0,
        ye = (() => {
          class Wt {
            constructor(It, Yt, Ae, oi) {
              (this._ngZone = Yt),
                (this._defaultOptions = oi),
                (this._document = Ae),
                (this._liveElement = It || this._createLiveElement());
            }
            announce(It, ...Yt) {
              const Ae = this._defaultOptions;
              let oi, pe;
              return (
                1 === Yt.length && "number" == typeof Yt[0]
                  ? (pe = Yt[0])
                  : ([oi, pe] = Yt),
                this.clear(),
                clearTimeout(this._previousTimeout),
                oi || (oi = Ae && Ae.politeness ? Ae.politeness : "polite"),
                null == pe && Ae && (pe = Ae.duration),
                this._liveElement.setAttribute("aria-live", oi),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        (ne) => (this._currentResolve = ne),
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = It),
                        "number" == typeof pe &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            pe,
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  ),
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = "");
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const It = "cdk-live-announcer-element",
                Yt = this._document.getElementsByClassName(It),
                Ae = this._document.createElement("div");
              for (let oi = 0; oi < Yt.length; oi++) Yt[oi].remove();
              return (
                Ae.classList.add(It),
                Ae.classList.add("cdk-visually-hidden"),
                Ae.setAttribute("aria-atomic", "true"),
                Ae.setAttribute("aria-live", "polite"),
                (Ae.id = "cdk-live-announcer-" + ae++),
                this._document.body.appendChild(Ae),
                Ae
              );
            }
            _exposeAnnouncerToModals(It) {
              const Yt = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]',
              );
              for (let Ae = 0; Ae < Yt.length; Ae++) {
                const oi = Yt[Ae],
                  pe = oi.getAttribute("aria-owns");
                pe
                  ? -1 === pe.indexOf(It) &&
                    oi.setAttribute("aria-owns", pe + " " + It)
                  : oi.setAttribute("aria-owns", It);
              }
            }
            static #t = (this.ɵfac = function (Yt) {
              return new (Yt || Wt)(
                x.LFG(qe, 8),
                x.LFG(x.R0b),
                x.LFG(s.K0),
                x.LFG(Xt, 8),
              );
            });
            static #e = (this.ɵprov = x.Yz7({
              token: Wt,
              factory: Wt.ɵfac,
              providedIn: "root",
            }));
          }
          return Wt;
        })();
      const fe = new x.OlP("cdk-focus-monitor-default-options"),
        ke = (0, C.i$)({ passive: !0, capture: !0 });
      let yi = (() => {
        class Wt {
          constructor(It, Yt, Ae, oi, pe) {
            (this._ngZone = It),
              (this._platform = Yt),
              (this._inputModalityDetector = Ae),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1),
                  ));
              }),
              (this._stopInputModalityDetector = new p.x()),
              (this._rootNodeFocusAndBlurListener = (ne) => {
                for (let me = (0, C.sA)(ne); me; me = me.parentElement)
                  "focus" === ne.type
                    ? this._onFocus(ne, me)
                    : this._onBlur(ne, me);
              }),
              (this._document = oi),
              (this._detectionMode = pe?.detectionMode || 0);
          }
          monitor(It, Yt = !1) {
            const Ae = (0, Ve.fI)(It);
            if (!this._platform.isBrowser || 1 !== Ae.nodeType)
              return (0, bt.of)();
            const oi = (0, C.kV)(Ae) || this._getDocument(),
              pe = this._elementInfo.get(Ae);
            if (pe) return Yt && (pe.checkChildren = !0), pe.subject;
            const ne = { checkChildren: Yt, subject: new p.x(), rootNode: oi };
            return (
              this._elementInfo.set(Ae, ne),
              this._registerGlobalListeners(ne),
              ne.subject
            );
          }
          stopMonitoring(It) {
            const Yt = (0, Ve.fI)(It),
              Ae = this._elementInfo.get(Yt);
            Ae &&
              (Ae.subject.complete(),
              this._setClasses(Yt),
              this._elementInfo.delete(Yt),
              this._removeGlobalListeners(Ae));
          }
          focusVia(It, Yt, Ae) {
            const oi = (0, Ve.fI)(It);
            oi === this._getDocument().activeElement
              ? this._getClosestElementsInfo(oi).forEach(([ne, tt]) =>
                  this._originChanged(ne, Yt, tt),
                )
              : (this._setOrigin(Yt),
                "function" == typeof oi.focus && oi.focus(Ae));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((It, Yt) => this.stopMonitoring(Yt));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(It) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(It)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
                ? this._lastFocusOrigin
                : It && this._isLastInteractionFromInputLabel(It)
                  ? "mouse"
                  : "program";
          }
          _shouldBeAttributedToTouch(It) {
            return (
              1 === this._detectionMode ||
              !!It?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(It, Yt) {
            It.classList.toggle("cdk-focused", !!Yt),
              It.classList.toggle("cdk-touch-focused", "touch" === Yt),
              It.classList.toggle("cdk-keyboard-focused", "keyboard" === Yt),
              It.classList.toggle("cdk-mouse-focused", "mouse" === Yt),
              It.classList.toggle("cdk-program-focused", "program" === Yt);
          }
          _setOrigin(It, Yt = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = It),
                (this._originFromTouchInteraction = "touch" === It && Yt),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1,
                  )));
            });
          }
          _onFocus(It, Yt) {
            const Ae = this._elementInfo.get(Yt),
              oi = (0, C.sA)(It);
            !Ae ||
              (!Ae.checkChildren && Yt !== oi) ||
              this._originChanged(Yt, this._getFocusOrigin(oi), Ae);
          }
          _onBlur(It, Yt) {
            const Ae = this._elementInfo.get(Yt);
            !Ae ||
              (Ae.checkChildren &&
                It.relatedTarget instanceof Node &&
                Yt.contains(It.relatedTarget)) ||
              (this._setClasses(Yt), this._emitOrigin(Ae, null));
          }
          _emitOrigin(It, Yt) {
            It.subject.observers.length &&
              this._ngZone.run(() => It.subject.next(Yt));
          }
          _registerGlobalListeners(It) {
            if (!this._platform.isBrowser) return;
            const Yt = It.rootNode,
              Ae = this._rootNodeFocusListenerCount.get(Yt) || 0;
            Ae ||
              this._ngZone.runOutsideAngular(() => {
                Yt.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  ke,
                ),
                  Yt.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    ke,
                  );
              }),
              this._rootNodeFocusListenerCount.set(Yt, Ae + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener,
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe((0, De.R)(this._stopInputModalityDetector))
                  .subscribe((oi) => {
                    this._setOrigin(oi, !0);
                  }));
          }
          _removeGlobalListeners(It) {
            const Yt = It.rootNode;
            if (this._rootNodeFocusListenerCount.has(Yt)) {
              const Ae = this._rootNodeFocusListenerCount.get(Yt);
              Ae > 1
                ? this._rootNodeFocusListenerCount.set(Yt, Ae - 1)
                : (Yt.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    ke,
                  ),
                  Yt.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    ke,
                  ),
                  this._rootNodeFocusListenerCount.delete(Yt));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener,
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(It, Yt, Ae) {
            this._setClasses(It, Yt),
              this._emitOrigin(Ae, Yt),
              (this._lastFocusOrigin = Yt);
          }
          _getClosestElementsInfo(It) {
            const Yt = [];
            return (
              this._elementInfo.forEach((Ae, oi) => {
                (oi === It || (Ae.checkChildren && oi.contains(It))) &&
                  Yt.push([oi, Ae]);
              }),
              Yt
            );
          }
          _isLastInteractionFromInputLabel(It) {
            const { _mostRecentTarget: Yt, mostRecentModality: Ae } =
              this._inputModalityDetector;
            if (
              "mouse" !== Ae ||
              !Yt ||
              Yt === It ||
              ("INPUT" !== It.nodeName && "TEXTAREA" !== It.nodeName) ||
              It.disabled
            )
              return !1;
            const oi = It.labels;
            if (oi)
              for (let pe = 0; pe < oi.length; pe++)
                if (oi[pe].contains(Yt)) return !0;
            return !1;
          }
          static #t = (this.ɵfac = function (Yt) {
            return new (Yt || Wt)(
              x.LFG(x.R0b),
              x.LFG(C.t4),
              x.LFG(ve),
              x.LFG(s.K0, 8),
              x.LFG(fe, 8),
            );
          });
          static #e = (this.ɵprov = x.Yz7({
            token: Wt,
            factory: Wt.ɵfac,
            providedIn: "root",
          }));
        }
        return Wt;
      })();
      const vt = "cdk-high-contrast-black-on-white",
        U = "cdk-high-contrast-white-on-black",
        j = "cdk-high-contrast-active";
      let ct = (() => {
          class Wt {
            constructor(It, Yt) {
              (this._platform = It),
                (this._document = Yt),
                (this._breakpointSubscription = (0, x.f3M)(ie)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const It = this._document.createElement("div");
              (It.style.backgroundColor = "rgb(1,2,3)"),
                (It.style.position = "absolute"),
                this._document.body.appendChild(It);
              const Yt = this._document.defaultView || window,
                Ae = Yt && Yt.getComputedStyle ? Yt.getComputedStyle(It) : null,
                oi = ((Ae && Ae.backgroundColor) || "").replace(/ /g, "");
              switch ((It.remove(), oi)) {
                case "rgb(0,0,0)":
                case "rgb(45,50,54)":
                case "rgb(32,32,32)":
                  return 2;
                case "rgb(255,255,255)":
                case "rgb(255,250,239)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const It = this._document.body.classList;
                It.remove(j, vt, U), (this._hasCheckedHighContrastMode = !0);
                const Yt = this.getHighContrastMode();
                1 === Yt ? It.add(j, vt) : 2 === Yt && It.add(j, U);
              }
            }
            static #t = (this.ɵfac = function (Yt) {
              return new (Yt || Wt)(x.LFG(C.t4), x.LFG(s.K0));
            });
            static #e = (this.ɵprov = x.Yz7({
              token: Wt,
              factory: Wt.ɵfac,
              providedIn: "root",
            }));
          }
          return Wt;
        })(),
        ue = (() => {
          class Wt {
            constructor(It) {
              It._applyBodyHighContrastModeCssClasses();
            }
            static #t = (this.ɵfac = function (Yt) {
              return new (Yt || Wt)(x.LFG(ct));
            });
            static #e = (this.ɵmod = x.oAB({ type: Wt }));
            static #i = (this.ɵinj = x.cJS({ imports: [He.Q8] }));
          }
          return Wt;
        })();
    },
    9388: (ui, Zt, D) => {
      D.d(Zt, { Is: () => bt, vT: () => kt });
      var s = D(5879),
        x = D(6814);
      const C = new s.OlP("cdk-dir-doc", {
          providedIn: "root",
          factory: function p() {
            return (0, s.f3M)(x.K0);
          },
        }),
        at =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let bt = (() => {
          class $ {
            constructor(A) {
              (this.value = "ltr"),
                (this.change = new s.vpe()),
                A &&
                  (this.value = (function lt($) {
                    const _ = $?.toLowerCase() || "";
                    return "auto" === _ &&
                      typeof navigator < "u" &&
                      navigator?.language
                      ? at.test(navigator.language)
                        ? "rtl"
                        : "ltr"
                      : "rtl" === _
                        ? "rtl"
                        : "ltr";
                  })(
                    (A.body ? A.body.dir : null) ||
                      (A.documentElement ? A.documentElement.dir : null) ||
                      "ltr",
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
            static #t = (this.ɵfac = function (jt) {
              return new (jt || $)(s.LFG(C, 8));
            });
            static #e = (this.ɵprov = s.Yz7({
              token: $,
              factory: $.ɵfac,
              providedIn: "root",
            }));
          }
          return $;
        })(),
        kt = (() => {
          class $ {
            static #t = (this.ɵfac = function (jt) {
              return new (jt || $)();
            });
            static #e = (this.ɵmod = s.oAB({ type: $ }));
            static #i = (this.ɵinj = s.cJS({}));
          }
          return $;
        })();
    },
    2495: (ui, Zt, D) => {
      D.d(Zt, {
        Eq: () => at,
        HM: () => lt,
        Ig: () => x,
        du: () => B,
        fI: () => bt,
        su: () => C,
        t6: () => p,
      });
      var s = D(5879);
      function x(kt) {
        return null != kt && "false" != `${kt}`;
      }
      function C(kt, $ = 0) {
        return p(kt) ? Number(kt) : $;
      }
      function p(kt) {
        return !isNaN(parseFloat(kt)) && !isNaN(Number(kt));
      }
      function at(kt) {
        return Array.isArray(kt) ? kt : [kt];
      }
      function lt(kt) {
        return null == kt ? "" : "string" == typeof kt ? kt : `${kt}px`;
      }
      function bt(kt) {
        return kt instanceof s.SBq ? kt.nativeElement : kt;
      }
      function B(kt, $ = /\s+/) {
        const _ = [];
        if (null != kt) {
          const A = Array.isArray(kt) ? kt : `${kt}`.split($);
          for (const jt of A) {
            const gt = `${jt}`.trim();
            gt && _.push(gt);
          }
        }
        return _;
      }
    },
    8337: (ui, Zt, D) => {
      D.d(Zt, {
        Ov: () => kt,
        Z9: () => at,
        eX: () => B,
        k: () => A,
        o2: () => p,
        yy: () => bt,
      });
      var s = D(3168),
        x = D(8645),
        C = D(5879);
      class p {}
      function at(jt) {
        return jt && "function" == typeof jt.connect && !(jt instanceof s.c);
      }
      class bt {
        applyChanges(gt, Jt, De, Ve, He) {
          gt.forEachOperation((We, Re, wt) => {
            let _t, St;
            if (null == We.previousIndex) {
              const Pt = De(We, Re, wt);
              (_t = Jt.createEmbeddedView(
                Pt.templateRef,
                Pt.context,
                Pt.index,
              )),
                (St = 1);
            } else
              null == wt
                ? (Jt.remove(Re), (St = 3))
                : ((_t = Jt.get(Re)), Jt.move(_t, wt), (St = 2));
            He && He({ context: _t?.context, operation: St, record: We });
          });
        }
        detach() {}
      }
      class B {
        constructor() {
          (this.viewCacheSize = 20), (this._viewCache = []);
        }
        applyChanges(gt, Jt, De, Ve, He) {
          gt.forEachOperation((We, Re, wt) => {
            let _t, St;
            null == We.previousIndex
              ? ((_t = this._insertView(() => De(We, Re, wt), wt, Jt, Ve(We))),
                (St = _t ? 1 : 0))
              : null == wt
                ? (this._detachAndCacheView(Re, Jt), (St = 3))
                : ((_t = this._moveView(Re, wt, Jt, Ve(We))), (St = 2)),
              He && He({ context: _t?.context, operation: St, record: We });
          });
        }
        detach() {
          for (const gt of this._viewCache) gt.destroy();
          this._viewCache = [];
        }
        _insertView(gt, Jt, De, Ve) {
          const He = this._insertViewFromCache(Jt, De);
          if (He) return void (He.context.$implicit = Ve);
          const We = gt();
          return De.createEmbeddedView(We.templateRef, We.context, We.index);
        }
        _detachAndCacheView(gt, Jt) {
          const De = Jt.detach(gt);
          this._maybeCacheView(De, Jt);
        }
        _moveView(gt, Jt, De, Ve) {
          const He = De.get(gt);
          return De.move(He, Jt), (He.context.$implicit = Ve), He;
        }
        _maybeCacheView(gt, Jt) {
          if (this._viewCache.length < this.viewCacheSize)
            this._viewCache.push(gt);
          else {
            const De = Jt.indexOf(gt);
            -1 === De ? gt.destroy() : Jt.remove(De);
          }
        }
        _insertViewFromCache(gt, Jt) {
          const De = this._viewCache.pop();
          return De && Jt.insert(De, gt), De || null;
        }
      }
      class kt {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(gt = !1, Jt, De = !0, Ve) {
          (this._multiple = gt),
            (this._emitChanges = De),
            (this.compareWith = Ve),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new x.x()),
            Jt &&
              Jt.length &&
              (gt
                ? Jt.forEach((He) => this._markSelected(He))
                : this._markSelected(Jt[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...gt) {
          this._verifyValueAssignment(gt),
            gt.forEach((De) => this._markSelected(De));
          const Jt = this._hasQueuedChanges();
          return this._emitChangeEvent(), Jt;
        }
        deselect(...gt) {
          this._verifyValueAssignment(gt),
            gt.forEach((De) => this._unmarkSelected(De));
          const Jt = this._hasQueuedChanges();
          return this._emitChangeEvent(), Jt;
        }
        setSelection(...gt) {
          this._verifyValueAssignment(gt);
          const Jt = this.selected,
            De = new Set(gt);
          gt.forEach((He) => this._markSelected(He)),
            Jt.filter((He) => !De.has(He)).forEach((He) =>
              this._unmarkSelected(He),
            );
          const Ve = this._hasQueuedChanges();
          return this._emitChangeEvent(), Ve;
        }
        toggle(gt) {
          return this.isSelected(gt) ? this.deselect(gt) : this.select(gt);
        }
        clear(gt = !0) {
          this._unmarkAll();
          const Jt = this._hasQueuedChanges();
          return gt && this._emitChangeEvent(), Jt;
        }
        isSelected(gt) {
          return this._selection.has(this._getConcreteValue(gt));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(gt) {
          this._multiple && this.selected && this._selected.sort(gt);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(gt) {
          (gt = this._getConcreteValue(gt)),
            this.isSelected(gt) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(gt) || this._selection.add(gt),
              this._emitChanges && this._selectedToEmit.push(gt));
        }
        _unmarkSelected(gt) {
          (gt = this._getConcreteValue(gt)),
            this.isSelected(gt) &&
              (this._selection.delete(gt),
              this._emitChanges && this._deselectedToEmit.push(gt));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((gt) => this._unmarkSelected(gt));
        }
        _verifyValueAssignment(gt) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(gt) {
          if (this.compareWith) {
            for (let Jt of this._selection)
              if (this.compareWith(gt, Jt)) return Jt;
            return gt;
          }
          return gt;
        }
      }
      const A = new C.OlP("_ViewRepeater");
    },
    6028: (ui, Zt, D) => {
      D.d(Zt, {
        A: () => Ue,
        JH: () => Re,
        JU: () => lt,
        K5: () => at,
        Ku: () => jt,
        LH: () => He,
        L_: () => A,
        MW: () => ut,
        Mf: () => C,
        SV: () => We,
        Sd: () => De,
        VM: () => gt,
        Vb: () => oo,
        Z: () => Lt,
        ZH: () => x,
        aO: () => Vi,
        b2: () => Tn,
        hY: () => _,
        jx: () => bt,
        oh: () => Ve,
        uR: () => Jt,
        xE: () => ee,
        yY: () => Pt,
        zL: () => B,
      });
      const x = 8,
        C = 9,
        at = 13,
        lt = 16,
        bt = 17,
        B = 18,
        _ = 27,
        A = 32,
        jt = 33,
        gt = 34,
        Jt = 35,
        De = 36,
        Ve = 37,
        He = 38,
        We = 39,
        Re = 40,
        Pt = 46,
        ee = 48,
        Vi = 57,
        Ue = 65,
        Lt = 90,
        ut = 91,
        Tn = 224;
      function oo(go, ...qo) {
        return qo.length
          ? qo.some((Kn) => go[Kn])
          : go.altKey || go.shiftKey || go.ctrlKey || go.metaKey;
      }
    },
    7131: (ui, Zt, D) => {
      D.d(Zt, { Q8: () => kt, wD: () => B });
      var s = D(2495),
        x = D(5879),
        C = D(5592),
        p = D(8645),
        at = D(3620);
      let lt = (() => {
          class $ {
            create(A) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(A);
            }
            static #t = (this.ɵfac = function (jt) {
              return new (jt || $)();
            });
            static #e = (this.ɵprov = x.Yz7({
              token: $,
              factory: $.ɵfac,
              providedIn: "root",
            }));
          }
          return $;
        })(),
        bt = (() => {
          class $ {
            constructor(A) {
              (this._mutationObserverFactory = A),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((A, jt) =>
                this._cleanupObserver(jt),
              );
            }
            observe(A) {
              const jt = (0, s.fI)(A);
              return new C.y((gt) => {
                const De = this._observeElement(jt).subscribe(gt);
                return () => {
                  De.unsubscribe(), this._unobserveElement(jt);
                };
              });
            }
            _observeElement(A) {
              if (this._observedElements.has(A))
                this._observedElements.get(A).count++;
              else {
                const jt = new p.x(),
                  gt = this._mutationObserverFactory.create((Jt) =>
                    jt.next(Jt),
                  );
                gt &&
                  gt.observe(A, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(A, {
                    observer: gt,
                    stream: jt,
                    count: 1,
                  });
              }
              return this._observedElements.get(A).stream;
            }
            _unobserveElement(A) {
              this._observedElements.has(A) &&
                (this._observedElements.get(A).count--,
                this._observedElements.get(A).count ||
                  this._cleanupObserver(A));
            }
            _cleanupObserver(A) {
              if (this._observedElements.has(A)) {
                const { observer: jt, stream: gt } =
                  this._observedElements.get(A);
                jt && jt.disconnect(),
                  gt.complete(),
                  this._observedElements.delete(A);
              }
            }
            static #t = (this.ɵfac = function (jt) {
              return new (jt || $)(x.LFG(lt));
            });
            static #e = (this.ɵprov = x.Yz7({
              token: $,
              factory: $.ɵfac,
              providedIn: "root",
            }));
          }
          return $;
        })(),
        B = (() => {
          class $ {
            get disabled() {
              return this._disabled;
            }
            set disabled(A) {
              (this._disabled = (0, s.Ig)(A)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(A) {
              (this._debounce = (0, s.su)(A)), this._subscribe();
            }
            constructor(A, jt, gt) {
              (this._contentObserver = A),
                (this._elementRef = jt),
                (this._ngZone = gt),
                (this.event = new x.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const A = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? A.pipe((0, at.b)(this.debounce)) : A
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
            static #t = (this.ɵfac = function (jt) {
              return new (jt || $)(x.Y36(bt), x.Y36(x.SBq), x.Y36(x.R0b));
            });
            static #e = (this.ɵdir = x.lG2({
              type: $,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            }));
          }
          return $;
        })(),
        kt = (() => {
          class $ {
            static #t = (this.ɵfac = function (jt) {
              return new (jt || $)();
            });
            static #e = (this.ɵmod = x.oAB({ type: $ }));
            static #i = (this.ɵinj = x.cJS({ providers: [lt] }));
          }
          return $;
        })();
    },
    3651: (ui, Zt, D) => {
      D.d(Zt, {
        pI: () => Ri,
        xu: () => Ne,
        aV: () => ri,
        X_: () => ze,
        Xj: () => Ie,
        U8: () => _i,
        Iu: () => Fe,
      });
      var s = D(6702),
        x = D(6814),
        C = D(5879),
        p = D(2495),
        at = D(2831),
        lt = D(2181),
        bt = D(8180),
        B = D(9773),
        kt = D(9360),
        $ = D(8251),
        A = D(9388),
        jt = D(8484),
        gt = D(8645),
        Jt = D(7394),
        De = D(3019),
        Ve = D(6028);
      const He = (0, at.Mq)();
      class We {
        constructor(Z, rt) {
          (this._viewportRuler = Z),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = rt);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const Z = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = Z.style.left || ""),
              (this._previousHTMLStyles.top = Z.style.top || ""),
              (Z.style.left = (0, p.HM)(-this._previousScrollPosition.left)),
              (Z.style.top = (0, p.HM)(-this._previousScrollPosition.top)),
              Z.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const Z = this._document.documentElement,
              yt = Z.style,
              Rt = this._document.body.style,
              Lt = yt.scrollBehavior || "",
              ut = Rt.scrollBehavior || "";
            (this._isEnabled = !1),
              (yt.left = this._previousHTMLStyles.left),
              (yt.top = this._previousHTMLStyles.top),
              Z.classList.remove("cdk-global-scrollblock"),
              He && (yt.scrollBehavior = Rt.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top,
              ),
              He && ((yt.scrollBehavior = Lt), (Rt.scrollBehavior = ut));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock",
            ) ||
            this._isEnabled
          )
            return !1;
          const rt = this._document.body,
            yt = this._viewportRuler.getViewportSize();
          return rt.scrollHeight > yt.height || rt.scrollWidth > yt.width;
        }
      }
      class wt {
        constructor(Z, rt, yt, Rt) {
          (this._scrollDispatcher = Z),
            (this._ngZone = rt),
            (this._viewportRuler = yt),
            (this._config = Rt),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(Z) {
          this._overlayRef = Z;
        }
        enable() {
          if (this._scrollSubscription) return;
          const Z = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              (0, lt.h)(
                (rt) =>
                  !rt ||
                  !this._overlayRef.overlayElement.contains(
                    rt.getElementRef().nativeElement,
                  ),
              ),
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = Z.subscribe(() => {
                const rt = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(rt - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = Z.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class _t {
        enable() {}
        disable() {}
        attach() {}
      }
      function St(ot, Z) {
        return Z.some(
          (rt) =>
            ot.bottom < rt.top ||
            ot.top > rt.bottom ||
            ot.right < rt.left ||
            ot.left > rt.right,
        );
      }
      function Pt(ot, Z) {
        return Z.some(
          (rt) =>
            ot.top < rt.top ||
            ot.bottom > rt.bottom ||
            ot.left < rt.left ||
            ot.right > rt.right,
        );
      }
      class ee {
        constructor(Z, rt, yt, Rt) {
          (this._scrollDispatcher = Z),
            (this._viewportRuler = rt),
            (this._ngZone = yt),
            (this._config = Rt),
            (this._scrollSubscription = null);
        }
        attach(Z) {
          this._overlayRef = Z;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const rt =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: yt, height: Rt } =
                      this._viewportRuler.getViewportSize();
                  St(rt, [
                    {
                      width: yt,
                      height: Rt,
                      bottom: Rt,
                      right: yt,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let Kt = (() => {
        class ot {
          constructor(rt, yt, Rt, Lt) {
            (this._scrollDispatcher = rt),
              (this._viewportRuler = yt),
              (this._ngZone = Rt),
              (this.noop = () => new _t()),
              (this.close = (ut) =>
                new wt(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  ut,
                )),
              (this.block = () => new We(this._viewportRuler, this._document)),
              (this.reposition = (ut) =>
                new ee(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  ut,
                )),
              (this._document = Lt);
          }
          static #t = (this.ɵfac = function (yt) {
            return new (yt || ot)(
              C.LFG(s.mF),
              C.LFG(s.rL),
              C.LFG(C.R0b),
              C.LFG(x.K0),
            );
          });
          static #e = (this.ɵprov = C.Yz7({
            token: ot,
            factory: ot.ɵfac,
            providedIn: "root",
          }));
        }
        return ot;
      })();
      class ze {
        constructor(Z) {
          if (
            ((this.scrollStrategy = new _t()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            Z)
          ) {
            const rt = Object.keys(Z);
            for (const yt of rt) void 0 !== Z[yt] && (this[yt] = Z[yt]);
          }
        }
      }
      class vi {
        constructor(Z, rt) {
          (this.connectionPair = Z), (this.scrollableViewProperties = rt);
        }
      }
      let Si = (() => {
          class ot {
            constructor(rt) {
              (this._attachedOverlays = []), (this._document = rt);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(rt) {
              this.remove(rt), this._attachedOverlays.push(rt);
            }
            remove(rt) {
              const yt = this._attachedOverlays.indexOf(rt);
              yt > -1 && this._attachedOverlays.splice(yt, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(C.LFG(x.K0));
            });
            static #e = (this.ɵprov = C.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: "root",
            }));
          }
          return ot;
        })(),
        Vi = (() => {
          class ot extends Si {
            constructor(rt, yt) {
              super(rt),
                (this._ngZone = yt),
                (this._keydownListener = (Rt) => {
                  const Lt = this._attachedOverlays;
                  for (let ut = Lt.length - 1; ut > -1; ut--)
                    if (Lt[ut]._keydownEvents.observers.length > 0) {
                      const q = Lt[ut]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => q.next(Rt))
                        : q.next(Rt);
                      break;
                    }
                });
            }
            add(rt) {
              super.add(rt),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener,
                        ),
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener,
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener,
                ),
                (this._isAttached = !1));
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(C.LFG(x.K0), C.LFG(C.R0b, 8));
            });
            static #e = (this.ɵprov = C.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: "root",
            }));
          }
          return ot;
        })(),
        qi = (() => {
          class ot extends Si {
            constructor(rt, yt, Rt) {
              super(rt),
                (this._platform = yt),
                (this._ngZone = Rt),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (Lt) => {
                  this._pointerDownEventTarget = (0, at.sA)(Lt);
                }),
                (this._clickListener = (Lt) => {
                  const ut = (0, at.sA)(Lt),
                    q =
                      "click" === Lt.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : ut;
                  this._pointerDownEventTarget = null;
                  const Ct = this._attachedOverlays.slice();
                  for (let H = Ct.length - 1; H > -1; H--) {
                    const Nt = Ct[H];
                    if (
                      Nt._outsidePointerEvents.observers.length < 1 ||
                      !Nt.hasAttached()
                    )
                      continue;
                    if (
                      Nt.overlayElement.contains(ut) ||
                      Nt.overlayElement.contains(q)
                    )
                      break;
                    const X = Nt._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => X.next(Lt))
                      : X.next(Lt);
                  }
                });
            }
            add(rt) {
              if ((super.add(rt), !this._isAttached)) {
                const yt = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(yt),
                    )
                  : this._addEventListeners(yt),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = yt.style.cursor),
                    (yt.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const rt = this._document.body;
                rt.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0,
                ),
                  rt.removeEventListener("click", this._clickListener, !0),
                  rt.removeEventListener("auxclick", this._clickListener, !0),
                  rt.removeEventListener(
                    "contextmenu",
                    this._clickListener,
                    !0,
                  ),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((rt.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(rt) {
              rt.addEventListener("pointerdown", this._pointerDownListener, !0),
                rt.addEventListener("click", this._clickListener, !0),
                rt.addEventListener("auxclick", this._clickListener, !0),
                rt.addEventListener("contextmenu", this._clickListener, !0);
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(C.LFG(x.K0), C.LFG(at.t4), C.LFG(C.R0b, 8));
            });
            static #e = (this.ɵprov = C.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: "root",
            }));
          }
          return ot;
        })(),
        Ie = (() => {
          class ot {
            constructor(rt, yt) {
              (this._platform = yt), (this._document = rt);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const rt = "cdk-overlay-container";
              if (this._platform.isBrowser || (0, at.Oy)()) {
                const Rt = this._document.querySelectorAll(
                  `.${rt}[platform="server"], .${rt}[platform="test"]`,
                );
                for (let Lt = 0; Lt < Rt.length; Lt++) Rt[Lt].remove();
              }
              const yt = this._document.createElement("div");
              yt.classList.add(rt),
                (0, at.Oy)()
                  ? yt.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    yt.setAttribute("platform", "server"),
                this._document.body.appendChild(yt),
                (this._containerElement = yt);
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(C.LFG(x.K0), C.LFG(at.t4));
            });
            static #e = (this.ɵprov = C.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: "root",
            }));
          }
          return ot;
        })();
      class Fe {
        constructor(Z, rt, yt, Rt, Lt, ut, q, Ct, H, Nt = !1) {
          (this._portalOutlet = Z),
            (this._host = rt),
            (this._pane = yt),
            (this._config = Rt),
            (this._ngZone = Lt),
            (this._keyboardDispatcher = ut),
            (this._document = q),
            (this._location = Ct),
            (this._outsideClickDispatcher = H),
            (this._animationsDisabled = Nt),
            (this._backdropElement = null),
            (this._backdropClick = new gt.x()),
            (this._attachments = new gt.x()),
            (this._detachments = new gt.x()),
            (this._locationChanges = Jt.w0.EMPTY),
            (this._backdropClickHandler = (X) => this._backdropClick.next(X)),
            (this._backdropTransitionendHandler = (X) => {
              this._disposeBackdrop(X.target);
            }),
            (this._keydownEvents = new gt.x()),
            (this._outsidePointerEvents = new gt.x()),
            Rt.scrollStrategy &&
              ((this._scrollStrategy = Rt.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = Rt.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(Z) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const rt = this._portalOutlet.attach(Z);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe((0, bt.q)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose(),
              )),
            this._outsideClickDispatcher.add(this),
            "function" == typeof rt?.onDestroy &&
              rt.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach()),
                  );
              }),
            rt
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const Z = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            Z
          );
        }
        dispose() {
          const Z = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            Z && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(Z) {
          Z !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = Z),
            this.hasAttached() && (Z.attach(this), this.updatePosition()));
        }
        updateSize(Z) {
          (this._config = { ...this._config, ...Z }), this._updateElementSize();
        }
        setDirection(Z) {
          (this._config = { ...this._config, direction: Z }),
            this._updateElementDirection();
        }
        addPanelClass(Z) {
          this._pane && this._toggleClasses(this._pane, Z, !0);
        }
        removePanelClass(Z) {
          this._pane && this._toggleClasses(this._pane, Z, !1);
        }
        getDirection() {
          const Z = this._config.direction;
          return Z ? ("string" == typeof Z ? Z : Z.value) : "ltr";
        }
        updateScrollStrategy(Z) {
          Z !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = Z),
            this.hasAttached() && (Z.attach(this), Z.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const Z = this._pane.style;
          (Z.width = (0, p.HM)(this._config.width)),
            (Z.height = (0, p.HM)(this._config.height)),
            (Z.minWidth = (0, p.HM)(this._config.minWidth)),
            (Z.minHeight = (0, p.HM)(this._config.minHeight)),
            (Z.maxWidth = (0, p.HM)(this._config.maxWidth)),
            (Z.maxHeight = (0, p.HM)(this._config.maxHeight));
        }
        _togglePointerEvents(Z) {
          this._pane.style.pointerEvents = Z ? "" : "none";
        }
        _attachBackdrop() {
          const Z = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation",
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0,
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host,
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler,
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(Z);
                  });
                })
              : this._backdropElement.classList.add(Z);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const Z = this._backdropElement;
          if (Z) {
            if (this._animationsDisabled) return void this._disposeBackdrop(Z);
            Z.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                Z.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler,
                );
              }),
              (Z.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(Z);
                }, 500),
              ));
          }
        }
        _toggleClasses(Z, rt, yt) {
          const Rt = (0, p.Eq)(rt || []).filter((Lt) => !!Lt);
          Rt.length &&
            (yt ? Z.classList.add(...Rt) : Z.classList.remove(...Rt));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const Z = this._ngZone.onStable
              .pipe((0, B.R)((0, De.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1,
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  Z.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const Z = this._scrollStrategy;
          Z && (Z.disable(), Z.detach && Z.detach());
        }
        _disposeBackdrop(Z) {
          Z &&
            (Z.removeEventListener("click", this._backdropClickHandler),
            Z.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler,
            ),
            Z.remove(),
            this._backdropElement === Z && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const xe = "cdk-overlay-connected-position-bounding-box",
        Ue = /([A-Za-z%]+)$/;
      class Ft {
        get positions() {
          return this._preferredPositions;
        }
        constructor(Z, rt, yt, Rt, Lt) {
          (this._viewportRuler = rt),
            (this._document = yt),
            (this._platform = Rt),
            (this._overlayContainer = Lt),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new gt.x()),
            (this._resizeSubscription = Jt.w0.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(Z);
        }
        attach(Z) {
          this._validatePositions(),
            Z.hostElement.classList.add(xe),
            (this._overlayRef = Z),
            (this._boundingBox = Z.hostElement),
            (this._pane = Z.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const Z = this._originRect,
            rt = this._overlayRect,
            yt = this._viewportRect,
            Rt = this._containerRect,
            Lt = [];
          let ut;
          for (let q of this._preferredPositions) {
            let Ct = this._getOriginPoint(Z, Rt, q),
              H = this._getOverlayPoint(Ct, rt, q),
              Nt = this._getOverlayFit(H, rt, yt, q);
            if (Nt.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(q, Ct);
            this._canFitWithFlexibleDimensions(Nt, H, yt)
              ? Lt.push({
                  position: q,
                  origin: Ct,
                  overlayRect: rt,
                  boundingBoxRect: this._calculateBoundingBoxRect(Ct, q),
                })
              : (!ut || ut.overlayFit.visibleArea < Nt.visibleArea) &&
                (ut = {
                  overlayFit: Nt,
                  overlayPoint: H,
                  originPoint: Ct,
                  position: q,
                  overlayRect: rt,
                });
          }
          if (Lt.length) {
            let q = null,
              Ct = -1;
            for (const H of Lt) {
              const Nt =
                H.boundingBoxRect.width *
                H.boundingBoxRect.height *
                (H.position.weight || 1);
              Nt > Ct && ((Ct = Nt), (q = H));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(q.position, q.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(ut.position, ut.originPoint)
            );
          this._applyPosition(ut.position, ut.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Mt(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(xe),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const Z = this._lastPosition;
          if (Z) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const rt = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              Z,
            );
            this._applyPosition(Z, rt);
          } else this.apply();
        }
        withScrollableContainers(Z) {
          return (this._scrollables = Z), this;
        }
        withPositions(Z) {
          return (
            (this._preferredPositions = Z),
            -1 === Z.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(Z) {
          return (this._viewportMargin = Z), this;
        }
        withFlexibleDimensions(Z = !0) {
          return (this._hasFlexibleDimensions = Z), this;
        }
        withGrowAfterOpen(Z = !0) {
          return (this._growAfterOpen = Z), this;
        }
        withPush(Z = !0) {
          return (this._canPush = Z), this;
        }
        withLockedPosition(Z = !0) {
          return (this._positionLocked = Z), this;
        }
        setOrigin(Z) {
          return (this._origin = Z), this;
        }
        withDefaultOffsetX(Z) {
          return (this._offsetX = Z), this;
        }
        withDefaultOffsetY(Z) {
          return (this._offsetY = Z), this;
        }
        withTransformOriginOn(Z) {
          return (this._transformOriginSelector = Z), this;
        }
        _getOriginPoint(Z, rt, yt) {
          let Rt, Lt;
          if ("center" == yt.originX) Rt = Z.left + Z.width / 2;
          else {
            const ut = this._isRtl() ? Z.right : Z.left,
              q = this._isRtl() ? Z.left : Z.right;
            Rt = "start" == yt.originX ? ut : q;
          }
          return (
            rt.left < 0 && (Rt -= rt.left),
            (Lt =
              "center" == yt.originY
                ? Z.top + Z.height / 2
                : "top" == yt.originY
                  ? Z.top
                  : Z.bottom),
            rt.top < 0 && (Lt -= rt.top),
            { x: Rt, y: Lt }
          );
        }
        _getOverlayPoint(Z, rt, yt) {
          let Rt, Lt;
          return (
            (Rt =
              "center" == yt.overlayX
                ? -rt.width / 2
                : "start" === yt.overlayX
                  ? this._isRtl()
                    ? -rt.width
                    : 0
                  : this._isRtl()
                    ? 0
                    : -rt.width),
            (Lt =
              "center" == yt.overlayY
                ? -rt.height / 2
                : "top" == yt.overlayY
                  ? 0
                  : -rt.height),
            { x: Z.x + Rt, y: Z.y + Lt }
          );
        }
        _getOverlayFit(Z, rt, yt, Rt) {
          const Lt = Vt(rt);
          let { x: ut, y: q } = Z,
            Ct = this._getOffset(Rt, "x"),
            H = this._getOffset(Rt, "y");
          Ct && (ut += Ct), H && (q += H);
          let se = 0 - q,
            it = q + Lt.height - yt.height,
            Ut = this._subtractOverflows(
              Lt.width,
              0 - ut,
              ut + Lt.width - yt.width,
            ),
            ve = this._subtractOverflows(Lt.height, se, it),
            qe = Ut * ve;
          return {
            visibleArea: qe,
            isCompletelyWithinViewport: Lt.width * Lt.height === qe,
            fitsInViewportVertically: ve === Lt.height,
            fitsInViewportHorizontally: Ut == Lt.width,
          };
        }
        _canFitWithFlexibleDimensions(Z, rt, yt) {
          if (this._hasFlexibleDimensions) {
            const Rt = yt.bottom - rt.y,
              Lt = yt.right - rt.x,
              ut = we(this._overlayRef.getConfig().minHeight),
              q = we(this._overlayRef.getConfig().minWidth);
            return (
              (Z.fitsInViewportVertically || (null != ut && ut <= Rt)) &&
              (Z.fitsInViewportHorizontally || (null != q && q <= Lt))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(Z, rt, yt) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: Z.x + this._previousPushAmount.x,
              y: Z.y + this._previousPushAmount.y,
            };
          const Rt = Vt(rt),
            Lt = this._viewportRect,
            ut = Math.max(Z.x + Rt.width - Lt.width, 0),
            q = Math.max(Z.y + Rt.height - Lt.height, 0),
            Ct = Math.max(Lt.top - yt.top - Z.y, 0),
            H = Math.max(Lt.left - yt.left - Z.x, 0);
          let Nt = 0,
            X = 0;
          return (
            (Nt =
              Rt.width <= Lt.width
                ? H || -ut
                : Z.x < this._viewportMargin
                  ? Lt.left - yt.left - Z.x
                  : 0),
            (X =
              Rt.height <= Lt.height
                ? Ct || -q
                : Z.y < this._viewportMargin
                  ? Lt.top - yt.top - Z.y
                  : 0),
            (this._previousPushAmount = { x: Nt, y: X }),
            { x: Z.x + Nt, y: Z.y + X }
          );
        }
        _applyPosition(Z, rt) {
          if (
            (this._setTransformOrigin(Z),
            this._setOverlayElementStyles(rt, Z),
            this._setBoundingBoxStyles(rt, Z),
            Z.panelClass && this._addPanelClasses(Z.panelClass),
            (this._lastPosition = Z),
            this._positionChanges.observers.length)
          ) {
            const yt = this._getScrollVisibility(),
              Rt = new vi(Z, yt);
            this._positionChanges.next(Rt);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(Z) {
          if (!this._transformOriginSelector) return;
          const rt = this._boundingBox.querySelectorAll(
            this._transformOriginSelector,
          );
          let yt,
            Rt = Z.overlayY;
          yt =
            "center" === Z.overlayX
              ? "center"
              : this._isRtl()
                ? "start" === Z.overlayX
                  ? "right"
                  : "left"
                : "start" === Z.overlayX
                  ? "left"
                  : "right";
          for (let Lt = 0; Lt < rt.length; Lt++)
            rt[Lt].style.transformOrigin = `${yt} ${Rt}`;
        }
        _calculateBoundingBoxRect(Z, rt) {
          const yt = this._viewportRect,
            Rt = this._isRtl();
          let Lt, ut, q, Nt, X, se;
          if ("top" === rt.overlayY)
            (ut = Z.y), (Lt = yt.height - ut + this._viewportMargin);
          else if ("bottom" === rt.overlayY)
            (q = yt.height - Z.y + 2 * this._viewportMargin),
              (Lt = yt.height - q + this._viewportMargin);
          else {
            const it = Math.min(yt.bottom - Z.y + yt.top, Z.y),
              Ut = this._lastBoundingBoxSize.height;
            (Lt = 2 * it),
              (ut = Z.y - it),
              Lt > Ut &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (ut = Z.y - Ut / 2);
          }
          if (("end" === rt.overlayX && !Rt) || ("start" === rt.overlayX && Rt))
            (se = yt.width - Z.x + this._viewportMargin),
              (Nt = Z.x - this._viewportMargin);
          else if (
            ("start" === rt.overlayX && !Rt) ||
            ("end" === rt.overlayX && Rt)
          )
            (X = Z.x), (Nt = yt.right - Z.x);
          else {
            const it = Math.min(yt.right - Z.x + yt.left, Z.x),
              Ut = this._lastBoundingBoxSize.width;
            (Nt = 2 * it),
              (X = Z.x - it),
              Nt > Ut &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (X = Z.x - Ut / 2);
          }
          return {
            top: ut,
            left: X,
            bottom: q,
            right: se,
            width: Nt,
            height: Lt,
          };
        }
        _setBoundingBoxStyles(Z, rt) {
          const yt = this._calculateBoundingBoxRect(Z, rt);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((yt.height = Math.min(
              yt.height,
              this._lastBoundingBoxSize.height,
            )),
            (yt.width = Math.min(yt.width, this._lastBoundingBoxSize.width)));
          const Rt = {};
          if (this._hasExactPosition())
            (Rt.top = Rt.left = "0"),
              (Rt.bottom = Rt.right = Rt.maxHeight = Rt.maxWidth = ""),
              (Rt.width = Rt.height = "100%");
          else {
            const Lt = this._overlayRef.getConfig().maxHeight,
              ut = this._overlayRef.getConfig().maxWidth;
            (Rt.height = (0, p.HM)(yt.height)),
              (Rt.top = (0, p.HM)(yt.top)),
              (Rt.bottom = (0, p.HM)(yt.bottom)),
              (Rt.width = (0, p.HM)(yt.width)),
              (Rt.left = (0, p.HM)(yt.left)),
              (Rt.right = (0, p.HM)(yt.right)),
              (Rt.alignItems =
                "center" === rt.overlayX
                  ? "center"
                  : "end" === rt.overlayX
                    ? "flex-end"
                    : "flex-start"),
              (Rt.justifyContent =
                "center" === rt.overlayY
                  ? "center"
                  : "bottom" === rt.overlayY
                    ? "flex-end"
                    : "flex-start"),
              Lt && (Rt.maxHeight = (0, p.HM)(Lt)),
              ut && (Rt.maxWidth = (0, p.HM)(ut));
          }
          (this._lastBoundingBoxSize = yt), Mt(this._boundingBox.style, Rt);
        }
        _resetBoundingBoxStyles() {
          Mt(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          Mt(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(Z, rt) {
          const yt = {},
            Rt = this._hasExactPosition(),
            Lt = this._hasFlexibleDimensions,
            ut = this._overlayRef.getConfig();
          if (Rt) {
            const Nt = this._viewportRuler.getViewportScrollPosition();
            Mt(yt, this._getExactOverlayY(rt, Z, Nt)),
              Mt(yt, this._getExactOverlayX(rt, Z, Nt));
          } else yt.position = "static";
          let q = "",
            Ct = this._getOffset(rt, "x"),
            H = this._getOffset(rt, "y");
          Ct && (q += `translateX(${Ct}px) `),
            H && (q += `translateY(${H}px)`),
            (yt.transform = q.trim()),
            ut.maxHeight &&
              (Rt
                ? (yt.maxHeight = (0, p.HM)(ut.maxHeight))
                : Lt && (yt.maxHeight = "")),
            ut.maxWidth &&
              (Rt
                ? (yt.maxWidth = (0, p.HM)(ut.maxWidth))
                : Lt && (yt.maxWidth = "")),
            Mt(this._pane.style, yt);
        }
        _getExactOverlayY(Z, rt, yt) {
          let Rt = { top: "", bottom: "" },
            Lt = this._getOverlayPoint(rt, this._overlayRect, Z);
          return (
            this._isPushed &&
              (Lt = this._pushOverlayOnScreen(Lt, this._overlayRect, yt)),
            "bottom" === Z.overlayY
              ? (Rt.bottom =
                  this._document.documentElement.clientHeight -
                  (Lt.y + this._overlayRect.height) +
                  "px")
              : (Rt.top = (0, p.HM)(Lt.y)),
            Rt
          );
        }
        _getExactOverlayX(Z, rt, yt) {
          let ut,
            Rt = { left: "", right: "" },
            Lt = this._getOverlayPoint(rt, this._overlayRect, Z);
          return (
            this._isPushed &&
              (Lt = this._pushOverlayOnScreen(Lt, this._overlayRect, yt)),
            (ut = this._isRtl()
              ? "end" === Z.overlayX
                ? "left"
                : "right"
              : "end" === Z.overlayX
                ? "right"
                : "left"),
            "right" === ut
              ? (Rt.right =
                  this._document.documentElement.clientWidth -
                  (Lt.x + this._overlayRect.width) +
                  "px")
              : (Rt.left = (0, p.HM)(Lt.x)),
            Rt
          );
        }
        _getScrollVisibility() {
          const Z = this._getOriginRect(),
            rt = this._pane.getBoundingClientRect(),
            yt = this._scrollables.map((Rt) =>
              Rt.getElementRef().nativeElement.getBoundingClientRect(),
            );
          return {
            isOriginClipped: Pt(Z, yt),
            isOriginOutsideView: St(Z, yt),
            isOverlayClipped: Pt(rt, yt),
            isOverlayOutsideView: St(rt, yt),
          };
        }
        _subtractOverflows(Z, ...rt) {
          return rt.reduce((yt, Rt) => yt - Math.max(Rt, 0), Z);
        }
        _getNarrowedViewportRect() {
          const Z = this._document.documentElement.clientWidth,
            rt = this._document.documentElement.clientHeight,
            yt = this._viewportRuler.getViewportScrollPosition();
          return {
            top: yt.top + this._viewportMargin,
            left: yt.left + this._viewportMargin,
            right: yt.left + Z - this._viewportMargin,
            bottom: yt.top + rt - this._viewportMargin,
            width: Z - 2 * this._viewportMargin,
            height: rt - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(Z, rt) {
          return "x" === rt
            ? null == Z.offsetX
              ? this._offsetX
              : Z.offsetX
            : null == Z.offsetY
              ? this._offsetY
              : Z.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(Z) {
          this._pane &&
            (0, p.Eq)(Z).forEach((rt) => {
              "" !== rt &&
                -1 === this._appliedPanelClasses.indexOf(rt) &&
                (this._appliedPanelClasses.push(rt),
                this._pane.classList.add(rt));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((Z) => {
              this._pane.classList.remove(Z);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const Z = this._origin;
          if (Z instanceof C.SBq)
            return Z.nativeElement.getBoundingClientRect();
          if (Z instanceof Element) return Z.getBoundingClientRect();
          const rt = Z.width || 0,
            yt = Z.height || 0;
          return {
            top: Z.y,
            bottom: Z.y + yt,
            left: Z.x,
            right: Z.x + rt,
            height: yt,
            width: rt,
          };
        }
      }
      function Mt(ot, Z) {
        for (let rt in Z) Z.hasOwnProperty(rt) && (ot[rt] = Z[rt]);
        return ot;
      }
      function we(ot) {
        if ("number" != typeof ot && null != ot) {
          const [Z, rt] = ot.split(Ue);
          return rt && "px" !== rt ? null : parseFloat(Z);
        }
        return ot || null;
      }
      function Vt(ot) {
        return {
          top: Math.floor(ot.top),
          right: Math.floor(ot.right),
          bottom: Math.floor(ot.bottom),
          left: Math.floor(ot.left),
          width: Math.floor(ot.width),
          height: Math.floor(ot.height),
        };
      }
      const li = "cdk-global-overlay-wrapper";
      class ii {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(Z) {
          const rt = Z.getConfig();
          (this._overlayRef = Z),
            this._width && !rt.width && Z.updateSize({ width: this._width }),
            this._height &&
              !rt.height &&
              Z.updateSize({ height: this._height }),
            Z.hostElement.classList.add(li),
            (this._isDisposed = !1);
        }
        top(Z = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = Z),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(Z = "") {
          return (this._xOffset = Z), (this._xPosition = "left"), this;
        }
        bottom(Z = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = Z),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(Z = "") {
          return (this._xOffset = Z), (this._xPosition = "right"), this;
        }
        start(Z = "") {
          return (this._xOffset = Z), (this._xPosition = "start"), this;
        }
        end(Z = "") {
          return (this._xOffset = Z), (this._xPosition = "end"), this;
        }
        width(Z = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: Z })
              : (this._width = Z),
            this
          );
        }
        height(Z = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: Z })
              : (this._height = Z),
            this
          );
        }
        centerHorizontally(Z = "") {
          return this.left(Z), (this._xPosition = "center"), this;
        }
        centerVertically(Z = "") {
          return this.top(Z), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const Z = this._overlayRef.overlayElement.style,
            rt = this._overlayRef.hostElement.style,
            yt = this._overlayRef.getConfig(),
            { width: Rt, height: Lt, maxWidth: ut, maxHeight: q } = yt,
            Ct = !(
              ("100%" !== Rt && "100vw" !== Rt) ||
              (ut && "100%" !== ut && "100vw" !== ut)
            ),
            H = !(
              ("100%" !== Lt && "100vh" !== Lt) ||
              (q && "100%" !== q && "100vh" !== q)
            ),
            Nt = this._xPosition,
            X = this._xOffset,
            se = "rtl" === this._overlayRef.getConfig().direction;
          let it = "",
            Ut = "",
            ve = "";
          Ct
            ? (ve = "flex-start")
            : "center" === Nt
              ? ((ve = "center"), se ? (Ut = X) : (it = X))
              : se
                ? "left" === Nt || "end" === Nt
                  ? ((ve = "flex-end"), (it = X))
                  : ("right" === Nt || "start" === Nt) &&
                    ((ve = "flex-start"), (Ut = X))
                : "left" === Nt || "start" === Nt
                  ? ((ve = "flex-start"), (it = X))
                  : ("right" === Nt || "end" === Nt) &&
                    ((ve = "flex-end"), (Ut = X)),
            (Z.position = this._cssPosition),
            (Z.marginLeft = Ct ? "0" : it),
            (Z.marginTop = H ? "0" : this._topOffset),
            (Z.marginBottom = this._bottomOffset),
            (Z.marginRight = Ct ? "0" : Ut),
            (rt.justifyContent = ve),
            (rt.alignItems = H ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const Z = this._overlayRef.overlayElement.style,
            rt = this._overlayRef.hostElement,
            yt = rt.style;
          rt.classList.remove(li),
            (yt.justifyContent =
              yt.alignItems =
              Z.marginTop =
              Z.marginBottom =
              Z.marginLeft =
              Z.marginRight =
              Z.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let Mi = (() => {
          class ot {
            constructor(rt, yt, Rt, Lt) {
              (this._viewportRuler = rt),
                (this._document = yt),
                (this._platform = Rt),
                (this._overlayContainer = Lt);
            }
            global() {
              return new ii();
            }
            flexibleConnectedTo(rt) {
              return new Ft(
                rt,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer,
              );
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(
                C.LFG(s.rL),
                C.LFG(x.K0),
                C.LFG(at.t4),
                C.LFG(Ie),
              );
            });
            static #e = (this.ɵprov = C.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: "root",
            }));
          }
          return ot;
        })(),
        fi = 0,
        ri = (() => {
          class ot {
            constructor(rt, yt, Rt, Lt, ut, q, Ct, H, Nt, X, se, it) {
              (this.scrollStrategies = rt),
                (this._overlayContainer = yt),
                (this._componentFactoryResolver = Rt),
                (this._positionBuilder = Lt),
                (this._keyboardDispatcher = ut),
                (this._injector = q),
                (this._ngZone = Ct),
                (this._document = H),
                (this._directionality = Nt),
                (this._location = X),
                (this._outsideClickDispatcher = se),
                (this._animationsModuleType = it);
            }
            create(rt) {
              const yt = this._createHostElement(),
                Rt = this._createPaneElement(yt),
                Lt = this._createPortalOutlet(Rt),
                ut = new ze(rt);
              return (
                (ut.direction = ut.direction || this._directionality.value),
                new Fe(
                  Lt,
                  yt,
                  Rt,
                  ut,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType,
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(rt) {
              const yt = this._document.createElement("div");
              return (
                (yt.id = "cdk-overlay-" + fi++),
                yt.classList.add("cdk-overlay-pane"),
                rt.appendChild(yt),
                yt
              );
            }
            _createHostElement() {
              const rt = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(rt), rt
              );
            }
            _createPortalOutlet(rt) {
              return (
                this._appRef || (this._appRef = this._injector.get(C.z2F)),
                new jt.u0(
                  rt,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document,
                )
              );
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(
                C.LFG(Kt),
                C.LFG(Ie),
                C.LFG(C._Vd),
                C.LFG(Mi),
                C.LFG(Vi),
                C.LFG(C.zs3),
                C.LFG(C.R0b),
                C.LFG(x.K0),
                C.LFG(A.Is),
                C.LFG(x.Ye),
                C.LFG(qi),
                C.LFG(C.QbO, 8),
              );
            });
            static #e = (this.ɵprov = C.Yz7({
              token: ot,
              factory: ot.ɵfac,
              providedIn: "root",
            }));
          }
          return ot;
        })();
      const te = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        Be = new C.OlP("cdk-connected-overlay-scroll-strategy");
      let Ne = (() => {
          class ot {
            constructor(rt) {
              this.elementRef = rt;
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(C.Y36(C.SBq));
            });
            static #e = (this.ɵdir = C.lG2({
              type: ot,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
              standalone: !0,
            }));
          }
          return ot;
        })(),
        Ri = (() => {
          class ot {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(rt) {
              (this._offsetX = rt),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(rt) {
              (this._offsetY = rt),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(rt) {
              this._hasBackdrop = (0, p.Ig)(rt);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(rt) {
              this._lockPosition = (0, p.Ig)(rt);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(rt) {
              this._flexibleDimensions = (0, p.Ig)(rt);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(rt) {
              this._growAfterOpen = (0, p.Ig)(rt);
            }
            get push() {
              return this._push;
            }
            set push(rt) {
              this._push = (0, p.Ig)(rt);
            }
            constructor(rt, yt, Rt, Lt, ut) {
              (this._overlay = rt),
                (this._dir = ut),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Jt.w0.EMPTY),
                (this._attachSubscription = Jt.w0.EMPTY),
                (this._detachSubscription = Jt.w0.EMPTY),
                (this._positionSubscription = Jt.w0.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new C.vpe()),
                (this.positionChange = new C.vpe()),
                (this.attach = new C.vpe()),
                (this.detach = new C.vpe()),
                (this.overlayKeydown = new C.vpe()),
                (this.overlayOutsideClick = new C.vpe()),
                (this._templatePortal = new jt.UE(yt, Rt)),
                (this._scrollStrategyFactory = Lt),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(rt) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                rt.origin && this.open && this._position.apply()),
                rt.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = te);
              const rt = (this._overlayRef = this._overlay.create(
                this._buildConfig(),
              ));
              (this._attachSubscription = rt
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = rt
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                rt.keydownEvents().subscribe((yt) => {
                  this.overlayKeydown.next(yt),
                    yt.keyCode === Ve.hY &&
                      !this.disableClose &&
                      !(0, Ve.Vb)(yt) &&
                      (yt.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((yt) => {
                  this.overlayOutsideClick.next(yt);
                });
            }
            _buildConfig() {
              const rt = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                yt = new ze({
                  direction: this._dir,
                  positionStrategy: rt,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (yt.width = this.width),
                (this.height || 0 === this.height) && (yt.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (yt.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (yt.minHeight = this.minHeight),
                this.backdropClass && (yt.backdropClass = this.backdropClass),
                this.panelClass && (yt.panelClass = this.panelClass),
                yt
              );
            }
            _updatePositionStrategy(rt) {
              const yt = this.positions.map((Rt) => ({
                originX: Rt.originX,
                originY: Rt.originY,
                overlayX: Rt.overlayX,
                overlayY: Rt.overlayY,
                offsetX: Rt.offsetX || this.offsetX,
                offsetY: Rt.offsetY || this.offsetY,
                panelClass: Rt.panelClass || void 0,
              }));
              return rt
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(yt)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const rt = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin(),
                );
              return this._updatePositionStrategy(rt), rt;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof Ne
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((rt) => {
                        this.backdropClick.emit(rt);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (function _(ot, Z = !1) {
                        return (0, kt.e)((rt, yt) => {
                          let Rt = 0;
                          rt.subscribe(
                            (0, $.x)(yt, (Lt) => {
                              const ut = ot(Lt, Rt++);
                              (ut || Z) && yt.next(Lt), !ut && yt.complete();
                            }),
                          );
                        });
                      })(() => this.positionChange.observers.length > 0),
                    )
                    .subscribe((rt) => {
                      this.positionChange.emit(rt),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
            static #t = (this.ɵfac = function (yt) {
              return new (yt || ot)(
                C.Y36(ri),
                C.Y36(C.Rgc),
                C.Y36(C.s_b),
                C.Y36(Be),
                C.Y36(A.Is, 8),
              );
            });
            static #e = (this.ɵdir = C.lG2({
              type: ot,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              standalone: !0,
              features: [C.TTD],
            }));
          }
          return ot;
        })();
      const Xi = {
        provide: Be,
        deps: [ri],
        useFactory: function gi(ot) {
          return () => ot.scrollStrategies.reposition();
        },
      };
      let _i = (() => {
        class ot {
          static #t = (this.ɵfac = function (yt) {
            return new (yt || ot)();
          });
          static #e = (this.ɵmod = C.oAB({ type: ot }));
          static #i = (this.ɵinj = C.cJS({
            providers: [ri, Xi],
            imports: [A.vT, jt.eL, s.Cl, s.Cl],
          }));
        }
        return ot;
      })();
    },
    2831: (ui, Zt, D) => {
      D.d(Zt, {
        Mq: () => gt,
        Oy: () => wt,
        _i: () => Jt,
        ht: () => We,
        i$: () => _,
        kV: () => He,
        qK: () => B,
        sA: () => Re,
        t4: () => p,
      });
      var s = D(5879),
        x = D(6814);
      let C;
      try {
        C = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        C = !1;
      }
      let lt,
        p = (() => {
          class _t {
            constructor(Pt) {
              (this._platformId = Pt),
                (this.isBrowser = this._platformId
                  ? (0, x.NF)(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !C) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
            static #t = (this.ɵfac = function (ee) {
              return new (ee || _t)(s.LFG(s.Lbi));
            });
            static #e = (this.ɵprov = s.Yz7({
              token: _t,
              factory: _t.ɵfac,
              providedIn: "root",
            }));
          }
          return _t;
        })();
      const bt = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function B() {
        if (lt) return lt;
        if ("object" != typeof document || !document)
          return (lt = new Set(bt)), lt;
        let _t = document.createElement("input");
        return (
          (lt = new Set(
            bt.filter((St) => (_t.setAttribute("type", St), _t.type === St)),
          )),
          lt
        );
      }
      let kt, A, jt, De;
      function _(_t) {
        return (function $() {
          if (null == kt && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (kt = !0) }),
              );
            } finally {
              kt = kt || !1;
            }
          return kt;
        })()
          ? _t
          : !!_t.capture;
      }
      function gt() {
        if (null == jt) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (jt = !1), jt;
          if ("scrollBehavior" in document.documentElement.style) jt = !0;
          else {
            const _t = Element.prototype.scrollTo;
            jt = !!_t && !/\{\s*\[native code\]\s*\}/.test(_t.toString());
          }
        }
        return jt;
      }
      function Jt() {
        if ("object" != typeof document || !document) return 0;
        if (null == A) {
          const _t = document.createElement("div"),
            St = _t.style;
          (_t.dir = "rtl"),
            (St.width = "1px"),
            (St.overflow = "auto"),
            (St.visibility = "hidden"),
            (St.pointerEvents = "none"),
            (St.position = "absolute");
          const Pt = document.createElement("div"),
            ee = Pt.style;
          (ee.width = "2px"),
            (ee.height = "1px"),
            _t.appendChild(Pt),
            document.body.appendChild(_t),
            (A = 0),
            0 === _t.scrollLeft &&
              ((_t.scrollLeft = 1), (A = 0 === _t.scrollLeft ? 1 : 2)),
            _t.remove();
        }
        return A;
      }
      function He(_t) {
        if (
          (function Ve() {
            if (null == De) {
              const _t = typeof document < "u" ? document.head : null;
              De = !(!_t || (!_t.createShadowRoot && !_t.attachShadow));
            }
            return De;
          })()
        ) {
          const St = _t.getRootNode ? _t.getRootNode() : null;
          if (typeof ShadowRoot < "u" && ShadowRoot && St instanceof ShadowRoot)
            return St;
        }
        return null;
      }
      function We() {
        let _t =
          typeof document < "u" && document ? document.activeElement : null;
        for (; _t && _t.shadowRoot; ) {
          const St = _t.shadowRoot.activeElement;
          if (St === _t) break;
          _t = St;
        }
        return _t;
      }
      function Re(_t) {
        return _t.composedPath ? _t.composedPath()[0] : _t.target;
      }
      function wt() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
    },
    8484: (ui, Zt, D) => {
      D.d(Zt, {
        C5: () => $,
        Pl: () => We,
        UE: () => _,
        eL: () => wt,
        en: () => jt,
        u0: () => Jt,
      });
      var s = D(5879),
        x = D(6814);
      class kt {
        attach(Pt) {
          return (this._attachedHost = Pt), Pt.attach(this);
        }
        detach() {
          let Pt = this._attachedHost;
          null != Pt && ((this._attachedHost = null), Pt.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(Pt) {
          this._attachedHost = Pt;
        }
      }
      class $ extends kt {
        constructor(Pt, ee, Kt, ze, mi) {
          super(),
            (this.component = Pt),
            (this.viewContainerRef = ee),
            (this.injector = Kt),
            (this.componentFactoryResolver = ze),
            (this.projectableNodes = mi);
        }
      }
      class _ extends kt {
        constructor(Pt, ee, Kt, ze) {
          super(),
            (this.templateRef = Pt),
            (this.viewContainerRef = ee),
            (this.context = Kt),
            (this.injector = ze);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(Pt, ee = this.context) {
          return (this.context = ee), super.attach(Pt);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class A extends kt {
        constructor(Pt) {
          super(), (this.element = Pt instanceof s.SBq ? Pt.nativeElement : Pt);
        }
      }
      class jt {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(Pt) {
          return Pt instanceof $
            ? ((this._attachedPortal = Pt), this.attachComponentPortal(Pt))
            : Pt instanceof _
              ? ((this._attachedPortal = Pt), this.attachTemplatePortal(Pt))
              : this.attachDomPortal && Pt instanceof A
                ? ((this._attachedPortal = Pt), this.attachDomPortal(Pt))
                : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(Pt) {
          this._disposeFn = Pt;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class Jt extends jt {
        constructor(Pt, ee, Kt, ze, mi) {
          super(),
            (this.outletElement = Pt),
            (this._componentFactoryResolver = ee),
            (this._appRef = Kt),
            (this._defaultInjector = ze),
            (this.attachDomPortal = (ie) => {
              const vi = ie.element,
                Ge = this._document.createComment("dom-portal");
              vi.parentNode.insertBefore(Ge, vi),
                this.outletElement.appendChild(vi),
                (this._attachedPortal = ie),
                super.setDisposeFn(() => {
                  Ge.parentNode && Ge.parentNode.replaceChild(vi, Ge);
                });
            }),
            (this._document = mi);
        }
        attachComponentPortal(Pt) {
          const Kt = (
            Pt.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(Pt.component);
          let ze;
          return (
            Pt.viewContainerRef
              ? ((ze = Pt.viewContainerRef.createComponent(
                  Kt,
                  Pt.viewContainerRef.length,
                  Pt.injector || Pt.viewContainerRef.injector,
                  Pt.projectableNodes || void 0,
                )),
                this.setDisposeFn(() => ze.destroy()))
              : ((ze = Kt.create(
                  Pt.injector || this._defaultInjector || s.zs3.NULL,
                )),
                this._appRef.attachView(ze.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(ze.hostView),
                    ze.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(ze)),
            (this._attachedPortal = Pt),
            ze
          );
        }
        attachTemplatePortal(Pt) {
          let ee = Pt.viewContainerRef,
            Kt = ee.createEmbeddedView(Pt.templateRef, Pt.context, {
              injector: Pt.injector,
            });
          return (
            Kt.rootNodes.forEach((ze) => this.outletElement.appendChild(ze)),
            Kt.detectChanges(),
            this.setDisposeFn(() => {
              let ze = ee.indexOf(Kt);
              -1 !== ze && ee.remove(ze);
            }),
            (this._attachedPortal = Pt),
            Kt
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(Pt) {
          return Pt.hostView.rootNodes[0];
        }
      }
      let We = (() => {
          class St extends jt {
            constructor(ee, Kt, ze) {
              super(),
                (this._componentFactoryResolver = ee),
                (this._viewContainerRef = Kt),
                (this._isInitialized = !1),
                (this.attached = new s.vpe()),
                (this.attachDomPortal = (mi) => {
                  const ie = mi.element,
                    vi = this._document.createComment("dom-portal");
                  mi.setAttachedHost(this),
                    ie.parentNode.insertBefore(vi, ie),
                    this._getRootNode().appendChild(ie),
                    (this._attachedPortal = mi),
                    super.setDisposeFn(() => {
                      vi.parentNode && vi.parentNode.replaceChild(ie, vi);
                    });
                }),
                (this._document = ze);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(ee) {
              (this.hasAttached() && !ee && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                ee && super.attach(ee),
                (this._attachedPortal = ee || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(ee) {
              ee.setAttachedHost(this);
              const Kt =
                  null != ee.viewContainerRef
                    ? ee.viewContainerRef
                    : this._viewContainerRef,
                mi = (
                  ee.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(ee.component),
                ie = Kt.createComponent(
                  mi,
                  Kt.length,
                  ee.injector || Kt.injector,
                  ee.projectableNodes || void 0,
                );
              return (
                Kt !== this._viewContainerRef &&
                  this._getRootNode().appendChild(ie.hostView.rootNodes[0]),
                super.setDisposeFn(() => ie.destroy()),
                (this._attachedPortal = ee),
                (this._attachedRef = ie),
                this.attached.emit(ie),
                ie
              );
            }
            attachTemplatePortal(ee) {
              ee.setAttachedHost(this);
              const Kt = this._viewContainerRef.createEmbeddedView(
                ee.templateRef,
                ee.context,
                { injector: ee.injector },
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = ee),
                (this._attachedRef = Kt),
                this.attached.emit(Kt),
                Kt
              );
            }
            _getRootNode() {
              const ee = this._viewContainerRef.element.nativeElement;
              return ee.nodeType === ee.ELEMENT_NODE ? ee : ee.parentNode;
            }
            static #t = (this.ɵfac = function (Kt) {
              return new (Kt || St)(s.Y36(s._Vd), s.Y36(s.s_b), s.Y36(x.K0));
            });
            static #e = (this.ɵdir = s.lG2({
              type: St,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [s.qOj],
            }));
          }
          return St;
        })(),
        wt = (() => {
          class St {
            static #t = (this.ɵfac = function (Kt) {
              return new (Kt || St)();
            });
            static #e = (this.ɵmod = s.oAB({ type: St }));
            static #i = (this.ɵinj = s.cJS({}));
          }
          return St;
        })();
    },
    6702: (ui, Zt, D) => {
      D.d(Zt, {
        PQ: () => Vt,
        ZD: () => gi,
        mF: () => we,
        Cl: () => Xi,
        rL: () => Le,
      });
      var s = D(2495),
        x = D(5879),
        C = D(8645),
        p = D(2096),
        at = D(5592),
        lt = D(2438),
        B = (D(927), D(1954));
      let $,
        kt = 1;
      const _ = {};
      function A(_i) {
        return _i in _ && (delete _[_i], !0);
      }
      const jt = {
          setImmediate(_i) {
            const de = kt++;
            return (
              (_[de] = !0),
              $ || ($ = Promise.resolve()),
              $.then(() => A(de) && _i()),
              de
            );
          },
          clearImmediate(_i) {
            A(_i);
          },
        },
        { setImmediate: Jt, clearImmediate: De } = jt,
        Ve = {
          setImmediate(..._i) {
            const { delegate: de } = Ve;
            return (de?.setImmediate || Jt)(..._i);
          },
          clearImmediate(_i) {
            const { delegate: de } = Ve;
            return (de?.clearImmediate || De)(_i);
          },
          delegate: void 0,
        };
      var We = D(2631);
      new (class Re extends We.v {
        flush(de) {
          this._active = !0;
          const ot = this._scheduled;
          this._scheduled = void 0;
          const { actions: Z } = this;
          let rt;
          de = de || Z.shift();
          do {
            if ((rt = de.execute(de.state, de.delay))) break;
          } while ((de = Z[0]) && de.id === ot && Z.shift());
          if (((this._active = !1), rt)) {
            for (; (de = Z[0]) && de.id === ot && Z.shift(); ) de.unsubscribe();
            throw rt;
          }
        }
      })(
        class He extends B.o {
          constructor(de, ot) {
            super(de, ot), (this.scheduler = de), (this.work = ot);
          }
          requestAsyncId(de, ot, Z = 0) {
            return null !== Z && Z > 0
              ? super.requestAsyncId(de, ot, Z)
              : (de.actions.push(this),
                de._scheduled ||
                  (de._scheduled = Ve.setImmediate(de.flush.bind(de, void 0))));
          }
          recycleAsyncId(de, ot, Z = 0) {
            var rt;
            if (null != Z ? Z > 0 : this.delay > 0)
              return super.recycleAsyncId(de, ot, Z);
            const { actions: yt } = de;
            null != ot &&
              (null === (rt = yt[yt.length - 1]) || void 0 === rt
                ? void 0
                : rt.id) !== ot &&
              (Ve.clearImmediate(ot),
              de._scheduled === ot && (de._scheduled = void 0));
          }
        },
      );
      var St = D(6321),
        Pt = D(9360),
        ee = D(4829),
        Kt = D(8251),
        mi = D(4825);
      function ie(_i, de = St.z) {
        return (function ze(_i) {
          return (0, Pt.e)((de, ot) => {
            let Z = !1,
              rt = null,
              yt = null,
              Rt = !1;
            const Lt = () => {
                if ((yt?.unsubscribe(), (yt = null), Z)) {
                  Z = !1;
                  const q = rt;
                  (rt = null), ot.next(q);
                }
                Rt && ot.complete();
              },
              ut = () => {
                (yt = null), Rt && ot.complete();
              };
            de.subscribe(
              (0, Kt.x)(
                ot,
                (q) => {
                  (Z = !0),
                    (rt = q),
                    yt ||
                      (0, ee.Xf)(_i(q)).subscribe((yt = (0, Kt.x)(ot, Lt, ut)));
                },
                () => {
                  (Rt = !0), (!Z || !yt || yt.closed) && ot.complete();
                },
              ),
            );
          });
        })(() => (0, mi.H)(_i, de));
      }
      var vi = D(2181),
        Ge = D(9773),
        hi = D(2831),
        Si = D(6814),
        Vi = D(9388);
      let we = (() => {
          class _i {
            constructor(ot, Z, rt) {
              (this._ngZone = ot),
                (this._platform = Z),
                (this._scrolled = new C.x()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = rt);
            }
            register(ot) {
              this.scrollContainers.has(ot) ||
                this.scrollContainers.set(
                  ot,
                  ot.elementScrolled().subscribe(() => this._scrolled.next(ot)),
                );
            }
            deregister(ot) {
              const Z = this.scrollContainers.get(ot);
              Z && (Z.unsubscribe(), this.scrollContainers.delete(ot));
            }
            scrolled(ot = 20) {
              return this._platform.isBrowser
                ? new at.y((Z) => {
                    this._globalSubscription || this._addGlobalListener();
                    const rt =
                      ot > 0
                        ? this._scrolled.pipe(ie(ot)).subscribe(Z)
                        : this._scrolled.subscribe(Z);
                    return (
                      this._scrolledCount++,
                      () => {
                        rt.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, p.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((ot, Z) => this.deregister(Z)),
                this._scrolled.complete();
            }
            ancestorScrolled(ot, Z) {
              const rt = this.getAncestorScrollContainers(ot);
              return this.scrolled(Z).pipe(
                (0, vi.h)((yt) => !yt || rt.indexOf(yt) > -1),
              );
            }
            getAncestorScrollContainers(ot) {
              const Z = [];
              return (
                this.scrollContainers.forEach((rt, yt) => {
                  this._scrollableContainsElement(yt, ot) && Z.push(yt);
                }),
                Z
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(ot, Z) {
              let rt = (0, s.fI)(Z),
                yt = ot.getElementRef().nativeElement;
              do {
                if (rt == yt) return !0;
              } while ((rt = rt.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() => {
                const ot = this._getWindow();
                return (0, lt.R)(ot.document, "scroll").subscribe(() =>
                  this._scrolled.next(),
                );
              });
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
            static #t = (this.ɵfac = function (Z) {
              return new (Z || _i)(x.LFG(x.R0b), x.LFG(hi.t4), x.LFG(Si.K0, 8));
            });
            static #e = (this.ɵprov = x.Yz7({
              token: _i,
              factory: _i.ɵfac,
              providedIn: "root",
            }));
          }
          return _i;
        })(),
        Vt = (() => {
          class _i {
            constructor(ot, Z, rt, yt) {
              (this.elementRef = ot),
                (this.scrollDispatcher = Z),
                (this.ngZone = rt),
                (this.dir = yt),
                (this._destroyed = new C.x()),
                (this._elementScrolled = new at.y((Rt) =>
                  this.ngZone.runOutsideAngular(() =>
                    (0, lt.R)(this.elementRef.nativeElement, "scroll")
                      .pipe((0, Ge.R)(this._destroyed))
                      .subscribe(Rt),
                  ),
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(ot) {
              const Z = this.elementRef.nativeElement,
                rt = this.dir && "rtl" == this.dir.value;
              null == ot.left && (ot.left = rt ? ot.end : ot.start),
                null == ot.right && (ot.right = rt ? ot.start : ot.end),
                null != ot.bottom &&
                  (ot.top = Z.scrollHeight - Z.clientHeight - ot.bottom),
                rt && 0 != (0, hi._i)()
                  ? (null != ot.left &&
                      (ot.right = Z.scrollWidth - Z.clientWidth - ot.left),
                    2 == (0, hi._i)()
                      ? (ot.left = ot.right)
                      : 1 == (0, hi._i)() &&
                        (ot.left = ot.right ? -ot.right : ot.right))
                  : null != ot.right &&
                    (ot.left = Z.scrollWidth - Z.clientWidth - ot.right),
                this._applyScrollToOptions(ot);
            }
            _applyScrollToOptions(ot) {
              const Z = this.elementRef.nativeElement;
              (0, hi.Mq)()
                ? Z.scrollTo(ot)
                : (null != ot.top && (Z.scrollTop = ot.top),
                  null != ot.left && (Z.scrollLeft = ot.left));
            }
            measureScrollOffset(ot) {
              const Z = "left",
                yt = this.elementRef.nativeElement;
              if ("top" == ot) return yt.scrollTop;
              if ("bottom" == ot)
                return yt.scrollHeight - yt.clientHeight - yt.scrollTop;
              const Rt = this.dir && "rtl" == this.dir.value;
              return (
                "start" == ot
                  ? (ot = Rt ? "right" : Z)
                  : "end" == ot && (ot = Rt ? Z : "right"),
                Rt && 2 == (0, hi._i)()
                  ? ot == Z
                    ? yt.scrollWidth - yt.clientWidth - yt.scrollLeft
                    : yt.scrollLeft
                  : Rt && 1 == (0, hi._i)()
                    ? ot == Z
                      ? yt.scrollLeft + yt.scrollWidth - yt.clientWidth
                      : -yt.scrollLeft
                    : ot == Z
                      ? yt.scrollLeft
                      : yt.scrollWidth - yt.clientWidth - yt.scrollLeft
              );
            }
            static #t = (this.ɵfac = function (Z) {
              return new (Z || _i)(
                x.Y36(x.SBq),
                x.Y36(we),
                x.Y36(x.R0b),
                x.Y36(Vi.Is, 8),
              );
            });
            static #e = (this.ɵdir = x.lG2({
              type: _i,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
              standalone: !0,
            }));
          }
          return _i;
        })(),
        Le = (() => {
          class _i {
            constructor(ot, Z, rt) {
              (this._platform = ot),
                (this._change = new C.x()),
                (this._changeListener = (yt) => {
                  this._change.next(yt);
                }),
                (this._document = rt),
                Z.runOutsideAngular(() => {
                  if (ot.isBrowser) {
                    const yt = this._getWindow();
                    yt.addEventListener("resize", this._changeListener),
                      yt.addEventListener(
                        "orientationchange",
                        this._changeListener,
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const ot = this._getWindow();
                ot.removeEventListener("resize", this._changeListener),
                  ot.removeEventListener(
                    "orientationchange",
                    this._changeListener,
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const ot = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return (
                this._platform.isBrowser || (this._viewportSize = null), ot
              );
            }
            getViewportRect() {
              const ot = this.getViewportScrollPosition(),
                { width: Z, height: rt } = this.getViewportSize();
              return {
                top: ot.top,
                left: ot.left,
                bottom: ot.top + rt,
                right: ot.left + Z,
                height: rt,
                width: Z,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const ot = this._document,
                Z = this._getWindow(),
                rt = ot.documentElement,
                yt = rt.getBoundingClientRect();
              return {
                top:
                  -yt.top ||
                  ot.body.scrollTop ||
                  Z.scrollY ||
                  rt.scrollTop ||
                  0,
                left:
                  -yt.left ||
                  ot.body.scrollLeft ||
                  Z.scrollX ||
                  rt.scrollLeft ||
                  0,
              };
            }
            change(ot = 20) {
              return ot > 0 ? this._change.pipe(ie(ot)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const ot = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: ot.innerWidth, height: ot.innerHeight }
                : { width: 0, height: 0 };
            }
            static #t = (this.ɵfac = function (Z) {
              return new (Z || _i)(x.LFG(hi.t4), x.LFG(x.R0b), x.LFG(Si.K0, 8));
            });
            static #e = (this.ɵprov = x.Yz7({
              token: _i,
              factory: _i.ɵfac,
              providedIn: "root",
            }));
          }
          return _i;
        })(),
        gi = (() => {
          class _i {
            static #t = (this.ɵfac = function (Z) {
              return new (Z || _i)();
            });
            static #e = (this.ɵmod = x.oAB({ type: _i }));
            static #i = (this.ɵinj = x.cJS({}));
          }
          return _i;
        })(),
        Xi = (() => {
          class _i {
            static #t = (this.ɵfac = function (Z) {
              return new (Z || _i)();
            });
            static #e = (this.ɵmod = x.oAB({ type: _i }));
            static #i = (this.ɵinj = x.cJS({
              imports: [Vi.vT, gi, Vi.vT, gi],
            }));
          }
          return _i;
        })();
    },
    6814: (ui, Zt, D) => {
      D.d(Zt, {
        Do: () => De,
        ED: () => Gr,
        EM: () => jn,
        H9: () => sn,
        HT: () => p,
        JF: () => Qo,
        JJ: () => On,
        K0: () => lt,
        Mx: () => Ei,
        NF: () => Er,
        O5: () => Tn,
        PC: () => ir,
        PM: () => Zo,
        RF: () => Kn,
        S$: () => jt,
        V_: () => B,
        Ye: () => Ve,
        b0: () => Jt,
        bD: () => Vn,
        ez: () => xo,
        mk: () => ln,
        n9: () => Ir,
        q: () => C,
        sg: () => An,
        tP: () => Zr,
        uU: () => Xn,
        w_: () => at,
      });
      var s = D(5879);
      let x = null;
      function C() {
        return x;
      }
      function p(R) {
        x || (x = R);
      }
      class at {}
      const lt = new s.OlP("DocumentToken");
      let bt = (() => {
        class R {
          historyGo(G) {
            throw new Error("Not implemented");
          }
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: R,
            factory: function () {
              return (0, s.f3M)(kt);
            },
            providedIn: "platform",
          }));
        }
        return R;
      })();
      const B = new s.OlP("Location Initialized");
      let kt = (() => {
        class R extends bt {
          constructor() {
            super(),
              (this._doc = (0, s.f3M)(lt)),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return C().getBaseHref(this._doc);
          }
          onPopState(G) {
            const nt = C().getGlobalEventTarget(this._doc, "window");
            return (
              nt.addEventListener("popstate", G, !1),
              () => nt.removeEventListener("popstate", G)
            );
          }
          onHashChange(G) {
            const nt = C().getGlobalEventTarget(this._doc, "window");
            return (
              nt.addEventListener("hashchange", G, !1),
              () => nt.removeEventListener("hashchange", G)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(G) {
            this._location.pathname = G;
          }
          pushState(G, nt, ce) {
            this._history.pushState(G, nt, ce);
          }
          replaceState(G, nt, ce) {
            this._history.replaceState(G, nt, ce);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(G = 0) {
            this._history.go(G);
          }
          getState() {
            return this._history.state;
          }
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: R,
            factory: function () {
              return new R();
            },
            providedIn: "platform",
          }));
        }
        return R;
      })();
      function $(R, ht) {
        if (0 == R.length) return ht;
        if (0 == ht.length) return R;
        let G = 0;
        return (
          R.endsWith("/") && G++,
          ht.startsWith("/") && G++,
          2 == G ? R + ht.substring(1) : 1 == G ? R + ht : R + "/" + ht
        );
      }
      function _(R) {
        const ht = R.match(/#|\?|$/),
          G = (ht && ht.index) || R.length;
        return R.slice(0, G - ("/" === R[G - 1] ? 1 : 0)) + R.slice(G);
      }
      function A(R) {
        return R && "?" !== R[0] ? "?" + R : R;
      }
      let jt = (() => {
        class R {
          historyGo(G) {
            throw new Error("Not implemented");
          }
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: R,
            factory: function () {
              return (0, s.f3M)(Jt);
            },
            providedIn: "root",
          }));
        }
        return R;
      })();
      const gt = new s.OlP("appBaseHref");
      let Jt = (() => {
          class R extends jt {
            constructor(G, nt) {
              super(),
                (this._platformLocation = G),
                (this._removeListenerFns = []),
                (this._baseHref =
                  nt ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  (0, s.f3M)(lt).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(G) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(G),
                this._platformLocation.onHashChange(G),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(G) {
              return $(this._baseHref, G);
            }
            path(G = !1) {
              const nt =
                  this._platformLocation.pathname +
                  A(this._platformLocation.search),
                ce = this._platformLocation.hash;
              return ce && G ? `${nt}${ce}` : nt;
            }
            pushState(G, nt, ce, ni) {
              const pi = this.prepareExternalUrl(ce + A(ni));
              this._platformLocation.pushState(G, nt, pi);
            }
            replaceState(G, nt, ce, ni) {
              const pi = this.prepareExternalUrl(ce + A(ni));
              this._platformLocation.replaceState(G, nt, pi);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(G = 0) {
              this._platformLocation.historyGo?.(G);
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.LFG(bt), s.LFG(gt, 8));
            });
            static #e = (this.ɵprov = s.Yz7({
              token: R,
              factory: R.ɵfac,
              providedIn: "root",
            }));
          }
          return R;
        })(),
        De = (() => {
          class R extends jt {
            constructor(G, nt) {
              super(),
                (this._platformLocation = G),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != nt && (this._baseHref = nt);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(G) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(G),
                this._platformLocation.onHashChange(G),
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(G = !1) {
              let nt = this._platformLocation.hash;
              return (
                null == nt && (nt = "#"), nt.length > 0 ? nt.substring(1) : nt
              );
            }
            prepareExternalUrl(G) {
              const nt = $(this._baseHref, G);
              return nt.length > 0 ? "#" + nt : nt;
            }
            pushState(G, nt, ce, ni) {
              let pi = this.prepareExternalUrl(ce + A(ni));
              0 == pi.length && (pi = this._platformLocation.pathname),
                this._platformLocation.pushState(G, nt, pi);
            }
            replaceState(G, nt, ce, ni) {
              let pi = this.prepareExternalUrl(ce + A(ni));
              0 == pi.length && (pi = this._platformLocation.pathname),
                this._platformLocation.replaceState(G, nt, pi);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(G = 0) {
              this._platformLocation.historyGo?.(G);
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.LFG(bt), s.LFG(gt, 8));
            });
            static #e = (this.ɵprov = s.Yz7({ token: R, factory: R.ɵfac }));
          }
          return R;
        })(),
        Ve = (() => {
          class R {
            constructor(G) {
              (this._subject = new s.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = G);
              const nt = this._locationStrategy.getBaseHref();
              (this._basePath = (function wt(R) {
                if (new RegExp("^(https?:)?//").test(R)) {
                  const [, G] = R.split(/\/\/[^\/]+/);
                  return G;
                }
                return R;
              })(_(Re(nt)))),
                this._locationStrategy.onPopState((ce) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: ce.state,
                    type: ce.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(G = !1) {
              return this.normalize(this._locationStrategy.path(G));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(G, nt = "") {
              return this.path() == this.normalize(G + A(nt));
            }
            normalize(G) {
              return R.stripTrailingSlash(
                (function We(R, ht) {
                  if (!R || !ht.startsWith(R)) return ht;
                  const G = ht.substring(R.length);
                  return "" === G || ["/", ";", "?", "#"].includes(G[0])
                    ? G
                    : ht;
                })(this._basePath, Re(G)),
              );
            }
            prepareExternalUrl(G) {
              return (
                G && "/" !== G[0] && (G = "/" + G),
                this._locationStrategy.prepareExternalUrl(G)
              );
            }
            go(G, nt = "", ce = null) {
              this._locationStrategy.pushState(ce, "", G, nt),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(G + A(nt)),
                  ce,
                );
            }
            replaceState(G, nt = "", ce = null) {
              this._locationStrategy.replaceState(ce, "", G, nt),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(G + A(nt)),
                  ce,
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(G = 0) {
              this._locationStrategy.historyGo?.(G);
            }
            onUrlChange(G) {
              return (
                this._urlChangeListeners.push(G),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((nt) => {
                    this._notifyUrlChangeListeners(nt.url, nt.state);
                  })),
                () => {
                  const nt = this._urlChangeListeners.indexOf(G);
                  this._urlChangeListeners.splice(nt, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(G = "", nt) {
              this._urlChangeListeners.forEach((ce) => ce(G, nt));
            }
            subscribe(G, nt, ce) {
              return this._subject.subscribe({
                next: G,
                error: nt,
                complete: ce,
              });
            }
            static #t = (this.normalizeQueryParams = A);
            static #e = (this.joinWithSlash = $);
            static #i = (this.stripTrailingSlash = _);
            static #n = (this.ɵfac = function (nt) {
              return new (nt || R)(s.LFG(jt));
            });
            static #o = (this.ɵprov = s.Yz7({
              token: R,
              factory: function () {
                return (function He() {
                  return new Ve((0, s.LFG)(jt));
                })();
              },
              providedIn: "root",
            }));
          }
          return R;
        })();
      function Re(R) {
        return R.replace(/\/index.html$/, "");
      }
      const _t = {
        ADP: [void 0, void 0, 0],
        AFN: [void 0, "\u060b", 0],
        ALL: [void 0, void 0, 0],
        AMD: [void 0, "\u058f", 2],
        AOA: [void 0, "Kz"],
        ARS: [void 0, "$"],
        AUD: ["A$", "$"],
        AZN: [void 0, "\u20bc"],
        BAM: [void 0, "KM"],
        BBD: [void 0, "$"],
        BDT: [void 0, "\u09f3"],
        BHD: [void 0, void 0, 3],
        BIF: [void 0, void 0, 0],
        BMD: [void 0, "$"],
        BND: [void 0, "$"],
        BOB: [void 0, "Bs"],
        BRL: ["R$"],
        BSD: [void 0, "$"],
        BWP: [void 0, "P"],
        BYN: [void 0, void 0, 2],
        BYR: [void 0, void 0, 0],
        BZD: [void 0, "$"],
        CAD: ["CA$", "$", 2],
        CHF: [void 0, void 0, 2],
        CLF: [void 0, void 0, 4],
        CLP: [void 0, "$", 0],
        CNY: ["CN\xa5", "\xa5"],
        COP: [void 0, "$", 2],
        CRC: [void 0, "\u20a1", 2],
        CUC: [void 0, "$"],
        CUP: [void 0, "$"],
        CZK: [void 0, "K\u010d", 2],
        DJF: [void 0, void 0, 0],
        DKK: [void 0, "kr", 2],
        DOP: [void 0, "$"],
        EGP: [void 0, "E\xa3"],
        ESP: [void 0, "\u20a7", 0],
        EUR: ["\u20ac"],
        FJD: [void 0, "$"],
        FKP: [void 0, "\xa3"],
        GBP: ["\xa3"],
        GEL: [void 0, "\u20be"],
        GHS: [void 0, "GH\u20b5"],
        GIP: [void 0, "\xa3"],
        GNF: [void 0, "FG", 0],
        GTQ: [void 0, "Q"],
        GYD: [void 0, "$", 2],
        HKD: ["HK$", "$"],
        HNL: [void 0, "L"],
        HRK: [void 0, "kn"],
        HUF: [void 0, "Ft", 2],
        IDR: [void 0, "Rp", 2],
        ILS: ["\u20aa"],
        INR: ["\u20b9"],
        IQD: [void 0, void 0, 0],
        IRR: [void 0, void 0, 0],
        ISK: [void 0, "kr", 0],
        ITL: [void 0, void 0, 0],
        JMD: [void 0, "$"],
        JOD: [void 0, void 0, 3],
        JPY: ["\xa5", void 0, 0],
        KHR: [void 0, "\u17db"],
        KMF: [void 0, "CF", 0],
        KPW: [void 0, "\u20a9", 0],
        KRW: ["\u20a9", void 0, 0],
        KWD: [void 0, void 0, 3],
        KYD: [void 0, "$"],
        KZT: [void 0, "\u20b8"],
        LAK: [void 0, "\u20ad", 0],
        LBP: [void 0, "L\xa3", 0],
        LKR: [void 0, "Rs"],
        LRD: [void 0, "$"],
        LTL: [void 0, "Lt"],
        LUF: [void 0, void 0, 0],
        LVL: [void 0, "Ls"],
        LYD: [void 0, void 0, 3],
        MGA: [void 0, "Ar", 0],
        MGF: [void 0, void 0, 0],
        MMK: [void 0, "K", 0],
        MNT: [void 0, "\u20ae", 2],
        MRO: [void 0, void 0, 0],
        MUR: [void 0, "Rs", 2],
        MXN: ["MX$", "$"],
        MYR: [void 0, "RM"],
        NAD: [void 0, "$"],
        NGN: [void 0, "\u20a6"],
        NIO: [void 0, "C$"],
        NOK: [void 0, "kr", 2],
        NPR: [void 0, "Rs"],
        NZD: ["NZ$", "$"],
        OMR: [void 0, void 0, 3],
        PHP: ["\u20b1"],
        PKR: [void 0, "Rs", 2],
        PLN: [void 0, "z\u0142"],
        PYG: [void 0, "\u20b2", 0],
        RON: [void 0, "lei"],
        RSD: [void 0, void 0, 0],
        RUB: [void 0, "\u20bd"],
        RWF: [void 0, "RF", 0],
        SBD: [void 0, "$"],
        SEK: [void 0, "kr", 2],
        SGD: [void 0, "$"],
        SHP: [void 0, "\xa3"],
        SLE: [void 0, void 0, 2],
        SLL: [void 0, void 0, 0],
        SOS: [void 0, void 0, 0],
        SRD: [void 0, "$"],
        SSP: [void 0, "\xa3"],
        STD: [void 0, void 0, 0],
        STN: [void 0, "Db"],
        SYP: [void 0, "\xa3", 0],
        THB: [void 0, "\u0e3f"],
        TMM: [void 0, void 0, 0],
        TND: [void 0, void 0, 3],
        TOP: [void 0, "T$"],
        TRL: [void 0, void 0, 0],
        TRY: [void 0, "\u20ba"],
        TTD: [void 0, "$"],
        TWD: ["NT$", "$", 2],
        TZS: [void 0, void 0, 2],
        UAH: [void 0, "\u20b4"],
        UGX: [void 0, void 0, 0],
        USD: ["$"],
        UYI: [void 0, void 0, 0],
        UYU: [void 0, "$"],
        UYW: [void 0, void 0, 4],
        UZS: [void 0, void 0, 2],
        VEF: [void 0, "Bs", 2],
        VND: ["\u20ab", void 0, 0],
        VUV: [void 0, void 0, 0],
        XAF: ["FCFA", void 0, 0],
        XCD: ["EC$", "$"],
        XOF: ["F\u202fCFA", void 0, 0],
        XPF: ["CFPF", void 0, 0],
        XXX: ["\xa4"],
        YER: [void 0, void 0, 0],
        ZAR: [void 0, "R"],
        ZMK: [void 0, void 0, 0],
        ZMW: [void 0, "ZK"],
        ZWD: [void 0, void 0, 0],
      };
      var St = (function (R) {
          return (
            (R[(R.Decimal = 0)] = "Decimal"),
            (R[(R.Percent = 1)] = "Percent"),
            (R[(R.Currency = 2)] = "Currency"),
            (R[(R.Scientific = 3)] = "Scientific"),
            R
          );
        })(St || {}),
        ee = (function (R) {
          return (
            (R[(R.Format = 0)] = "Format"),
            (R[(R.Standalone = 1)] = "Standalone"),
            R
          );
        })(ee || {}),
        Kt = (function (R) {
          return (
            (R[(R.Narrow = 0)] = "Narrow"),
            (R[(R.Abbreviated = 1)] = "Abbreviated"),
            (R[(R.Wide = 2)] = "Wide"),
            (R[(R.Short = 3)] = "Short"),
            R
          );
        })(Kt || {}),
        ze = (function (R) {
          return (
            (R[(R.Short = 0)] = "Short"),
            (R[(R.Medium = 1)] = "Medium"),
            (R[(R.Long = 2)] = "Long"),
            (R[(R.Full = 3)] = "Full"),
            R
          );
        })(ze || {}),
        mi = (function (R) {
          return (
            (R[(R.Decimal = 0)] = "Decimal"),
            (R[(R.Group = 1)] = "Group"),
            (R[(R.List = 2)] = "List"),
            (R[(R.PercentSign = 3)] = "PercentSign"),
            (R[(R.PlusSign = 4)] = "PlusSign"),
            (R[(R.MinusSign = 5)] = "MinusSign"),
            (R[(R.Exponential = 6)] = "Exponential"),
            (R[(R.SuperscriptingExponent = 7)] = "SuperscriptingExponent"),
            (R[(R.PerMille = 8)] = "PerMille"),
            (R[(R.Infinity = 9)] = "Infinity"),
            (R[(R.NaN = 10)] = "NaN"),
            (R[(R.TimeSeparator = 11)] = "TimeSeparator"),
            (R[(R.CurrencyDecimal = 12)] = "CurrencyDecimal"),
            (R[(R.CurrencyGroup = 13)] = "CurrencyGroup"),
            R
          );
        })(mi || {});
      function Fe(R, ht) {
        return te((0, s.cg1)(R)[s.wAp.DateFormat], ht);
      }
      function xe(R, ht) {
        return te((0, s.cg1)(R)[s.wAp.TimeFormat], ht);
      }
      function Ue(R, ht) {
        return te((0, s.cg1)(R)[s.wAp.DateTimeFormat], ht);
      }
      function Ft(R, ht) {
        const G = (0, s.cg1)(R),
          nt = G[s.wAp.NumberSymbols][ht];
        if (typeof nt > "u") {
          if (ht === mi.CurrencyDecimal)
            return G[s.wAp.NumberSymbols][mi.Decimal];
          if (ht === mi.CurrencyGroup) return G[s.wAp.NumberSymbols][mi.Group];
        }
        return nt;
      }
      function Mt(R, ht) {
        return (0, s.cg1)(R)[s.wAp.NumberFormats][ht];
      }
      function ii(R) {
        if (!R[s.wAp.ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${R[s.wAp.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`,
          );
      }
      function te(R, ht) {
        for (let G = ht; G > -1; G--) if (typeof R[G] < "u") return R[G];
        throw new Error("Locale data API: locale data undefined");
      }
      function Be(R) {
        const [ht, G] = R.split(":");
        return { hours: +ht, minutes: +G };
      }
      const Xi =
          /^(\d{4,})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        _i = {},
        de =
          /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
      var ot = (function (R) {
          return (
            (R[(R.Short = 0)] = "Short"),
            (R[(R.ShortGMT = 1)] = "ShortGMT"),
            (R[(R.Long = 2)] = "Long"),
            (R[(R.Extended = 3)] = "Extended"),
            R
          );
        })(ot || {}),
        Z = (function (R) {
          return (
            (R[(R.FullYear = 0)] = "FullYear"),
            (R[(R.Month = 1)] = "Month"),
            (R[(R.Date = 2)] = "Date"),
            (R[(R.Hours = 3)] = "Hours"),
            (R[(R.Minutes = 4)] = "Minutes"),
            (R[(R.Seconds = 5)] = "Seconds"),
            (R[(R.FractionalSeconds = 6)] = "FractionalSeconds"),
            (R[(R.Day = 7)] = "Day"),
            R
          );
        })(Z || {}),
        rt = (function (R) {
          return (
            (R[(R.DayPeriods = 0)] = "DayPeriods"),
            (R[(R.Days = 1)] = "Days"),
            (R[(R.Months = 2)] = "Months"),
            (R[(R.Eras = 3)] = "Eras"),
            R
          );
        })(rt || {});
      function yt(R, ht, G, nt) {
        let ce = (function pt(R) {
          if (U(R)) return R;
          if ("number" == typeof R && !isNaN(R)) return new Date(R);
          if ("string" == typeof R) {
            if (((R = R.trim()), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(R))) {
              const [ce, ni = 1, pi = 1] = R.split("-").map(($i) => +$i);
              return Rt(ce, ni - 1, pi);
            }
            const G = parseFloat(R);
            if (!isNaN(R - G)) return new Date(G);
            let nt;
            if ((nt = R.match(Xi)))
              return (function vt(R) {
                const ht = new Date(0);
                let G = 0,
                  nt = 0;
                const ce = R[8] ? ht.setUTCFullYear : ht.setFullYear,
                  ni = R[8] ? ht.setUTCHours : ht.setHours;
                R[9] &&
                  ((G = Number(R[9] + R[10])), (nt = Number(R[9] + R[11]))),
                  ce.call(ht, Number(R[1]), Number(R[2]) - 1, Number(R[3]));
                const pi = Number(R[4] || 0) - G,
                  $i = Number(R[5] || 0) - nt,
                  Pn = Number(R[6] || 0),
                  Gn = Math.floor(1e3 * parseFloat("0." + (R[7] || 0)));
                return ni.call(ht, pi, $i, Pn, Gn), ht;
              })(nt);
          }
          const ht = new Date(R);
          if (!U(ht)) throw new Error(`Unable to convert "${R}" into a date`);
          return ht;
        })(R);
        ht = Lt(G, ht) || ht;
        let $i,
          pi = [];
        for (; ht; ) {
          if ((($i = de.exec(ht)), !$i)) {
            pi.push(ht);
            break;
          }
          {
            pi = pi.concat($i.slice(1));
            const Fn = pi.pop();
            if (!Fn) break;
            ht = Fn;
          }
        }
        let Pn = ce.getTimezoneOffset();
        nt &&
          ((Pn = fe(nt, Pn)),
          (ce = (function yi(R, ht, G) {
            const nt = G ? -1 : 1,
              ce = R.getTimezoneOffset();
            return (function ke(R, ht) {
              return (
                (R = new Date(R.getTime())).setMinutes(R.getMinutes() + ht), R
              );
            })(R, nt * (fe(ht, ce) - ce));
          })(ce, nt, !0)));
        let Gn = "";
        return (
          pi.forEach((Fn) => {
            const tn = (function $t(R) {
              if (ye[R]) return ye[R];
              let ht;
              switch (R) {
                case "G":
                case "GG":
                case "GGG":
                  ht = X(rt.Eras, Kt.Abbreviated);
                  break;
                case "GGGG":
                  ht = X(rt.Eras, Kt.Wide);
                  break;
                case "GGGGG":
                  ht = X(rt.Eras, Kt.Narrow);
                  break;
                case "y":
                  ht = H(Z.FullYear, 1, 0, !1, !0);
                  break;
                case "yy":
                  ht = H(Z.FullYear, 2, 0, !0, !0);
                  break;
                case "yyy":
                  ht = H(Z.FullYear, 3, 0, !1, !0);
                  break;
                case "yyyy":
                  ht = H(Z.FullYear, 4, 0, !1, !0);
                  break;
                case "Y":
                  ht = ae(1);
                  break;
                case "YY":
                  ht = ae(2, !0);
                  break;
                case "YYY":
                  ht = ae(3);
                  break;
                case "YYYY":
                  ht = ae(4);
                  break;
                case "M":
                case "L":
                  ht = H(Z.Month, 1, 1);
                  break;
                case "MM":
                case "LL":
                  ht = H(Z.Month, 2, 1);
                  break;
                case "MMM":
                  ht = X(rt.Months, Kt.Abbreviated);
                  break;
                case "MMMM":
                  ht = X(rt.Months, Kt.Wide);
                  break;
                case "MMMMM":
                  ht = X(rt.Months, Kt.Narrow);
                  break;
                case "LLL":
                  ht = X(rt.Months, Kt.Abbreviated, ee.Standalone);
                  break;
                case "LLLL":
                  ht = X(rt.Months, Kt.Wide, ee.Standalone);
                  break;
                case "LLLLL":
                  ht = X(rt.Months, Kt.Narrow, ee.Standalone);
                  break;
                case "w":
                  ht = Xt(1);
                  break;
                case "ww":
                  ht = Xt(2);
                  break;
                case "W":
                  ht = Xt(1, !0);
                  break;
                case "d":
                  ht = H(Z.Date, 1);
                  break;
                case "dd":
                  ht = H(Z.Date, 2);
                  break;
                case "c":
                case "cc":
                  ht = H(Z.Day, 1);
                  break;
                case "ccc":
                  ht = X(rt.Days, Kt.Abbreviated, ee.Standalone);
                  break;
                case "cccc":
                  ht = X(rt.Days, Kt.Wide, ee.Standalone);
                  break;
                case "ccccc":
                  ht = X(rt.Days, Kt.Narrow, ee.Standalone);
                  break;
                case "cccccc":
                  ht = X(rt.Days, Kt.Short, ee.Standalone);
                  break;
                case "E":
                case "EE":
                case "EEE":
                  ht = X(rt.Days, Kt.Abbreviated);
                  break;
                case "EEEE":
                  ht = X(rt.Days, Kt.Wide);
                  break;
                case "EEEEE":
                  ht = X(rt.Days, Kt.Narrow);
                  break;
                case "EEEEEE":
                  ht = X(rt.Days, Kt.Short);
                  break;
                case "a":
                case "aa":
                case "aaa":
                  ht = X(rt.DayPeriods, Kt.Abbreviated);
                  break;
                case "aaaa":
                  ht = X(rt.DayPeriods, Kt.Wide);
                  break;
                case "aaaaa":
                  ht = X(rt.DayPeriods, Kt.Narrow);
                  break;
                case "b":
                case "bb":
                case "bbb":
                  ht = X(rt.DayPeriods, Kt.Abbreviated, ee.Standalone, !0);
                  break;
                case "bbbb":
                  ht = X(rt.DayPeriods, Kt.Wide, ee.Standalone, !0);
                  break;
                case "bbbbb":
                  ht = X(rt.DayPeriods, Kt.Narrow, ee.Standalone, !0);
                  break;
                case "B":
                case "BB":
                case "BBB":
                  ht = X(rt.DayPeriods, Kt.Abbreviated, ee.Format, !0);
                  break;
                case "BBBB":
                  ht = X(rt.DayPeriods, Kt.Wide, ee.Format, !0);
                  break;
                case "BBBBB":
                  ht = X(rt.DayPeriods, Kt.Narrow, ee.Format, !0);
                  break;
                case "h":
                  ht = H(Z.Hours, 1, -12);
                  break;
                case "hh":
                  ht = H(Z.Hours, 2, -12);
                  break;
                case "H":
                  ht = H(Z.Hours, 1);
                  break;
                case "HH":
                  ht = H(Z.Hours, 2);
                  break;
                case "m":
                  ht = H(Z.Minutes, 1);
                  break;
                case "mm":
                  ht = H(Z.Minutes, 2);
                  break;
                case "s":
                  ht = H(Z.Seconds, 1);
                  break;
                case "ss":
                  ht = H(Z.Seconds, 2);
                  break;
                case "S":
                  ht = H(Z.FractionalSeconds, 1);
                  break;
                case "SS":
                  ht = H(Z.FractionalSeconds, 2);
                  break;
                case "SSS":
                  ht = H(Z.FractionalSeconds, 3);
                  break;
                case "Z":
                case "ZZ":
                case "ZZZ":
                  ht = it(ot.Short);
                  break;
                case "ZZZZZ":
                  ht = it(ot.Extended);
                  break;
                case "O":
                case "OO":
                case "OOO":
                case "z":
                case "zz":
                case "zzz":
                  ht = it(ot.ShortGMT);
                  break;
                case "OOOO":
                case "ZZZZ":
                case "zzzz":
                  ht = it(ot.Long);
                  break;
                default:
                  return null;
              }
              return (ye[R] = ht), ht;
            })(Fn);
            Gn += tn
              ? tn(ce, G, Pn)
              : "''" === Fn
                ? "'"
                : Fn.replace(/(^'|'$)/g, "").replace(/''/g, "'");
          }),
          Gn
        );
      }
      function Rt(R, ht, G) {
        const nt = new Date(0);
        return nt.setFullYear(R, ht, G), nt.setHours(0, 0, 0), nt;
      }
      function Lt(R, ht) {
        const G = (function vi(R) {
          return (0, s.cg1)(R)[s.wAp.LocaleId];
        })(R);
        if (((_i[G] = _i[G] || {}), _i[G][ht])) return _i[G][ht];
        let nt = "";
        switch (ht) {
          case "shortDate":
            nt = Fe(R, ze.Short);
            break;
          case "mediumDate":
            nt = Fe(R, ze.Medium);
            break;
          case "longDate":
            nt = Fe(R, ze.Long);
            break;
          case "fullDate":
            nt = Fe(R, ze.Full);
            break;
          case "shortTime":
            nt = xe(R, ze.Short);
            break;
          case "mediumTime":
            nt = xe(R, ze.Medium);
            break;
          case "longTime":
            nt = xe(R, ze.Long);
            break;
          case "fullTime":
            nt = xe(R, ze.Full);
            break;
          case "short":
            const ce = Lt(R, "shortTime"),
              ni = Lt(R, "shortDate");
            nt = ut(Ue(R, ze.Short), [ce, ni]);
            break;
          case "medium":
            const pi = Lt(R, "mediumTime"),
              $i = Lt(R, "mediumDate");
            nt = ut(Ue(R, ze.Medium), [pi, $i]);
            break;
          case "long":
            const Pn = Lt(R, "longTime"),
              Gn = Lt(R, "longDate");
            nt = ut(Ue(R, ze.Long), [Pn, Gn]);
            break;
          case "full":
            const Fn = Lt(R, "fullTime"),
              tn = Lt(R, "fullDate");
            nt = ut(Ue(R, ze.Full), [Fn, tn]);
        }
        return nt && (_i[G][ht] = nt), nt;
      }
      function ut(R, ht) {
        return (
          ht &&
            (R = R.replace(/\{([^}]+)}/g, function (G, nt) {
              return null != ht && nt in ht ? ht[nt] : G;
            })),
          R
        );
      }
      function q(R, ht, G = "-", nt, ce) {
        let ni = "";
        (R < 0 || (ce && R <= 0)) && (ce ? (R = 1 - R) : ((R = -R), (ni = G)));
        let pi = String(R);
        for (; pi.length < ht; ) pi = "0" + pi;
        return nt && (pi = pi.slice(pi.length - ht)), ni + pi;
      }
      function H(R, ht, G = 0, nt = !1, ce = !1) {
        return function (ni, pi) {
          let $i = (function Nt(R, ht) {
            switch (R) {
              case Z.FullYear:
                return ht.getFullYear();
              case Z.Month:
                return ht.getMonth();
              case Z.Date:
                return ht.getDate();
              case Z.Hours:
                return ht.getHours();
              case Z.Minutes:
                return ht.getMinutes();
              case Z.Seconds:
                return ht.getSeconds();
              case Z.FractionalSeconds:
                return ht.getMilliseconds();
              case Z.Day:
                return ht.getDay();
              default:
                throw new Error(`Unknown DateType value "${R}".`);
            }
          })(R, ni);
          if (((G > 0 || $i > -G) && ($i += G), R === Z.Hours))
            0 === $i && -12 === G && ($i = 12);
          else if (R === Z.FractionalSeconds)
            return (function Ct(R, ht) {
              return q(R, 3).substring(0, ht);
            })($i, ht);
          const Pn = Ft(pi, mi.MinusSign);
          return q($i, ht, Pn, nt, ce);
        };
      }
      function X(R, ht, G = ee.Format, nt = !1) {
        return function (ce, ni) {
          return (function se(R, ht, G, nt, ce, ni) {
            switch (G) {
              case rt.Months:
                return (function Si(R, ht, G) {
                  const nt = (0, s.cg1)(R),
                    ni = te(
                      [nt[s.wAp.MonthsFormat], nt[s.wAp.MonthsStandalone]],
                      ht,
                    );
                  return te(ni, G);
                })(ht, ce, nt)[R.getMonth()];
              case rt.Days:
                return (function hi(R, ht, G) {
                  const nt = (0, s.cg1)(R),
                    ni = te(
                      [nt[s.wAp.DaysFormat], nt[s.wAp.DaysStandalone]],
                      ht,
                    );
                  return te(ni, G);
                })(ht, ce, nt)[R.getDay()];
              case rt.DayPeriods:
                const pi = R.getHours(),
                  $i = R.getMinutes();
                if (ni) {
                  const Gn = (function Mi(R) {
                      const ht = (0, s.cg1)(R);
                      return (
                        ii(ht),
                        (ht[s.wAp.ExtraData][2] || []).map((nt) =>
                          "string" == typeof nt
                            ? Be(nt)
                            : [Be(nt[0]), Be(nt[1])],
                        )
                      );
                    })(ht),
                    Fn = (function fi(R, ht, G) {
                      const nt = (0, s.cg1)(R);
                      ii(nt);
                      const ni =
                        te(
                          [nt[s.wAp.ExtraData][0], nt[s.wAp.ExtraData][1]],
                          ht,
                        ) || [];
                      return te(ni, G) || [];
                    })(ht, ce, nt),
                    tn = Gn.findIndex((zn) => {
                      if (Array.isArray(zn)) {
                        const [Bn, So] = zn,
                          Fo = pi >= Bn.hours && $i >= Bn.minutes,
                          Xo =
                            pi < So.hours ||
                            (pi === So.hours && $i < So.minutes);
                        if (Bn.hours < So.hours) {
                          if (Fo && Xo) return !0;
                        } else if (Fo || Xo) return !0;
                      } else if (zn.hours === pi && zn.minutes === $i)
                        return !0;
                      return !1;
                    });
                  if (-1 !== tn) return Fn[tn];
                }
                return (function Ge(R, ht, G) {
                  const nt = (0, s.cg1)(R),
                    ni = te(
                      [
                        nt[s.wAp.DayPeriodsFormat],
                        nt[s.wAp.DayPeriodsStandalone],
                      ],
                      ht,
                    );
                  return te(ni, G);
                })(ht, ce, nt)[pi < 12 ? 0 : 1];
              case rt.Eras:
                return (function Vi(R, ht) {
                  return te((0, s.cg1)(R)[s.wAp.Eras], ht);
                })(ht, nt)[R.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error(`unexpected translation type ${G}`);
            }
          })(ce, ni, R, ht, G, nt);
        };
      }
      function it(R) {
        return function (ht, G, nt) {
          const ce = -1 * nt,
            ni = Ft(G, mi.MinusSign),
            pi = ce > 0 ? Math.floor(ce / 60) : Math.ceil(ce / 60);
          switch (R) {
            case ot.Short:
              return (
                (ce >= 0 ? "+" : "") +
                q(pi, 2, ni) +
                q(Math.abs(ce % 60), 2, ni)
              );
            case ot.ShortGMT:
              return "GMT" + (ce >= 0 ? "+" : "") + q(pi, 1, ni);
            case ot.Long:
              return (
                "GMT" +
                (ce >= 0 ? "+" : "") +
                q(pi, 2, ni) +
                ":" +
                q(Math.abs(ce % 60), 2, ni)
              );
            case ot.Extended:
              return 0 === nt
                ? "Z"
                : (ce >= 0 ? "+" : "") +
                    q(pi, 2, ni) +
                    ":" +
                    q(Math.abs(ce % 60), 2, ni);
            default:
              throw new Error(`Unknown zone width "${R}"`);
          }
        };
      }
      const Ut = 0,
        ve = 4;
      function ki(R) {
        return Rt(
          R.getFullYear(),
          R.getMonth(),
          R.getDate() + (ve - R.getDay()),
        );
      }
      function Xt(R, ht = !1) {
        return function (G, nt) {
          let ce;
          if (ht) {
            const ni = new Date(G.getFullYear(), G.getMonth(), 1).getDay() - 1,
              pi = G.getDate();
            ce = 1 + Math.floor((pi + ni) / 7);
          } else {
            const ni = ki(G),
              pi = (function qe(R) {
                const ht = Rt(R, Ut, 1).getDay();
                return Rt(R, 0, 1 + (ht <= ve ? ve : ve + 7) - ht);
              })(ni.getFullYear()),
              $i = ni.getTime() - pi.getTime();
            ce = 1 + Math.round($i / 6048e5);
          }
          return q(ce, R, Ft(nt, mi.MinusSign));
        };
      }
      function ae(R, ht = !1) {
        return function (G, nt) {
          return q(ki(G).getFullYear(), R, Ft(nt, mi.MinusSign), ht);
        };
      }
      const ye = {};
      function fe(R, ht) {
        R = R.replace(/:/g, "");
        const G = Date.parse("Jan 01, 1970 00:00:00 " + R) / 6e4;
        return isNaN(G) ? ht : G;
      }
      function U(R) {
        return R instanceof Date && !isNaN(R.valueOf());
      }
      const j = /^(\d+)?\.((\d+)(-(\d+))?)?$/,
        ct = 22,
        ue = ".",
        Wt = "0",
        le = ";",
        It = ",",
        Yt = "#";
      function pe(R, ht, G, nt, ce, ni, pi = !1) {
        let $i = "",
          Pn = !1;
        if (isFinite(R)) {
          let Gn = (function Je(R) {
            let nt,
              ce,
              ni,
              pi,
              $i,
              ht = Math.abs(R) + "",
              G = 0;
            for (
              (ce = ht.indexOf(ue)) > -1 && (ht = ht.replace(ue, "")),
                (ni = ht.search(/e/i)) > 0
                  ? (ce < 0 && (ce = ni),
                    (ce += +ht.slice(ni + 1)),
                    (ht = ht.substring(0, ni)))
                  : ce < 0 && (ce = ht.length),
                ni = 0;
              ht.charAt(ni) === Wt;
              ni++
            );
            if (ni === ($i = ht.length)) (nt = [0]), (ce = 1);
            else {
              for ($i--; ht.charAt($i) === Wt; ) $i--;
              for (ce -= ni, nt = [], pi = 0; ni <= $i; ni++, pi++)
                nt[pi] = Number(ht.charAt(ni));
            }
            return (
              ce > ct && ((nt = nt.splice(0, ct - 1)), (G = ce - 1), (ce = 1)),
              { digits: nt, exponent: G, integerLen: ce }
            );
          })(R);
          pi &&
            (Gn = (function Te(R) {
              if (0 === R.digits[0]) return R;
              const ht = R.digits.length - R.integerLen;
              return (
                R.exponent
                  ? (R.exponent += 2)
                  : (0 === ht
                      ? R.digits.push(0, 0)
                      : 1 === ht && R.digits.push(0),
                    (R.integerLen += 2)),
                R
              );
            })(Gn));
          let Fn = ht.minInt,
            tn = ht.minFrac,
            zn = ht.maxFrac;
          if (ni) {
            const Uo = ni.match(j);
            if (null === Uo) throw new Error(`${ni} is not a valid digit info`);
            const us = Uo[1],
              jo = Uo[3],
              Sr = Uo[5];
            null != us && (Fn = Ze(us)),
              null != jo && (tn = Ze(jo)),
              null != Sr ? (zn = Ze(Sr)) : null != jo && tn > zn && (zn = tn);
          }
          !(function Ot(R, ht, G) {
            if (ht > G)
              throw new Error(
                `The minimum number of digits after fraction (${ht}) is higher than the maximum (${G}).`,
              );
            let nt = R.digits,
              ce = nt.length - R.integerLen;
            const ni = Math.min(Math.max(ht, ce), G);
            let pi = ni + R.integerLen,
              $i = nt[pi];
            if (pi > 0) {
              nt.splice(Math.max(R.integerLen, pi));
              for (let tn = pi; tn < nt.length; tn++) nt[tn] = 0;
            } else {
              (ce = Math.max(0, ce)),
                (R.integerLen = 1),
                (nt.length = Math.max(1, (pi = ni + 1))),
                (nt[0] = 0);
              for (let tn = 1; tn < pi; tn++) nt[tn] = 0;
            }
            if ($i >= 5)
              if (pi - 1 < 0) {
                for (let tn = 0; tn > pi; tn--) nt.unshift(0), R.integerLen++;
                nt.unshift(1), R.integerLen++;
              } else nt[pi - 1]++;
            for (; ce < Math.max(0, ni); ce++) nt.push(0);
            let Pn = 0 !== ni;
            const Gn = ht + R.integerLen,
              Fn = nt.reduceRight(function (tn, zn, Bn, So) {
                return (
                  (So[Bn] = (zn += tn) < 10 ? zn : zn - 10),
                  Pn && (0 === So[Bn] && Bn >= Gn ? So.pop() : (Pn = !1)),
                  zn >= 10 ? 1 : 0
                );
              }, 0);
            Fn && (nt.unshift(Fn), R.integerLen++);
          })(Gn, tn, zn);
          let Bn = Gn.digits,
            So = Gn.integerLen;
          const Fo = Gn.exponent;
          let Xo = [];
          for (Pn = Bn.every((Uo) => !Uo); So < Fn; So++) Bn.unshift(0);
          for (; So < 0; So++) Bn.unshift(0);
          So > 0 ? (Xo = Bn.splice(So, Bn.length)) : ((Xo = Bn), (Bn = [0]));
          const Qr = [];
          for (
            Bn.length >= ht.lgSize &&
            Qr.unshift(Bn.splice(-ht.lgSize, Bn.length).join(""));
            Bn.length > ht.gSize;

          )
            Qr.unshift(Bn.splice(-ht.gSize, Bn.length).join(""));
          Bn.length && Qr.unshift(Bn.join("")),
            ($i = Qr.join(Ft(G, nt))),
            Xo.length && ($i += Ft(G, ce) + Xo.join("")),
            Fo && ($i += Ft(G, mi.Exponential) + "+" + Fo);
        } else $i = Ft(G, mi.Infinity);
        return (
          ($i =
            R < 0 && !Pn
              ? ht.negPre + $i + ht.negSuf
              : ht.posPre + $i + ht.posSuf),
          $i
        );
      }
      function Bt(R, ht = "-") {
        const G = {
            minInt: 1,
            minFrac: 0,
            maxFrac: 0,
            posPre: "",
            posSuf: "",
            negPre: "",
            negSuf: "",
            gSize: 0,
            lgSize: 0,
          },
          nt = R.split(le),
          ce = nt[0],
          ni = nt[1],
          pi =
            -1 !== ce.indexOf(ue)
              ? ce.split(ue)
              : [
                  ce.substring(0, ce.lastIndexOf(Wt) + 1),
                  ce.substring(ce.lastIndexOf(Wt) + 1),
                ],
          $i = pi[0],
          Pn = pi[1] || "";
        G.posPre = $i.substring(0, $i.indexOf(Yt));
        for (let Fn = 0; Fn < Pn.length; Fn++) {
          const tn = Pn.charAt(Fn);
          tn === Wt
            ? (G.minFrac = G.maxFrac = Fn + 1)
            : tn === Yt
              ? (G.maxFrac = Fn + 1)
              : (G.posSuf += tn);
        }
        const Gn = $i.split(It);
        if (
          ((G.gSize = Gn[1] ? Gn[1].length : 0),
          (G.lgSize = Gn[2] || Gn[1] ? (Gn[2] || Gn[1]).length : 0),
          ni)
        ) {
          const Fn = ce.length - G.posPre.length - G.posSuf.length,
            tn = ni.indexOf(Yt);
          (G.negPre = ni.substring(0, tn).replace(/'/g, "")),
            (G.negSuf = ni.slice(tn + Fn).replace(/'/g, ""));
        } else (G.negPre = ht + G.posPre), (G.negSuf = G.posSuf);
        return G;
      }
      function Ze(R) {
        const ht = parseInt(R);
        if (isNaN(ht))
          throw new Error("Invalid integer literal when parsing " + R);
        return ht;
      }
      function Ei(R, ht) {
        ht = encodeURIComponent(ht);
        for (const G of R.split(";")) {
          const nt = G.indexOf("="),
            [ce, ni] = -1 == nt ? [G, ""] : [G.slice(0, nt), G.slice(nt + 1)];
          if (ce.trim() === ht) return decodeURIComponent(ni);
        }
        return null;
      }
      const Hi = /\s+/,
        Yi = [];
      let ln = (() => {
        class R {
          constructor(G, nt, ce, ni) {
            (this._iterableDiffers = G),
              (this._keyValueDiffers = nt),
              (this._ngEl = ce),
              (this._renderer = ni),
              (this.initialClasses = Yi),
              (this.stateMap = new Map());
          }
          set klass(G) {
            this.initialClasses = null != G ? G.trim().split(Hi) : Yi;
          }
          set ngClass(G) {
            this.rawClass = "string" == typeof G ? G.trim().split(Hi) : G;
          }
          ngDoCheck() {
            for (const nt of this.initialClasses) this._updateState(nt, !0);
            const G = this.rawClass;
            if (Array.isArray(G) || G instanceof Set)
              for (const nt of G) this._updateState(nt, !0);
            else if (null != G)
              for (const nt of Object.keys(G)) this._updateState(nt, !!G[nt]);
            this._applyStateDiff();
          }
          _updateState(G, nt) {
            const ce = this.stateMap.get(G);
            void 0 !== ce
              ? (ce.enabled !== nt && ((ce.changed = !0), (ce.enabled = nt)),
                (ce.touched = !0))
              : this.stateMap.set(G, { enabled: nt, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const G of this.stateMap) {
              const nt = G[0],
                ce = G[1];
              ce.changed
                ? (this._toggleClass(nt, ce.enabled), (ce.changed = !1))
                : ce.touched ||
                  (ce.enabled && this._toggleClass(nt, !1),
                  this.stateMap.delete(nt)),
                (ce.touched = !1);
            }
          }
          _toggleClass(G, nt) {
            (G = G.trim()).length > 0 &&
              G.split(Hi).forEach((ce) => {
                nt
                  ? this._renderer.addClass(this._ngEl.nativeElement, ce)
                  : this._renderer.removeClass(this._ngEl.nativeElement, ce);
              });
          }
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)(
              s.Y36(s.ZZ4),
              s.Y36(s.aQg),
              s.Y36(s.SBq),
              s.Y36(s.Qsj),
            );
          });
          static #e = (this.ɵdir = s.lG2({
            type: R,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          }));
        }
        return R;
      })();
      class pn {
        constructor(ht, G, nt, ce) {
          (this.$implicit = ht),
            (this.ngForOf = G),
            (this.index = nt),
            (this.count = ce);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let An = (() => {
        class R {
          set ngForOf(G) {
            (this._ngForOf = G), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(G) {
            this._trackByFn = G;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(G, nt, ce) {
            (this._viewContainer = G),
              (this._template = nt),
              (this._differs = ce),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(G) {
            G && (this._template = G);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const G = this._ngForOf;
              !this._differ &&
                G &&
                (this._differ = this._differs
                  .find(G)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const G = this._differ.diff(this._ngForOf);
              G && this._applyChanges(G);
            }
          }
          _applyChanges(G) {
            const nt = this._viewContainer;
            G.forEachOperation((ce, ni, pi) => {
              if (null == ce.previousIndex)
                nt.createEmbeddedView(
                  this._template,
                  new pn(ce.item, this._ngForOf, -1, -1),
                  null === pi ? void 0 : pi,
                );
              else if (null == pi) nt.remove(null === ni ? void 0 : ni);
              else if (null !== ni) {
                const $i = nt.get(ni);
                nt.move($i, pi), yn($i, ce);
              }
            });
            for (let ce = 0, ni = nt.length; ce < ni; ce++) {
              const $i = nt.get(ce).context;
              ($i.index = ce), ($i.count = ni), ($i.ngForOf = this._ngForOf);
            }
            G.forEachIdentityChange((ce) => {
              yn(nt.get(ce.currentIndex), ce);
            });
          }
          static ngTemplateContextGuard(G, nt) {
            return !0;
          }
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(s.ZZ4));
          });
          static #e = (this.ɵdir = s.lG2({
            type: R,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          }));
        }
        return R;
      })();
      function yn(R, ht) {
        R.context.$implicit = ht.item;
      }
      let Tn = (() => {
        class R {
          constructor(G, nt) {
            (this._viewContainer = G),
              (this._context = new oo()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = nt);
          }
          set ngIf(G) {
            (this._context.$implicit = this._context.ngIf = G),
              this._updateView();
          }
          set ngIfThen(G) {
            go("ngIfThen", G),
              (this._thenTemplateRef = G),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(G) {
            go("ngIfElse", G),
              (this._elseTemplateRef = G),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context,
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context,
                  )));
          }
          static ngTemplateContextGuard(G, nt) {
            return !0;
          }
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)(s.Y36(s.s_b), s.Y36(s.Rgc));
          });
          static #e = (this.ɵdir = s.lG2({
            type: R,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          }));
        }
        return R;
      })();
      class oo {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function go(R, ht) {
        if (ht && !ht.createEmbeddedView)
          throw new Error(
            `${R} must be a TemplateRef, but received '${(0, s.AaK)(ht)}'.`,
          );
      }
      class qo {
        constructor(ht, G) {
          (this._viewContainerRef = ht),
            (this._templateRef = G),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(ht) {
          ht && !this._created
            ? this.create()
            : !ht && this._created && this.destroy();
        }
      }
      let Kn = (() => {
          class R {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(G) {
              (this._ngSwitch = G),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(G) {
              this._defaultViews.push(G);
            }
            _matchCase(G) {
              const nt = G == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || nt),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                nt
              );
            }
            _updateDefaultCases(G) {
              if (this._defaultViews.length > 0 && G !== this._defaultUsed) {
                this._defaultUsed = G;
                for (const nt of this._defaultViews) nt.enforceState(G);
              }
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: R,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            }));
          }
          return R;
        })(),
        Ir = (() => {
          class R {
            constructor(G, nt, ce) {
              (this.ngSwitch = ce), ce._addCase(), (this._view = new qo(G, nt));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase),
              );
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(Kn, 9));
            });
            static #e = (this.ɵdir = s.lG2({
              type: R,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            }));
          }
          return R;
        })(),
        Gr = (() => {
          class R {
            constructor(G, nt, ce) {
              ce._addDefault(new qo(G, nt));
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.Y36(s.s_b), s.Y36(s.Rgc), s.Y36(Kn, 9));
            });
            static #e = (this.ɵdir = s.lG2({
              type: R,
              selectors: [["", "ngSwitchDefault", ""]],
              standalone: !0,
            }));
          }
          return R;
        })(),
        ir = (() => {
          class R {
            constructor(G, nt, ce) {
              (this._ngEl = G),
                (this._differs = nt),
                (this._renderer = ce),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(G) {
              (this._ngStyle = G),
                !this._differ &&
                  G &&
                  (this._differ = this._differs.find(G).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const G = this._differ.diff(this._ngStyle);
                G && this._applyChanges(G);
              }
            }
            _setStyle(G, nt) {
              const [ce, ni] = G.split("."),
                pi = -1 === ce.indexOf("-") ? void 0 : s.JOm.DashCase;
              null != nt
                ? this._renderer.setStyle(
                    this._ngEl.nativeElement,
                    ce,
                    ni ? `${nt}${ni}` : nt,
                    pi,
                  )
                : this._renderer.removeStyle(this._ngEl.nativeElement, ce, pi);
            }
            _applyChanges(G) {
              G.forEachRemovedItem((nt) => this._setStyle(nt.key, null)),
                G.forEachAddedItem((nt) =>
                  this._setStyle(nt.key, nt.currentValue),
                ),
                G.forEachChangedItem((nt) =>
                  this._setStyle(nt.key, nt.currentValue),
                );
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.Y36(s.SBq), s.Y36(s.aQg), s.Y36(s.Qsj));
            });
            static #e = (this.ɵdir = s.lG2({
              type: R,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
              standalone: !0,
            }));
          }
          return R;
        })(),
        Zr = (() => {
          class R {
            constructor(G) {
              (this._viewContainerRef = G),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(G) {
              if (G.ngTemplateOutlet || G.ngTemplateOutletInjector) {
                const nt = this._viewContainerRef;
                if (
                  (this._viewRef && nt.remove(nt.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: ce,
                    ngTemplateOutletContext: ni,
                    ngTemplateOutletInjector: pi,
                  } = this;
                  this._viewRef = nt.createEmbeddedView(
                    ce,
                    ni,
                    pi ? { injector: pi } : void 0,
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  G.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.Y36(s.s_b));
            });
            static #e = (this.ɵdir = s.lG2({
              type: R,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
                ngTemplateOutletInjector: "ngTemplateOutletInjector",
              },
              standalone: !0,
              features: [s.TTD],
            }));
          }
          return R;
        })();
      function ro(R, ht) {
        return new s.vHH(2100, !1);
      }
      const on = new s.OlP("DATE_PIPE_DEFAULT_TIMEZONE"),
        un = new s.OlP("DATE_PIPE_DEFAULT_OPTIONS");
      let Xn = (() => {
          class R {
            constructor(G, nt, ce) {
              (this.locale = G),
                (this.defaultTimezone = nt),
                (this.defaultOptions = ce);
            }
            transform(G, nt, ce, ni) {
              if (null == G || "" === G || G != G) return null;
              try {
                return yt(
                  G,
                  nt ?? this.defaultOptions?.dateFormat ?? "mediumDate",
                  ni || this.locale,
                  ce ??
                    this.defaultOptions?.timezone ??
                    this.defaultTimezone ??
                    void 0,
                );
              } catch (pi) {
                throw ro();
              }
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(
                s.Y36(s.soG, 16),
                s.Y36(on, 24),
                s.Y36(un, 24),
              );
            });
            static #e = (this.ɵpipe = s.Yjl({
              name: "date",
              type: R,
              pure: !0,
              standalone: !0,
            }));
          }
          return R;
        })(),
        On = (() => {
          class R {
            constructor(G) {
              this._locale = G;
            }
            transform(G, nt, ce) {
              if (!In(G)) return null;
              ce = ce || this._locale;
              try {
                return (function me(R, ht, G) {
                  return pe(
                    R,
                    Bt(Mt(ht, St.Decimal), Ft(ht, mi.MinusSign)),
                    ht,
                    mi.Group,
                    mi.Decimal,
                    G,
                  );
                })(vo(G), ce, nt);
              } catch (ni) {
                throw ro();
              }
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.Y36(s.soG, 16));
            });
            static #e = (this.ɵpipe = s.Yjl({
              name: "number",
              type: R,
              pure: !0,
              standalone: !0,
            }));
          }
          return R;
        })(),
        sn = (() => {
          class R {
            constructor(G, nt = "USD") {
              (this._locale = G), (this._defaultCurrencyCode = nt);
            }
            transform(
              G,
              nt = this._defaultCurrencyCode,
              ce = "symbol",
              ni,
              pi,
            ) {
              if (!In(G)) return null;
              (pi = pi || this._locale),
                "boolean" == typeof ce && (ce = ce ? "symbol" : "code");
              let $i = nt || this._defaultCurrencyCode;
              "code" !== ce &&
                ($i =
                  "symbol" === ce || "symbol-narrow" === ce
                    ? (function Ne(R, ht, G = "en") {
                        const nt =
                            (function Le(R) {
                              return (0, s.cg1)(R)[s.wAp.Currencies];
                            })(G)[R] ||
                            _t[R] ||
                            [],
                          ce = nt[1];
                        return "narrow" === ht && "string" == typeof ce
                          ? ce
                          : nt[0] || R;
                      })($i, "symbol" === ce ? "wide" : "narrow", pi)
                    : ce);
              try {
                return (function ne(R, ht, G, nt, ce) {
                  const pi = Bt(Mt(ht, St.Currency), Ft(ht, mi.MinusSign));
                  return (
                    (pi.minFrac = (function gi(R) {
                      let ht;
                      const G = _t[R];
                      return G && (ht = G[2]), "number" == typeof ht ? ht : 2;
                    })(nt)),
                    (pi.maxFrac = pi.minFrac),
                    pe(R, pi, ht, mi.CurrencyGroup, mi.CurrencyDecimal, ce)
                      .replace("\xa4", G)
                      .replace("\xa4", "")
                      .trim()
                  );
                })(vo(G), pi, $i, nt, ni);
              } catch (Pn) {
                throw ro();
              }
            }
            static #t = (this.ɵfac = function (nt) {
              return new (nt || R)(s.Y36(s.soG, 16), s.Y36(s.EJc, 16));
            });
            static #e = (this.ɵpipe = s.Yjl({
              name: "currency",
              type: R,
              pure: !0,
              standalone: !0,
            }));
          }
          return R;
        })();
      function In(R) {
        return !(null == R || "" === R || R != R);
      }
      function vo(R) {
        if ("string" == typeof R && !isNaN(Number(R) - parseFloat(R)))
          return Number(R);
        if ("number" != typeof R) throw new Error(`${R} is not a number`);
        return R;
      }
      let xo = (() => {
        class R {
          static #t = (this.ɵfac = function (nt) {
            return new (nt || R)();
          });
          static #e = (this.ɵmod = s.oAB({ type: R }));
          static #i = (this.ɵinj = s.cJS({}));
        }
        return R;
      })();
      const Vn = "browser",
        wo = "server";
      function Er(R) {
        return R === Vn;
      }
      function Zo(R) {
        return R === wo;
      }
      let jn = (() => {
        class R {
          static #t = (this.ɵprov = (0, s.Yz7)({
            token: R,
            providedIn: "root",
            factory: () => new Co((0, s.LFG)(lt), window),
          }));
        }
        return R;
      })();
      class Co {
        constructor(ht, G) {
          (this.document = ht), (this.window = G), (this.offset = () => [0, 0]);
        }
        setOffset(ht) {
          this.offset = Array.isArray(ht) ? () => ht : ht;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(ht) {
          this.supportsScrolling() && this.window.scrollTo(ht[0], ht[1]);
        }
        scrollToAnchor(ht) {
          if (!this.supportsScrolling()) return;
          const G = (function $r(R, ht) {
            const G = R.getElementById(ht) || R.getElementsByName(ht)[0];
            if (G) return G;
            if (
              "function" == typeof R.createTreeWalker &&
              R.body &&
              "function" == typeof R.body.attachShadow
            ) {
              const nt = R.createTreeWalker(R.body, NodeFilter.SHOW_ELEMENT);
              let ce = nt.currentNode;
              for (; ce; ) {
                const ni = ce.shadowRoot;
                if (ni) {
                  const pi =
                    ni.getElementById(ht) || ni.querySelector(`[name="${ht}"]`);
                  if (pi) return pi;
                }
                ce = nt.nextNode();
              }
            }
            return null;
          })(this.document, ht);
          G && (this.scrollToElement(G), G.focus());
        }
        setHistoryScrollRestoration(ht) {
          this.supportsScrolling() &&
            (this.window.history.scrollRestoration = ht);
        }
        scrollToElement(ht) {
          const G = ht.getBoundingClientRect(),
            nt = G.left + this.window.pageXOffset,
            ce = G.top + this.window.pageYOffset,
            ni = this.offset();
          this.window.scrollTo(nt - ni[0], ce - ni[1]);
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      class Qo {}
    },
    9862: (ui, Zt, D) => {
      D.d(Zt, { JF: () => j, TP: () => ii, WM: () => jt, eN: () => Ie });
      var s = D(5879),
        x = D(2096),
        C = D(9666),
        p = D(5592),
        at = D(6328),
        lt = D(2181),
        bt = D(7398),
        B = D(4716),
        kt = D(4664),
        $ = D(6814);
      class _ {}
      class A {}
      class jt {
        constructor(ne) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            ne
              ? "string" == typeof ne
                ? (this.lazyInit = () => {
                    (this.headers = new Map()),
                      ne.split("\n").forEach((tt) => {
                        const me = tt.indexOf(":");
                        if (me > 0) {
                          const Bt = tt.slice(0, me),
                            Te = Bt.toLowerCase(),
                            Je = tt.slice(me + 1).trim();
                          this.maybeSetNormalizedName(Bt, Te),
                            this.headers.has(Te)
                              ? this.headers.get(Te).push(Je)
                              : this.headers.set(Te, [Je]);
                        }
                      });
                  })
                : typeof Headers < "u" && ne instanceof Headers
                  ? ((this.headers = new Map()),
                    ne.forEach((tt, me) => {
                      this.setHeaderEntries(me, tt);
                    }))
                  : (this.lazyInit = () => {
                      (this.headers = new Map()),
                        Object.entries(ne).forEach(([tt, me]) => {
                          this.setHeaderEntries(tt, me);
                        });
                    })
              : (this.headers = new Map());
        }
        has(ne) {
          return this.init(), this.headers.has(ne.toLowerCase());
        }
        get(ne) {
          this.init();
          const tt = this.headers.get(ne.toLowerCase());
          return tt && tt.length > 0 ? tt[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(ne) {
          return this.init(), this.headers.get(ne.toLowerCase()) || null;
        }
        append(ne, tt) {
          return this.clone({ name: ne, value: tt, op: "a" });
        }
        set(ne, tt) {
          return this.clone({ name: ne, value: tt, op: "s" });
        }
        delete(ne, tt) {
          return this.clone({ name: ne, value: tt, op: "d" });
        }
        maybeSetNormalizedName(ne, tt) {
          this.normalizedNames.has(tt) || this.normalizedNames.set(tt, ne);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof jt
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((ne) => this.applyUpdate(ne)),
              (this.lazyUpdate = null)));
        }
        copyFrom(ne) {
          ne.init(),
            Array.from(ne.headers.keys()).forEach((tt) => {
              this.headers.set(tt, ne.headers.get(tt)),
                this.normalizedNames.set(tt, ne.normalizedNames.get(tt));
            });
        }
        clone(ne) {
          const tt = new jt();
          return (
            (tt.lazyInit =
              this.lazyInit && this.lazyInit instanceof jt
                ? this.lazyInit
                : this),
            (tt.lazyUpdate = (this.lazyUpdate || []).concat([ne])),
            tt
          );
        }
        applyUpdate(ne) {
          const tt = ne.name.toLowerCase();
          switch (ne.op) {
            case "a":
            case "s":
              let me = ne.value;
              if (("string" == typeof me && (me = [me]), 0 === me.length))
                return;
              this.maybeSetNormalizedName(ne.name, tt);
              const Bt = ("a" === ne.op ? this.headers.get(tt) : void 0) || [];
              Bt.push(...me), this.headers.set(tt, Bt);
              break;
            case "d":
              const Te = ne.value;
              if (Te) {
                let Je = this.headers.get(tt);
                if (!Je) return;
                (Je = Je.filter((Ot) => -1 === Te.indexOf(Ot))),
                  0 === Je.length
                    ? (this.headers.delete(tt), this.normalizedNames.delete(tt))
                    : this.headers.set(tt, Je);
              } else this.headers.delete(tt), this.normalizedNames.delete(tt);
          }
        }
        setHeaderEntries(ne, tt) {
          const me = (Array.isArray(tt) ? tt : [tt]).map((Te) => Te.toString()),
            Bt = ne.toLowerCase();
          this.headers.set(Bt, me), this.maybeSetNormalizedName(ne, Bt);
        }
        forEach(ne) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((tt) =>
              ne(this.normalizedNames.get(tt), this.headers.get(tt)),
            );
        }
      }
      class Jt {
        encodeKey(ne) {
          return We(ne);
        }
        encodeValue(ne) {
          return We(ne);
        }
        decodeKey(ne) {
          return decodeURIComponent(ne);
        }
        decodeValue(ne) {
          return decodeURIComponent(ne);
        }
      }
      const Ve = /%(\d[a-f0-9])/gi,
        He = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function We(pe) {
        return encodeURIComponent(pe).replace(Ve, (ne, tt) => He[tt] ?? ne);
      }
      function Re(pe) {
        return `${pe}`;
      }
      class wt {
        constructor(ne = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = ne.encoder || new Jt()),
            ne.fromString)
          ) {
            if (ne.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function De(pe, ne) {
              const tt = new Map();
              return (
                pe.length > 0 &&
                  pe
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((Bt) => {
                      const Te = Bt.indexOf("="),
                        [Je, Ot] =
                          -1 == Te
                            ? [ne.decodeKey(Bt), ""]
                            : [
                                ne.decodeKey(Bt.slice(0, Te)),
                                ne.decodeValue(Bt.slice(Te + 1)),
                              ],
                        Ze = tt.get(Je) || [];
                      Ze.push(Ot), tt.set(Je, Ze);
                    }),
                tt
              );
            })(ne.fromString, this.encoder);
          } else
            ne.fromObject
              ? ((this.map = new Map()),
                Object.keys(ne.fromObject).forEach((tt) => {
                  const me = ne.fromObject[tt],
                    Bt = Array.isArray(me) ? me.map(Re) : [Re(me)];
                  this.map.set(tt, Bt);
                }))
              : (this.map = null);
        }
        has(ne) {
          return this.init(), this.map.has(ne);
        }
        get(ne) {
          this.init();
          const tt = this.map.get(ne);
          return tt ? tt[0] : null;
        }
        getAll(ne) {
          return this.init(), this.map.get(ne) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(ne, tt) {
          return this.clone({ param: ne, value: tt, op: "a" });
        }
        appendAll(ne) {
          const tt = [];
          return (
            Object.keys(ne).forEach((me) => {
              const Bt = ne[me];
              Array.isArray(Bt)
                ? Bt.forEach((Te) => {
                    tt.push({ param: me, value: Te, op: "a" });
                  })
                : tt.push({ param: me, value: Bt, op: "a" });
            }),
            this.clone(tt)
          );
        }
        set(ne, tt) {
          return this.clone({ param: ne, value: tt, op: "s" });
        }
        delete(ne, tt) {
          return this.clone({ param: ne, value: tt, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((ne) => {
                const tt = this.encoder.encodeKey(ne);
                return this.map
                  .get(ne)
                  .map((me) => tt + "=" + this.encoder.encodeValue(me))
                  .join("&");
              })
              .filter((ne) => "" !== ne)
              .join("&")
          );
        }
        clone(ne) {
          const tt = new wt({ encoder: this.encoder });
          return (
            (tt.cloneFrom = this.cloneFrom || this),
            (tt.updates = (this.updates || []).concat(ne)),
            tt
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((ne) => this.map.set(ne, this.cloneFrom.map.get(ne))),
              this.updates.forEach((ne) => {
                switch (ne.op) {
                  case "a":
                  case "s":
                    const tt =
                      ("a" === ne.op ? this.map.get(ne.param) : void 0) || [];
                    tt.push(Re(ne.value)), this.map.set(ne.param, tt);
                    break;
                  case "d":
                    if (void 0 === ne.value) {
                      this.map.delete(ne.param);
                      break;
                    }
                    {
                      let me = this.map.get(ne.param) || [];
                      const Bt = me.indexOf(Re(ne.value));
                      -1 !== Bt && me.splice(Bt, 1),
                        me.length > 0
                          ? this.map.set(ne.param, me)
                          : this.map.delete(ne.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class St {
        constructor() {
          this.map = new Map();
        }
        set(ne, tt) {
          return this.map.set(ne, tt), this;
        }
        get(ne) {
          return (
            this.map.has(ne) || this.map.set(ne, ne.defaultValue()),
            this.map.get(ne)
          );
        }
        delete(ne) {
          return this.map.delete(ne), this;
        }
        has(ne) {
          return this.map.has(ne);
        }
        keys() {
          return this.map.keys();
        }
      }
      function ee(pe) {
        return typeof ArrayBuffer < "u" && pe instanceof ArrayBuffer;
      }
      function Kt(pe) {
        return typeof Blob < "u" && pe instanceof Blob;
      }
      function ze(pe) {
        return typeof FormData < "u" && pe instanceof FormData;
      }
      class ie {
        constructor(ne, tt, me, Bt) {
          let Te;
          if (
            ((this.url = tt),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = ne.toUpperCase()),
            (function Pt(pe) {
              switch (pe) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || Bt
              ? ((this.body = void 0 !== me ? me : null), (Te = Bt))
              : (Te = me),
            Te &&
              ((this.reportProgress = !!Te.reportProgress),
              (this.withCredentials = !!Te.withCredentials),
              Te.responseType && (this.responseType = Te.responseType),
              Te.headers && (this.headers = Te.headers),
              Te.context && (this.context = Te.context),
              Te.params && (this.params = Te.params)),
            this.headers || (this.headers = new jt()),
            this.context || (this.context = new St()),
            this.params)
          ) {
            const Je = this.params.toString();
            if (0 === Je.length) this.urlWithParams = tt;
            else {
              const Ot = tt.indexOf("?");
              this.urlWithParams =
                tt + (-1 === Ot ? "?" : Ot < tt.length - 1 ? "&" : "") + Je;
            }
          } else (this.params = new wt()), (this.urlWithParams = tt);
        }
        serializeBody() {
          return null === this.body
            ? null
            : ee(this.body) ||
                Kt(this.body) ||
                ze(this.body) ||
                (function mi(pe) {
                  return (
                    typeof URLSearchParams < "u" &&
                    pe instanceof URLSearchParams
                  );
                })(this.body) ||
                "string" == typeof this.body
              ? this.body
              : this.body instanceof wt
                ? this.body.toString()
                : "object" == typeof this.body ||
                    "boolean" == typeof this.body ||
                    Array.isArray(this.body)
                  ? JSON.stringify(this.body)
                  : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || ze(this.body)
            ? null
            : Kt(this.body)
              ? this.body.type || null
              : ee(this.body)
                ? null
                : "string" == typeof this.body
                  ? "text/plain"
                  : this.body instanceof wt
                    ? "application/x-www-form-urlencoded;charset=UTF-8"
                    : "object" == typeof this.body ||
                        "number" == typeof this.body ||
                        "boolean" == typeof this.body
                      ? "application/json"
                      : null;
        }
        clone(ne = {}) {
          const tt = ne.method || this.method,
            me = ne.url || this.url,
            Bt = ne.responseType || this.responseType,
            Te = void 0 !== ne.body ? ne.body : this.body,
            Je =
              void 0 !== ne.withCredentials
                ? ne.withCredentials
                : this.withCredentials,
            Ot =
              void 0 !== ne.reportProgress
                ? ne.reportProgress
                : this.reportProgress;
          let Ze = ne.headers || this.headers,
            ft = ne.params || this.params;
          const Gt = ne.context ?? this.context;
          return (
            void 0 !== ne.setHeaders &&
              (Ze = Object.keys(ne.setHeaders).reduce(
                (Me, si) => Me.set(si, ne.setHeaders[si]),
                Ze,
              )),
            ne.setParams &&
              (ft = Object.keys(ne.setParams).reduce(
                (Me, si) => Me.set(si, ne.setParams[si]),
                ft,
              )),
            new ie(tt, me, Te, {
              params: ft,
              headers: Ze,
              context: Gt,
              reportProgress: Ot,
              responseType: Bt,
              withCredentials: Je,
            })
          );
        }
      }
      var vi = (function (pe) {
        return (
          (pe[(pe.Sent = 0)] = "Sent"),
          (pe[(pe.UploadProgress = 1)] = "UploadProgress"),
          (pe[(pe.ResponseHeader = 2)] = "ResponseHeader"),
          (pe[(pe.DownloadProgress = 3)] = "DownloadProgress"),
          (pe[(pe.Response = 4)] = "Response"),
          (pe[(pe.User = 5)] = "User"),
          pe
        );
      })(vi || {});
      class Ge {
        constructor(ne, tt = 200, me = "OK") {
          (this.headers = ne.headers || new jt()),
            (this.status = void 0 !== ne.status ? ne.status : tt),
            (this.statusText = ne.statusText || me),
            (this.url = ne.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class hi extends Ge {
        constructor(ne = {}) {
          super(ne), (this.type = vi.ResponseHeader);
        }
        clone(ne = {}) {
          return new hi({
            headers: ne.headers || this.headers,
            status: void 0 !== ne.status ? ne.status : this.status,
            statusText: ne.statusText || this.statusText,
            url: ne.url || this.url || void 0,
          });
        }
      }
      class Si extends Ge {
        constructor(ne = {}) {
          super(ne),
            (this.type = vi.Response),
            (this.body = void 0 !== ne.body ? ne.body : null);
        }
        clone(ne = {}) {
          return new Si({
            body: void 0 !== ne.body ? ne.body : this.body,
            headers: ne.headers || this.headers,
            status: void 0 !== ne.status ? ne.status : this.status,
            statusText: ne.statusText || this.statusText,
            url: ne.url || this.url || void 0,
          });
        }
      }
      class Vi extends Ge {
        constructor(ne) {
          super(ne, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${ne.url || "(unknown url)"}`
                : `Http failure response for ${ne.url || "(unknown url)"}: ${ne.status} ${ne.statusText}`),
            (this.error = ne.error || null);
        }
      }
      function qi(pe, ne) {
        return {
          body: ne,
          headers: pe.headers,
          context: pe.context,
          observe: pe.observe,
          params: pe.params,
          reportProgress: pe.reportProgress,
          responseType: pe.responseType,
          withCredentials: pe.withCredentials,
        };
      }
      let Ie = (() => {
        class pe {
          constructor(tt) {
            this.handler = tt;
          }
          request(tt, me, Bt = {}) {
            let Te;
            if (tt instanceof ie) Te = tt;
            else {
              let Ze, ft;
              (Ze = Bt.headers instanceof jt ? Bt.headers : new jt(Bt.headers)),
                Bt.params &&
                  (ft =
                    Bt.params instanceof wt
                      ? Bt.params
                      : new wt({ fromObject: Bt.params })),
                (Te = new ie(tt, me, void 0 !== Bt.body ? Bt.body : null, {
                  headers: Ze,
                  context: Bt.context,
                  params: ft,
                  reportProgress: Bt.reportProgress,
                  responseType: Bt.responseType || "json",
                  withCredentials: Bt.withCredentials,
                }));
            }
            const Je = (0, x.of)(Te).pipe(
              (0, at.b)((Ze) => this.handler.handle(Ze)),
            );
            if (tt instanceof ie || "events" === Bt.observe) return Je;
            const Ot = Je.pipe((0, lt.h)((Ze) => Ze instanceof Si));
            switch (Bt.observe || "body") {
              case "body":
                switch (Te.responseType) {
                  case "arraybuffer":
                    return Ot.pipe(
                      (0, bt.U)((Ze) => {
                        if (
                          null !== Ze.body &&
                          !(Ze.body instanceof ArrayBuffer)
                        )
                          throw new Error("Response is not an ArrayBuffer.");
                        return Ze.body;
                      }),
                    );
                  case "blob":
                    return Ot.pipe(
                      (0, bt.U)((Ze) => {
                        if (null !== Ze.body && !(Ze.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return Ze.body;
                      }),
                    );
                  case "text":
                    return Ot.pipe(
                      (0, bt.U)((Ze) => {
                        if (null !== Ze.body && "string" != typeof Ze.body)
                          throw new Error("Response is not a string.");
                        return Ze.body;
                      }),
                    );
                  default:
                    return Ot.pipe((0, bt.U)((Ze) => Ze.body));
                }
              case "response":
                return Ot;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${Bt.observe}}`,
                );
            }
          }
          delete(tt, me = {}) {
            return this.request("DELETE", tt, me);
          }
          get(tt, me = {}) {
            return this.request("GET", tt, me);
          }
          head(tt, me = {}) {
            return this.request("HEAD", tt, me);
          }
          jsonp(tt, me) {
            return this.request("JSONP", tt, {
              params: new wt().append(me, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(tt, me = {}) {
            return this.request("OPTIONS", tt, me);
          }
          patch(tt, me, Bt = {}) {
            return this.request("PATCH", tt, qi(Bt, me));
          }
          post(tt, me, Bt = {}) {
            return this.request("POST", tt, qi(Bt, me));
          }
          put(tt, me, Bt = {}) {
            return this.request("PUT", tt, qi(Bt, me));
          }
          static #t = (this.ɵfac = function (me) {
            return new (me || pe)(s.LFG(_));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pe, factory: pe.ɵfac }));
        }
        return pe;
      })();
      function re(pe, ne) {
        return ne(pe);
      }
      function Le(pe, ne) {
        return (tt, me) => ne.intercept(tt, { handle: (Bt) => pe(Bt, me) });
      }
      const ii = new s.OlP(""),
        Mi = new s.OlP(""),
        fi = new s.OlP("");
      function ri() {
        let pe = null;
        return (ne, tt) => {
          null === pe &&
            (pe = ((0, s.f3M)(ii, { optional: !0 }) ?? []).reduceRight(Le, re));
          const me = (0, s.f3M)(s.HDt),
            Bt = me.add();
          return pe(ne, tt).pipe((0, B.x)(() => me.remove(Bt)));
        };
      }
      let te = (() => {
        class pe extends _ {
          constructor(tt, me) {
            super(),
              (this.backend = tt),
              (this.injector = me),
              (this.chain = null),
              (this.pendingTasks = (0, s.f3M)(s.HDt));
          }
          handle(tt) {
            if (null === this.chain) {
              const Bt = Array.from(
                new Set([
                  ...this.injector.get(Mi),
                  ...this.injector.get(fi, []),
                ]),
              );
              this.chain = Bt.reduceRight(
                (Te, Je) =>
                  (function li(pe, ne, tt) {
                    return (me, Bt) =>
                      tt.runInContext(() => ne(me, (Te) => pe(Te, Bt)));
                  })(Te, Je, this.injector),
                re,
              );
            }
            const me = this.pendingTasks.add();
            return this.chain(tt, (Bt) => this.backend.handle(Bt)).pipe(
              (0, B.x)(() => this.pendingTasks.remove(me)),
            );
          }
          static #t = (this.ɵfac = function (me) {
            return new (me || pe)(s.LFG(A), s.LFG(s.lqb));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pe, factory: pe.ɵfac }));
        }
        return pe;
      })();
      const Rt = /^\)\]\}',?\n/;
      let ut = (() => {
        class pe {
          constructor(tt) {
            this.xhrFactory = tt;
          }
          handle(tt) {
            if ("JSONP" === tt.method) throw new s.vHH(-2800, !1);
            const me = this.xhrFactory;
            return (
              me.ɵloadImpl ? (0, C.D)(me.ɵloadImpl()) : (0, x.of)(null)
            ).pipe(
              (0, kt.w)(
                () =>
                  new p.y((Te) => {
                    const Je = me.build();
                    if (
                      (Je.open(tt.method, tt.urlWithParams),
                      tt.withCredentials && (Je.withCredentials = !0),
                      tt.headers.forEach((Yi, ln) =>
                        Je.setRequestHeader(Yi, ln.join(",")),
                      ),
                      tt.headers.has("Accept") ||
                        Je.setRequestHeader(
                          "Accept",
                          "application/json, text/plain, */*",
                        ),
                      !tt.headers.has("Content-Type"))
                    ) {
                      const Yi = tt.detectContentTypeHeader();
                      null !== Yi && Je.setRequestHeader("Content-Type", Yi);
                    }
                    if (tt.responseType) {
                      const Yi = tt.responseType.toLowerCase();
                      Je.responseType = "json" !== Yi ? Yi : "text";
                    }
                    const Ot = tt.serializeBody();
                    let Ze = null;
                    const ft = () => {
                        if (null !== Ze) return Ze;
                        const Yi = Je.statusText || "OK",
                          ln = new jt(Je.getAllResponseHeaders()),
                          bn =
                            (function Lt(pe) {
                              return "responseURL" in pe && pe.responseURL
                                ? pe.responseURL
                                : /^X-Request-URL:/m.test(
                                      pe.getAllResponseHeaders(),
                                    )
                                  ? pe.getResponseHeader("X-Request-URL")
                                  : null;
                            })(Je) || tt.url;
                        return (
                          (Ze = new hi({
                            headers: ln,
                            status: Je.status,
                            statusText: Yi,
                            url: bn,
                          })),
                          Ze
                        );
                      },
                      Gt = () => {
                        let {
                            headers: Yi,
                            status: ln,
                            statusText: bn,
                            url: Un,
                          } = ft(),
                          pn = null;
                        204 !== ln &&
                          (pn =
                            typeof Je.response > "u"
                              ? Je.responseText
                              : Je.response),
                          0 === ln && (ln = pn ? 200 : 0);
                        let An = ln >= 200 && ln < 300;
                        if (
                          "json" === tt.responseType &&
                          "string" == typeof pn
                        ) {
                          const yn = pn;
                          pn = pn.replace(Rt, "");
                          try {
                            pn = "" !== pn ? JSON.parse(pn) : null;
                          } catch (uo) {
                            (pn = yn),
                              An && ((An = !1), (pn = { error: uo, text: pn }));
                          }
                        }
                        An
                          ? (Te.next(
                              new Si({
                                body: pn,
                                headers: Yi,
                                status: ln,
                                statusText: bn,
                                url: Un || void 0,
                              }),
                            ),
                            Te.complete())
                          : Te.error(
                              new Vi({
                                error: pn,
                                headers: Yi,
                                status: ln,
                                statusText: bn,
                                url: Un || void 0,
                              }),
                            );
                      },
                      Me = (Yi) => {
                        const { url: ln } = ft(),
                          bn = new Vi({
                            error: Yi,
                            status: Je.status || 0,
                            statusText: Je.statusText || "Unknown Error",
                            url: ln || void 0,
                          });
                        Te.error(bn);
                      };
                    let si = !1;
                    const Ei = (Yi) => {
                        si || (Te.next(ft()), (si = !0));
                        let ln = {
                          type: vi.DownloadProgress,
                          loaded: Yi.loaded,
                        };
                        Yi.lengthComputable && (ln.total = Yi.total),
                          "text" === tt.responseType &&
                            Je.responseText &&
                            (ln.partialText = Je.responseText),
                          Te.next(ln);
                      },
                      Hi = (Yi) => {
                        let ln = { type: vi.UploadProgress, loaded: Yi.loaded };
                        Yi.lengthComputable && (ln.total = Yi.total),
                          Te.next(ln);
                      };
                    return (
                      Je.addEventListener("load", Gt),
                      Je.addEventListener("error", Me),
                      Je.addEventListener("timeout", Me),
                      Je.addEventListener("abort", Me),
                      tt.reportProgress &&
                        (Je.addEventListener("progress", Ei),
                        null !== Ot &&
                          Je.upload &&
                          Je.upload.addEventListener("progress", Hi)),
                      Je.send(Ot),
                      Te.next({ type: vi.Sent }),
                      () => {
                        Je.removeEventListener("error", Me),
                          Je.removeEventListener("abort", Me),
                          Je.removeEventListener("load", Gt),
                          Je.removeEventListener("timeout", Me),
                          tt.reportProgress &&
                            (Je.removeEventListener("progress", Ei),
                            null !== Ot &&
                              Je.upload &&
                              Je.upload.removeEventListener("progress", Hi)),
                          Je.readyState !== Je.DONE && Je.abort();
                      }
                    );
                  }),
              ),
            );
          }
          static #t = (this.ɵfac = function (me) {
            return new (me || pe)(s.LFG($.JF));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pe, factory: pe.ɵfac }));
        }
        return pe;
      })();
      const q = new s.OlP("XSRF_ENABLED"),
        H = new s.OlP("XSRF_COOKIE_NAME", {
          providedIn: "root",
          factory: () => "XSRF-TOKEN",
        }),
        X = new s.OlP("XSRF_HEADER_NAME", {
          providedIn: "root",
          factory: () => "X-XSRF-TOKEN",
        });
      class se {}
      let it = (() => {
        class pe {
          constructor(tt, me, Bt) {
            (this.doc = tt),
              (this.platform = me),
              (this.cookieName = Bt),
              (this.lastCookieString = ""),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ("server" === this.platform) return null;
            const tt = this.doc.cookie || "";
            return (
              tt !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = (0, $.Mx)(tt, this.cookieName)),
                (this.lastCookieString = tt)),
              this.lastToken
            );
          }
          static #t = (this.ɵfac = function (me) {
            return new (me || pe)(s.LFG($.K0), s.LFG(s.Lbi), s.LFG(H));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pe, factory: pe.ɵfac }));
        }
        return pe;
      })();
      function Ut(pe, ne) {
        const tt = pe.url.toLowerCase();
        if (
          !(0, s.f3M)(q) ||
          "GET" === pe.method ||
          "HEAD" === pe.method ||
          tt.startsWith("http://") ||
          tt.startsWith("https://")
        )
          return ne(pe);
        const me = (0, s.f3M)(se).getToken(),
          Bt = (0, s.f3M)(X);
        return (
          null != me &&
            !pe.headers.has(Bt) &&
            (pe = pe.clone({ headers: pe.headers.set(Bt, me) })),
          ne(pe)
        );
      }
      var qe = (function (pe) {
        return (
          (pe[(pe.Interceptors = 0)] = "Interceptors"),
          (pe[(pe.LegacyInterceptors = 1)] = "LegacyInterceptors"),
          (pe[(pe.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
          (pe[(pe.NoXsrfProtection = 3)] = "NoXsrfProtection"),
          (pe[(pe.JsonpSupport = 4)] = "JsonpSupport"),
          (pe[(pe.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
          (pe[(pe.Fetch = 6)] = "Fetch"),
          pe
        );
      })(qe || {});
      function Xt(...pe) {
        const ne = [
          Ie,
          ut,
          te,
          { provide: _, useExisting: te },
          { provide: A, useExisting: ut },
          { provide: Mi, useValue: Ut, multi: !0 },
          { provide: q, useValue: !0 },
          { provide: se, useClass: it },
        ];
        for (const tt of pe) ne.push(...tt.ɵproviders);
        return (0, s.MR2)(ne);
      }
      const ye = new s.OlP("LEGACY_INTERCEPTOR_FN");
      function $t() {
        return (function ki(pe, ne) {
          return { ɵkind: pe, ɵproviders: ne };
        })(qe.LegacyInterceptors, [
          { provide: ye, useFactory: ri },
          { provide: Mi, useExisting: ye, multi: !0 },
        ]);
      }
      let j = (() => {
        class pe {
          static #t = (this.ɵfac = function (me) {
            return new (me || pe)();
          });
          static #e = (this.ɵmod = s.oAB({ type: pe }));
          static #i = (this.ɵinj = s.cJS({ providers: [Xt($t())] }));
        }
        return pe;
      })();
    },
    5879: (ui, Zt, D) => {
      D.d(Zt, {
        $8M: () => Pd,
        $WT: () => nr,
        $Z: () => Pi,
        AFp: () => cp,
        ALo: () => Ly,
        AaK: () => A,
        AsE: () => p_,
        BQk: () => jp,
        CHM: () => pa,
        CRH: () => Xy,
        DdM: () => Ay,
        EJc: () => xM,
        EiD: () => Lf,
        EpF: () => qv,
        F$t: () => eb,
        F4k: () => Qv,
        FYo: () => nm,
        FiY: () => Gc,
        Gf: () => Ky,
        GfV: () => om,
        GkF: () => n_,
        Gpc: () => Jt,
        Gre: () => Rb,
        HDt: () => C0,
        Hsn: () => ib,
        Ikx: () => g_,
        JOm: () => ra,
        JVY: () => mo,
        JZr: () => Re,
        KtG: () => Rc,
        L6k: () => Go,
        LAX: () => yr,
        LFG: () => le,
        LSH: () => pu,
        Lbi: () => vc,
        Lck: () => dD,
        MAs: () => Yv,
        MGl: () => Hp,
        MMx: () => yy,
        MR2: () => gu,
        NdJ: () => r_,
        O4$: () => Ds,
        Ojb: () => xg,
        OlP: () => H,
        Oqu: () => m_,
        P3R: () => wh,
        PXZ: () => QM,
        Q6J: () => t_,
        QGY: () => o_,
        QbO: () => yg,
        Qsj: () => Ag,
        R0b: () => Bo,
        RDi: () => Se,
        Rgc: () => Fm,
        SBq: () => el,
        Sil: () => DM,
        Suo: () => Jy,
        TTD: () => tn,
        TgZ: () => Vp,
        Udp: () => u_,
        VKq: () => ky,
        VuI: () => OE,
        W1O: () => o0,
        WFA: () => s_,
        WLB: () => Ty,
        XFs: () => ot,
        Xpm: () => Jn,
        Xq5: () => Tv,
        Xts: () => Ma,
        Y36: () => di,
        YKP: () => vy,
        YNc: () => Hv,
        Yjl: () => ho,
        Yz7: () => ii,
        Z0I: () => te,
        ZZ4: () => Q_,
        _Bn: () => _y,
        _UZ: () => i_,
        _Vd: () => Eu,
        _c5: () => bE,
        _uU: () => Db,
        aQg: () => K_,
        c2e: () => w0,
        cJS: () => fi,
        cg1: () => v_,
        d8E: () => __,
        dDg: () => YM,
        dqk: () => ut,
        eBb: () => Ts,
        eFA: () => R0,
        eJc: () => P_,
        ekj: () => h_,
        eoX: () => k0,
        f3M: () => Yt,
        g9A: () => Yf,
        h0i: () => Fu,
        hGG: () => yE,
        hij: () => Yp,
        iGM: () => Qy,
        ifc: () => Je,
        ip1: () => x0,
        jDz: () => xy,
        kL8: () => Hb,
        kcU: () => Dd,
        lG2: () => $n,
        lcZ: () => Ny,
        lqb: () => sa,
        lri: () => S0,
        mCW: () => jr,
        n5z: () => ec,
        n_E: () => Kp,
        oAB: () => Xe,
        oxw: () => tb,
        pB0: () => Ka,
        q3G: () => Tl,
        qFp: () => RE,
        qLn: () => Rl,
        qOj: () => Yg,
        qZA: () => zp,
        qzn: () => Ho,
        rWj: () => A0,
        rg0: () => ni,
        s9C: () => a_,
        sBO: () => oE,
        s_b: () => tg,
        soG: () => ig,
        tb: () => G_,
        tp0: () => nc,
        uIk: () => Wg,
        vHH: () => wt,
        vpe: () => aa,
        wAp: () => Xh,
        xi3: () => By,
        xp6: () => ti,
        ynx: () => Up,
        z2F: () => rf,
        z3N: () => no,
        zSh: () => vu,
        zs3: () => Hr,
      });
      var s = D(8645),
        x = D(7394),
        C = D(5592),
        p = D(3019),
        at = D(5619),
        lt = D(2096),
        bt = D(3020),
        B = D(4664),
        kt = D(3997);
      function $(t) {
        for (let e in t) if (t[e] === $) return e;
        throw Error("Could not find renamed property on target object.");
      }
      function _(t, e) {
        for (const i in e)
          e.hasOwnProperty(i) && !t.hasOwnProperty(i) && (t[i] = e[i]);
      }
      function A(t) {
        if ("string" == typeof t) return t;
        if (Array.isArray(t)) return "[" + t.map(A).join(", ") + "]";
        if (null == t) return "" + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const e = t.toString();
        if (null == e) return "" + e;
        const i = e.indexOf("\n");
        return -1 === i ? e : e.substring(0, i);
      }
      function jt(t, e) {
        return null == t || "" === t
          ? null === e
            ? ""
            : e
          : null == e || "" === e
            ? t
            : t + " " + e;
      }
      const gt = $({ __forward_ref__: $ });
      function Jt(t) {
        return (
          (t.__forward_ref__ = Jt),
          (t.toString = function () {
            return A(this());
          }),
          t
        );
      }
      function De(t) {
        return Ve(t) ? t() : t;
      }
      function Ve(t) {
        return (
          "function" == typeof t &&
          t.hasOwnProperty(gt) &&
          t.__forward_ref__ === Jt
        );
      }
      function He(t) {
        return t && !!t.ɵproviders;
      }
      const Re = "https://g.co/ng/security#xss";
      class wt extends Error {
        constructor(e, i) {
          super(
            (function _t(t, e) {
              return `NG0${Math.abs(t)}${e ? ": " + e : ""}`;
            })(e, i),
          ),
            (this.code = e);
        }
      }
      function St(t) {
        return "string" == typeof t ? t : null == t ? "" : String(t);
      }
      function mi(t, e) {
        throw new wt(-201, !1);
      }
      function we(t, e) {
        null == t &&
          (function Vt(t, e, i, c) {
            throw new Error(
              `ASSERTION ERROR: ${t}` +
                (null == c ? "" : ` [Expected=> ${i} ${c} ${e} <=Actual]`),
            );
          })(e, t, null, "!=");
      }
      function ii(t) {
        return {
          token: t.token,
          providedIn: t.providedIn || null,
          factory: t.factory,
          value: void 0,
        };
      }
      function fi(t) {
        return { providers: t.providers || [], imports: t.imports || [] };
      }
      function ri(t) {
        return Be(t, gi) || Be(t, _i);
      }
      function te(t) {
        return null !== ri(t);
      }
      function Be(t, e) {
        return t.hasOwnProperty(e) ? t[e] : null;
      }
      function Ri(t) {
        return t && (t.hasOwnProperty(Xi) || t.hasOwnProperty(de))
          ? t[Xi]
          : null;
      }
      const gi = $({ ɵprov: $ }),
        Xi = $({ ɵinj: $ }),
        _i = $({ ngInjectableDef: $ }),
        de = $({ ngInjectorDef: $ });
      var ot = (function (t) {
        return (
          (t[(t.Default = 0)] = "Default"),
          (t[(t.Host = 1)] = "Host"),
          (t[(t.Self = 2)] = "Self"),
          (t[(t.SkipSelf = 4)] = "SkipSelf"),
          (t[(t.Optional = 8)] = "Optional"),
          t
        );
      })(ot || {});
      let Z;
      function yt(t) {
        const e = Z;
        return (Z = t), e;
      }
      function Rt(t, e, i) {
        const c = ri(t);
        return c && "root" == c.providedIn
          ? void 0 === c.value
            ? (c.value = c.factory())
            : c.value
          : i & ot.Optional
            ? null
            : void 0 !== e
              ? e
              : void mi(A(t));
      }
      const ut = globalThis;
      class H {
        constructor(e, i) {
          (this._desc = e),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof i
              ? (this.__NG_ELEMENT_ID__ = i)
              : void 0 !== i &&
                (this.ɵprov = ii({
                  token: this,
                  providedIn: i.providedIn || "root",
                  factory: i.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const $t = {},
        fe = "__NG_DI_FLAG__",
        ke = "ngTempTokenPath",
        pt = /\n/gm,
        U = "__source";
      let j;
      function ue(t) {
        const e = j;
        return (j = t), e;
      }
      function Wt(t, e = ot.Default) {
        if (void 0 === j) throw new wt(-203, !1);
        return null === j
          ? Rt(t, void 0, e)
          : j.get(t, e & ot.Optional ? null : void 0, e);
      }
      function le(t, e = ot.Default) {
        return (
          (function rt() {
            return Z;
          })() || Wt
        )(De(t), e);
      }
      function Yt(t, e = ot.Default) {
        return le(t, Ae(e));
      }
      function Ae(t) {
        return typeof t > "u" || "number" == typeof t
          ? t
          : 0 |
              (t.optional && 8) |
              (t.host && 1) |
              (t.self && 2) |
              (t.skipSelf && 4);
      }
      function oi(t) {
        const e = [];
        for (let i = 0; i < t.length; i++) {
          const c = De(t[i]);
          if (Array.isArray(c)) {
            if (0 === c.length) throw new wt(900, !1);
            let m,
              b = ot.Default;
            for (let E = 0; E < c.length; E++) {
              const T = c[E],
                F = ne(T);
              "number" == typeof F
                ? -1 === F
                  ? (m = T.token)
                  : (b |= F)
                : (m = T);
            }
            e.push(le(m, b));
          } else e.push(le(c));
        }
        return e;
      }
      function pe(t, e) {
        return (t[fe] = e), (t.prototype[fe] = e), t;
      }
      function ne(t) {
        return t[fe];
      }
      function Bt(t) {
        return { toString: t }.toString();
      }
      var Te = (function (t) {
          return (
            (t[(t.OnPush = 0)] = "OnPush"), (t[(t.Default = 1)] = "Default"), t
          );
        })(Te || {}),
        Je = (function (t) {
          return (
            (t[(t.Emulated = 0)] = "Emulated"),
            (t[(t.None = 2)] = "None"),
            (t[(t.ShadowDom = 3)] = "ShadowDom"),
            t
          );
        })(Je || {});
      const Ot = {},
        Ze = [],
        ft = $({ ɵcmp: $ }),
        Gt = $({ ɵdir: $ }),
        Me = $({ ɵpipe: $ }),
        si = $({ ɵmod: $ }),
        Ei = $({ ɵfac: $ }),
        Hi = $({ __NG_ELEMENT_ID__: $ }),
        Yi = $({ __NG_ENV_ID__: $ });
      function ln(t, e, i) {
        let c = t.length;
        for (;;) {
          const m = t.indexOf(e, i);
          if (-1 === m) return m;
          if (0 === m || t.charCodeAt(m - 1) <= 32) {
            const b = e.length;
            if (m + b === c || t.charCodeAt(m + b) <= 32) return m;
          }
          i = m + 1;
        }
      }
      function bn(t, e, i) {
        let c = 0;
        for (; c < i.length; ) {
          const m = i[c];
          if ("number" == typeof m) {
            if (0 !== m) break;
            c++;
            const b = i[c++],
              E = i[c++],
              T = i[c++];
            t.setAttribute(e, E, T, b);
          } else {
            const b = m,
              E = i[++c];
            pn(b) ? t.setProperty(e, b, E) : t.setAttribute(e, b, E), c++;
          }
        }
        return c;
      }
      function Un(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function pn(t) {
        return 64 === t.charCodeAt(0);
      }
      function An(t, e) {
        if (null !== e && 0 !== e.length)
          if (null === t || 0 === t.length) t = e.slice();
          else {
            let i = -1;
            for (let c = 0; c < e.length; c++) {
              const m = e[c];
              "number" == typeof m
                ? (i = m)
                : 0 === i ||
                  yn(t, i, m, null, -1 === i || 2 === i ? e[++c] : null);
            }
          }
        return t;
      }
      function yn(t, e, i, c, m) {
        let b = 0,
          E = t.length;
        if (-1 === e) E = -1;
        else
          for (; b < t.length; ) {
            const T = t[b++];
            if ("number" == typeof T) {
              if (T === e) {
                E = -1;
                break;
              }
              if (T > e) {
                E = b - 1;
                break;
              }
            }
          }
        for (; b < t.length; ) {
          const T = t[b];
          if ("number" == typeof T) break;
          if (T === i) {
            if (null === c) return void (null !== m && (t[b + 1] = m));
            if (c === t[b + 1]) return void (t[b + 2] = m);
          }
          b++, null !== c && b++, null !== m && b++;
        }
        -1 !== E && (t.splice(E, 0, e), (b = E + 1)),
          t.splice(b++, 0, i),
          null !== c && t.splice(b++, 0, c),
          null !== m && t.splice(b++, 0, m);
      }
      const uo = "ng-template";
      function Tn(t, e, i) {
        let c = 0,
          m = !0;
        for (; c < t.length; ) {
          let b = t[c++];
          if ("string" == typeof b && m) {
            const E = t[c++];
            if (i && "class" === b && -1 !== ln(E.toLowerCase(), e, 0))
              return !0;
          } else {
            if (1 === b) {
              for (; c < t.length && "string" == typeof (b = t[c++]); )
                if (b.toLowerCase() === e) return !0;
              return !1;
            }
            "number" == typeof b && (m = !1);
          }
        }
        return !1;
      }
      function oo(t) {
        return 4 === t.type && t.value !== uo;
      }
      function go(t, e, i) {
        return e === (4 !== t.type || i ? t.value : uo);
      }
      function qo(t, e, i) {
        let c = 4;
        const m = t.attrs || [],
          b = (function rs(t) {
            for (let e = 0; e < t.length; e++) if (Un(t[e])) return e;
            return t.length;
          })(m);
        let E = !1;
        for (let T = 0; T < e.length; T++) {
          const F = e[T];
          if ("number" != typeof F) {
            if (!E)
              if (4 & c) {
                if (
                  ((c = 2 | (1 & c)),
                  ("" !== F && !go(t, F, i)) || ("" === F && 1 === e.length))
                ) {
                  if (Kn(c)) return !1;
                  E = !0;
                }
              } else {
                const Q = 8 & c ? F : e[++T];
                if (8 & c && null !== t.attrs) {
                  if (!Tn(t.attrs, Q, i)) {
                    if (Kn(c)) return !1;
                    E = !0;
                  }
                  continue;
                }
                const qt = Ir(8 & c ? "class" : F, m, oo(t), i);
                if (-1 === qt) {
                  if (Kn(c)) return !1;
                  E = !0;
                  continue;
                }
                if ("" !== Q) {
                  let Oe;
                  Oe = qt > b ? "" : m[qt + 1].toLowerCase();
                  const Qe = 8 & c ? Oe : null;
                  if ((Qe && -1 !== ln(Qe, Q, 0)) || (2 & c && Q !== Oe)) {
                    if (Kn(c)) return !1;
                    E = !0;
                  }
                }
              }
          } else {
            if (!E && !Kn(c) && !Kn(F)) return !1;
            if (E && Kn(F)) continue;
            (E = !1), (c = F | (1 & c));
          }
        }
        return Kn(c) || E;
      }
      function Kn(t) {
        return 0 == (1 & t);
      }
      function Ir(t, e, i, c) {
        if (null === e) return -1;
        let m = 0;
        if (c || !i) {
          let b = !1;
          for (; m < e.length; ) {
            const E = e[m];
            if (E === t) return m;
            if (3 === E || 6 === E) b = !0;
            else {
              if (1 === E || 2 === E) {
                let T = e[++m];
                for (; "string" == typeof T; ) T = e[++m];
                continue;
              }
              if (4 === E) break;
              if (0 === E) {
                m += 4;
                continue;
              }
            }
            m += b ? 1 : 2;
          }
          return -1;
        }
        return (function Vs(t, e) {
          let i = t.indexOf(4);
          if (i > -1)
            for (i++; i < t.length; ) {
              const c = t[i];
              if ("number" == typeof c) return -1;
              if (c === e) return i;
              i++;
            }
          return -1;
        })(e, t);
      }
      function Gr(t, e, i = !1) {
        for (let c = 0; c < e.length; c++) if (qo(t, e[c], i)) return !0;
        return !1;
      }
      function ir(t, e) {
        t: for (let i = 0; i < e.length; i++) {
          const c = e[i];
          if (t.length === c.length) {
            for (let m = 0; m < t.length; m++) if (t[m] !== c[m]) continue t;
            return !0;
          }
        }
        return !1;
      }
      function Zr(t, e) {
        return t ? ":not(" + e.trim() + ")" : e;
      }
      function _s(t) {
        let e = t[0],
          i = 1,
          c = 2,
          m = "",
          b = !1;
        for (; i < t.length; ) {
          let E = t[i];
          if ("string" == typeof E)
            if (2 & c) {
              const T = t[++i];
              m += "[" + E + (T.length > 0 ? '="' + T + '"' : "") + "]";
            } else 8 & c ? (m += "." + E) : 4 & c && (m += " " + E);
          else
            "" !== m && !Kn(E) && ((e += Zr(b, m)), (m = "")),
              (c = E),
              (b = b || !Kn(c));
          i++;
        }
        return "" !== m && (e += Zr(b, m)), e;
      }
      function Jn(t) {
        return Bt(() => {
          const e = Oo(t),
            i = {
              ...e,
              decls: t.decls,
              vars: t.vars,
              template: t.template,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              onPush: t.changeDetection === Te.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (e.standalone && t.dependencies) || null,
              getStandaloneInjector: null,
              signals: t.signals ?? !1,
              data: t.data || {},
              encapsulation: t.encapsulation || Je.Emulated,
              styles: t.styles || Ze,
              _: null,
              schemas: t.schemas || null,
              tView: null,
              id: "",
            };
          Rr(i);
          const c = t.dependencies;
          return (
            (i.directiveDefs = Pr(c, !1)),
            (i.pipeDefs = Pr(c, !0)),
            (i.id = (function Vo(t) {
              let e = 0;
              const i = [
                t.selectors,
                t.ngContentSelectors,
                t.hostVars,
                t.hostAttrs,
                t.consts,
                t.vars,
                t.decls,
                t.encapsulation,
                t.standalone,
                t.signals,
                t.exportAs,
                JSON.stringify(t.inputs),
                JSON.stringify(t.outputs),
                Object.getOwnPropertyNames(t.type.prototype),
                !!t.contentQueries,
                !!t.viewQuery,
              ].join("|");
              for (const m of i) e = (Math.imul(31, e) + m.charCodeAt(0)) << 0;
              return (e += 2147483648), "c" + e;
            })(i)),
            i
          );
        });
      }
      function Pe(t) {
        return on(t) || un(t);
      }
      function he(t) {
        return null !== t;
      }
      function Xe(t) {
        return Bt(() => ({
          type: t.type,
          bootstrap: t.bootstrap || Ze,
          declarations: t.declarations || Ze,
          imports: t.imports || Ze,
          exports: t.exports || Ze,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        }));
      }
      function nn(t, e) {
        if (null == t) return Ot;
        const i = {};
        for (const c in t)
          if (t.hasOwnProperty(c)) {
            let m = t[c],
              b = m;
            Array.isArray(m) && ((b = m[1]), (m = m[0])),
              (i[m] = c),
              e && (e[m] = b);
          }
        return i;
      }
      function $n(t) {
        return Bt(() => {
          const e = Oo(t);
          return Rr(e), e;
        });
      }
      function ho(t) {
        return {
          type: t.type,
          name: t.name,
          factory: null,
          pure: !1 !== t.pure,
          standalone: !0 === t.standalone,
          onDestroy: t.type.prototype.ngOnDestroy || null,
        };
      }
      function on(t) {
        return t[ft] || null;
      }
      function un(t) {
        return t[Gt] || null;
      }
      function Xn(t) {
        return t[Me] || null;
      }
      function nr(t) {
        const e = on(t) || un(t) || Xn(t);
        return null !== e && e.standalone;
      }
      function _o(t, e) {
        const i = t[si] || null;
        if (!i && !0 === e)
          throw new Error(`Type ${A(t)} does not have '\u0275mod' property.`);
        return i;
      }
      function Oo(t) {
        const e = {};
        return {
          type: t.type,
          providersResolver: null,
          factory: null,
          hostBindings: t.hostBindings || null,
          hostVars: t.hostVars || 0,
          hostAttrs: t.hostAttrs || null,
          contentQueries: t.contentQueries || null,
          declaredInputs: e,
          inputTransforms: null,
          inputConfig: t.inputs || Ot,
          exportAs: t.exportAs || null,
          standalone: !0 === t.standalone,
          signals: !0 === t.signals,
          selectors: t.selectors || Ze,
          viewQuery: t.viewQuery || null,
          features: t.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: nn(t.inputs, e),
          outputs: nn(t.outputs),
        };
      }
      function Rr(t) {
        t.features?.forEach((e) => e(t));
      }
      function Pr(t, e) {
        if (!t) return null;
        const i = e ? Xn : Pe;
        return () =>
          ("function" == typeof t ? t() : t).map((c) => i(c)).filter(he);
      }
      const On = 0,
        Fi = 1,
        sn = 2,
        In = 3,
        vo = 4,
        zo = 5,
        eo = 6,
        xo = 7,
        Vn = 8,
        wo = 9,
        Yr = 10,
        cn = 11,
        Er = 12,
        Zo = 13,
        bo = 14,
        xn = 15,
        Wn = 16,
        jn = 17,
        Co = 18,
        $r = 19,
        or = 20,
        Qo = 21,
        Io = 22,
        Ko = 23,
        ca = 24,
        _n = 25,
        so = 1,
        Do = 2,
        _r = 7,
        as = 9,
        Mo = 11;
      function to(t) {
        return Array.isArray(t) && "object" == typeof t[so];
      }
      function Eo(t) {
        return Array.isArray(t) && !0 === t[so];
      }
      function Us(t) {
        return 0 != (4 & t.flags);
      }
      function rr(t) {
        return t.componentOffset > -1;
      }
      function sr(t) {
        return 1 == (1 & t.flags);
      }
      function Ro(t) {
        return !!t.template;
      }
      function js(t) {
        return 0 != (512 & t[sn]);
      }
      function xr(t, e) {
        return t.hasOwnProperty(Ei) ? t[Ei] : null;
      }
      let ao = null,
        Gs = !1;
      function Yo(t) {
        const e = ao;
        return (ao = t), e;
      }
      const Mc = {
        version: 0,
        dirty: !1,
        producerNode: void 0,
        producerLastReadVersion: void 0,
        producerIndexOfThis: void 0,
        nextProducerIndex: 0,
        liveConsumerNode: void 0,
        liveConsumerIndexOfThis: void 0,
        consumerAllowSignalWrites: !1,
        consumerIsAlwaysLive: !1,
        producerMustRecompute: () => !1,
        producerRecomputeValue: () => {},
        consumerMarkedDirty: () => {},
      };
      function Zs(t) {
        if (!xs(t) || t.dirty) {
          if (!t.producerMustRecompute(t) && !ol(t)) return void (t.dirty = !1);
          t.producerRecomputeValue(t), (t.dirty = !1);
        }
      }
      function ha(t) {
        (t.dirty = !0),
          (function Ys(t) {
            if (void 0 === t.liveConsumerNode) return;
            const e = Gs;
            Gs = !0;
            try {
              for (const i of t.liveConsumerNode) i.dirty || ha(i);
            } finally {
              Gs = e;
            }
          })(t),
          t.consumerMarkedDirty?.(t);
      }
      function Hl(t) {
        return t && (t.nextProducerIndex = 0), Yo(t);
      }
      function Oa(t, e) {
        if (
          (Yo(e),
          t &&
            void 0 !== t.producerNode &&
            void 0 !== t.producerIndexOfThis &&
            void 0 !== t.producerLastReadVersion)
        ) {
          if (xs(t))
            for (let i = t.nextProducerIndex; i < t.producerNode.length; i++)
              Ia(t.producerNode[i], t.producerIndexOfThis[i]);
          for (; t.producerNode.length > t.nextProducerIndex; )
            t.producerNode.pop(),
              t.producerLastReadVersion.pop(),
              t.producerIndexOfThis.pop();
        }
      }
      function ol(t) {
        ws(t);
        for (let e = 0; e < t.producerNode.length; e++) {
          const i = t.producerNode[e],
            c = t.producerLastReadVersion[e];
          if (c !== i.version || (Zs(i), c !== i.version)) return !0;
        }
        return !1;
      }
      function Gl(t) {
        if ((ws(t), xs(t)))
          for (let e = 0; e < t.producerNode.length; e++)
            Ia(t.producerNode[e], t.producerIndexOfThis[e]);
        (t.producerNode.length =
          t.producerLastReadVersion.length =
          t.producerIndexOfThis.length =
            0),
          t.liveConsumerNode &&
            (t.liveConsumerNode.length = t.liveConsumerIndexOfThis.length = 0);
      }
      function Ia(t, e) {
        if (
          ((function Ra(t) {
            (t.liveConsumerNode ??= []), (t.liveConsumerIndexOfThis ??= []);
          })(t),
          ws(t),
          1 === t.liveConsumerNode.length)
        )
          for (let c = 0; c < t.producerNode.length; c++)
            Ia(t.producerNode[c], t.producerIndexOfThis[c]);
        const i = t.liveConsumerNode.length - 1;
        if (
          ((t.liveConsumerNode[e] = t.liveConsumerNode[i]),
          (t.liveConsumerIndexOfThis[e] = t.liveConsumerIndexOfThis[i]),
          t.liveConsumerNode.length--,
          t.liveConsumerIndexOfThis.length--,
          e < t.liveConsumerNode.length)
        ) {
          const c = t.liveConsumerIndexOfThis[e],
            m = t.liveConsumerNode[e];
          ws(m), (m.producerIndexOfThis[c] = e);
        }
      }
      function xs(t) {
        return t.consumerIsAlwaysLive || (t?.liveConsumerNode?.length ?? 0) > 0;
      }
      function ws(t) {
        (t.producerNode ??= []),
          (t.producerIndexOfThis ??= []),
          (t.producerLastReadVersion ??= []);
      }
      let sl = null;
      function ni(t) {
        const e = Yo(null);
        try {
          return t();
        } finally {
          Yo(e);
        }
      }
      const $i = () => {},
        Pn = (() => ({
          ...Mc,
          consumerIsAlwaysLive: !0,
          consumerAllowSignalWrites: !1,
          consumerMarkedDirty: (t) => {
            t.schedule(t.ref);
          },
          hasRun: !1,
          cleanupFn: $i,
        }))();
      class Fn {
        constructor(e, i, c) {
          (this.previousValue = e),
            (this.currentValue = i),
            (this.firstChange = c);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function tn() {
        return zn;
      }
      function zn(t) {
        return t.type.prototype.ngOnChanges && (t.setInput = So), Bn;
      }
      function Bn() {
        const t = Xo(this),
          e = t?.current;
        if (e) {
          const i = t.previous;
          if (i === Ot) t.previous = e;
          else for (let c in e) i[c] = e[c];
          (t.current = null), this.ngOnChanges(e);
        }
      }
      function So(t, e, i, c) {
        const m = this.declaredInputs[i],
          b =
            Xo(t) ||
            (function Qr(t, e) {
              return (t[Fo] = e);
            })(t, { previous: Ot, current: null }),
          E = b.current || (b.current = {}),
          T = b.previous,
          F = T[m];
        (E[m] = new Fn(F && F.currentValue, e, T === Ot)), (t[c] = e);
      }
      tn.ngInherit = !0;
      const Fo = "__ngSimpleChanges__";
      function Xo(t) {
        return t[Fo] || null;
      }
      const jo = function (t, e, i) {},
        Sr = "svg";
      function Zn(t) {
        for (; Array.isArray(t); ) t = t[On];
        return t;
      }
      function Ws(t, e) {
        return Zn(e[t]);
      }
      function cr(t, e) {
        return Zn(e[t.index]);
      }
      function cl(t, e) {
        return t.data[e];
      }
      function hs(t, e) {
        return t[e];
      }
      function wr(t, e) {
        const i = e[t];
        return to(i) ? i : i[On];
      }
      function fs(t, e) {
        return null == e ? null : t[e];
      }
      function $l(t) {
        t[jn] = 0;
      }
      function Kr(t) {
        1024 & t[sn] || ((t[sn] |= 1024), Nu(t, 1));
      }
      function vd(t) {
        1024 & t[sn] && ((t[sn] &= -1025), Nu(t, -1));
      }
      function Nu(t, e) {
        let i = t[In];
        if (null === i) return;
        i[zo] += e;
        let c = i;
        for (
          i = i[In];
          null !== i && ((1 === e && 1 === c[zo]) || (-1 === e && 0 === c[zo]));

        )
          (i[zo] += e), (c = i), (i = i[In]);
      }
      const en = {
        lFrame: br(null),
        bindingsEnabled: !0,
        skipHydrationRootTNode: null,
      };
      function La() {
        return en.bindingsEnabled;
      }
      function ma() {
        return null !== en.skipHydrationRootTNode;
      }
      function xi() {
        return en.lFrame.lView;
      }
      function Dn() {
        return en.lFrame.tView;
      }
      function pa(t) {
        return (en.lFrame.contextLView = t), t[Vn];
      }
      function Rc(t) {
        return (en.lFrame.contextLView = null), t;
      }
      function $o() {
        let t = Pc();
        for (; null !== t && 64 === t.type; ) t = t.parent;
        return t;
      }
      function Pc() {
        return en.lFrame.currentTNode;
      }
      function Jr(t, e) {
        const i = en.lFrame;
        (i.currentTNode = t), (i.isParent = e);
      }
      function hl() {
        return en.lFrame.isParent;
      }
      function Ba() {
        en.lFrame.isParent = !1;
      }
      function Ee() {
        const t = en.lFrame;
        let e = t.bindingRootIndex;
        return (
          -1 === e && (e = t.bindingRootIndex = t.tView.bindingStartIndex), e
        );
      }
      function ga() {
        return en.lFrame.bindingIndex++;
      }
      function I(t) {
        const e = en.lFrame,
          i = e.bindingIndex;
        return (e.bindingIndex = e.bindingIndex + t), i;
      }
      function N(t, e) {
        const i = en.lFrame;
        (i.bindingIndex = i.bindingRootIndex = t), xt(e);
      }
      function xt(t) {
        en.lFrame.currentDirectiveIndex = t;
      }
      function oe(t) {
        const e = en.lFrame.currentDirectiveIndex;
        return -1 === e ? null : t[e];
      }
      function ei() {
        return en.lFrame.currentQueryIndex;
      }
      function Ke(t) {
        en.lFrame.currentQueryIndex = t;
      }
      function Bi(t) {
        const e = t[Fi];
        return 2 === e.type ? e.declTNode : 1 === e.type ? t[eo] : null;
      }
      function gn(t, e, i) {
        if (i & ot.SkipSelf) {
          let m = e,
            b = t;
          for (
            ;
            !((m = m.parent),
            null !== m ||
              i & ot.Host ||
              ((m = Bi(b)), null === m || ((b = b[bo]), 10 & m.type)));

          );
          if (null === m) return !1;
          (e = m), (t = b);
        }
        const c = (en.lFrame = Mn());
        return (c.currentTNode = e), (c.lView = t), !0;
      }
      function Hn(t) {
        const e = Mn(),
          i = t[Fi];
        (en.lFrame = e),
          (e.currentTNode = i.firstChild),
          (e.lView = t),
          (e.tView = i),
          (e.contextLView = t),
          (e.bindingIndex = i.bindingStartIndex),
          (e.inI18n = !1);
      }
      function Mn() {
        const t = en.lFrame,
          e = null === t ? null : t.child;
        return null === e ? br(t) : e;
      }
      function br(t) {
        const e = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
          inI18n: !1,
        };
        return null !== t && (t.child = e), e;
      }
      function rn() {
        const t = en.lFrame;
        return (
          (en.lFrame = t.parent), (t.currentTNode = null), (t.lView = null), t
        );
      }
      const Ao = rn;
      function _a() {
        const t = rn();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = -1),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function dr() {
        return en.lFrame.selectedIndex;
      }
      function ml(t) {
        en.lFrame.selectedIndex = t;
      }
      function yo() {
        const t = en.lFrame;
        return cl(t.tView, t.selectedIndex);
      }
      function Ds() {
        en.lFrame.currentNamespace = Sr;
      }
      function Dd() {
        !(function Md() {
          en.lFrame.currentNamespace = null;
        })();
      }
      let Lc = !0;
      function Qs() {
        return Lc;
      }
      function va(t) {
        Lc = t;
      }
      function pl(t, e) {
        for (let i = e.directiveStart, c = e.directiveEnd; i < c; i++) {
          const b = t.data[i].type.prototype,
            {
              ngAfterContentInit: E,
              ngAfterContentChecked: T,
              ngAfterViewInit: F,
              ngAfterViewChecked: Q,
              ngOnDestroy: mt,
            } = b;
          E && (t.contentHooks ??= []).push(-i, E),
            T &&
              ((t.contentHooks ??= []).push(i, T),
              (t.contentCheckHooks ??= []).push(i, T)),
            F && (t.viewHooks ??= []).push(-i, F),
            Q &&
              ((t.viewHooks ??= []).push(i, Q),
              (t.viewCheckHooks ??= []).push(i, Q)),
            null != mt && (t.destroyHooks ??= []).push(i, mt);
        }
      }
      function ba(t, e, i) {
        za(t, e, 3, i);
      }
      function Ks(t, e, i, c) {
        (3 & t[sn]) === i && za(t, e, i, c);
      }
      function Sd(t, e) {
        let i = t[sn];
        (3 & i) === e && ((i &= 8191), (i += 1), (t[sn] = i));
      }
      function za(t, e, i, c) {
        const b = c ?? -1,
          E = e.length - 1;
        let T = 0;
        for (let F = void 0 !== c ? 65535 & t[jn] : 0; F < E; F++)
          if ("number" == typeof e[F + 1]) {
            if (((T = e[F]), null != c && T >= c)) break;
          } else
            e[F] < 0 && (t[jn] += 65536),
              (T < b || -1 == b) &&
                (Ad(t, i, e, F), (t[jn] = (4294901760 & t[jn]) + F + 2)),
              F++;
      }
      function Js(t, e) {
        jo(4, t, e);
        const i = Yo(null);
        try {
          e.call(t);
        } finally {
          Yo(i), jo(5, t, e);
        }
      }
      function Ad(t, e, i, c) {
        const m = i[c] < 0,
          b = i[c + 1],
          T = t[m ? -i[c] : i[c]];
        m
          ? t[sn] >> 13 < t[jn] >> 16 &&
            (3 & t[sn]) === e &&
            ((t[sn] += 8192), Js(T, b))
          : Js(T, b);
      }
      const ya = -1;
      class ql {
        constructor(e, i, c) {
          (this.factory = e),
            (this.resolving = !1),
            (this.canSeeViewProviders = i),
            (this.injectImpl = c);
        }
      }
      function Xr(t) {
        return t !== ya;
      }
      function xa(t) {
        return 32767 & t;
      }
      function Ua(t, e) {
        let i = (function Nc(t) {
            return t >> 16;
          })(t),
          c = e;
        for (; i > 0; ) (c = c[bo]), i--;
        return c;
      }
      let Td = !0;
      function Bc(t) {
        const e = Td;
        return (Td = t), e;
      }
      const Zu = 255,
        Yu = 5;
      let Ql = 0;
      const Ms = {};
      function ja(t, e) {
        const i = Od(t, e);
        if (-1 !== i) return i;
        const c = e[Fi];
        c.firstCreatePass &&
          ((t.injectorIndex = e.length),
          Vc(c.data, t),
          Vc(e, null),
          Vc(c.blueprint, null));
        const m = Jl(t, e),
          b = t.injectorIndex;
        if (Xr(m)) {
          const E = xa(m),
            T = Ua(m, e),
            F = T[Fi].data;
          for (let Q = 0; Q < 8; Q++) e[b + Q] = T[E + Q] | F[E + Q];
        }
        return (e[b + 8] = m), b;
      }
      function Vc(t, e) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, e);
      }
      function Od(t, e) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null === e[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function Jl(t, e) {
        if (t.parent && -1 !== t.parent.injectorIndex)
          return t.parent.injectorIndex;
        let i = 0,
          c = null,
          m = e;
        for (; null !== m; ) {
          if (((c = Qu(m)), null === c)) return ya;
          if ((i++, (m = m[bo]), -1 !== c.injectorIndex))
            return c.injectorIndex | (i << 16);
        }
        return ya;
      }
      function zc(t, e, i) {
        !(function Kl(t, e, i) {
          let c;
          "string" == typeof i
            ? (c = i.charCodeAt(0) || 0)
            : i.hasOwnProperty(Hi) && (c = i[Hi]),
            null == c && (c = i[Hi] = Ql++);
          const m = c & Zu;
          e.data[t + (m >> Yu)] |= 1 << m;
        })(t, e, i);
      }
      function ea(t, e, i) {
        if (i & ot.Optional || void 0 !== t) return t;
        mi();
      }
      function Uc(t, e, i, c) {
        if (
          (i & ot.Optional && void 0 === c && (c = null),
          !(i & (ot.Self | ot.Host)))
        ) {
          const m = t[wo],
            b = yt(void 0);
          try {
            return m ? m.get(e, c, i & ot.Optional) : Rt(e, c, i & ot.Optional);
          } finally {
            yt(b);
          }
        }
        return ea(c, 0, i);
      }
      function Xl(t, e, i, c = ot.Default, m) {
        if (null !== t) {
          if (2048 & e[sn] && !(c & ot.Self)) {
            const E = (function Ga(t, e, i, c, m) {
              let b = t,
                E = e;
              for (
                ;
                null !== b && null !== E && 2048 & E[sn] && !(512 & E[sn]);

              ) {
                const T = gl(b, E, i, c | ot.Self, Ms);
                if (T !== Ms) return T;
                let F = b.parent;
                if (!F) {
                  const Q = E[or];
                  if (Q) {
                    const mt = Q.get(i, Ms, c);
                    if (mt !== Ms) return mt;
                  }
                  (F = Qu(E)), (E = E[bo]);
                }
                b = F;
              }
              return m;
            })(t, e, i, c, Ms);
            if (E !== Ms) return E;
          }
          const b = gl(t, e, i, c, Ms);
          if (b !== Ms) return b;
        }
        return Uc(e, i, c, m);
      }
      function gl(t, e, i, c, m) {
        const b = (function $u(t) {
          if ("string" == typeof t) return t.charCodeAt(0) || 0;
          const e = t.hasOwnProperty(Hi) ? t[Hi] : void 0;
          return "number" == typeof e ? (e >= 0 ? e & Zu : Rd) : e;
        })(i);
        if ("function" == typeof b) {
          if (!gn(e, t, c)) return c & ot.Host ? ea(m, 0, c) : Uc(e, i, c, m);
          try {
            let E;
            if (((E = b(c)), null != E || c & ot.Optional)) return E;
            mi();
          } finally {
            Ao();
          }
        } else if ("number" == typeof b) {
          let E = null,
            T = Od(t, e),
            F = ya,
            Q = c & ot.Host ? e[xn][eo] : null;
          for (
            (-1 === T || c & ot.SkipSelf) &&
            ((F = -1 === T ? Jl(t, e) : e[T + 8]),
            F !== ya && qu(c, !1)
              ? ((E = e[Fi]), (T = xa(F)), (e = Ua(F, e)))
              : (T = -1));
            -1 !== T;

          ) {
            const mt = e[Fi];
            if (Wu(b, T, mt.data)) {
              const qt = lf(T, e, i, E, c, Q);
              if (qt !== Ms) return qt;
            }
            (F = e[T + 8]),
              F !== ya && qu(c, e[Fi].data[T + 8] === Q) && Wu(b, T, e)
                ? ((E = mt), (T = xa(F)), (e = Ua(F, e)))
                : (T = -1);
          }
        }
        return m;
      }
      function lf(t, e, i, c, m, b) {
        const E = e[Fi],
          T = E.data[t + 8],
          mt = tc(
            T,
            E,
            i,
            null == c ? rr(T) && Td : c != E && 0 != (3 & T.type),
            m & ot.Host && b === T,
          );
        return null !== mt ? Ha(e, E, mt, T) : Ms;
      }
      function tc(t, e, i, c, m) {
        const b = t.providerIndexes,
          E = e.data,
          T = 1048575 & b,
          F = t.directiveStart,
          mt = b >> 20,
          Oe = m ? T + mt : t.directiveEnd;
        for (let Qe = c ? T : T + mt; Qe < Oe; Qe++) {
          const bi = E[Qe];
          if ((Qe < F && i === bi) || (Qe >= F && bi.type === i)) return Qe;
        }
        if (m) {
          const Qe = E[F];
          if (Qe && Ro(Qe) && Qe.type === i) return F;
        }
        return null;
      }
      function Ha(t, e, i, c) {
        let m = t[i];
        const b = e.data;
        if (
          (function ju(t) {
            return t instanceof ql;
          })(m)
        ) {
          const E = m;
          E.resolving &&
            (function ee(t, e) {
              const i = e ? `. Dependency path: ${e.join(" > ")} > ${t}` : "";
              throw new wt(
                -200,
                `Circular dependency in DI detected for ${t}${i}`,
              );
            })(
              (function Pt(t) {
                return "function" == typeof t
                  ? t.name || t.toString()
                  : "object" == typeof t &&
                      null != t &&
                      "function" == typeof t.type
                    ? t.type.name || t.type.toString()
                    : St(t);
              })(b[i]),
            );
          const T = Bc(E.canSeeViewProviders);
          E.resolving = !0;
          const Q = E.injectImpl ? yt(E.injectImpl) : null;
          gn(t, c, ot.Default);
          try {
            (m = t[i] = E.factory(void 0, b, t, c)),
              e.firstCreatePass &&
                i >= c.directiveStart &&
                (function Ed(t, e, i) {
                  const {
                    ngOnChanges: c,
                    ngOnInit: m,
                    ngDoCheck: b,
                  } = e.type.prototype;
                  if (c) {
                    const E = zn(e);
                    (i.preOrderHooks ??= []).push(t, E),
                      (i.preOrderCheckHooks ??= []).push(t, E);
                  }
                  m && (i.preOrderHooks ??= []).push(0 - t, m),
                    b &&
                      ((i.preOrderHooks ??= []).push(t, b),
                      (i.preOrderCheckHooks ??= []).push(t, b));
                })(i, b[i], e);
          } finally {
            null !== Q && yt(Q), Bc(T), (E.resolving = !1), Ao();
          }
        }
        return m;
      }
      function Wu(t, e, i) {
        return !!(i[e + (t >> Yu)] & (1 << t));
      }
      function qu(t, e) {
        return !(t & ot.Self || (t & ot.Host && e));
      }
      class ur {
        constructor(e, i) {
          (this._tNode = e), (this._lView = i);
        }
        get(e, i, c) {
          return Xl(this._tNode, this._lView, e, Ae(c), i);
        }
      }
      function Rd() {
        return new ur($o(), xi());
      }
      function ec(t) {
        return Bt(() => {
          const e = t.prototype.constructor,
            i = e[Ei] || Vr(e),
            c = Object.prototype;
          let m = Object.getPrototypeOf(t.prototype).constructor;
          for (; m && m !== c; ) {
            const b = m[Ei] || Vr(m);
            if (b && b !== i) return b;
            m = Object.getPrototypeOf(m);
          }
          return (b) => new b();
        });
      }
      function Vr(t) {
        return Ve(t)
          ? () => {
              const e = Vr(De(t));
              return e && e();
            }
          : xr(t);
      }
      function Qu(t) {
        const e = t[Fi],
          i = e.type;
        return 2 === i ? e.declTNode : 1 === i ? t[eo] : null;
      }
      function Pd(t) {
        return (function ta(t, e) {
          if ("class" === e) return t.classes;
          if ("style" === e) return t.styles;
          const i = t.attrs;
          if (i) {
            const c = i.length;
            let m = 0;
            for (; m < c; ) {
              const b = i[m];
              if (Un(b)) break;
              if (0 === b) m += 2;
              else if ("number" == typeof b)
                for (m++; m < c && "string" == typeof i[m]; ) m++;
              else {
                if (b === e) return i[m + 1];
                m += 2;
              }
            }
          }
          return null;
        })($o(), t);
      }
      const Ln = "__parameters__";
      function _l(t, e, i) {
        return Bt(() => {
          const c = (function Ld(t) {
            return function (...i) {
              if (t) {
                const c = t(...i);
                for (const m in c) this[m] = c[m];
              }
            };
          })(e);
          function m(...b) {
            if (this instanceof m) return c.apply(this, b), this;
            const E = new m(...b);
            return (T.annotation = E), T;
            function T(F, Q, mt) {
              const qt = F.hasOwnProperty(Ln)
                ? F[Ln]
                : Object.defineProperty(F, Ln, { value: [] })[Ln];
              for (; qt.length <= mt; ) qt.push(null);
              return (qt[mt] = qt[mt] || []).push(E), F;
            }
          }
          return (
            i && (m.prototype = Object.create(i.prototype)),
            (m.prototype.ngMetadataName = t),
            (m.annotationCls = m),
            m
          );
        });
      }
      function Ss(t, e) {
        t.forEach((i) => (Array.isArray(i) ? Ss(i, e) : e(i)));
      }
      function wl(t, e, i) {
        e >= t.length ? t.push(i) : t.splice(e, 0, i);
      }
      function ia(t, e) {
        return e >= t.length - 1 ? t.pop() : t.splice(e, 1)[0];
      }
      function na(t, e) {
        const i = [];
        for (let c = 0; c < t; c++) i.push(e);
        return i;
      }
      function zr(t, e, i) {
        let c = oa(t, e);
        return (
          c >= 0
            ? (t[1 | c] = i)
            : ((c = ~c),
              (function es(t, e, i, c) {
                let m = t.length;
                if (m == e) t.push(i, c);
                else if (1 === m) t.push(c, t[0]), (t[0] = i);
                else {
                  for (m--, t.push(t[m - 1], t[m]); m > e; )
                    (t[m] = t[m - 2]), m--;
                  (t[e] = i), (t[e + 1] = c);
                }
              })(t, c, e, i)),
          c
        );
      }
      function Bd(t, e) {
        const i = oa(t, e);
        if (i >= 0) return t[1 | i];
      }
      function oa(t, e) {
        return (function ic(t, e, i) {
          let c = 0,
            m = t.length >> i;
          for (; m !== c; ) {
            const b = c + ((m - c) >> 1),
              E = t[b << i];
            if (e === E) return b << i;
            E > e ? (m = b) : (c = b + 1);
          }
          return ~(m << i);
        })(t, e, 1);
      }
      const Gc = pe(_l("Optional"), 8),
        nc = pe(_l("SkipSelf"), 4);
      function sc(t) {
        return 128 == (128 & t.flags);
      }
      var ra = (function (t) {
        return (
          (t[(t.Important = 1)] = "Important"),
          (t[(t.DashCase = 2)] = "DashCase"),
          t
        );
      })(ra || {});
      const fo = /^>|^->|<!--|-->|--!>|<!-$/g,
        As = /(<|>)/g,
        vf = "\u200b$1\u200b";
      const El = new Map();
      let ac = 0;
      const Wd = "__ngContext__";
      function mr(t, e) {
        to(e)
          ? ((t[Wd] = e[$r]),
            (function kr(t) {
              El.set(t[$r], t);
            })(e))
          : (t[Wd] = e);
      }
      let Jd;
      function Xd(t, e) {
        return Jd(t, e);
      }
      function cc(t) {
        const e = t[In];
        return Eo(e) ? e[In] : e;
      }
      function dc(t) {
        return Wi(t[Er]);
      }
      function ph(t) {
        return Wi(t[vo]);
      }
      function Wi(t) {
        for (; null !== t && !Eo(t); ) t = t[vo];
        return t;
      }
      function To(t, e, i, c, m) {
        if (null != c) {
          let b,
            E = !1;
          Eo(c) ? (b = c) : to(c) && ((E = !0), (c = c[On]));
          const T = Zn(c);
          0 === t && null !== i
            ? null == m
              ? su(e, i, T)
              : ks(e, i, T, m || null, !0)
            : 1 === t && null !== i
              ? ks(e, i, T, m || null, !0)
              : 2 === t
                ? (function od(t, e, i) {
                    const c = pr(t, e);
                    c &&
                      (function lu(t, e, i, c) {
                        t.removeChild(e, i, c);
                      })(t, c, e, i);
                  })(e, T, E)
                : 3 === t && e.destroyNode(T),
            null != b &&
              (function u(t, e, i, c, m) {
                const b = i[_r];
                b !== Zn(i) && To(e, t, c, b, m);
                for (let T = Mo; T < i.length; T++) {
                  const F = i[T];
                  l(F[Fi], F, t, e, c, b);
                }
              })(e, t, b, i, m);
        }
      }
      function td(t, e) {
        return t.createComment(
          (function Ml(t) {
            return t.replace(fo, (e) => e.replace(As, vf));
          })(e),
        );
      }
      function Da(t, e, i) {
        return t.createElement(e, i);
      }
      function Ef(t, e) {
        const i = t[as],
          c = i.indexOf(e);
        vd(e), i.splice(c, 1);
      }
      function uc(t, e) {
        if (t.length <= Mo) return;
        const i = Mo + e,
          c = t[i];
        if (c) {
          const m = c[Wn];
          null !== m && m !== t && Ef(m, c), e > 0 && (t[i - 1][vo] = c[vo]);
          const b = ia(t, Mo + e);
          !(function ed(t, e) {
            l(t, e, e[cn], 2, null, null), (e[On] = null), (e[eo] = null);
          })(c[Fi], c);
          const E = b[Co];
          null !== E && E.detachView(b[Fi]),
            (c[In] = null),
            (c[vo] = null),
            (c[sn] &= -129);
        }
        return c;
      }
      function iu(t, e) {
        if (!(256 & e[sn])) {
          const i = e[cn];
          e[Ko] && Gl(e[Ko]),
            e[ca] && Gl(e[ca]),
            i.destroyNode && l(t, e, i, 3, null, null),
            (function gh(t) {
              let e = t[Er];
              if (!e) return nu(t[Fi], t);
              for (; e; ) {
                let i = null;
                if (to(e)) i = e[Er];
                else {
                  const c = e[Mo];
                  c && (i = c);
                }
                if (!i) {
                  for (; e && !e[vo] && e !== t; )
                    to(e) && nu(e[Fi], e), (e = e[In]);
                  null === e && (e = t),
                    to(e) && nu(e[Fi], e),
                    (i = e && e[vo]);
                }
                e = i;
              }
            })(e);
        }
      }
      function nu(t, e) {
        if (!(256 & e[sn])) {
          (e[sn] &= -129),
            (e[sn] |= 256),
            (function Sf(t, e) {
              let i;
              if (null != t && null != (i = t.destroyHooks))
                for (let c = 0; c < i.length; c += 2) {
                  const m = e[i[c]];
                  if (!(m instanceof ql)) {
                    const b = i[c + 1];
                    if (Array.isArray(b))
                      for (let E = 0; E < b.length; E += 2) {
                        const T = m[b[E]],
                          F = b[E + 1];
                        jo(4, T, F);
                        try {
                          F.call(T);
                        } finally {
                          jo(5, T, F);
                        }
                      }
                    else {
                      jo(4, m, b);
                      try {
                        b.call(m);
                      } finally {
                        jo(5, m, b);
                      }
                    }
                  }
                }
            })(t, e),
            (function ou(t, e) {
              const i = t.cleanup,
                c = e[xo];
              if (null !== i)
                for (let b = 0; b < i.length - 1; b += 2)
                  if ("string" == typeof i[b]) {
                    const E = i[b + 3];
                    E >= 0 ? c[E]() : c[-E].unsubscribe(), (b += 2);
                  } else i[b].call(c[i[b + 1]]);
              null !== c && (e[xo] = null);
              const m = e[Qo];
              if (null !== m) {
                e[Qo] = null;
                for (let b = 0; b < m.length; b++) (0, m[b])();
              }
            })(t, e),
            1 === e[Fi].type && e[cn].destroy();
          const i = e[Wn];
          if (null !== i && Eo(e[In])) {
            i !== e[In] && Ef(i, e);
            const c = e[Co];
            null !== c && c.detachView(t);
          }
          !(function hh(t) {
            El.delete(t[$r]);
          })(e);
        }
      }
      function id(t, e, i) {
        return (function ru(t, e, i) {
          let c = e;
          for (; null !== c && 40 & c.type; ) c = (e = c).parent;
          if (null === c) return i[On];
          {
            const { componentOffset: m } = c;
            if (m > -1) {
              const { encapsulation: b } = t.data[c.directiveStart + m];
              if (b === Je.None || b === Je.Emulated) return null;
            }
            return cr(c, i);
          }
        })(t, e.parent, i);
      }
      function ks(t, e, i, c, m) {
        t.insertBefore(e, i, c, m);
      }
      function su(t, e, i) {
        t.appendChild(e, i);
      }
      function au(t, e, i, c, m) {
        null !== c ? ks(t, e, i, c, m) : su(t, e, i);
      }
      function pr(t, e) {
        return t.parentNode(e);
      }
      function cu(t, e, i) {
        return vh(t, e, i);
      }
      let bh,
        S,
        Ce,
        ai,
        vh = function du(t, e, i) {
          return 40 & t.type ? cr(t, i) : null;
        };
      function nd(t, e, i, c) {
        const m = id(t, c, e),
          b = e[cn],
          T = cu(c.parent || e[eo], c, e);
        if (null != m)
          if (Array.isArray(i))
            for (let F = 0; F < i.length; F++) au(b, m, i[F], T, !1);
          else au(b, m, i, T, !1);
        void 0 !== bh && bh(b, c, e, i, m);
      }
      function Qa(t, e) {
        if (null !== e) {
          const i = e.type;
          if (3 & i) return cr(e, t);
          if (4 & i) return kl(-1, t[e.index]);
          if (8 & i) {
            const c = e.child;
            if (null !== c) return Qa(t, c);
            {
              const m = t[e.index];
              return Eo(m) ? kl(-1, m) : Zn(m);
            }
          }
          if (32 & i) return Xd(e, t)() || Zn(t[e.index]);
          {
            const c = fc(t, e);
            return null !== c
              ? Array.isArray(c)
                ? c[0]
                : Qa(cc(t[xn]), c)
              : Qa(t, e.next);
          }
        }
        return null;
      }
      function fc(t, e) {
        return null !== e ? t[xn][eo].projection[e.projection] : null;
      }
      function kl(t, e) {
        const i = Mo + t + 1;
        if (i < e.length) {
          const c = e[i],
            m = c[Fi].firstChild;
          if (null !== m) return Qa(c, m);
        }
        return e[_r];
      }
      function hu(t, e, i, c, m, b, E) {
        for (; null != i; ) {
          const T = c[i.index],
            F = i.type;
          if (
            (E && 0 === e && (T && mr(Zn(T), c), (i.flags |= 2)),
            32 != (32 & i.flags))
          )
            if (8 & F) hu(t, e, i.child, c, m, b, !1), To(e, t, m, T, b);
            else if (32 & F) {
              const Q = Xd(i, c);
              let mt;
              for (; (mt = Q()); ) To(e, t, m, mt, b);
              To(e, t, m, T, b);
            } else 16 & F ? o(t, e, c, i, m, b) : To(e, t, m, T, b);
          i = E ? i.projectionNext : i.next;
        }
      }
      function l(t, e, i, c, m, b) {
        hu(i, c, t.firstChild, e, m, b, !1);
      }
      function o(t, e, i, c, m, b) {
        const E = i[xn],
          F = E[eo].projection[c.projection];
        if (Array.isArray(F))
          for (let Q = 0; Q < F.length; Q++) To(e, t, m, F[Q], b);
        else {
          let Q = F;
          const mt = E[In];
          sc(c) && (Q.flags |= 128), hu(t, e, Q, mt, m, b, !0);
        }
      }
      function y(t, e, i) {
        "" === i
          ? t.removeAttribute(e, "class")
          : t.setAttribute(e, "class", i);
      }
      function w(t, e, i) {
        const { mergedAttrs: c, classes: m, styles: b } = i;
        null !== c && bn(t, e, c),
          null !== m && y(t, e, m),
          null !== b &&
            (function g(t, e, i) {
              t.setAttribute(e, "style", i);
            })(t, e, b);
      }
      function Y(t) {
        return (
          (function P() {
            if (void 0 === S && ((S = null), ut.trustedTypes))
              try {
                S = ut.trustedTypes.createPolicy("angular", {
                  createHTML: (t) => t,
                  createScript: (t) => t,
                  createScriptURL: (t) => t,
                });
              } catch {}
            return S;
          })()?.createHTML(t) || t
        );
      }
      function Se(t) {
        Ce = t;
      }
      function Di(t) {
        return (
          (function Ti() {
            if (void 0 === ai && ((ai = null), ut.trustedTypes))
              try {
                ai = ut.trustedTypes.createPolicy("angular#unsafe-bypass", {
                  createHTML: (t) => t,
                  createScript: (t) => t,
                  createScriptURL: (t) => t,
                });
              } catch {}
            return ai;
          })()?.createScriptURL(t) || t
        );
      }
      class Ui {
        constructor(e) {
          this.changingThisBreaksApplicationSecurity = e;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Re})`;
        }
      }
      class Ni extends Ui {
        getTypeName() {
          return "HTML";
        }
      }
      class Ji extends Ui {
        getTypeName() {
          return "Style";
        }
      }
      class En extends Ui {
        getTypeName() {
          return "Script";
        }
      }
      class wn extends Ui {
        getTypeName() {
          return "URL";
        }
      }
      class Nn extends Ui {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function no(t) {
        return t instanceof Ui ? t.changingThisBreaksApplicationSecurity : t;
      }
      function Ho(t, e) {
        const i = (function Qn(t) {
          return (t instanceof Ui && t.getTypeName()) || null;
        })(t);
        if (null != i && i !== e) {
          if ("ResourceURL" === i && "URL" === e) return !0;
          throw new Error(`Required a safe ${e}, got a ${i} (see ${Re})`);
        }
        return i === e;
      }
      function mo(t) {
        return new Ni(t);
      }
      function Go(t) {
        return new Ji(t);
      }
      function Ts(t) {
        return new En(t);
      }
      function yr(t) {
        return new wn(t);
      }
      function Ka(t) {
        return new Nn(t);
      }
      class Os {
        constructor(e) {
          this.inertDocumentHelper = e;
        }
        getInertBodyElement(e) {
          e = "<body><remove></remove>" + e;
          try {
            const i = new window.DOMParser().parseFromString(
              Y(e),
              "text/html",
            ).body;
            return null === i
              ? this.inertDocumentHelper.getInertBodyElement(e)
              : (i.removeChild(i.firstChild), i);
          } catch {
            return null;
          }
        }
      }
      class sd {
        constructor(e) {
          (this.defaultDoc = e),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert",
              ));
        }
        getInertBodyElement(e) {
          const i = this.inertDocument.createElement("template");
          return (i.innerHTML = Y(e)), i;
        }
      }
      const Xa = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function jr(t) {
        return (t = String(t)).match(Xa) ? t : "unsafe:" + t;
      }
      function ms(t) {
        const e = {};
        for (const i of t.split(",")) e[i] = !0;
        return e;
      }
      function fu(...t) {
        const e = {};
        for (const i of t)
          for (const c in i) i.hasOwnProperty(c) && (e[c] = !0);
        return e;
      }
      const mc = ms("area,br,col,hr,img,wbr"),
        kf = ms("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        Tf = ms("rp,rt"),
        Of = fu(
          mc,
          fu(
            kf,
            ms(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul",
            ),
          ),
          fu(
            Tf,
            ms(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video",
            ),
          ),
          fu(Tf, kf),
        ),
        If = ms("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        Rf = fu(
          If,
          ms(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width",
          ),
          ms(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext",
          ),
        ),
        Jm = ms("script,style,template");
      class Pf {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(e) {
          let i = e.firstChild,
            c = !0;
          for (; i; )
            if (
              (i.nodeType === Node.ELEMENT_NODE
                ? (c = this.startElement(i))
                : i.nodeType === Node.TEXT_NODE
                  ? this.chars(i.nodeValue)
                  : (this.sanitizedSomething = !0),
              c && i.firstChild)
            )
              i = i.firstChild;
            else
              for (; i; ) {
                i.nodeType === Node.ELEMENT_NODE && this.endElement(i);
                let m = this.checkClobberedElement(i, i.nextSibling);
                if (m) {
                  i = m;
                  break;
                }
                i = this.checkClobberedElement(i, i.parentNode);
              }
          return this.buf.join("");
        }
        startElement(e) {
          const i = e.nodeName.toLowerCase();
          if (!Of.hasOwnProperty(i))
            return (this.sanitizedSomething = !0), !Jm.hasOwnProperty(i);
          this.buf.push("<"), this.buf.push(i);
          const c = e.attributes;
          for (let m = 0; m < c.length; m++) {
            const b = c.item(m),
              E = b.name,
              T = E.toLowerCase();
            if (!Rf.hasOwnProperty(T)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let F = b.value;
            If[T] && (F = jr(F)), this.buf.push(" ", E, '="', Ff(F), '"');
          }
          return this.buf.push(">"), !0;
        }
        endElement(e) {
          const i = e.nodeName.toLowerCase();
          Of.hasOwnProperty(i) &&
            !mc.hasOwnProperty(i) &&
            (this.buf.push("</"), this.buf.push(i), this.buf.push(">"));
        }
        chars(e) {
          this.buf.push(Ff(e));
        }
        checkClobberedElement(e, i) {
          if (
            i &&
            (e.compareDocumentPosition(i) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${e.outerHTML}`,
            );
          return i;
        }
      }
      const Xm = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        tp = /([^\#-~ |!])/g;
      function Ff(t) {
        return t
          .replace(/&/g, "&amp;")
          .replace(Xm, function (e) {
            return (
              "&#" +
              (1024 * (e.charCodeAt(0) - 55296) +
                (e.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(tp, function (e) {
            return "&#" + e.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let mu;
      function Lf(t, e) {
        let i = null;
        try {
          mu =
            mu ||
            (function rd(t) {
              const e = new sd(t);
              return (function Ja() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Y(""),
                    "text/html",
                  );
                } catch {
                  return !1;
                }
              })()
                ? new Os(e)
                : e;
            })(t);
          let c = e ? String(e) : "";
          i = mu.getInertBodyElement(c);
          let m = 5,
            b = c;
          do {
            if (0 === m)
              throw new Error(
                "Failed to sanitize html because the input is unstable",
              );
            m--, (c = b), (b = i.innerHTML), (i = mu.getInertBodyElement(c));
          } while (c !== b);
          return Y(new Pf().sanitizeChildren(Nf(i) || i));
        } finally {
          if (i) {
            const c = Nf(i) || i;
            for (; c.firstChild; ) c.removeChild(c.firstChild);
          }
        }
      }
      function Nf(t) {
        return "content" in t &&
          (function ug(t) {
            return (
              t.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === t.nodeName
            );
          })(t)
          ? t.content
          : null;
      }
      var Tl = (function (t) {
        return (
          (t[(t.NONE = 0)] = "NONE"),
          (t[(t.HTML = 1)] = "HTML"),
          (t[(t.STYLE = 2)] = "STYLE"),
          (t[(t.SCRIPT = 3)] = "SCRIPT"),
          (t[(t.URL = 4)] = "URL"),
          (t[(t.RESOURCE_URL = 5)] = "RESOURCE_URL"),
          t
        );
      })(Tl || {});
      function pu(t) {
        const e = ld();
        return e
          ? e.sanitize(Tl.URL, t) || ""
          : Ho(t, "URL")
            ? no(t)
            : jr(St(t));
      }
      function ad(t) {
        const e = ld();
        if (e) return Di(e.sanitize(Tl.RESOURCE_URL, t) || "");
        if (Ho(t, "ResourceURL")) return Di(no(t));
        throw new wt(904, !1);
      }
      function wh(t, e, i) {
        return (function xh(t, e) {
          return ("src" === e &&
            ("embed" === t ||
              "frame" === t ||
              "iframe" === t ||
              "media" === t ||
              "script" === t)) ||
            ("href" === e && ("base" === t || "link" === t))
            ? ad
            : pu;
        })(
          e,
          i,
        )(t);
      }
      function ld() {
        const t = xi();
        return t && t[Yr].sanitizer;
      }
      const Ma = new H("ENVIRONMENT_INITIALIZER"),
        gc = new H("INJECTOR", -1),
        np = new H("INJECTOR_DEF_TYPES");
      class Dh {
        get(e, i = $t) {
          if (i === $t) {
            const c = new Error(`NullInjectorError: No provider for ${A(e)}!`);
            throw ((c.name = "NullInjectorError"), c);
          }
          return i;
        }
      }
      function gu(t) {
        return { ɵproviders: t };
      }
      function op(...t) {
        return { ɵproviders: _u(0, t), ɵfromNgModule: !0 };
      }
      function _u(t, ...e) {
        const i = [],
          c = new Set();
        let m;
        const b = (E) => {
          i.push(E);
        };
        return (
          Ss(e, (E) => {
            const T = E;
            Mh(T, b, [], c) && ((m ||= []), m.push(T));
          }),
          void 0 !== m && Vf(m, b),
          i
        );
      }
      function Vf(t, e) {
        for (let i = 0; i < t.length; i++) {
          const { ngModule: c, providers: m } = t[i];
          zf(m, (b) => {
            e(b, c);
          });
        }
      }
      function Mh(t, e, i, c) {
        if (!(t = De(t))) return !1;
        let m = null,
          b = Ri(t);
        const E = !b && on(t);
        if (b || E) {
          if (E && !E.standalone) return !1;
          m = t;
        } else {
          const F = t.ngModule;
          if (((b = Ri(F)), !b)) return !1;
          m = F;
        }
        const T = c.has(m);
        if (E) {
          if (T) return !1;
          if ((c.add(m), E.dependencies)) {
            const F =
              "function" == typeof E.dependencies
                ? E.dependencies()
                : E.dependencies;
            for (const Q of F) Mh(Q, e, i, c);
          }
        } else {
          if (!b) return !1;
          {
            if (null != b.imports && !T) {
              let Q;
              c.add(m);
              try {
                Ss(b.imports, (mt) => {
                  Mh(mt, e, i, c) && ((Q ||= []), Q.push(mt));
                });
              } finally {
              }
              void 0 !== Q && Vf(Q, e);
            }
            if (!T) {
              const Q = xr(m) || (() => new m());
              e({ provide: m, useFactory: Q, deps: Ze }, m),
                e({ provide: np, useValue: m, multi: !0 }, m),
                e({ provide: Ma, useValue: () => le(m), multi: !0 }, m);
            }
            const F = b.providers;
            if (null != F && !T) {
              const Q = t;
              zf(F, (mt) => {
                e(mt, Q);
              });
            }
          }
        }
        return m !== t && void 0 !== t.providers;
      }
      function zf(t, e) {
        for (let i of t)
          He(i) && (i = i.ɵproviders), Array.isArray(i) ? zf(i, e) : e(i);
      }
      const Uf = $({ provide: String, useValue: $ });
      function Eh(t) {
        return null !== t && "object" == typeof t && Uf in t;
      }
      function tl(t) {
        return "function" == typeof t;
      }
      const vu = new H("Set Injector scope."),
        bu = {},
        Hf = {};
      let yu;
      function Sh() {
        return void 0 === yu && (yu = new Dh()), yu;
      }
      class sa {}
      class dd extends sa {
        get destroyed() {
          return this._destroyed;
        }
        constructor(e, i, c, m) {
          super(),
            (this.parent = i),
            (this.source = c),
            (this.scopes = m),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Gf(e, (E) => this.processProvider(E)),
            this.records.set(gc, _c(void 0, this)),
            m.has("environment") && this.records.set(sa, _c(void 0, this));
          const b = this.records.get(vu);
          null != b && "string" == typeof b.value && this.scopes.add(b.value),
            (this.injectorDefTypes = new Set(this.get(np.multi, Ze, ot.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const i of this._ngOnDestroyHooks) i.ngOnDestroy();
            const e = this._onDestroyHooks;
            this._onDestroyHooks = [];
            for (const i of e) i();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear();
          }
        }
        onDestroy(e) {
          return (
            this.assertNotDestroyed(),
            this._onDestroyHooks.push(e),
            () => this.removeOnDestroy(e)
          );
        }
        runInContext(e) {
          this.assertNotDestroyed();
          const i = ue(this),
            c = yt(void 0);
          try {
            return e();
          } finally {
            ue(i), yt(c);
          }
        }
        get(e, i = $t, c = ot.Default) {
          if ((this.assertNotDestroyed(), e.hasOwnProperty(Yi)))
            return e[Yi](this);
          c = Ae(c);
          const b = ue(this),
            E = yt(void 0);
          try {
            if (!(c & ot.SkipSelf)) {
              let F = this.records.get(e);
              if (void 0 === F) {
                const Q =
                  (function vg(t) {
                    return (
                      "function" == typeof t ||
                      ("object" == typeof t && t instanceof H)
                    );
                  })(e) && ri(e);
                (F = Q && this.injectableDefInScope(Q) ? _c(sp(e), bu) : null),
                  this.records.set(e, F);
              }
              if (null != F) return this.hydrate(e, F);
            }
            return (c & ot.Self ? Sh() : this.parent).get(
              e,
              (i = c & ot.Optional && i === $t ? null : i),
            );
          } catch (T) {
            if ("NullInjectorError" === T.name) {
              if (((T[ke] = T[ke] || []).unshift(A(e)), b)) throw T;
              return (function tt(t, e, i, c) {
                const m = t[ke];
                throw (
                  (e[U] && m.unshift(e[U]),
                  (t.message = (function me(t, e, i, c = null) {
                    t =
                      t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1)
                        ? t.slice(2)
                        : t;
                    let m = A(e);
                    if (Array.isArray(e)) m = e.map(A).join(" -> ");
                    else if ("object" == typeof e) {
                      let b = [];
                      for (let E in e)
                        if (e.hasOwnProperty(E)) {
                          let T = e[E];
                          b.push(
                            E +
                              ":" +
                              ("string" == typeof T ? JSON.stringify(T) : A(T)),
                          );
                        }
                      m = `{${b.join(", ")}}`;
                    }
                    return `${i}${c ? "(" + c + ")" : ""}[${m}]: ${t.replace(pt, "\n  ")}`;
                  })("\n" + t.message, m, i, c)),
                  (t.ngTokenPath = m),
                  (t[ke] = null),
                  t)
                );
              })(T, e, "R3InjectorError", this.source);
            }
            throw T;
          } finally {
            yt(E), ue(b);
          }
        }
        resolveInjectorInitializers() {
          const e = ue(this),
            i = yt(void 0);
          try {
            const m = this.get(Ma.multi, Ze, ot.Self);
            for (const b of m) b();
          } finally {
            ue(e), yt(i);
          }
        }
        toString() {
          const e = [],
            i = this.records;
          for (const c of i.keys()) e.push(A(c));
          return `R3Injector[${e.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new wt(205, !1);
        }
        processProvider(e) {
          let i = tl((e = De(e))) ? e : De(e && e.provide);
          const c = (function ap(t) {
            return Eh(t) ? _c(void 0, t.useValue) : _c(lp(t), bu);
          })(e);
          if (tl(e) || !0 !== e.multi) this.records.get(i);
          else {
            let m = this.records.get(i);
            m ||
              ((m = _c(void 0, bu, !0)),
              (m.factory = () => oi(m.multi)),
              this.records.set(i, m)),
              (i = e),
              m.multi.push(e);
          }
          this.records.set(i, c);
        }
        hydrate(e, i) {
          return (
            i.value === bu && ((i.value = Hf), (i.value = i.factory())),
            "object" == typeof i.value &&
              i.value &&
              (function _g(t) {
                return (
                  null !== t &&
                  "object" == typeof t &&
                  "function" == typeof t.ngOnDestroy
                );
              })(i.value) &&
              this._ngOnDestroyHooks.add(i.value),
            i.value
          );
        }
        injectableDefInScope(e) {
          if (!e.providedIn) return !1;
          const i = De(e.providedIn);
          return "string" == typeof i
            ? "any" === i || this.scopes.has(i)
            : this.injectorDefTypes.has(i);
        }
        removeOnDestroy(e) {
          const i = this._onDestroyHooks.indexOf(e);
          -1 !== i && this._onDestroyHooks.splice(i, 1);
        }
      }
      function sp(t) {
        const e = ri(t),
          i = null !== e ? e.factory : xr(t);
        if (null !== i) return i;
        if (t instanceof H) throw new wt(204, !1);
        if (t instanceof Function)
          return (function gg(t) {
            const e = t.length;
            if (e > 0) throw (na(e, "?"), new wt(204, !1));
            const i = (function Ne(t) {
              return (t && (t[gi] || t[_i])) || null;
            })(t);
            return null !== i ? () => i.factory(t) : () => new t();
          })(t);
        throw new wt(204, !1);
      }
      function lp(t, e, i) {
        let c;
        if (tl(t)) {
          const m = De(t);
          return xr(m) || sp(m);
        }
        if (Eh(t)) c = () => De(t.useValue);
        else if (
          (function jf(t) {
            return !(!t || !t.useFactory);
          })(t)
        )
          c = () => t.useFactory(...oi(t.deps || []));
        else if (
          (function rp(t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          c = () => le(De(t.useExisting));
        else {
          const m = De(t && (t.useClass || t.provide));
          if (
            !(function iv(t) {
              return !!t.deps;
            })(t)
          )
            return xr(m) || sp(m);
          c = () => new m(...oi(t.deps));
        }
        return c;
      }
      function _c(t, e, i = !1) {
        return { factory: t, value: e, multi: i ? [] : void 0 };
      }
      function Gf(t, e) {
        for (const i of t)
          Array.isArray(i) ? Gf(i, e) : i && He(i) ? Gf(i.ɵproviders, e) : e(i);
      }
      const cp = new H("AppId", { providedIn: "root", factory: () => Zf }),
        Zf = "ng",
        Yf = new H("Platform Initializer"),
        vc = new H("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        yg = new H("AnimationModuleType"),
        xg = new H("CSP nonce", {
          providedIn: "root",
          factory: () =>
            (function ci() {
              if (void 0 !== Ce) return Ce;
              if (typeof document < "u") return document;
              throw new wt(210, !1);
            })()
              .body?.querySelector("[ngCspNonce]")
              ?.getAttribute("ngCspNonce") || null,
        });
      let up = (t, e, i) => null;
      function hp(t, e, i = !1) {
        return up(t, e, i);
      }
      class Rh {}
      class Mg {}
      class Sg {
        resolveComponentFactory(e) {
          throw (function lv(t) {
            const e = Error(`No component factory found for ${A(t)}.`);
            return (e.ngComponent = t), e;
          })(e);
        }
      }
      let Eu = (() => {
        class t {
          static #t = (this.NULL = new Sg());
        }
        return t;
      })();
      function im() {
        return No($o(), xi());
      }
      function No(t, e) {
        return new el(cr(t, e));
      }
      let el = (() => {
        class t {
          constructor(i) {
            this.nativeElement = i;
          }
          static #t = (this.__NG_ELEMENT_ID__ = im);
        }
        return t;
      })();
      function fp(t) {
        return t instanceof el ? t.nativeElement : t;
      }
      class nm {}
      let Ag = (() => {
          class t {
            constructor() {
              this.destroyNode = null;
            }
            static #t = (this.__NG_ELEMENT_ID__ = () =>
              (function mp() {
                const t = xi(),
                  i = wr($o().index, t);
                return (to(i) ? i : t)[cn];
              })());
          }
          return t;
        })(),
        kg = (() => {
          class t {
            static #t = (this.ɵprov = ii({
              token: t,
              providedIn: "root",
              factory: () => null,
            }));
          }
          return t;
        })();
      class om {
        constructor(e) {
          (this.full = e),
            (this.major = e.split(".")[0]),
            (this.minor = e.split(".")[1]),
            (this.patch = e.split(".").slice(2).join("."));
        }
      }
      const Il = new om("16.2.12"),
        Su = {};
      function gp(t, e = null, i = null, c) {
        const m = _p(t, e, i, c);
        return m.resolveInjectorInitializers(), m;
      }
      function _p(t, e = null, i = null, c, m = new Set()) {
        const b = [i || Ze, op(t)];
        return (
          (c = c || ("object" == typeof t ? void 0 : A(t))),
          new dd(b, e || Sh(), c || null, m)
        );
      }
      let Hr = (() => {
        class t {
          static #t = (this.THROW_IF_NOT_FOUND = $t);
          static #e = (this.NULL = new Dh());
          static create(i, c) {
            if (Array.isArray(i)) return gp({ name: "" }, c, i, "");
            {
              const m = i.name ?? "";
              return gp({ name: m }, i.parent, i.providers, m);
            }
          }
          static #i = (this.ɵprov = ii({
            token: t,
            providedIn: "any",
            factory: () => le(gc),
          }));
          static #n = (this.__NG_ELEMENT_ID__ = -1);
        }
        return t;
      })();
      function Fh(t) {
        return t.ngOriginalError;
      }
      class Rl {
        constructor() {
          this._console = console;
        }
        handleError(e) {
          const i = this._findOriginalError(e);
          this._console.error("ERROR", e),
            i && this._console.error("ORIGINAL ERROR", i);
        }
        _findOriginalError(e) {
          let i = e && Fh(e);
          for (; i && Fh(i); ) i = Fh(i);
          return i || null;
        }
      }
      function Lh(t) {
        return (e) => {
          setTimeout(t, void 0, e);
        };
      }
      const aa = class hm extends s.x {
        constructor(e = !1) {
          super(), (this.__isAsync = e);
        }
        emit(e) {
          super.next(e);
        }
        subscribe(e, i, c) {
          let m = e,
            b = i || (() => null),
            E = c;
          if (e && "object" == typeof e) {
            const F = e;
            (m = F.next?.bind(F)),
              (b = F.error?.bind(F)),
              (E = F.complete?.bind(F));
          }
          this.__isAsync && ((b = Lh(b)), m && (m = Lh(m)), E && (E = Lh(E)));
          const T = super.subscribe({ next: m, error: b, complete: E });
          return e instanceof x.w0 && e.add(T), T;
        }
      };
      function Nh(...t) {}
      class Bo {
        constructor({
          enableLongStackTrace: e = !1,
          shouldCoalesceEventChangeDetection: i = !1,
          shouldCoalesceRunChangeDetection: c = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new aa(!1)),
            (this.onMicrotaskEmpty = new aa(!1)),
            (this.onStable = new aa(!1)),
            (this.onError = new aa(!1)),
            typeof Zone > "u")
          )
            throw new wt(908, !1);
          Zone.assertZonePatched();
          const m = this;
          (m._nesting = 0),
            (m._outer = m._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (m._inner = m._inner.fork(new Zone.TaskTrackingZoneSpec())),
            e &&
              Zone.longStackTraceZoneSpec &&
              (m._inner = m._inner.fork(Zone.longStackTraceZoneSpec)),
            (m.shouldCoalesceEventChangeDetection = !c && i),
            (m.shouldCoalesceRunChangeDetection = c),
            (m.lastRequestAnimationFrameId = -1),
            (m.nativeRequestAnimationFrame = (function bp() {
              const t = "function" == typeof ut.requestAnimationFrame;
              let e = ut[t ? "requestAnimationFrame" : "setTimeout"],
                i = ut[t ? "cancelAnimationFrame" : "clearTimeout"];
              if (typeof Zone < "u" && e && i) {
                const c = e[Zone.__symbol__("OriginalDelegate")];
                c && (e = c);
                const m = i[Zone.__symbol__("OriginalDelegate")];
                m && (i = m);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: i,
              };
            })().nativeRequestAnimationFrame),
            (function xp(t) {
              const e = () => {
                !(function Pg(t) {
                  t.isCheckStableRunning ||
                    -1 !== t.lastRequestAnimationFrameId ||
                    ((t.lastRequestAnimationFrameId =
                      t.nativeRequestAnimationFrame.call(ut, () => {
                        t.fakeTopEventTask ||
                          (t.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (t.lastRequestAnimationFrameId = -1),
                                Bh(t),
                                (t.isCheckStableRunning = !0),
                                Tu(t),
                                (t.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {},
                          )),
                          t.fakeTopEventTask.invoke();
                      })),
                    Bh(t));
                })(t);
              };
              t._inner = t._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (i, c, m, b, E, T) => {
                  if (
                    (function pm(t) {
                      return (
                        !(!Array.isArray(t) || 1 !== t.length) &&
                        !0 === t[0].data?.__ignore_ng_zone__
                      );
                    })(T)
                  )
                    return i.invokeTask(m, b, E, T);
                  try {
                    return fm(t), i.invokeTask(m, b, E, T);
                  } finally {
                    ((t.shouldCoalesceEventChangeDetection &&
                      "eventTask" === b.type) ||
                      t.shouldCoalesceRunChangeDetection) &&
                      e(),
                      wp(t);
                  }
                },
                onInvoke: (i, c, m, b, E, T, F) => {
                  try {
                    return fm(t), i.invoke(m, b, E, T, F);
                  } finally {
                    t.shouldCoalesceRunChangeDetection && e(), wp(t);
                  }
                },
                onHasTask: (i, c, m, b) => {
                  i.hasTask(m, b),
                    c === m &&
                      ("microTask" == b.change
                        ? ((t._hasPendingMicrotasks = b.microTask),
                          Bh(t),
                          Tu(t))
                        : "macroTask" == b.change &&
                          (t.hasPendingMacrotasks = b.macroTask));
                },
                onHandleError: (i, c, m, b) => (
                  i.handleError(m, b),
                  t.runOutsideAngular(() => t.onError.emit(b)),
                  !1
                ),
              });
            })(m);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Bo.isInAngularZone()) throw new wt(909, !1);
        }
        static assertNotInAngularZone() {
          if (Bo.isInAngularZone()) throw new wt(909, !1);
        }
        run(e, i, c) {
          return this._inner.run(e, i, c);
        }
        runTask(e, i, c, m) {
          const b = this._inner,
            E = b.scheduleEventTask("NgZoneEvent: " + m, e, yp, Nh, Nh);
          try {
            return b.runTask(E, i, c);
          } finally {
            b.cancelTask(E);
          }
        }
        runGuarded(e, i, c) {
          return this._inner.runGuarded(e, i, c);
        }
        runOutsideAngular(e) {
          return this._outer.run(e);
        }
      }
      const yp = {};
      function Tu(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function Bh(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          ((t.shouldCoalesceEventChangeDetection ||
            t.shouldCoalesceRunChangeDetection) &&
            -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function fm(t) {
        t._nesting++,
          t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function wp(t) {
        t._nesting--, Tu(t);
      }
      class Cp {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new aa()),
            (this.onMicrotaskEmpty = new aa()),
            (this.onStable = new aa()),
            (this.onError = new aa());
        }
        run(e, i, c) {
          return e.apply(i, c);
        }
        runGuarded(e, i, c) {
          return e.apply(i, c);
        }
        runOutsideAngular(e) {
          return e();
        }
        runTask(e, i, c, m) {
          return e.apply(i, c);
        }
      }
      const Vh = new H("", { providedIn: "root", factory: mm });
      function mm() {
        const t = Yt(Bo);
        let e = !0;
        const i = new C.y((m) => {
            (e =
              t.isStable && !t.hasPendingMacrotasks && !t.hasPendingMicrotasks),
              t.runOutsideAngular(() => {
                m.next(e), m.complete();
              });
          }),
          c = new C.y((m) => {
            let b;
            t.runOutsideAngular(() => {
              b = t.onStable.subscribe(() => {
                Bo.assertNotInAngularZone(),
                  queueMicrotask(() => {
                    !e &&
                      !t.hasPendingMacrotasks &&
                      !t.hasPendingMicrotasks &&
                      ((e = !0), m.next(!0));
                  });
              });
            });
            const E = t.onUnstable.subscribe(() => {
              Bo.assertInAngularZone(),
                e &&
                  ((e = !1),
                  t.runOutsideAngular(() => {
                    m.next(!1);
                  }));
            });
            return () => {
              b.unsubscribe(), E.unsubscribe();
            };
          });
        return (0, p.T)(i, c.pipe((0, bt.B)()));
      }
      function Is(t) {
        return t instanceof Function ? t() : t;
      }
      let vm = (() => {
        class t {
          constructor() {
            (this.renderDepth = 0), (this.handler = null);
          }
          begin() {
            this.handler?.validateBegin(), this.renderDepth++;
          }
          end() {
            this.renderDepth--,
              0 === this.renderDepth && this.handler?.execute();
          }
          ngOnDestroy() {
            this.handler?.destroy(), (this.handler = null);
          }
          static #t = (this.ɵprov = ii({
            token: t,
            providedIn: "root",
            factory: () => new t(),
          }));
        }
        return t;
      })();
      function Ou(t) {
        for (; t; ) {
          t[sn] |= 64;
          const e = cc(t);
          if (js(t) && !e) return t;
          t = e;
        }
        return null;
      }
      const Ap = new H("", { providedIn: "root", factory: () => !1 });
      let At = null;
      function zt(t, e) {
        return t[e] ?? Ye();
      }
      function Qt(t, e) {
        const i = Ye();
        i.producerNode?.length && ((t[e] = At), (i.lView = t), (At = je()));
      }
      const ge = {
        ...Mc,
        consumerIsAlwaysLive: !0,
        consumerMarkedDirty: (t) => {
          Ou(t.lView);
        },
        lView: null,
      };
      function je() {
        return Object.create(ge);
      }
      function Ye() {
        return (At ??= je()), At;
      }
      const $e = {};
      function ti(t) {
        Ci(Dn(), xi(), dr() + t, !1);
      }
      function Ci(t, e, i, c) {
        if (!c)
          if (3 == (3 & e[sn])) {
            const b = t.preOrderCheckHooks;
            null !== b && ba(e, b, i);
          } else {
            const b = t.preOrderHooks;
            null !== b && Ks(e, b, 0, i);
          }
        ml(i);
      }
      function di(t, e = ot.Default) {
        const i = xi();
        return null === i ? le(t, e) : Xl($o(), i, De(t), e);
      }
      function Pi() {
        throw new Error("invalid");
      }
      function Gi(t, e, i, c, m, b, E, T, F, Q, mt) {
        const qt = e.blueprint.slice();
        return (
          (qt[On] = m),
          (qt[sn] = 140 | c),
          (null !== Q || (t && 2048 & t[sn])) && (qt[sn] |= 2048),
          $l(qt),
          (qt[In] = qt[bo] = t),
          (qt[Vn] = i),
          (qt[Yr] = E || (t && t[Yr])),
          (qt[cn] = T || (t && t[cn])),
          (qt[wo] = F || (t && t[wo]) || null),
          (qt[eo] = b),
          (qt[$r] = (function fr() {
            return ac++;
          })()),
          (qt[Io] = mt),
          (qt[or] = Q),
          (qt[xn] = 2 == e.type ? t[xn] : qt),
          qt
        );
      }
      function Ki(t, e, i, c, m) {
        let b = t.data[e];
        if (null === b)
          (b = (function fn(t, e, i, c, m) {
            const b = Pc(),
              E = hl(),
              F = (t.data[e] = (function Ps(t, e, i, c, m, b) {
                let E = e ? e.injectorIndex : -1,
                  T = 0;
                return (
                  ma() && (T |= 128),
                  {
                    type: i,
                    index: c,
                    insertBeforeIndex: null,
                    injectorIndex: E,
                    directiveStart: -1,
                    directiveEnd: -1,
                    directiveStylingLast: -1,
                    componentOffset: -1,
                    propertyBindings: null,
                    flags: T,
                    providerIndexes: 0,
                    value: m,
                    attrs: b,
                    mergedAttrs: null,
                    localNames: null,
                    initialInputs: void 0,
                    inputs: null,
                    outputs: null,
                    tView: null,
                    next: null,
                    prev: null,
                    projectionNext: null,
                    child: null,
                    parent: e,
                    projection: null,
                    styles: null,
                    stylesWithoutHost: null,
                    residualStyles: void 0,
                    classes: null,
                    classesWithoutHost: null,
                    residualClasses: void 0,
                    classBindings: 0,
                    styleBindings: 0,
                  }
                );
              })(0, E ? b : b && b.parent, i, e, c, m));
            return (
              null === t.firstChild && (t.firstChild = F),
              null !== b &&
                (E
                  ? null == b.child && null !== F.parent && (b.child = F)
                  : null === b.next && ((b.next = F), (F.prev = b))),
              F
            );
          })(t, e, i, c, m)),
            (function L() {
              return en.lFrame.inI18n;
            })() && (b.flags |= 32);
        else if (64 & b.type) {
          (b.type = i), (b.value = c), (b.attrs = m);
          const E = (function Na() {
            const t = en.lFrame,
              e = t.currentTNode;
            return t.isParent ? e : e.parent;
          })();
          b.injectorIndex = null === E ? -1 : E.injectorIndex;
        }
        return Jr(b, !0), b;
      }
      function kn(t, e, i, c) {
        if (0 === i) return -1;
        const m = e.length;
        for (let b = 0; b < i; b++)
          e.push(c), t.blueprint.push(c), t.data.push(null);
        return m;
      }
      function Yn(t, e, i, c, m) {
        const b = zt(e, Ko),
          E = dr(),
          T = 2 & c;
        try {
          ml(-1), T && e.length > _n && Ci(t, e, _n, !1), jo(T ? 2 : 0, m);
          const Q = T ? b : null,
            mt = Hl(Q);
          try {
            null !== Q && (Q.dirty = !1), i(c, m);
          } finally {
            Oa(Q, mt);
          }
        } finally {
          T && null === e[Ko] && Qt(e, Ko), ml(E), jo(T ? 3 : 1, m);
        }
      }
      function la(t, e, i) {
        if (Us(e)) {
          const c = Yo(null);
          try {
            const b = e.directiveEnd;
            for (let E = e.directiveStart; E < b; E++) {
              const T = t.data[E];
              T.contentQueries && T.contentQueries(1, i[E], E);
            }
          } finally {
            Yo(c);
          }
        }
      }
      function ns(t, e, i) {
        La() &&
          ((function lx(t, e, i, c) {
            const m = i.directiveStart,
              b = i.directiveEnd;
            rr(i) &&
              (function px(t, e, i) {
                const c = cr(e, t),
                  m = Rs(i);
                let E = 16;
                i.signals ? (E = 4096) : i.onPush && (E = 64);
                const T = Tp(
                  t,
                  Gi(
                    t,
                    m,
                    null,
                    E,
                    c,
                    e,
                    null,
                    t[Yr].rendererFactory.createRenderer(c, i),
                    null,
                    null,
                    null,
                  ),
                );
                t[e.index] = T;
              })(e, i, t.data[m + i.componentOffset]),
              t.firstCreatePass || ja(i, e),
              mr(c, e);
            const E = i.initialInputs;
            for (let T = m; T < b; T++) {
              const F = t.data[T],
                Q = Ha(e, t, T, i);
              mr(Q, e),
                null !== E && gx(0, T - m, Q, F, 0, E),
                Ro(F) && (wr(i.index, e)[Vn] = Ha(e, t, T, i));
            }
          })(t, e, i, cr(i, e)),
          64 == (64 & i.flags) && dv(t, e, i));
      }
      function po(t, e, i = cr) {
        const c = e.localNames;
        if (null !== c) {
          let m = e.index + 1;
          for (let b = 0; b < c.length; b += 2) {
            const E = c[b + 1],
              T = -1 === E ? i(e, t) : t[E];
            t[m++] = T;
          }
        }
      }
      function Rs(t) {
        const e = t.tView;
        return null === e || e.incompleteFirstPass
          ? (t.tView = Fl(
              1,
              null,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts,
              t.id,
            ))
          : e;
      }
      function Fl(t, e, i, c, m, b, E, T, F, Q, mt) {
        const qt = _n + c,
          Oe = qt + m,
          Qe = (function Qi(t, e) {
            const i = [];
            for (let c = 0; c < e; c++) i.push(c < t ? null : $e);
            return i;
          })(qt, Oe),
          bi = "function" == typeof Q ? Q() : Q;
        return (Qe[Fi] = {
          type: t,
          blueprint: Qe,
          template: i,
          queries: null,
          viewQuery: T,
          declTNode: e,
          data: Qe.slice().fill(null, qt),
          bindingStartIndex: qt,
          expandoStartIndex: Oe,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof b ? b() : b,
          pipeRegistry: "function" == typeof E ? E() : E,
          firstChild: null,
          schemas: F,
          consts: bi,
          incompleteFirstPass: !1,
          ssrId: mt,
        });
      }
      let vn = (t) => null;
      function lo(t, e, i, c) {
        for (let m in t)
          if (t.hasOwnProperty(m)) {
            i = null === i ? {} : i;
            const b = t[m];
            null === c
              ? bm(i, e, m, b)
              : c.hasOwnProperty(m) && bm(i, e, c[m], b);
          }
        return i;
      }
      function bm(t, e, i, c) {
        t.hasOwnProperty(i) ? t[i].push(e, c) : (t[i] = [e, c]);
      }
      function gr(t, e, i, c, m, b, E, T) {
        const F = cr(e, i);
        let mt,
          Q = e.inputs;
        !T && null != Q && (mt = Q[c])
          ? (Gg(t, i, mt, c, m),
            rr(e) &&
              (function Fs(t, e) {
                const i = wr(e, t);
                16 & i[sn] || (i[sn] |= 64);
              })(i, e.index))
          : 3 & e.type &&
            ((c = (function Or(t) {
              return "class" === t
                ? "className"
                : "for" === t
                  ? "htmlFor"
                  : "formaction" === t
                    ? "formAction"
                    : "innerHtml" === t
                      ? "innerHTML"
                      : "readonly" === t
                        ? "readOnly"
                        : "tabindex" === t
                          ? "tabIndex"
                          : t;
            })(c)),
            (m = null != E ? E(m, e.value || "", c) : m),
            b.setProperty(F, c, m));
      }
      function zg(t, e, i, c) {
        if (La()) {
          const m = null === c ? null : { "": -1 },
            b = (function dx(t, e) {
              const i = t.directiveRegistry;
              let c = null,
                m = null;
              if (i)
                for (let b = 0; b < i.length; b++) {
                  const E = i[b];
                  if (Gr(e, E.selectors, !1))
                    if ((c || (c = []), Ro(E)))
                      if (null !== E.findHostDirectiveDefs) {
                        const T = [];
                        (m = m || new Map()),
                          E.findHostDirectiveDefs(E, T, m),
                          c.unshift(...T, E),
                          Ug(t, e, T.length);
                      } else c.unshift(E), Ug(t, e, 0);
                    else
                      (m = m || new Map()),
                        E.findHostDirectiveDefs?.(E, c, m),
                        c.push(E);
                }
              return null === c ? null : [c, m];
            })(t, i);
          let E, T;
          null === b ? (E = T = null) : ([E, T] = b),
            null !== E && cv(t, e, i, E, m, T),
            m &&
              (function ux(t, e, i) {
                if (e) {
                  const c = (t.localNames = []);
                  for (let m = 0; m < e.length; m += 2) {
                    const b = i[e[m + 1]];
                    if (null == b) throw new wt(-301, !1);
                    c.push(e[m], b);
                  }
                }
              })(i, c, m);
        }
        i.mergedAttrs = An(i.mergedAttrs, i.attrs);
      }
      function cv(t, e, i, c, m, b) {
        for (let Q = 0; Q < c.length; Q++) zc(ja(i, e), t, c[Q].type);
        !(function fx(t, e, i) {
          (t.flags |= 1),
            (t.directiveStart = e),
            (t.directiveEnd = e + i),
            (t.providerIndexes = e);
        })(i, t.data.length, c.length);
        for (let Q = 0; Q < c.length; Q++) {
          const mt = c[Q];
          mt.providersResolver && mt.providersResolver(mt);
        }
        let E = !1,
          T = !1,
          F = kn(t, e, c.length, null);
        for (let Q = 0; Q < c.length; Q++) {
          const mt = c[Q];
          (i.mergedAttrs = An(i.mergedAttrs, mt.hostAttrs)),
            mx(t, i, e, F, mt),
            hx(F, mt, m),
            null !== mt.contentQueries && (i.flags |= 4),
            (null !== mt.hostBindings ||
              null !== mt.hostAttrs ||
              0 !== mt.hostVars) &&
              (i.flags |= 64);
          const qt = mt.type.prototype;
          !E &&
            (qt.ngOnChanges || qt.ngOnInit || qt.ngDoCheck) &&
            ((t.preOrderHooks ??= []).push(i.index), (E = !0)),
            !T &&
              (qt.ngOnChanges || qt.ngDoCheck) &&
              ((t.preOrderCheckHooks ??= []).push(i.index), (T = !0)),
            F++;
        }
        !(function Vg(t, e, i) {
          const m = e.directiveEnd,
            b = t.data,
            E = e.attrs,
            T = [];
          let F = null,
            Q = null;
          for (let mt = e.directiveStart; mt < m; mt++) {
            const qt = b[mt],
              Oe = i ? i.get(qt) : null,
              bi = Oe ? Oe.outputs : null;
            (F = lo(qt.inputs, mt, F, Oe ? Oe.inputs : null)),
              (Q = lo(qt.outputs, mt, Q, bi));
            const Ii = null === F || null === E || oo(e) ? null : _x(F, mt, E);
            T.push(Ii);
          }
          null !== F &&
            (F.hasOwnProperty("class") && (e.flags |= 8),
            F.hasOwnProperty("style") && (e.flags |= 16)),
            (e.initialInputs = T),
            (e.inputs = F),
            (e.outputs = Q);
        })(t, i, b);
      }
      function dv(t, e, i) {
        const c = i.directiveStart,
          m = i.directiveEnd,
          b = i.index,
          E = (function K() {
            return en.lFrame.currentDirectiveIndex;
          })();
        try {
          ml(b);
          for (let T = c; T < m; T++) {
            const F = t.data[T],
              Q = e[T];
            xt(T),
              (null !== F.hostBindings ||
                0 !== F.hostVars ||
                null !== F.hostAttrs) &&
                cx(F, Q);
          }
        } finally {
          ml(-1), xt(E);
        }
      }
      function cx(t, e) {
        null !== t.hostBindings && t.hostBindings(1, e);
      }
      function Ug(t, e, i) {
        (e.componentOffset = i), (t.components ??= []).push(e.index);
      }
      function hx(t, e, i) {
        if (i) {
          if (e.exportAs)
            for (let c = 0; c < e.exportAs.length; c++) i[e.exportAs[c]] = t;
          Ro(e) && (i[""] = t);
        }
      }
      function mx(t, e, i, c, m) {
        t.data[c] = m;
        const b = m.factory || (m.factory = xr(m.type)),
          E = new ql(b, Ro(m), di);
        (t.blueprint[c] = E),
          (i[c] = E),
          (function sx(t, e, i, c, m) {
            const b = m.hostBindings;
            if (b) {
              let E = t.hostBindingOpCodes;
              null === E && (E = t.hostBindingOpCodes = []);
              const T = ~e.index;
              (function ax(t) {
                let e = t.length;
                for (; e > 0; ) {
                  const i = t[--e];
                  if ("number" == typeof i && i < 0) return i;
                }
                return 0;
              })(E) != T && E.push(T),
                E.push(i, c, b);
            }
          })(t, e, c, kn(t, i, m.hostVars, $e), m);
      }
      function Ll(t, e, i, c, m, b) {
        const E = cr(t, e);
        !(function jg(t, e, i, c, m, b, E) {
          if (null == b) t.removeAttribute(e, m, i);
          else {
            const T = null == E ? St(b) : E(b, c || "", m);
            t.setAttribute(e, m, T, i);
          }
        })(e[cn], E, b, t.value, i, c, m);
      }
      function gx(t, e, i, c, m, b) {
        const E = b[e];
        if (null !== E)
          for (let T = 0; T < E.length; ) uv(c, i, E[T++], E[T++], E[T++]);
      }
      function uv(t, e, i, c, m) {
        const b = Yo(null);
        try {
          const E = t.inputTransforms;
          null !== E && E.hasOwnProperty(c) && (m = E[c].call(e, m)),
            null !== t.setInput ? t.setInput(e, m, i, c) : (e[c] = m);
        } finally {
          Yo(b);
        }
      }
      function _x(t, e, i) {
        let c = null,
          m = 0;
        for (; m < i.length; ) {
          const b = i[m];
          if (0 !== b)
            if (5 !== b) {
              if ("number" == typeof b) break;
              if (t.hasOwnProperty(b)) {
                null === c && (c = []);
                const E = t[b];
                for (let T = 0; T < E.length; T += 2)
                  if (E[T] === e) {
                    c.push(b, E[T + 1], i[m + 1]);
                    break;
                  }
              }
              m += 2;
            } else m += 2;
          else m += 4;
        }
        return c;
      }
      function hv(t, e, i, c) {
        return [t, !0, !1, e, null, 0, c, i, null, null, null];
      }
      function fv(t, e) {
        const i = t.contentQueries;
        if (null !== i)
          for (let c = 0; c < i.length; c += 2) {
            const b = i[c + 1];
            if (-1 !== b) {
              const E = t.data[b];
              Ke(i[c]), E.contentQueries(2, e[b], b);
            }
          }
      }
      function Tp(t, e) {
        return t[Er] ? (t[Zo][vo] = e) : (t[Er] = e), (t[Zo] = e), e;
      }
      function Hg(t, e, i) {
        Ke(0);
        const c = Yo(null);
        try {
          e(t, i);
        } finally {
          Yo(c);
        }
      }
      function mv(t) {
        return t[xo] || (t[xo] = []);
      }
      function pv(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function gv(t, e, i) {
        return (
          (null === t || Ro(t)) &&
            (i = (function ll(t) {
              for (; Array.isArray(t); ) {
                if ("object" == typeof t[so]) return t;
                t = t[On];
              }
              return null;
            })(i[e.index])),
          i[cn]
        );
      }
      function _v(t, e) {
        const i = t[wo],
          c = i ? i.get(Rl, null) : null;
        c && c.handleError(e);
      }
      function Gg(t, e, i, c, m) {
        for (let b = 0; b < i.length; ) {
          const E = i[b++],
            T = i[b++];
          uv(t.data[E], e[E], c, T, m);
        }
      }
      function wc(t, e, i) {
        const c = Ws(e, t);
        !(function Al(t, e, i) {
          t.setValue(e, i);
        })(t[cn], c, i);
      }
      function vx(t, e) {
        const i = wr(e, t),
          c = i[Fi];
        !(function bx(t, e) {
          for (let i = e.length; i < t.blueprint.length; i++)
            e.push(t.blueprint[i]);
        })(c, i);
        const m = i[On];
        null !== m && null === i[Io] && (i[Io] = hp(m, i[wo])), Zg(c, i, i[Vn]);
      }
      function Zg(t, e, i) {
        Hn(e);
        try {
          const c = t.viewQuery;
          null !== c && Hg(1, c, i);
          const m = t.template;
          null !== m && Yn(t, e, m, 1, i),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && fv(t, e),
            t.staticViewQueries && Hg(2, t.viewQuery, i);
          const b = t.components;
          null !== b &&
            (function yx(t, e) {
              for (let i = 0; i < e.length; i++) vx(t, e[i]);
            })(e, b);
        } catch (c) {
          throw (
            (t.firstCreatePass &&
              ((t.incompleteFirstPass = !0), (t.firstCreatePass = !1)),
            c)
          );
        } finally {
          (e[sn] &= -5), _a();
        }
      }
      let vv = (() => {
        class t {
          constructor() {
            (this.all = new Set()), (this.queue = new Map());
          }
          create(i, c, m) {
            const b = typeof Zone > "u" ? null : Zone.current,
              E = (function pi(t, e, i) {
                const c = Object.create(Pn);
                i && (c.consumerAllowSignalWrites = !0),
                  (c.fn = t),
                  (c.schedule = e);
                const m = (E) => {
                  c.cleanupFn = E;
                };
                return (
                  (c.ref = {
                    notify: () => ha(c),
                    run: () => {
                      if (((c.dirty = !1), c.hasRun && !ol(c))) return;
                      c.hasRun = !0;
                      const E = Hl(c);
                      try {
                        c.cleanupFn(), (c.cleanupFn = $i), c.fn(m);
                      } finally {
                        Oa(c, E);
                      }
                    },
                    cleanup: () => c.cleanupFn(),
                  }),
                  c.ref
                );
              })(
                i,
                (Q) => {
                  this.all.has(Q) && this.queue.set(Q, b);
                },
                m,
              );
            let T;
            this.all.add(E), E.notify();
            const F = () => {
              E.cleanup(), T?.(), this.all.delete(E), this.queue.delete(E);
            };
            return (T = c?.onDestroy(F)), { destroy: F };
          }
          flush() {
            if (0 !== this.queue.size)
              for (const [i, c] of this.queue)
                this.queue.delete(i), c ? c.run(() => i.run()) : i.run();
          }
          get isQueueEmpty() {
            return 0 === this.queue.size;
          }
          static #t = (this.ɵprov = ii({
            token: t,
            providedIn: "root",
            factory: () => new t(),
          }));
        }
        return t;
      })();
      function Op(t, e, i) {
        let c = i ? t.styles : null,
          m = i ? t.classes : null,
          b = 0;
        if (null !== e)
          for (let E = 0; E < e.length; E++) {
            const T = e[E];
            "number" == typeof T
              ? (b = T)
              : 1 == b
                ? (m = jt(m, T))
                : 2 == b && (c = jt(c, T + ": " + e[++E] + ";"));
          }
        i ? (t.styles = c) : (t.stylesWithoutHost = c),
          i ? (t.classes = m) : (t.classesWithoutHost = m);
      }
      function ym(t, e, i, c, m = !1) {
        for (; null !== i; ) {
          const b = e[i.index];
          null !== b && c.push(Zn(b)), Eo(b) && bv(b, c);
          const E = i.type;
          if (8 & E) ym(t, e, i.child, c);
          else if (32 & E) {
            const T = Xd(i, e);
            let F;
            for (; (F = T()); ) c.push(F);
          } else if (16 & E) {
            const T = fc(e, i);
            if (Array.isArray(T)) c.push(...T);
            else {
              const F = cc(e[xn]);
              ym(F[Fi], F, T, c, !0);
            }
          }
          i = m ? i.projectionNext : i.next;
        }
        return c;
      }
      function bv(t, e) {
        for (let i = Mo; i < t.length; i++) {
          const c = t[i],
            m = c[Fi].firstChild;
          null !== m && ym(c[Fi], c, m, e);
        }
        t[_r] !== t[On] && e.push(t[_r]);
      }
      function Ip(t, e, i, c = !0) {
        const m = e[Yr],
          b = m.rendererFactory,
          E = m.afterRenderEventManager;
        b.begin?.(), E?.begin();
        try {
          yv(t, e, t.template, i);
        } catch (F) {
          throw (c && _v(e, F), F);
        } finally {
          b.end?.(), m.effectManager?.flush(), E?.end();
        }
      }
      function yv(t, e, i, c) {
        const m = e[sn];
        if (256 != (256 & m)) {
          e[Yr].effectManager?.flush(), Hn(e);
          try {
            $l(e),
              (function Wo(t) {
                return (en.lFrame.bindingIndex = t);
              })(t.bindingStartIndex),
              null !== i && Yn(t, e, i, 2, c);
            const E = 3 == (3 & m);
            if (E) {
              const Q = t.preOrderCheckHooks;
              null !== Q && ba(e, Q, null);
            } else {
              const Q = t.preOrderHooks;
              null !== Q && Ks(e, Q, 0, null), Sd(e, 0);
            }
            if (
              ((function Cx(t) {
                for (let e = dc(t); null !== e; e = ph(e)) {
                  if (!e[Do]) continue;
                  const i = e[as];
                  for (let c = 0; c < i.length; c++) {
                    Kr(i[c]);
                  }
                }
              })(e),
              xv(e, 2),
              null !== t.contentQueries && fv(t, e),
              E)
            ) {
              const Q = t.contentCheckHooks;
              null !== Q && ba(e, Q);
            } else {
              const Q = t.contentHooks;
              null !== Q && Ks(e, Q, 1), Sd(e, 1);
            }
            !(function zi(t, e) {
              const i = t.hostBindingOpCodes;
              if (null === i) return;
              const c = zt(e, ca);
              try {
                for (let m = 0; m < i.length; m++) {
                  const b = i[m];
                  if (b < 0) ml(~b);
                  else {
                    const E = b,
                      T = i[++m],
                      F = i[++m];
                    N(T, E), (c.dirty = !1);
                    const Q = Hl(c);
                    try {
                      F(2, e[E]);
                    } finally {
                      Oa(c, Q);
                    }
                  }
                }
              } finally {
                null === e[ca] && Qt(e, ca), ml(-1);
              }
            })(t, e);
            const T = t.components;
            null !== T && Cv(e, T, 0);
            const F = t.viewQuery;
            if ((null !== F && Hg(2, F, c), E)) {
              const Q = t.viewCheckHooks;
              null !== Q && ba(e, Q);
            } else {
              const Q = t.viewHooks;
              null !== Q && Ks(e, Q, 2), Sd(e, 2);
            }
            !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
              (e[sn] &= -73),
              vd(e);
          } finally {
            _a();
          }
        }
      }
      function xv(t, e) {
        for (let i = dc(t); null !== i; i = ph(i))
          for (let c = Mo; c < i.length; c++) wv(i[c], e);
      }
      function Dx(t, e, i) {
        wv(wr(e, t), i);
      }
      function wv(t, e) {
        if (
          !(function dl(t) {
            return 128 == (128 & t[sn]);
          })(t)
        )
          return;
        const i = t[Fi],
          c = t[sn];
        if ((80 & c && 0 === e) || 1024 & c || 2 === e)
          yv(i, t, i.template, t[Vn]);
        else if (t[zo] > 0) {
          xv(t, 1);
          const m = i.components;
          null !== m && Cv(t, m, 1);
        }
      }
      function Cv(t, e, i) {
        for (let c = 0; c < e.length; c++) Dx(t, e[c], i);
      }
      class xm {
        get rootNodes() {
          const e = this._lView,
            i = e[Fi];
          return ym(i, e, i.firstChild, []);
        }
        constructor(e, i) {
          (this._lView = e),
            (this._cdRefInjectingView = i),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[Vn];
        }
        set context(e) {
          this._lView[Vn] = e;
        }
        get destroyed() {
          return 256 == (256 & this._lView[sn]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const e = this._lView[In];
            if (Eo(e)) {
              const i = e[8],
                c = i ? i.indexOf(this) : -1;
              c > -1 && (uc(e, c), ia(i, c));
            }
            this._attachedToViewContainer = !1;
          }
          iu(this._lView[Fi], this._lView);
        }
        onDestroy(e) {
          !(function bd(t, e) {
            if (256 == (256 & t[sn])) throw new wt(911, !1);
            null === t[Qo] && (t[Qo] = []), t[Qo].push(e);
          })(this._lView, e);
        }
        markForCheck() {
          Ou(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[sn] &= -129;
        }
        reattach() {
          this._lView[sn] |= 128;
        }
        detectChanges() {
          Ip(this._lView[Fi], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new wt(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function Df(t, e) {
              l(t, e, e[cn], 2, null, null);
            })(this._lView[Fi], this._lView);
        }
        attachToAppRef(e) {
          if (this._attachedToViewContainer) throw new wt(902, !1);
          this._appRef = e;
        }
      }
      class Mx extends xm {
        constructor(e) {
          super(e), (this._view = e);
        }
        detectChanges() {
          const e = this._view;
          Ip(e[Fi], e, e[Vn], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Dv extends Eu {
        constructor(e) {
          super(), (this.ngModule = e);
        }
        resolveComponentFactory(e) {
          const i = on(e);
          return new wm(i, this.ngModule);
        }
      }
      function Mv(t) {
        const e = [];
        for (let i in t)
          t.hasOwnProperty(i) && e.push({ propName: t[i], templateName: i });
        return e;
      }
      class Sx {
        constructor(e, i) {
          (this.injector = e), (this.parentInjector = i);
        }
        get(e, i, c) {
          c = Ae(c);
          const m = this.injector.get(e, Su, c);
          return m !== Su || i === Su ? m : this.parentInjector.get(e, i, c);
        }
      }
      class wm extends Mg {
        get inputs() {
          const e = this.componentDef,
            i = e.inputTransforms,
            c = Mv(e.inputs);
          if (null !== i)
            for (const m of c)
              i.hasOwnProperty(m.propName) && (m.transform = i[m.propName]);
          return c;
        }
        get outputs() {
          return Mv(this.componentDef.outputs);
        }
        constructor(e, i) {
          super(),
            (this.componentDef = e),
            (this.ngModule = i),
            (this.componentType = e.type),
            (this.selector = (function ro(t) {
              return t.map(_s).join(",");
            })(e.selectors)),
            (this.ngContentSelectors = e.ngContentSelectors
              ? e.ngContentSelectors
              : []),
            (this.isBoundToModule = !!i);
        }
        create(e, i, c, m) {
          let b = (m = m || this.ngModule) instanceof sa ? m : m?.injector;
          b &&
            null !== this.componentDef.getStandaloneInjector &&
            (b = this.componentDef.getStandaloneInjector(b) || b);
          const E = b ? new Sx(e, b) : e,
            T = E.get(nm, null);
          if (null === T) throw new wt(407, !1);
          const qt = {
              rendererFactory: T,
              sanitizer: E.get(kg, null),
              effectManager: E.get(vv, null),
              afterRenderEventManager: E.get(vm, null),
            },
            Oe = T.createRenderer(null, this.componentDef),
            Qe = this.componentDef.selectors[0][0] || "div",
            bi = c
              ? (function dn(t, e, i, c) {
                  const b = c.get(Ap, !1) || i === Je.ShadowDom,
                    E = t.selectRootElement(e, b);
                  return (
                    (function mn(t) {
                      vn(t);
                    })(E),
                    E
                  );
                })(Oe, c, this.componentDef.encapsulation, E)
              : Da(
                  Oe,
                  Qe,
                  (function Ex(t) {
                    const e = t.toLowerCase();
                    return "svg" === e ? Sr : "math" === e ? "math" : null;
                  })(Qe),
                ),
            an = this.componentDef.signals
              ? 4608
              : this.componentDef.onPush
                ? 576
                : 528;
          let Ai = null;
          null !== bi && (Ai = hp(bi, E, !0));
          const Cn = Fl(
              0,
              null,
              null,
              1,
              0,
              null,
              null,
              null,
              null,
              null,
              null,
            ),
            Rn = Gi(null, Cn, null, an, null, null, qt, Oe, E, null, Ai);
          let co, Bs;
          Hn(Rn);
          try {
            const Cc = this.componentDef;
            let sf,
              X_ = null;
            Cc.findHostDirectiveDefs
              ? ((sf = []),
                (X_ = new Map()),
                Cc.findHostDirectiveDefs(Cc, sf, X_),
                sf.push(Cc))
              : (sf = [Cc]);
            const PE = (function kx(t, e) {
                const i = t[Fi],
                  c = _n;
                return (t[c] = e), Ki(i, c, 2, "#host", null);
              })(Rn, bi),
              FE = (function Tx(t, e, i, c, m, b, E) {
                const T = m[Fi];
                !(function Ox(t, e, i, c) {
                  for (const m of t)
                    e.mergedAttrs = An(e.mergedAttrs, m.hostAttrs);
                  null !== e.mergedAttrs &&
                    (Op(e, e.mergedAttrs, !0), null !== i && w(c, i, e));
                })(c, t, e, E);
                let F = null;
                null !== e && (F = hp(e, m[wo]));
                const Q = b.rendererFactory.createRenderer(e, i);
                let mt = 16;
                i.signals ? (mt = 4096) : i.onPush && (mt = 64);
                const qt = Gi(
                  m,
                  Rs(i),
                  null,
                  mt,
                  m[t.index],
                  t,
                  b,
                  Q,
                  null,
                  null,
                  F,
                );
                return (
                  T.firstCreatePass && Ug(T, t, c.length - 1),
                  Tp(m, qt),
                  (m[t.index] = qt)
                );
              })(PE, bi, Cc, sf, Rn, qt, Oe);
            (Bs = cl(Cn, _n)),
              bi &&
                (function Rx(t, e, i, c) {
                  if (c) bn(t, i, ["ng-version", Il.full]);
                  else {
                    const { attrs: m, classes: b } = (function ss(t) {
                      const e = [],
                        i = [];
                      let c = 1,
                        m = 2;
                      for (; c < t.length; ) {
                        let b = t[c];
                        if ("string" == typeof b)
                          2 === m
                            ? "" !== b && e.push(b, t[++c])
                            : 8 === m && i.push(b);
                        else {
                          if (!Kn(m)) break;
                          m = b;
                        }
                        c++;
                      }
                      return { attrs: e, classes: i };
                    })(e.selectors[0]);
                    m && bn(t, i, m), b && b.length > 0 && y(t, i, b.join(" "));
                  }
                })(Oe, Cc, bi, c),
              void 0 !== i &&
                (function Px(t, e, i) {
                  const c = (t.projection = []);
                  for (let m = 0; m < e.length; m++) {
                    const b = i[m];
                    c.push(null != b ? Array.from(b) : null);
                  }
                })(Bs, this.ngContentSelectors, i),
              (co = (function Ix(t, e, i, c, m, b) {
                const E = $o(),
                  T = m[Fi],
                  F = cr(E, m);
                cv(T, m, E, i, null, c);
                for (let mt = 0; mt < i.length; mt++)
                  mr(Ha(m, T, E.directiveStart + mt, E), m);
                dv(T, m, E), F && mr(F, m);
                const Q = Ha(m, T, E.directiveStart + E.componentOffset, E);
                if (((t[Vn] = m[Vn] = Q), null !== b))
                  for (const mt of b) mt(Q, e);
                return la(T, E, t), Q;
              })(FE, Cc, sf, X_, Rn, [Fx])),
              Zg(Cn, Rn, null);
          } finally {
            _a();
          }
          return new Ax(this.componentType, co, No(Bs, Rn), Rn, Bs);
        }
      }
      class Ax extends Rh {
        constructor(e, i, c, m, b) {
          super(),
            (this.location = c),
            (this._rootLView = m),
            (this._tNode = b),
            (this.previousInputValues = null),
            (this.instance = i),
            (this.hostView = this.changeDetectorRef = new Mx(m)),
            (this.componentType = e);
        }
        setInput(e, i) {
          const c = this._tNode.inputs;
          let m;
          if (null !== c && (m = c[e])) {
            if (
              ((this.previousInputValues ??= new Map()),
              this.previousInputValues.has(e) &&
                Object.is(this.previousInputValues.get(e), i))
            )
              return;
            const b = this._rootLView;
            Gg(b[Fi], b, m, e, i),
              this.previousInputValues.set(e, i),
              Ou(wr(this._tNode.index, b));
          }
        }
        get injector() {
          return new ur(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(e) {
          this.hostView.onDestroy(e);
        }
      }
      function Fx() {
        const t = $o();
        pl(xi()[Fi], t);
      }
      function Yg(t) {
        let e = (function Ev(t) {
            return Object.getPrototypeOf(t.prototype).constructor;
          })(t.type),
          i = !0;
        const c = [t];
        for (; e; ) {
          let m;
          if (Ro(t)) m = e.ɵcmp || e.ɵdir;
          else {
            if (e.ɵcmp) throw new wt(903, !1);
            m = e.ɵdir;
          }
          if (m) {
            if (i) {
              c.push(m);
              const E = t;
              (E.inputs = Rp(t.inputs)),
                (E.inputTransforms = Rp(t.inputTransforms)),
                (E.declaredInputs = Rp(t.declaredInputs)),
                (E.outputs = Rp(t.outputs));
              const T = m.hostBindings;
              T && Vx(t, T);
              const F = m.viewQuery,
                Q = m.contentQueries;
              if (
                (F && Nx(t, F),
                Q && Bx(t, Q),
                _(t.inputs, m.inputs),
                _(t.declaredInputs, m.declaredInputs),
                _(t.outputs, m.outputs),
                null !== m.inputTransforms &&
                  (null === E.inputTransforms && (E.inputTransforms = {}),
                  _(E.inputTransforms, m.inputTransforms)),
                Ro(m) && m.data.animation)
              ) {
                const mt = t.data;
                mt.animation = (mt.animation || []).concat(m.data.animation);
              }
            }
            const b = m.features;
            if (b)
              for (let E = 0; E < b.length; E++) {
                const T = b[E];
                T && T.ngInherit && T(t), T === Yg && (i = !1);
              }
          }
          e = Object.getPrototypeOf(e);
        }
        !(function Lx(t) {
          let e = 0,
            i = null;
          for (let c = t.length - 1; c >= 0; c--) {
            const m = t[c];
            (m.hostVars = e += m.hostVars),
              (m.hostAttrs = An(m.hostAttrs, (i = An(i, m.hostAttrs))));
          }
        })(c);
      }
      function Rp(t) {
        return t === Ot ? {} : t === Ze ? [] : t;
      }
      function Nx(t, e) {
        const i = t.viewQuery;
        t.viewQuery = i
          ? (c, m) => {
              e(c, m), i(c, m);
            }
          : e;
      }
      function Bx(t, e) {
        const i = t.contentQueries;
        t.contentQueries = i
          ? (c, m, b) => {
              e(c, m, b), i(c, m, b);
            }
          : e;
      }
      function Vx(t, e) {
        const i = t.hostBindings;
        t.hostBindings = i
          ? (c, m) => {
              e(c, m), i(c, m);
            }
          : e;
      }
      function Tv(t) {
        const e = t.inputConfig,
          i = {};
        for (const c in e)
          if (e.hasOwnProperty(c)) {
            const m = e[c];
            Array.isArray(m) && m[2] && (i[c] = m[2]);
          }
        t.inputTransforms = i;
      }
      function Pp(t) {
        return (
          !!$g(t) &&
          (Array.isArray(t) || (!(t instanceof Map) && Symbol.iterator in t))
        );
      }
      function $g(t) {
        return null !== t && ("function" == typeof t || "object" == typeof t);
      }
      function Nl(t, e, i) {
        return (t[e] = i);
      }
      function os(t, e, i) {
        return !Object.is(t[e], i) && ((t[e] = i), !0);
      }
      function Iu(t, e, i, c) {
        const m = os(t, e, i);
        return os(t, e + 1, c) || m;
      }
      function Wg(t, e, i, c) {
        const m = xi();
        return os(m, ga(), e) && (Dn(), Ll(yo(), m, t, e, i, c)), Wg;
      }
      function Hh(t, e, i, c) {
        return os(t, ga(), i) ? e + St(i) + c : $e;
      }
      function Gh(t, e, i, c, m, b) {
        const T = Iu(
          t,
          (function Nr() {
            return en.lFrame.bindingIndex;
          })(),
          i,
          m,
        );
        return I(2), T ? e + St(i) + c + St(m) + b : $e;
      }
      function Hv(t, e, i, c, m, b, E, T) {
        const F = xi(),
          Q = Dn(),
          mt = t + _n,
          qt = Q.firstCreatePass
            ? (function dw(t, e, i, c, m, b, E, T, F) {
                const Q = e.consts,
                  mt = Ki(e, t, 4, E || null, fs(Q, T));
                zg(e, i, mt, fs(Q, F)), pl(e, mt);
                const qt = (mt.tView = Fl(
                  2,
                  mt,
                  c,
                  m,
                  b,
                  e.directiveRegistry,
                  e.pipeRegistry,
                  null,
                  e.schemas,
                  Q,
                  null,
                ));
                return (
                  null !== e.queries &&
                    (e.queries.template(e, mt),
                    (qt.queries = e.queries.embeddedTView(mt))),
                  mt
                );
              })(mt, Q, F, e, i, c, m, b, E)
            : Q.data[mt];
        Jr(qt, !1);
        const Oe = Gv(Q, F, qt, t);
        Qs() && nd(Q, F, Oe, qt),
          mr(Oe, F),
          Tp(F, (F[mt] = hv(Oe, F, Oe, qt))),
          sr(qt) && ns(Q, F, qt),
          null != E && po(F, qt, T);
      }
      let Gv = function Zv(t, e, i, c) {
        return va(!0), e[cn].createComment("");
      };
      function Yv(t) {
        return hs(
          (function qn() {
            return en.lFrame.contextLView;
          })(),
          _n + t,
        );
      }
      function t_(t, e, i) {
        const c = xi();
        return os(c, ga(), e) && gr(Dn(), yo(), c, t, e, c[cn], i, !1), t_;
      }
      function e_(t, e, i, c, m) {
        const E = m ? "class" : "style";
        Gg(t, i, e.inputs[E], E, c);
      }
      function Vp(t, e, i, c) {
        const m = xi(),
          b = Dn(),
          E = _n + t,
          T = m[cn],
          F = b.firstCreatePass
            ? (function mw(t, e, i, c, m, b) {
                const E = e.consts,
                  F = Ki(e, t, 2, c, fs(E, m));
                return (
                  zg(e, i, F, fs(E, b)),
                  null !== F.attrs && Op(F, F.attrs, !1),
                  null !== F.mergedAttrs && Op(F, F.mergedAttrs, !0),
                  null !== e.queries && e.queries.elementStart(e, F),
                  F
                );
              })(E, b, m, e, i, c)
            : b.data[E],
          Q = $v(b, m, F, T, e, t);
        m[E] = Q;
        const mt = sr(F);
        return (
          Jr(F, !0),
          w(T, Q, F),
          32 != (32 & F.flags) && Qs() && nd(b, m, Q, F),
          0 ===
            (function Bu() {
              return en.lFrame.elementDepthCount;
            })() && mr(Q, m),
          (function ul() {
            en.lFrame.elementDepthCount++;
          })(),
          mt && (ns(b, m, F), la(b, F, m)),
          null !== c && po(m, F),
          Vp
        );
      }
      function zp() {
        let t = $o();
        hl() ? Ba() : ((t = t.parent), Jr(t, !1));
        const e = t;
        (function zu(t) {
          return en.skipHydrationRootTNode === t;
        })(e) &&
          (function Cd() {
            en.skipHydrationRootTNode = null;
          })(),
          (function Vu() {
            en.lFrame.elementDepthCount--;
          })();
        const i = Dn();
        return (
          i.firstCreatePass && (pl(i, t), Us(t) && i.queries.elementEnd(t)),
          null != e.classesWithoutHost &&
            (function io(t) {
              return 0 != (8 & t.flags);
            })(e) &&
            e_(i, e, xi(), e.classesWithoutHost, !0),
          null != e.stylesWithoutHost &&
            (function af(t) {
              return 0 != (16 & t.flags);
            })(e) &&
            e_(i, e, xi(), e.stylesWithoutHost, !1),
          zp
        );
      }
      function i_(t, e, i, c) {
        return Vp(t, e, i, c), zp(), i_;
      }
      let $v = (t, e, i, c, m, b) => (
        va(!0),
        Da(
          c,
          m,
          (function Fc() {
            return en.lFrame.currentNamespace;
          })(),
        )
      );
      function Up(t, e, i) {
        const c = xi(),
          m = Dn(),
          b = t + _n,
          E = m.firstCreatePass
            ? (function _w(t, e, i, c, m) {
                const b = e.consts,
                  E = fs(b, c),
                  T = Ki(e, t, 8, "ng-container", E);
                return (
                  null !== E && Op(T, E, !0),
                  zg(e, i, T, fs(b, m)),
                  null !== e.queries && e.queries.elementStart(e, T),
                  T
                );
              })(b, m, c, e, i)
            : m.data[b];
        Jr(E, !0);
        const T = Wv(m, c, E, t);
        return (
          (c[b] = T),
          Qs() && nd(m, c, T, E),
          mr(T, c),
          sr(E) && (ns(m, c, E), la(m, E, c)),
          null != i && po(c, E),
          Up
        );
      }
      function jp() {
        let t = $o();
        const e = Dn();
        return (
          hl() ? Ba() : ((t = t.parent), Jr(t, !1)),
          e.firstCreatePass && (pl(e, t), Us(t) && e.queries.elementEnd(t)),
          jp
        );
      }
      function n_(t, e, i) {
        return Up(t, e, i), jp(), n_;
      }
      let Wv = (t, e, i, c) => (va(!0), td(e[cn], ""));
      function qv() {
        return xi();
      }
      function o_(t) {
        return !!t && "function" == typeof t.then;
      }
      function Qv(t) {
        return !!t && "function" == typeof t.subscribe;
      }
      function r_(t, e, i, c) {
        const m = xi(),
          b = Dn(),
          E = $o();
        return Kv(b, m, m[cn], E, t, e, c), r_;
      }
      function s_(t, e) {
        const i = $o(),
          c = xi(),
          m = Dn();
        return Kv(m, c, gv(oe(m.data), i, c), i, t, e), s_;
      }
      function Kv(t, e, i, c, m, b, E) {
        const T = sr(c),
          Q = t.firstCreatePass && pv(t),
          mt = e[Vn],
          qt = mv(e);
        let Oe = !0;
        if (3 & c.type || E) {
          const Ii = cr(c, e),
            ji = E ? E(Ii) : Ii,
            an = qt.length,
            Ai = E ? (Rn) => E(Zn(Rn[c.index])) : c.index;
          let Cn = null;
          if (
            (!E &&
              T &&
              (Cn = (function yw(t, e, i, c) {
                const m = t.cleanup;
                if (null != m)
                  for (let b = 0; b < m.length - 1; b += 2) {
                    const E = m[b];
                    if (E === i && m[b + 1] === c) {
                      const T = e[xo],
                        F = m[b + 2];
                      return T.length > F ? T[F] : null;
                    }
                    "string" == typeof E && (b += 2);
                  }
                return null;
              })(t, e, m, c.index)),
            null !== Cn)
          )
            ((Cn.__ngLastListenerFn__ || Cn).__ngNextListenerFn__ = b),
              (Cn.__ngLastListenerFn__ = b),
              (Oe = !1);
          else {
            b = Xv(c, e, mt, b, !1);
            const Rn = i.listen(ji, m, b);
            qt.push(b, Rn), Q && Q.push(m, Ai, an, an + 1);
          }
        } else b = Xv(c, e, mt, b, !1);
        const Qe = c.outputs;
        let bi;
        if (Oe && null !== Qe && (bi = Qe[m])) {
          const Ii = bi.length;
          if (Ii)
            for (let ji = 0; ji < Ii; ji += 2) {
              const co = e[bi[ji]][bi[ji + 1]].subscribe(b),
                Bs = qt.length;
              qt.push(b, co), Q && Q.push(m, c.index, Bs, -(Bs + 1));
            }
        }
      }
      function Jv(t, e, i, c) {
        try {
          return jo(6, e, i), !1 !== i(c);
        } catch (m) {
          return _v(t, m), !1;
        } finally {
          jo(7, e, i);
        }
      }
      function Xv(t, e, i, c, m) {
        return function b(E) {
          if (E === Function) return c;
          Ou(t.componentOffset > -1 ? wr(t.index, e) : e);
          let F = Jv(e, i, c, E),
            Q = b.__ngNextListenerFn__;
          for (; Q; ) (F = Jv(e, i, Q, E) && F), (Q = Q.__ngNextListenerFn__);
          return m && !1 === F && E.preventDefault(), F;
        };
      }
      function tb(t = 1) {
        return (function qs(t) {
          return (en.lFrame.contextLView = (function Va(t, e) {
            for (; t > 0; ) (e = e[bo]), t--;
            return e;
          })(t, en.lFrame.contextLView))[Vn];
        })(t);
      }
      function xw(t, e) {
        let i = null;
        const c = (function Sa(t) {
          const e = t.attrs;
          if (null != e) {
            const i = e.indexOf(5);
            if (!(1 & i)) return e[i + 1];
          }
          return null;
        })(t);
        for (let m = 0; m < e.length; m++) {
          const b = e[m];
          if ("*" !== b) {
            if (null === c ? Gr(t, b, !0) : ir(c, b)) return m;
          } else i = m;
        }
        return i;
      }
      function eb(t) {
        const e = xi()[xn][eo];
        if (!e.projection) {
          const c = (e.projection = na(t ? t.length : 1, null)),
            m = c.slice();
          let b = e.child;
          for (; null !== b; ) {
            const E = t ? xw(b, t) : 0;
            null !== E &&
              (m[E] ? (m[E].projectionNext = b) : (c[E] = b), (m[E] = b)),
              (b = b.next);
          }
        }
      }
      function ib(t, e = 0, i) {
        const c = xi(),
          m = Dn(),
          b = Ki(m, _n + t, 16, null, i || null);
        null === b.projection && (b.projection = e),
          Ba(),
          (!c[Io] || ma()) &&
            32 != (32 & b.flags) &&
            (function a(t, e, i) {
              o(e[cn], 0, e, i, id(t, i, e), cu(i.parent || e[eo], i, e));
            })(m, c, b);
      }
      function a_(t, e, i) {
        return Hp(t, "", e, "", i), a_;
      }
      function Hp(t, e, i, c, m) {
        const b = xi(),
          E = Hh(b, e, i, c);
        return E !== $e && gr(Dn(), yo(), b, t, E, b[cn], m, !1), Hp;
      }
      function Gp(t, e) {
        return (t << 17) | (e << 2);
      }
      function md(t) {
        return (t >> 17) & 32767;
      }
      function l_(t) {
        return 2 | t;
      }
      function Ru(t) {
        return (131068 & t) >> 2;
      }
      function c_(t, e) {
        return (-131069 & t) | (e << 2);
      }
      function d_(t) {
        return 1 | t;
      }
      function ub(t, e, i, c, m) {
        const b = t[i + 1],
          E = null === e;
        let T = c ? md(b) : Ru(b),
          F = !1;
        for (; 0 !== T && (!1 === F || E); ) {
          const mt = t[T + 1];
          Sw(t[T], e) && ((F = !0), (t[T + 1] = c ? d_(mt) : l_(mt))),
            (T = c ? md(mt) : Ru(mt));
        }
        F && (t[i + 1] = c ? l_(b) : d_(b));
      }
      function Sw(t, e) {
        return (
          null === t ||
          null == e ||
          (Array.isArray(t) ? t[1] : t) === e ||
          (!(!Array.isArray(t) || "string" != typeof e) && oa(t, e) >= 0)
        );
      }
      const Dr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function hb(t) {
        return t.substring(Dr.key, Dr.keyEnd);
      }
      function fb(t, e) {
        const i = Dr.textEnd;
        return i === e
          ? -1
          : ((e = Dr.keyEnd =
              (function Ow(t, e, i) {
                for (; e < i && t.charCodeAt(e) > 32; ) e++;
                return e;
              })(t, (Dr.key = e), i)),
            Kh(t, e, i));
      }
      function Kh(t, e, i) {
        for (; e < i && t.charCodeAt(e) <= 32; ) e++;
        return e;
      }
      function u_(t, e, i) {
        return il(t, e, i, !1), u_;
      }
      function h_(t, e) {
        return il(t, e, null, !0), h_;
      }
      function Vl(t, e) {
        for (
          let i = (function kw(t) {
            return (
              (function pb(t) {
                (Dr.key = 0),
                  (Dr.keyEnd = 0),
                  (Dr.value = 0),
                  (Dr.valueEnd = 0),
                  (Dr.textEnd = t.length);
              })(t),
              fb(t, Kh(t, 0, Dr.textEnd))
            );
          })(e);
          i >= 0;
          i = fb(e, i)
        )
          zr(t, hb(e), !0);
      }
      function il(t, e, i, c) {
        const m = xi(),
          b = Dn(),
          E = I(2);
        b.firstUpdatePass && bb(b, t, E, c),
          e !== $e &&
            os(m, E, e) &&
            xb(
              b,
              b.data[dr()],
              m,
              m[cn],
              t,
              (m[E + 1] = (function Hw(t, e) {
                return (
                  null == t ||
                    "" === t ||
                    ("string" == typeof e
                      ? (t += e)
                      : "object" == typeof t && (t = A(no(t)))),
                  t
                );
              })(e, i)),
              c,
              E,
            );
      }
      function vb(t, e) {
        return e >= t.expandoStartIndex;
      }
      function bb(t, e, i, c) {
        const m = t.data;
        if (null === m[i + 1]) {
          const b = m[dr()],
            E = vb(t, i);
          Cb(b, c) && null === e && !E && (e = !1),
            (e = (function Lw(t, e, i, c) {
              const m = oe(t);
              let b = c ? e.residualClasses : e.residualStyles;
              if (null === m)
                0 === (c ? e.classBindings : e.styleBindings) &&
                  ((i = Sm((i = f_(null, t, e, i, c)), e.attrs, c)),
                  (b = null));
              else {
                const E = e.directiveStylingLast;
                if (-1 === E || t[E] !== m)
                  if (((i = f_(m, t, e, i, c)), null === b)) {
                    let F = (function Nw(t, e, i) {
                      const c = i ? e.classBindings : e.styleBindings;
                      if (0 !== Ru(c)) return t[md(c)];
                    })(t, e, c);
                    void 0 !== F &&
                      Array.isArray(F) &&
                      ((F = f_(null, t, e, F[1], c)),
                      (F = Sm(F, e.attrs, c)),
                      (function Bw(t, e, i, c) {
                        t[md(i ? e.classBindings : e.styleBindings)] = c;
                      })(t, e, c, F));
                  } else
                    b = (function Vw(t, e, i) {
                      let c;
                      const m = e.directiveEnd;
                      for (let b = 1 + e.directiveStylingLast; b < m; b++)
                        c = Sm(c, t[b].hostAttrs, i);
                      return Sm(c, e.attrs, i);
                    })(t, e, c);
              }
              return (
                void 0 !== b &&
                  (c ? (e.residualClasses = b) : (e.residualStyles = b)),
                i
              );
            })(m, b, e, c)),
            (function Mw(t, e, i, c, m, b) {
              let E = b ? e.classBindings : e.styleBindings,
                T = md(E),
                F = Ru(E);
              t[c] = i;
              let mt,
                Q = !1;
              if (
                (Array.isArray(i)
                  ? ((mt = i[1]), (null === mt || oa(i, mt) > 0) && (Q = !0))
                  : (mt = i),
                m)
              )
                if (0 !== F) {
                  const Oe = md(t[T + 1]);
                  (t[c + 1] = Gp(Oe, T)),
                    0 !== Oe && (t[Oe + 1] = c_(t[Oe + 1], c)),
                    (t[T + 1] = (function Cw(t, e) {
                      return (131071 & t) | (e << 17);
                    })(t[T + 1], c));
                } else
                  (t[c + 1] = Gp(T, 0)),
                    0 !== T && (t[T + 1] = c_(t[T + 1], c)),
                    (T = c);
              else
                (t[c + 1] = Gp(F, 0)),
                  0 === T ? (T = c) : (t[F + 1] = c_(t[F + 1], c)),
                  (F = c);
              Q && (t[c + 1] = l_(t[c + 1])),
                ub(t, mt, c, !0),
                ub(t, mt, c, !1),
                (function Ew(t, e, i, c, m) {
                  const b = m ? t.residualClasses : t.residualStyles;
                  null != b &&
                    "string" == typeof e &&
                    oa(b, e) >= 0 &&
                    (i[c + 1] = d_(i[c + 1]));
                })(e, mt, t, c, b),
                (E = Gp(T, F)),
                b ? (e.classBindings = E) : (e.styleBindings = E);
            })(m, b, e, i, E, c);
        }
      }
      function f_(t, e, i, c, m) {
        let b = null;
        const E = i.directiveEnd;
        let T = i.directiveStylingLast;
        for (
          -1 === T ? (T = i.directiveStart) : T++;
          T < E && ((b = e[T]), (c = Sm(c, b.hostAttrs, m)), b !== t);

        )
          T++;
        return null !== t && (i.directiveStylingLast = T), c;
      }
      function Sm(t, e, i) {
        const c = i ? 1 : 2;
        let m = -1;
        if (null !== e)
          for (let b = 0; b < e.length; b++) {
            const E = e[b];
            "number" == typeof E
              ? (m = E)
              : m === c &&
                (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]),
                zr(t, E, !!i || e[++b]));
          }
        return void 0 === t ? null : t;
      }
      function xb(t, e, i, c, m, b, E, T) {
        if (!(3 & e.type)) return;
        const F = t.data,
          Q = F[T + 1],
          mt = (function Dw(t) {
            return 1 == (1 & t);
          })(Q)
            ? wb(F, e, i, m, Ru(Q), E)
            : void 0;
        Zp(mt) ||
          (Zp(b) ||
            ((function ww(t) {
              return 2 == (2 & t);
            })(Q) &&
              (b = wb(F, null, i, m, T, E))),
          (function f(t, e, i, c, m) {
            if (e) m ? t.addClass(i, c) : t.removeClass(i, c);
            else {
              let b = -1 === c.indexOf("-") ? void 0 : ra.DashCase;
              null == m
                ? t.removeStyle(i, c, b)
                : ("string" == typeof m &&
                    m.endsWith("!important") &&
                    ((m = m.slice(0, -10)), (b |= ra.Important)),
                  t.setStyle(i, c, m, b));
            }
          })(c, E, Ws(dr(), i), m, b));
      }
      function wb(t, e, i, c, m, b) {
        const E = null === e;
        let T;
        for (; m > 0; ) {
          const F = t[m],
            Q = Array.isArray(F),
            mt = Q ? F[1] : F,
            qt = null === mt;
          let Oe = i[m + 1];
          Oe === $e && (Oe = qt ? Ze : void 0);
          let Qe = qt ? Bd(Oe, c) : mt === c ? Oe : void 0;
          if ((Q && !Zp(Qe) && (Qe = Bd(F, c)), Zp(Qe) && ((T = Qe), E)))
            return T;
          const bi = t[m + 1];
          m = E ? md(bi) : Ru(bi);
        }
        if (null !== e) {
          let F = b ? e.residualClasses : e.residualStyles;
          null != F && (T = Bd(F, c));
        }
        return T;
      }
      function Zp(t) {
        return void 0 !== t;
      }
      function Cb(t, e) {
        return 0 != (t.flags & (e ? 8 : 16));
      }
      function Db(t, e = "") {
        const i = xi(),
          c = Dn(),
          m = t + _n,
          b = c.firstCreatePass ? Ki(c, m, 1, e, null) : c.data[m],
          E = Mb(c, i, b, e, t);
        (i[m] = E), Qs() && nd(c, i, E, b), Jr(b, !1);
      }
      let Mb = (t, e, i, c, m) => (
        va(!0),
        (function Sn(t, e) {
          return t.createText(e);
        })(e[cn], c)
      );
      function m_(t) {
        return Yp("", t, ""), m_;
      }
      function Yp(t, e, i) {
        const c = xi(),
          m = Hh(c, t, e, i);
        return m !== $e && wc(c, dr(), m), Yp;
      }
      function p_(t, e, i, c, m) {
        const b = xi(),
          E = Gh(b, t, e, i, c, m);
        return E !== $e && wc(b, dr(), E), p_;
      }
      function Rb(t, e, i) {
        !(function nl(t, e, i, c) {
          const m = Dn(),
            b = I(2);
          m.firstUpdatePass && bb(m, null, b, c);
          const E = xi();
          if (i !== $e && os(E, b, i)) {
            const T = m.data[dr()];
            if (Cb(T, c) && !vb(m, b)) {
              let F = c ? T.classesWithoutHost : T.stylesWithoutHost;
              null !== F && (i = jt(F, i || "")), e_(m, T, E, i, c);
            } else
              !(function jw(t, e, i, c, m, b, E, T) {
                m === $e && (m = Ze);
                let F = 0,
                  Q = 0,
                  mt = 0 < m.length ? m[0] : null,
                  qt = 0 < b.length ? b[0] : null;
                for (; null !== mt || null !== qt; ) {
                  const Oe = F < m.length ? m[F + 1] : void 0,
                    Qe = Q < b.length ? b[Q + 1] : void 0;
                  let Ii,
                    bi = null;
                  mt === qt
                    ? ((F += 2), (Q += 2), Oe !== Qe && ((bi = qt), (Ii = Qe)))
                    : null === qt || (null !== mt && mt < qt)
                      ? ((F += 2), (bi = mt))
                      : ((Q += 2), (bi = qt), (Ii = Qe)),
                    null !== bi && xb(t, e, i, c, bi, Ii, E, T),
                    (mt = F < m.length ? m[F] : null),
                    (qt = Q < b.length ? b[Q] : null);
                }
              })(
                m,
                T,
                E,
                E[cn],
                E[b + 1],
                (E[b + 1] = (function zw(t, e, i) {
                  if (null == i || "" === i) return Ze;
                  const c = [],
                    m = no(i);
                  if (Array.isArray(m))
                    for (let b = 0; b < m.length; b++) t(c, m[b], !0);
                  else if ("object" == typeof m)
                    for (const b in m) m.hasOwnProperty(b) && t(c, b, m[b]);
                  else "string" == typeof m && e(c, m);
                  return c;
                })(t, e, i)),
                c,
                b,
              );
          }
        })(zr, Vl, Hh(xi(), t, e, i), !0);
      }
      function g_(t, e, i) {
        const c = xi();
        return os(c, ga(), e) && gr(Dn(), yo(), c, t, e, c[cn], i, !0), g_;
      }
      function __(t, e, i) {
        const c = xi();
        if (os(c, ga(), e)) {
          const b = Dn(),
            E = yo();
          gr(b, E, c, t, e, gv(oe(b.data), E, c), i, !0);
        }
        return __;
      }
      const Pu = void 0;
      var dC = [
        "en",
        [["a", "p"], ["AM", "PM"], Pu],
        [["AM", "PM"], Pu, Pu],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        Pu,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        Pu,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", Pu, "{1} 'at' {0}", Pu],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function cC(t) {
          const i = Math.floor(Math.abs(t)),
            c = t.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === i && 0 === c ? 1 : 5;
        },
      ];
      let Jh = {};
      function v_(t) {
        const e = (function uC(t) {
          return t.toLowerCase().replace(/_/g, "-");
        })(t);
        let i = Gb(e);
        if (i) return i;
        const c = e.split("-")[0];
        if (((i = Gb(c)), i)) return i;
        if ("en" === c) return dC;
        throw new wt(701, !1);
      }
      function Hb(t) {
        return v_(t)[Xh.PluralCase];
      }
      function Gb(t) {
        return (
          t in Jh ||
            (Jh[t] =
              ut.ng &&
              ut.ng.common &&
              ut.ng.common.locales &&
              ut.ng.common.locales[t]),
          Jh[t]
        );
      }
      var Xh = (function (t) {
        return (
          (t[(t.LocaleId = 0)] = "LocaleId"),
          (t[(t.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
          (t[(t.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
          (t[(t.DaysFormat = 3)] = "DaysFormat"),
          (t[(t.DaysStandalone = 4)] = "DaysStandalone"),
          (t[(t.MonthsFormat = 5)] = "MonthsFormat"),
          (t[(t.MonthsStandalone = 6)] = "MonthsStandalone"),
          (t[(t.Eras = 7)] = "Eras"),
          (t[(t.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
          (t[(t.WeekendRange = 9)] = "WeekendRange"),
          (t[(t.DateFormat = 10)] = "DateFormat"),
          (t[(t.TimeFormat = 11)] = "TimeFormat"),
          (t[(t.DateTimeFormat = 12)] = "DateTimeFormat"),
          (t[(t.NumberSymbols = 13)] = "NumberSymbols"),
          (t[(t.NumberFormats = 14)] = "NumberFormats"),
          (t[(t.CurrencyCode = 15)] = "CurrencyCode"),
          (t[(t.CurrencySymbol = 16)] = "CurrencySymbol"),
          (t[(t.CurrencyName = 17)] = "CurrencyName"),
          (t[(t.Currencies = 18)] = "Currencies"),
          (t[(t.Directionality = 19)] = "Directionality"),
          (t[(t.PluralCase = 20)] = "PluralCase"),
          (t[(t.ExtraData = 21)] = "ExtraData"),
          t
        );
      })(Xh || {});
      const tf = "en-US";
      let Zb = tf;
      function x_(t, e, i, c, m) {
        if (((t = De(t)), Array.isArray(t)))
          for (let b = 0; b < t.length; b++) x_(t[b], e, i, c, m);
        else {
          const b = Dn(),
            E = xi(),
            T = $o();
          let F = tl(t) ? t : De(t.provide);
          const Q = lp(t),
            mt = 1048575 & T.providerIndexes,
            qt = T.directiveStart,
            Oe = T.providerIndexes >> 20;
          if (tl(t) || !t.multi) {
            const Qe = new ql(Q, m, di),
              bi = C_(F, e, m ? mt : mt + Oe, qt);
            -1 === bi
              ? (zc(ja(T, E), b, F),
                w_(b, t, e.length),
                e.push(F),
                T.directiveStart++,
                T.directiveEnd++,
                m && (T.providerIndexes += 1048576),
                i.push(Qe),
                E.push(Qe))
              : ((i[bi] = Qe), (E[bi] = Qe));
          } else {
            const Qe = C_(F, e, mt + Oe, qt),
              bi = C_(F, e, mt, mt + Oe),
              ji = bi >= 0 && i[bi];
            if ((m && !ji) || (!m && !(Qe >= 0 && i[Qe]))) {
              zc(ja(T, E), b, F);
              const an = (function cD(t, e, i, c, m) {
                const b = new ql(t, i, di);
                return (
                  (b.multi = []),
                  (b.index = e),
                  (b.componentProviders = 0),
                  gy(b, m, c && !i),
                  b
                );
              })(m ? lD : aD, i.length, m, c, Q);
              !m && ji && (i[bi].providerFactory = an),
                w_(b, t, e.length, 0),
                e.push(F),
                T.directiveStart++,
                T.directiveEnd++,
                m && (T.providerIndexes += 1048576),
                i.push(an),
                E.push(an);
            } else w_(b, t, Qe > -1 ? Qe : bi, gy(i[m ? bi : Qe], Q, !m && c));
            !m && c && ji && i[bi].componentProviders++;
          }
        }
      }
      function w_(t, e, i, c) {
        const m = tl(e),
          b = (function cd(t) {
            return !!t.useClass;
          })(e);
        if (m || b) {
          const F = (b ? De(e.useClass) : e).prototype.ngOnDestroy;
          if (F) {
            const Q = t.destroyHooks || (t.destroyHooks = []);
            if (!m && e.multi) {
              const mt = Q.indexOf(i);
              -1 === mt ? Q.push(i, [c, F]) : Q[mt + 1].push(c, F);
            } else Q.push(i, F);
          }
        }
      }
      function gy(t, e, i) {
        return i && t.componentProviders++, t.multi.push(e) - 1;
      }
      function C_(t, e, i, c) {
        for (let m = i; m < c; m++) if (e[m] === t) return m;
        return -1;
      }
      function aD(t, e, i, c) {
        return D_(this.multi, []);
      }
      function lD(t, e, i, c) {
        const m = this.multi;
        let b;
        if (this.providerFactory) {
          const E = this.providerFactory.componentProviders,
            T = Ha(i, i[Fi], this.providerFactory.index, c);
          (b = T.slice(0, E)), D_(m, b);
          for (let F = E; F < T.length; F++) b.push(T[F]);
        } else (b = []), D_(m, b);
        return b;
      }
      function D_(t, e) {
        for (let i = 0; i < t.length; i++) e.push((0, t[i])());
        return e;
      }
      function _y(t, e = []) {
        return (i) => {
          i.providersResolver = (c, m) =>
            (function sD(t, e, i) {
              const c = Dn();
              if (c.firstCreatePass) {
                const m = Ro(t);
                x_(i, c.data, c.blueprint, m, !0),
                  x_(e, c.data, c.blueprint, m, !1);
              }
            })(c, m ? m(t) : t, e);
        };
      }
      class Fu {}
      class vy {}
      function dD(t, e) {
        return new M_(t, e ?? null, []);
      }
      class M_ extends Fu {
        constructor(e, i, c) {
          super(),
            (this._parent = i),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Dv(this));
          const m = _o(e);
          (this._bootstrapComponents = Is(m.bootstrap)),
            (this._r3Injector = _p(
              e,
              i,
              [
                { provide: Fu, useValue: this },
                { provide: Eu, useValue: this.componentFactoryResolver },
                ...c,
              ],
              A(e),
              new Set(["environment"]),
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(e));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const e = this._r3Injector;
          !e.destroyed && e.destroy(),
            this.destroyCbs.forEach((i) => i()),
            (this.destroyCbs = null);
        }
        onDestroy(e) {
          this.destroyCbs.push(e);
        }
      }
      class E_ extends vy {
        constructor(e) {
          super(), (this.moduleType = e);
        }
        create(e) {
          return new M_(this.moduleType, e, []);
        }
      }
      class by extends Fu {
        constructor(e) {
          super(),
            (this.componentFactoryResolver = new Dv(this)),
            (this.instance = null);
          const i = new dd(
            [
              ...e.providers,
              { provide: Fu, useValue: this },
              { provide: Eu, useValue: this.componentFactoryResolver },
            ],
            e.parent || Sh(),
            e.debugName,
            new Set(["environment"]),
          );
          (this.injector = i),
            e.runEnvironmentInitializers && i.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(e) {
          this.injector.onDestroy(e);
        }
      }
      function yy(t, e, i = null) {
        return new by({
          providers: t,
          parent: e,
          debugName: i,
          runEnvironmentInitializers: !0,
        }).injector;
      }
      let hD = (() => {
        class t {
          constructor(i) {
            (this._injector = i), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(i) {
            if (!i.standalone) return null;
            if (!this.cachedInjectors.has(i)) {
              const c = _u(0, i.type),
                m =
                  c.length > 0
                    ? yy([c], this._injector, `Standalone[${i.type.name}]`)
                    : null;
              this.cachedInjectors.set(i, m);
            }
            return this.cachedInjectors.get(i);
          }
          ngOnDestroy() {
            try {
              for (const i of this.cachedInjectors.values())
                null !== i && i.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
          static #t = (this.ɵprov = ii({
            token: t,
            providedIn: "environment",
            factory: () => new t(le(sa)),
          }));
        }
        return t;
      })();
      function xy(t) {
        t.getStandaloneInjector = (e) =>
          e.get(hD).getOrCreateStandaloneInjector(t);
      }
      function Ay(t, e, i) {
        const c = Ee() + t,
          m = xi();
        return m[c] === $e
          ? Nl(m, c, i ? e.call(i) : e())
          : (function Cm(t, e) {
              return t[e];
            })(m, c);
      }
      function ky(t, e, i, c) {
        return Oy(xi(), Ee(), t, e, i, c);
      }
      function Ty(t, e, i, c, m) {
        return Iy(xi(), Ee(), t, e, i, c, m);
      }
      function Rm(t, e) {
        const i = t[e];
        return i === $e ? void 0 : i;
      }
      function Oy(t, e, i, c, m, b) {
        const E = e + i;
        return os(t, E, m)
          ? Nl(t, E + 1, b ? c.call(b, m) : c(m))
          : Rm(t, E + 1);
      }
      function Iy(t, e, i, c, m, b, E) {
        const T = e + i;
        return Iu(t, T, m, b)
          ? Nl(t, T + 2, E ? c.call(E, m, b) : c(m, b))
          : Rm(t, T + 2);
      }
      function Ly(t, e) {
        const i = Dn();
        let c;
        const m = t + _n;
        i.firstCreatePass
          ? ((c = (function AD(t, e) {
              if (e)
                for (let i = e.length - 1; i >= 0; i--) {
                  const c = e[i];
                  if (t === c.name) return c;
                }
            })(e, i.pipeRegistry)),
            (i.data[m] = c),
            c.onDestroy && (i.destroyHooks ??= []).push(m, c.onDestroy))
          : (c = i.data[m]);
        const b = c.factory || (c.factory = xr(c.type)),
          T = yt(di);
        try {
          const F = Bc(!1),
            Q = b();
          return (
            Bc(F),
            (function fw(t, e, i, c) {
              i >= t.data.length &&
                ((t.data[i] = null), (t.blueprint[i] = null)),
                (e[i] = c);
            })(i, xi(), m, Q),
            Q
          );
        } finally {
          yt(T);
        }
      }
      function Ny(t, e, i) {
        const c = t + _n,
          m = xi(),
          b = hs(m, c);
        return Pm(m, c) ? Oy(m, Ee(), e, b.transform, i, b) : b.transform(i);
      }
      function By(t, e, i, c) {
        const m = t + _n,
          b = xi(),
          E = hs(b, m);
        return Pm(b, m)
          ? Iy(b, Ee(), e, E.transform, i, c, E)
          : E.transform(i, c);
      }
      function Pm(t, e) {
        return t[Fi].data[e].pure;
      }
      function ID() {
        return this._results[Symbol.iterator]();
      }
      class Kp {
        static #t = Symbol.iterator;
        get changes() {
          return this._changes || (this._changes = new aa());
        }
        constructor(e = !1) {
          (this._emitDistinctChangesOnly = e),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const i = Kp.prototype;
          i[Symbol.iterator] || (i[Symbol.iterator] = ID);
        }
        get(e) {
          return this._results[e];
        }
        map(e) {
          return this._results.map(e);
        }
        filter(e) {
          return this._results.filter(e);
        }
        find(e) {
          return this._results.find(e);
        }
        reduce(e, i) {
          return this._results.reduce(e, i);
        }
        forEach(e) {
          this._results.forEach(e);
        }
        some(e) {
          return this._results.some(e);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(e, i) {
          const c = this;
          c.dirty = !1;
          const m = (function ts(t) {
            return t.flat(Number.POSITIVE_INFINITY);
          })(e);
          (this._changesDetected = !(function wa(t, e, i) {
            if (t.length !== e.length) return !1;
            for (let c = 0; c < t.length; c++) {
              let m = t[c],
                b = e[c];
              if ((i && ((m = i(m)), (b = i(b))), b !== m)) return !1;
            }
            return !0;
          })(c._results, m, i)) &&
            ((c._results = m),
            (c.length = m.length),
            (c.last = m[this.length - 1]),
            (c.first = m[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      function PD(t, e, i, c = !0) {
        const m = e[Fi];
        if (
          ((function Mf(t, e, i, c) {
            const m = Mo + c,
              b = i.length;
            c > 0 && (i[m - 1][vo] = e),
              c < b - Mo
                ? ((e[vo] = i[m]), wl(i, Mo + c, e))
                : (i.push(e), (e[vo] = null)),
              (e[In] = i);
            const E = e[Wn];
            null !== E &&
              i !== E &&
              (function _h(t, e) {
                const i = t[as];
                e[xn] !== e[In][In][xn] && (t[Do] = !0),
                  null === i ? (t[as] = [e]) : i.push(e);
              })(E, e);
            const T = e[Co];
            null !== T && T.insertView(t), (e[sn] |= 128);
          })(m, e, t, i),
          c)
        ) {
          const b = kl(i, t),
            E = e[cn],
            T = pr(E, t[_r]);
          null !== T &&
            (function eu(t, e, i, c, m, b) {
              (c[On] = m), (c[eo] = e), l(t, c, i, 1, m, b);
            })(m, t[eo], E, e, T, b);
        }
      }
      let Fm = (() => {
        class t {
          static #t = (this.__NG_ELEMENT_ID__ = ND);
        }
        return t;
      })();
      const FD = Fm,
        LD = class extends FD {
          constructor(e, i, c) {
            super(),
              (this._declarationLView = e),
              (this._declarationTContainer = i),
              (this.elementRef = c);
          }
          get ssrId() {
            return this._declarationTContainer.tView?.ssrId || null;
          }
          createEmbeddedView(e, i) {
            return this.createEmbeddedViewImpl(e, i);
          }
          createEmbeddedViewImpl(e, i, c) {
            const m = (function RD(t, e, i, c) {
              const m = e.tView,
                T = Gi(
                  t,
                  m,
                  i,
                  4096 & t[sn] ? 4096 : 16,
                  null,
                  e,
                  null,
                  null,
                  null,
                  c?.injector ?? null,
                  c?.hydrationInfo ?? null,
                );
              T[Wn] = t[e.index];
              const Q = t[Co];
              return (
                null !== Q && (T[Co] = Q.createEmbeddedView(m)), Zg(m, T, i), T
              );
            })(this._declarationLView, this._declarationTContainer, e, {
              injector: i,
              hydrationInfo: c,
            });
            return new xm(m);
          }
        };
      function ND() {
        return Jp($o(), xi());
      }
      function Jp(t, e) {
        return 4 & t.type ? new LD(e, t, No(t, e)) : null;
      }
      let tg = (() => {
        class t {
          static #t = (this.__NG_ELEMENT_ID__ = HD);
        }
        return t;
      })();
      function HD() {
        return Zy($o(), xi());
      }
      const GD = tg,
        Hy = class extends GD {
          constructor(e, i, c) {
            super(),
              (this._lContainer = e),
              (this._hostTNode = i),
              (this._hostLView = c);
          }
          get element() {
            return No(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new ur(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const e = Jl(this._hostTNode, this._hostLView);
            if (Xr(e)) {
              const i = Ua(e, this._hostLView),
                c = xa(e);
              return new ur(i[Fi].data[c + 8], i);
            }
            return new ur(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(e) {
            const i = Gy(this._lContainer);
            return (null !== i && i[e]) || null;
          }
          get length() {
            return this._lContainer.length - Mo;
          }
          createEmbeddedView(e, i, c) {
            let m, b;
            "number" == typeof c
              ? (m = c)
              : null != c && ((m = c.index), (b = c.injector));
            const T = e.createEmbeddedViewImpl(i || {}, b, null);
            return this.insertImpl(T, m, false), T;
          }
          createComponent(e, i, c, m, b) {
            const E =
              e &&
              !(function Ya(t) {
                return "function" == typeof t;
              })(e);
            let T;
            if (E) T = i;
            else {
              const Ii = i || {};
              (T = Ii.index),
                (c = Ii.injector),
                (m = Ii.projectableNodes),
                (b = Ii.environmentInjector || Ii.ngModuleRef);
            }
            const F = E ? e : new wm(on(e)),
              Q = c || this.parentInjector;
            if (!b && null == F.ngModule) {
              const ji = (E ? Q : this.parentInjector).get(sa, null);
              ji && (b = ji);
            }
            on(F.componentType ?? {});
            const Qe = F.create(Q, m, null, b);
            return this.insertImpl(Qe.hostView, T, false), Qe;
          }
          insert(e, i) {
            return this.insertImpl(e, i, !1);
          }
          insertImpl(e, i, c) {
            const m = e._lView;
            if (
              (function Tc(t) {
                return Eo(t[In]);
              })(m)
            ) {
              const F = this.indexOf(e);
              if (-1 !== F) this.detach(F);
              else {
                const Q = m[In],
                  mt = new Hy(Q, Q[eo], Q[In]);
                mt.detach(mt.indexOf(e));
              }
            }
            const E = this._adjustIndex(i),
              T = this._lContainer;
            return (
              PD(T, m, E, !c), e.attachToViewContainerRef(), wl(A_(T), E, e), e
            );
          }
          move(e, i) {
            return this.insert(e, i);
          }
          indexOf(e) {
            const i = Gy(this._lContainer);
            return null !== i ? i.indexOf(e) : -1;
          }
          remove(e) {
            const i = this._adjustIndex(e, -1),
              c = uc(this._lContainer, i);
            c && (ia(A_(this._lContainer), i), iu(c[Fi], c));
          }
          detach(e) {
            const i = this._adjustIndex(e, -1),
              c = uc(this._lContainer, i);
            return c && null != ia(A_(this._lContainer), i) ? new xm(c) : null;
          }
          _adjustIndex(e, i = 0) {
            return e ?? this.length + i;
          }
        };
      function Gy(t) {
        return t[8];
      }
      function A_(t) {
        return t[8] || (t[8] = []);
      }
      function Zy(t, e) {
        let i;
        const c = e[t.index];
        return (
          Eo(c)
            ? (i = c)
            : ((i = hv(c, e, null, t)), (e[t.index] = i), Tp(e, i)),
          Yy(i, e, t, c),
          new Hy(i, t, e)
        );
      }
      let Yy = function $y(t, e, i, c) {
        if (t[_r]) return;
        let m;
        (m =
          8 & i.type
            ? Zn(c)
            : (function ZD(t, e) {
                const i = t[cn],
                  c = i.createComment(""),
                  m = cr(e, t);
                return (
                  ks(
                    i,
                    pr(i, m),
                    c,
                    (function Af(t, e) {
                      return t.nextSibling(e);
                    })(i, m),
                    !1,
                  ),
                  c
                );
              })(e, i)),
          (t[_r] = m);
      };
      class k_ {
        constructor(e) {
          (this.queryList = e), (this.matches = null);
        }
        clone() {
          return new k_(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class T_ {
        constructor(e = []) {
          this.queries = e;
        }
        createEmbeddedView(e) {
          const i = e.queries;
          if (null !== i) {
            const c =
                null !== e.contentQueries ? e.contentQueries[0] : i.length,
              m = [];
            for (let b = 0; b < c; b++) {
              const E = i.getByIndex(b);
              m.push(this.queries[E.indexInDeclarationView].clone());
            }
            return new T_(m);
          }
          return null;
        }
        insertView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        detachView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        dirtyQueriesWithMatches(e) {
          for (let i = 0; i < this.queries.length; i++)
            null !== n0(e, i).matches && this.queries[i].setDirty();
        }
      }
      class Wy {
        constructor(e, i, c = null) {
          (this.predicate = e), (this.flags = i), (this.read = c);
        }
      }
      class O_ {
        constructor(e = []) {
          this.queries = e;
        }
        elementStart(e, i) {
          for (let c = 0; c < this.queries.length; c++)
            this.queries[c].elementStart(e, i);
        }
        elementEnd(e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementEnd(e);
        }
        embeddedTView(e) {
          let i = null;
          for (let c = 0; c < this.length; c++) {
            const m = null !== i ? i.length : 0,
              b = this.getByIndex(c).embeddedTView(e, m);
            b &&
              ((b.indexInDeclarationView = c),
              null !== i ? i.push(b) : (i = [b]));
          }
          return null !== i ? new O_(i) : null;
        }
        template(e, i) {
          for (let c = 0; c < this.queries.length; c++)
            this.queries[c].template(e, i);
        }
        getByIndex(e) {
          return this.queries[e];
        }
        get length() {
          return this.queries.length;
        }
        track(e) {
          this.queries.push(e);
        }
      }
      class I_ {
        constructor(e, i = -1) {
          (this.metadata = e),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = i);
        }
        elementStart(e, i) {
          this.isApplyingToNode(i) && this.matchTNode(e, i);
        }
        elementEnd(e) {
          this._declarationNodeIndex === e.index &&
            (this._appliesToNextNode = !1);
        }
        template(e, i) {
          this.elementStart(e, i);
        }
        embeddedTView(e, i) {
          return this.isApplyingToNode(e)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-e.index, i),
              new I_(this.metadata))
            : null;
        }
        isApplyingToNode(e) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const i = this._declarationNodeIndex;
            let c = e.parent;
            for (; null !== c && 8 & c.type && c.index !== i; ) c = c.parent;
            return i === (null !== c ? c.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(e, i) {
          const c = this.metadata.predicate;
          if (Array.isArray(c))
            for (let m = 0; m < c.length; m++) {
              const b = c[m];
              this.matchTNodeWithReadOption(e, i, WD(i, b)),
                this.matchTNodeWithReadOption(e, i, tc(i, e, b, !1, !1));
            }
          else
            c === Fm
              ? 4 & i.type && this.matchTNodeWithReadOption(e, i, -1)
              : this.matchTNodeWithReadOption(e, i, tc(i, e, c, !1, !1));
        }
        matchTNodeWithReadOption(e, i, c) {
          if (null !== c) {
            const m = this.metadata.read;
            if (null !== m)
              if (m === el || m === tg || (m === Fm && 4 & i.type))
                this.addMatch(i.index, -2);
              else {
                const b = tc(i, e, m, !1, !1);
                null !== b && this.addMatch(i.index, b);
              }
            else this.addMatch(i.index, c);
          }
        }
        addMatch(e, i) {
          null === this.matches
            ? (this.matches = [e, i])
            : this.matches.push(e, i);
        }
      }
      function WD(t, e) {
        const i = t.localNames;
        if (null !== i)
          for (let c = 0; c < i.length; c += 2) if (i[c] === e) return i[c + 1];
        return null;
      }
      function QD(t, e, i, c) {
        return -1 === i
          ? (function qD(t, e) {
              return 11 & t.type ? No(t, e) : 4 & t.type ? Jp(t, e) : null;
            })(e, t)
          : -2 === i
            ? (function KD(t, e, i) {
                return i === el
                  ? No(e, t)
                  : i === Fm
                    ? Jp(e, t)
                    : i === tg
                      ? Zy(e, t)
                      : void 0;
              })(t, e, c)
            : Ha(t, t[Fi], i, e);
      }
      function qy(t, e, i, c) {
        const m = e[Co].queries[c];
        if (null === m.matches) {
          const b = t.data,
            E = i.matches,
            T = [];
          for (let F = 0; F < E.length; F += 2) {
            const Q = E[F];
            T.push(Q < 0 ? null : QD(e, b[Q], E[F + 1], i.metadata.read));
          }
          m.matches = T;
        }
        return m.matches;
      }
      function R_(t, e, i, c) {
        const m = t.queries.getByIndex(i),
          b = m.matches;
        if (null !== b) {
          const E = qy(t, e, m, i);
          for (let T = 0; T < b.length; T += 2) {
            const F = b[T];
            if (F > 0) c.push(E[T / 2]);
            else {
              const Q = b[T + 1],
                mt = e[-F];
              for (let qt = Mo; qt < mt.length; qt++) {
                const Oe = mt[qt];
                Oe[Wn] === Oe[In] && R_(Oe[Fi], Oe, Q, c);
              }
              if (null !== mt[as]) {
                const qt = mt[as];
                for (let Oe = 0; Oe < qt.length; Oe++) {
                  const Qe = qt[Oe];
                  R_(Qe[Fi], Qe, Q, c);
                }
              }
            }
          }
        }
        return c;
      }
      function Qy(t) {
        const e = xi(),
          i = Dn(),
          c = ei();
        Ke(c + 1);
        const m = n0(i, c);
        if (
          t.dirty &&
          (function _d(t) {
            return 4 == (4 & t[sn]);
          })(e) ===
            (2 == (2 & m.metadata.flags))
        ) {
          if (null === m.matches) t.reset([]);
          else {
            const b = m.crossesNgTemplate ? R_(i, e, c, []) : qy(i, e, m, c);
            t.reset(b, fp), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Ky(t, e, i) {
        const c = Dn();
        c.firstCreatePass &&
          (e0(c, new Wy(t, e, i), -1),
          2 == (2 & e) && (c.staticViewQueries = !0)),
          t0(c, xi(), e);
      }
      function Jy(t, e, i, c) {
        const m = Dn();
        if (m.firstCreatePass) {
          const b = $o();
          e0(m, new Wy(e, i, c), b.index),
            (function XD(t, e) {
              const i = t.contentQueries || (t.contentQueries = []);
              e !== (i.length ? i[i.length - 1] : -1) &&
                i.push(t.queries.length - 1, e);
            })(m, t),
            2 == (2 & i) && (m.staticContentQueries = !0);
        }
        t0(m, xi(), i);
      }
      function Xy() {
        return (function JD(t, e) {
          return t[Co].queries[e].queryList;
        })(xi(), ei());
      }
      function t0(t, e, i) {
        const c = new Kp(4 == (4 & i));
        (function er(t, e, i, c) {
          const m = mv(e);
          m.push(i), t.firstCreatePass && pv(t).push(c, m.length - 1);
        })(t, e, c, c.destroy),
          null === e[Co] && (e[Co] = new T_()),
          e[Co].queries.push(new k_(c));
      }
      function e0(t, e, i) {
        null === t.queries && (t.queries = new O_()),
          t.queries.track(new I_(e, i));
      }
      function n0(t, e) {
        return t.queries.getByIndex(e);
      }
      function o0(t, e) {
        return Jp(t, e);
      }
      function P_(t) {
        return !!_o(t);
      }
      const x0 = new H("Application Initializer");
      let V_ = (() => {
          class t {
            constructor() {
              (this.initialized = !1),
                (this.done = !1),
                (this.donePromise = new Promise((i, c) => {
                  (this.resolve = i), (this.reject = c);
                })),
                (this.appInits = Yt(x0, { optional: !0 }) ?? []);
            }
            runInitializers() {
              if (this.initialized) return;
              const i = [];
              for (const m of this.appInits) {
                const b = m();
                if (o_(b)) i.push(b);
                else if (Qv(b)) {
                  const E = new Promise((T, F) => {
                    b.subscribe({ complete: T, error: F });
                  });
                  i.push(E);
                }
              }
              const c = () => {
                (this.done = !0), this.resolve();
              };
              Promise.all(i)
                .then(() => {
                  c();
                })
                .catch((m) => {
                  this.reject(m);
                }),
                0 === i.length && c(),
                (this.initialized = !0);
            }
            static #t = (this.ɵfac = function (c) {
              return new (c || t)();
            });
            static #e = (this.ɵprov = ii({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        w0 = (() => {
          class t {
            log(i) {
              console.log(i);
            }
            warn(i) {
              console.warn(i);
            }
            static #t = (this.ɵfac = function (c) {
              return new (c || t)();
            });
            static #e = (this.ɵprov = ii({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            }));
          }
          return t;
        })();
      const ig = new H("LocaleId", {
          providedIn: "root",
          factory: () =>
            Yt(ig, ot.Optional | ot.SkipSelf) ||
            (function yM() {
              return (typeof $localize < "u" && $localize.locale) || tf;
            })(),
        }),
        xM = new H("DefaultCurrencyCode", {
          providedIn: "root",
          factory: () => "USD",
        });
      let C0 = (() => {
        class t {
          constructor() {
            (this.taskId = 0),
              (this.pendingTasks = new Set()),
              (this.hasPendingTasks = new at.X(!1));
          }
          add() {
            this.hasPendingTasks.next(!0);
            const i = this.taskId++;
            return this.pendingTasks.add(i), i;
          }
          remove(i) {
            this.pendingTasks.delete(i),
              0 === this.pendingTasks.size && this.hasPendingTasks.next(!1);
          }
          ngOnDestroy() {
            this.pendingTasks.clear(), this.hasPendingTasks.next(!1);
          }
          static #t = (this.ɵfac = function (c) {
            return new (c || t)();
          });
          static #e = (this.ɵprov = ii({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      class CM {
        constructor(e, i) {
          (this.ngModuleFactory = e), (this.componentFactories = i);
        }
      }
      let DM = (() => {
        class t {
          compileModuleSync(i) {
            return new E_(i);
          }
          compileModuleAsync(i) {
            return Promise.resolve(this.compileModuleSync(i));
          }
          compileModuleAndAllComponentsSync(i) {
            const c = this.compileModuleSync(i),
              b = Is(_o(i).declarations).reduce((E, T) => {
                const F = on(T);
                return F && E.push(new wm(F)), E;
              }, []);
            return new CM(c, b);
          }
          compileModuleAndAllComponentsAsync(i) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(i));
          }
          clearCache() {}
          clearCacheFor(i) {}
          getModuleId(i) {}
          static #t = (this.ɵfac = function (c) {
            return new (c || t)();
          });
          static #e = (this.ɵprov = ii({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const S0 = new H(""),
        A0 = new H("");
      let j_,
        YM = (() => {
          class t {
            constructor(i, c, m) {
              (this._ngZone = i),
                (this.registry = c),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                j_ ||
                  ((function $M(t) {
                    j_ = t;
                  })(m),
                  m.addToWindow(c)),
                this._watchAngularEvents(),
                i.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Bo.assertNotInAngularZone(),
                        queueMicrotask(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                queueMicrotask(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let i = this._callbacks.pop();
                    clearTimeout(i.timeoutId), i.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let i = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (c) =>
                    !c.updateCb ||
                    !c.updateCb(i) ||
                    (clearTimeout(c.timeoutId), !1),
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((i) => ({
                    source: i.source,
                    creationLocation: i.creationLocation,
                    data: i.data,
                  }))
                : [];
            }
            addCallback(i, c, m) {
              let b = -1;
              c &&
                c > 0 &&
                (b = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (E) => E.timeoutId !== b,
                  )),
                    i(this._didWork, this.getPendingTasks());
                }, c)),
                this._callbacks.push({ doneCb: i, timeoutId: b, updateCb: m });
            }
            whenStable(i, c, m) {
              if (m && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?',
                );
              this.addCallback(i, c, m), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(i) {
              this.registry.registerApplication(i, this);
            }
            unregisterApplication(i) {
              this.registry.unregisterApplication(i);
            }
            findProviders(i, c, m) {
              return [];
            }
            static #t = (this.ɵfac = function (c) {
              return new (c || t)(le(Bo), le(k0), le(A0));
            });
            static #e = (this.ɵprov = ii({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        k0 = (() => {
          class t {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(i, c) {
              this._applications.set(i, c);
            }
            unregisterApplication(i) {
              this._applications.delete(i);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(i) {
              return this._applications.get(i) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(i, c = !0) {
              return j_?.findTestabilityInTree(this, i, c) ?? null;
            }
            static #t = (this.ɵfac = function (c) {
              return new (c || t)();
            });
            static #e = (this.ɵprov = ii({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            }));
          }
          return t;
        })(),
        pd = null;
      const T0 = new H("AllowMultipleToken"),
        H_ = new H("PlatformDestroyListeners"),
        G_ = new H("appBootstrapListener");
      class QM {
        constructor(e, i) {
          (this.name = e), (this.token = i);
        }
      }
      function R0(t, e, i = []) {
        const c = `Platform: ${e}`,
          m = new H(c);
        return (b = []) => {
          let E = Z_();
          if (!E || E.injector.get(T0, !1)) {
            const T = [...i, ...b, { provide: m, useValue: !0 }];
            t
              ? t(T)
              : (function KM(t) {
                  if (pd && !pd.get(T0, !1)) throw new wt(400, !1);
                  (function O0() {
                    !(function Yl(t) {
                      sl = t;
                    })(() => {
                      throw new wt(600, !1);
                    });
                  })(),
                    (pd = t);
                  const e = t.get(F0);
                  (function I0(t) {
                    t.get(Yf, null)?.forEach((i) => i());
                  })(t);
                })(
                  (function P0(t = [], e) {
                    return Hr.create({
                      name: e,
                      providers: [
                        { provide: vu, useValue: "platform" },
                        { provide: H_, useValue: new Set([() => (pd = null)]) },
                        ...t,
                      ],
                    });
                  })(T, c),
                );
          }
          return (function XM(t) {
            const e = Z_();
            if (!e) throw new wt(401, !1);
            return e;
          })();
        };
      }
      function Z_() {
        return pd?.get(F0) ?? null;
      }
      let F0 = (() => {
        class t {
          constructor(i) {
            (this._injector = i),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(i, c) {
            const m = (function tE(t = "zone.js", e) {
              return "noop" === t ? new Cp() : "zone.js" === t ? new Bo(e) : t;
            })(
              c?.ngZone,
              (function L0(t) {
                return {
                  enableLongStackTrace: !1,
                  shouldCoalesceEventChangeDetection: t?.eventCoalescing ?? !1,
                  shouldCoalesceRunChangeDetection: t?.runCoalescing ?? !1,
                };
              })({
                eventCoalescing: c?.ngZoneEventCoalescing,
                runCoalescing: c?.ngZoneRunCoalescing,
              }),
            );
            return m.run(() => {
              const b = (function uD(t, e, i) {
                  return new M_(t, e, i);
                })(
                  i.moduleType,
                  this.injector,
                  (function U0(t) {
                    return [
                      { provide: Bo, useFactory: t },
                      {
                        provide: Ma,
                        multi: !0,
                        useFactory: () => {
                          const e = Yt(iE, { optional: !0 });
                          return () => e.initialize();
                        },
                      },
                      { provide: z0, useFactory: eE },
                      { provide: Vh, useFactory: mm },
                    ];
                  })(() => m),
                ),
                E = b.injector.get(Rl, null);
              return (
                m.runOutsideAngular(() => {
                  const T = m.onError.subscribe({
                    next: (F) => {
                      E.handleError(F);
                    },
                  });
                  b.onDestroy(() => {
                    og(this._modules, b), T.unsubscribe();
                  });
                }),
                (function N0(t, e, i) {
                  try {
                    const c = i();
                    return o_(c)
                      ? c.catch((m) => {
                          throw (
                            (e.runOutsideAngular(() => t.handleError(m)), m)
                          );
                        })
                      : c;
                  } catch (c) {
                    throw (e.runOutsideAngular(() => t.handleError(c)), c);
                  }
                })(E, m, () => {
                  const T = b.injector.get(V_);
                  return (
                    T.runInitializers(),
                    T.donePromise.then(
                      () => (
                        (function Yb(t) {
                          we(t, "Expected localeId to be defined"),
                            "string" == typeof t &&
                              (Zb = t.toLowerCase().replace(/_/g, "-"));
                        })(b.injector.get(ig, tf) || tf),
                        this._moduleDoBootstrap(b),
                        b
                      ),
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(i, c = []) {
            const m = B0({}, c);
            return (function WM(t, e, i) {
              const c = new E_(i);
              return Promise.resolve(c);
            })(0, 0, i).then((b) => this.bootstrapModuleFactory(b, m));
          }
          _moduleDoBootstrap(i) {
            const c = i.injector.get(rf);
            if (i._bootstrapComponents.length > 0)
              i._bootstrapComponents.forEach((m) => c.bootstrap(m));
            else {
              if (!i.instance.ngDoBootstrap) throw new wt(-403, !1);
              i.instance.ngDoBootstrap(c);
            }
            this._modules.push(i);
          }
          onDestroy(i) {
            this._destroyListeners.push(i);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new wt(404, !1);
            this._modules.slice().forEach((c) => c.destroy()),
              this._destroyListeners.forEach((c) => c());
            const i = this._injector.get(H_, null);
            i && (i.forEach((c) => c()), i.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
          static #t = (this.ɵfac = function (c) {
            return new (c || t)(le(Hr));
          });
          static #e = (this.ɵprov = ii({
            token: t,
            factory: t.ɵfac,
            providedIn: "platform",
          }));
        }
        return t;
      })();
      function B0(t, e) {
        return Array.isArray(e) ? e.reduce(B0, t) : { ...t, ...e };
      }
      let rf = (() => {
        class t {
          constructor() {
            (this._bootstrapListeners = []),
              (this._runningTick = !1),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this._views = []),
              (this.internalErrorHandler = Yt(z0)),
              (this.zoneIsStable = Yt(Vh)),
              (this.componentTypes = []),
              (this.components = []),
              (this.isStable = Yt(C0).hasPendingTasks.pipe(
                (0, B.w)((i) => (i ? (0, lt.of)(!1) : this.zoneIsStable)),
                (0, kt.x)(),
                (0, bt.B)(),
              )),
              (this._injector = Yt(sa));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(i, c) {
            const m = i instanceof Mg;
            if (!this._injector.get(V_).done)
              throw (!m && nr(i), new wt(405, !1));
            let E;
            (E = m ? i : this._injector.get(Eu).resolveComponentFactory(i)),
              this.componentTypes.push(E.componentType);
            const T = (function qM(t) {
                return t.isBoundToModule;
              })(E)
                ? void 0
                : this._injector.get(Fu),
              Q = E.create(Hr.NULL, [], c || E.selector, T),
              mt = Q.location.nativeElement,
              qt = Q.injector.get(S0, null);
            return (
              qt?.registerApplication(mt),
              Q.onDestroy(() => {
                this.detachView(Q.hostView),
                  og(this.components, Q),
                  qt?.unregisterApplication(mt);
              }),
              this._loadComponent(Q),
              Q
            );
          }
          tick() {
            if (this._runningTick) throw new wt(101, !1);
            try {
              this._runningTick = !0;
              for (let i of this._views) i.detectChanges();
            } catch (i) {
              this.internalErrorHandler(i);
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(i) {
            const c = i;
            this._views.push(c), c.attachToAppRef(this);
          }
          detachView(i) {
            const c = i;
            og(this._views, c), c.detachFromAppRef();
          }
          _loadComponent(i) {
            this.attachView(i.hostView), this.tick(), this.components.push(i);
            const c = this._injector.get(G_, []);
            c.push(...this._bootstrapListeners), c.forEach((m) => m(i));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((i) => i()),
                  this._views.slice().forEach((i) => i.destroy());
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(i) {
            return (
              this._destroyListeners.push(i),
              () => og(this._destroyListeners, i)
            );
          }
          destroy() {
            if (this._destroyed) throw new wt(406, !1);
            const i = this._injector;
            i.destroy && !i.destroyed && i.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
          static #t = (this.ɵfac = function (c) {
            return new (c || t)();
          });
          static #e = (this.ɵprov = ii({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function og(t, e) {
        const i = t.indexOf(e);
        i > -1 && t.splice(i, 1);
      }
      const z0 = new H("", {
        providedIn: "root",
        factory: () => Yt(Rl).handleError.bind(void 0),
      });
      function eE() {
        const t = Yt(Bo),
          e = Yt(Rl);
        return (i) => t.runOutsideAngular(() => e.handleError(i));
      }
      let iE = (() => {
        class t {
          constructor() {
            (this.zone = Yt(Bo)), (this.applicationRef = Yt(rf));
          }
          initialize() {
            this._onMicrotaskEmptySubscription ||
              (this._onMicrotaskEmptySubscription =
                this.zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this.zone.run(() => {
                      this.applicationRef.tick();
                    });
                  },
                }));
          }
          ngOnDestroy() {
            this._onMicrotaskEmptySubscription?.unsubscribe();
          }
          static #t = (this.ɵfac = function (c) {
            return new (c || t)();
          });
          static #e = (this.ɵprov = ii({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      let oE = (() => {
        class t {
          static #t = (this.__NG_ELEMENT_ID__ = rE);
        }
        return t;
      })();
      function rE(t) {
        return (function sE(t, e, i) {
          if (rr(t) && !i) {
            const c = wr(t.index, e);
            return new xm(c, c);
          }
          return 47 & t.type ? new xm(e[xn], e) : null;
        })($o(), xi(), 16 == (16 & t));
      }
      class Z0 {
        constructor() {}
        supports(e) {
          return Pp(e);
        }
        create(e) {
          return new hE(e);
        }
      }
      const uE = (t, e) => e;
      class hE {
        constructor(e) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = e || uE);
        }
        forEachItem(e) {
          let i;
          for (i = this._itHead; null !== i; i = i._next) e(i);
        }
        forEachOperation(e) {
          let i = this._itHead,
            c = this._removalsHead,
            m = 0,
            b = null;
          for (; i || c; ) {
            const E = !c || (i && i.currentIndex < $0(c, m, b)) ? i : c,
              T = $0(E, m, b),
              F = E.currentIndex;
            if (E === c) m--, (c = c._nextRemoved);
            else if (((i = i._next), null == E.previousIndex)) m++;
            else {
              b || (b = []);
              const Q = T - m,
                mt = F - m;
              if (Q != mt) {
                for (let Oe = 0; Oe < Q; Oe++) {
                  const Qe = Oe < b.length ? b[Oe] : (b[Oe] = 0),
                    bi = Qe + Oe;
                  mt <= bi && bi < Q && (b[Oe] = Qe + 1);
                }
                b[E.previousIndex] = mt - Q;
              }
            }
            T !== F && e(E, T, F);
          }
        }
        forEachPreviousItem(e) {
          let i;
          for (i = this._previousItHead; null !== i; i = i._nextPrevious) e(i);
        }
        forEachAddedItem(e) {
          let i;
          for (i = this._additionsHead; null !== i; i = i._nextAdded) e(i);
        }
        forEachMovedItem(e) {
          let i;
          for (i = this._movesHead; null !== i; i = i._nextMoved) e(i);
        }
        forEachRemovedItem(e) {
          let i;
          for (i = this._removalsHead; null !== i; i = i._nextRemoved) e(i);
        }
        forEachIdentityChange(e) {
          let i;
          for (
            i = this._identityChangesHead;
            null !== i;
            i = i._nextIdentityChange
          )
            e(i);
        }
        diff(e) {
          if ((null == e && (e = []), !Pp(e))) throw new wt(900, !1);
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let m,
            b,
            E,
            i = this._itHead,
            c = !1;
          if (Array.isArray(e)) {
            this.length = e.length;
            for (let T = 0; T < this.length; T++)
              (b = e[T]),
                (E = this._trackByFn(T, b)),
                null !== i && Object.is(i.trackById, E)
                  ? (c && (i = this._verifyReinsertion(i, b, E, T)),
                    Object.is(i.item, b) || this._addIdentityChange(i, b))
                  : ((i = this._mismatch(i, b, E, T)), (c = !0)),
                (i = i._next);
          } else
            (m = 0),
              (function Yx(t, e) {
                if (Array.isArray(t))
                  for (let i = 0; i < t.length; i++) e(t[i]);
                else {
                  const i = t[Symbol.iterator]();
                  let c;
                  for (; !(c = i.next()).done; ) e(c.value);
                }
              })(e, (T) => {
                (E = this._trackByFn(m, T)),
                  null !== i && Object.is(i.trackById, E)
                    ? (c && (i = this._verifyReinsertion(i, T, E, m)),
                      Object.is(i.item, T) || this._addIdentityChange(i, T))
                    : ((i = this._mismatch(i, T, E, m)), (c = !0)),
                  (i = i._next),
                  m++;
              }),
              (this.length = m);
          return this._truncate(i), (this.collection = e), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              e = this._previousItHead = this._itHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._additionsHead; null !== e; e = e._nextAdded)
              e.previousIndex = e.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                e = this._movesHead;
              null !== e;
              e = e._nextMoved
            )
              e.previousIndex = e.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(e, i, c, m) {
          let b;
          return (
            null === e ? (b = this._itTail) : ((b = e._prev), this._remove(e)),
            null !==
            (e =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(c, null))
              ? (Object.is(e.item, i) || this._addIdentityChange(e, i),
                this._reinsertAfter(e, b, m))
              : null !==
                  (e =
                    null === this._linkedRecords
                      ? null
                      : this._linkedRecords.get(c, m))
                ? (Object.is(e.item, i) || this._addIdentityChange(e, i),
                  this._moveAfter(e, b, m))
                : (e = this._addAfter(new fE(i, c), b, m)),
            e
          );
        }
        _verifyReinsertion(e, i, c, m) {
          let b =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(c, null);
          return (
            null !== b
              ? (e = this._reinsertAfter(b, e._prev, m))
              : e.currentIndex != m &&
                ((e.currentIndex = m), this._addToMoves(e, m)),
            e
          );
        }
        _truncate(e) {
          for (; null !== e; ) {
            const i = e._next;
            this._addToRemovals(this._unlink(e)), (e = i);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(e, i, c) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
          const m = e._prevRemoved,
            b = e._nextRemoved;
          return (
            null === m ? (this._removalsHead = b) : (m._nextRemoved = b),
            null === b ? (this._removalsTail = m) : (b._prevRemoved = m),
            this._insertAfter(e, i, c),
            this._addToMoves(e, c),
            e
          );
        }
        _moveAfter(e, i, c) {
          return (
            this._unlink(e),
            this._insertAfter(e, i, c),
            this._addToMoves(e, c),
            e
          );
        }
        _addAfter(e, i, c) {
          return (
            this._insertAfter(e, i, c),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = e)
                : (this._additionsTail._nextAdded = e)),
            e
          );
        }
        _insertAfter(e, i, c) {
          const m = null === i ? this._itHead : i._next;
          return (
            (e._next = m),
            (e._prev = i),
            null === m ? (this._itTail = e) : (m._prev = e),
            null === i ? (this._itHead = e) : (i._next = e),
            null === this._linkedRecords && (this._linkedRecords = new Y0()),
            this._linkedRecords.put(e),
            (e.currentIndex = c),
            e
          );
        }
        _remove(e) {
          return this._addToRemovals(this._unlink(e));
        }
        _unlink(e) {
          null !== this._linkedRecords && this._linkedRecords.remove(e);
          const i = e._prev,
            c = e._next;
          return (
            null === i ? (this._itHead = c) : (i._next = c),
            null === c ? (this._itTail = i) : (c._prev = i),
            e
          );
        }
        _addToMoves(e, i) {
          return (
            e.previousIndex === i ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = e)
                  : (this._movesTail._nextMoved = e)),
            e
          );
        }
        _addToRemovals(e) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Y0()),
            this._unlinkedRecords.put(e),
            (e.currentIndex = null),
            (e._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = e),
                (e._prevRemoved = null))
              : ((e._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = e)),
            e
          );
        }
        _addIdentityChange(e, i) {
          return (
            (e.item = i),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = e)
                : (this._identityChangesTail._nextIdentityChange = e)),
            e
          );
        }
      }
      class fE {
        constructor(e, i) {
          (this.item = e),
            (this.trackById = i),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class mE {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(e) {
          null === this._head
            ? ((this._head = this._tail = e),
              (e._nextDup = null),
              (e._prevDup = null))
            : ((this._tail._nextDup = e),
              (e._prevDup = this._tail),
              (e._nextDup = null),
              (this._tail = e));
        }
        get(e, i) {
          let c;
          for (c = this._head; null !== c; c = c._nextDup)
            if (
              (null === i || i <= c.currentIndex) &&
              Object.is(c.trackById, e)
            )
              return c;
          return null;
        }
        remove(e) {
          const i = e._prevDup,
            c = e._nextDup;
          return (
            null === i ? (this._head = c) : (i._nextDup = c),
            null === c ? (this._tail = i) : (c._prevDup = i),
            null === this._head
          );
        }
      }
      class Y0 {
        constructor() {
          this.map = new Map();
        }
        put(e) {
          const i = e.trackById;
          let c = this.map.get(i);
          c || ((c = new mE()), this.map.set(i, c)), c.add(e);
        }
        get(e, i) {
          const m = this.map.get(e);
          return m ? m.get(e, i) : null;
        }
        remove(e) {
          const i = e.trackById;
          return this.map.get(i).remove(e) && this.map.delete(i), e;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function $0(t, e, i) {
        const c = t.previousIndex;
        if (null === c) return c;
        let m = 0;
        return i && c < i.length && (m = i[c]), c + e + m;
      }
      class W0 {
        constructor() {}
        supports(e) {
          return e instanceof Map || $g(e);
        }
        create() {
          return new pE();
        }
      }
      class pE {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(e) {
          let i;
          for (i = this._mapHead; null !== i; i = i._next) e(i);
        }
        forEachPreviousItem(e) {
          let i;
          for (i = this._previousMapHead; null !== i; i = i._nextPrevious) e(i);
        }
        forEachChangedItem(e) {
          let i;
          for (i = this._changesHead; null !== i; i = i._nextChanged) e(i);
        }
        forEachAddedItem(e) {
          let i;
          for (i = this._additionsHead; null !== i; i = i._nextAdded) e(i);
        }
        forEachRemovedItem(e) {
          let i;
          for (i = this._removalsHead; null !== i; i = i._nextRemoved) e(i);
        }
        diff(e) {
          if (e) {
            if (!(e instanceof Map || $g(e))) throw new wt(900, !1);
          } else e = new Map();
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let i = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(e, (c, m) => {
              if (i && i.key === m)
                this._maybeAddToChanges(i, c),
                  (this._appendAfter = i),
                  (i = i._next);
              else {
                const b = this._getOrCreateRecordForKey(m, c);
                i = this._insertBeforeOrAppend(i, b);
              }
            }),
            i)
          ) {
            i._prev && (i._prev._next = null), (this._removalsHead = i);
            for (let c = i; null !== c; c = c._nextRemoved)
              c === this._mapHead && (this._mapHead = null),
                this._records.delete(c.key),
                (c._nextRemoved = c._next),
                (c.previousValue = c.currentValue),
                (c.currentValue = null),
                (c._prev = null),
                (c._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(e, i) {
          if (e) {
            const c = e._prev;
            return (
              (i._next = e),
              (i._prev = c),
              (e._prev = i),
              c && (c._next = i),
              e === this._mapHead && (this._mapHead = i),
              (this._appendAfter = e),
              e
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = i), (i._prev = this._appendAfter))
              : (this._mapHead = i),
            (this._appendAfter = i),
            null
          );
        }
        _getOrCreateRecordForKey(e, i) {
          if (this._records.has(e)) {
            const m = this._records.get(e);
            this._maybeAddToChanges(m, i);
            const b = m._prev,
              E = m._next;
            return (
              b && (b._next = E),
              E && (E._prev = b),
              (m._next = null),
              (m._prev = null),
              m
            );
          }
          const c = new gE(e);
          return (
            this._records.set(e, c),
            (c.currentValue = i),
            this._addToAdditions(c),
            c
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              this._previousMapHead = this._mapHead, e = this._previousMapHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._changesHead; null !== e; e = e._nextChanged)
              e.previousValue = e.currentValue;
            for (e = this._additionsHead; null != e; e = e._nextAdded)
              e.previousValue = e.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(e, i) {
          Object.is(i, e.currentValue) ||
            ((e.previousValue = e.currentValue),
            (e.currentValue = i),
            this._addToChanges(e));
        }
        _addToAdditions(e) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = e)
            : ((this._additionsTail._nextAdded = e), (this._additionsTail = e));
        }
        _addToChanges(e) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = e)
            : ((this._changesTail._nextChanged = e), (this._changesTail = e));
        }
        _forEach(e, i) {
          e instanceof Map
            ? e.forEach(i)
            : Object.keys(e).forEach((c) => i(e[c], c));
        }
      }
      class gE {
        constructor(e) {
          (this.key = e),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function q0() {
        return new Q_([new Z0()]);
      }
      let Q_ = (() => {
        class t {
          static #t = (this.ɵprov = ii({
            token: t,
            providedIn: "root",
            factory: q0,
          }));
          constructor(i) {
            this.factories = i;
          }
          static create(i, c) {
            if (null != c) {
              const m = c.factories.slice();
              i = i.concat(m);
            }
            return new t(i);
          }
          static extend(i) {
            return {
              provide: t,
              useFactory: (c) => t.create(i, c || q0()),
              deps: [[t, new nc(), new Gc()]],
            };
          }
          find(i) {
            const c = this.factories.find((m) => m.supports(i));
            if (null != c) return c;
            throw new wt(901, !1);
          }
        }
        return t;
      })();
      function Q0() {
        return new K_([new W0()]);
      }
      let K_ = (() => {
        class t {
          static #t = (this.ɵprov = ii({
            token: t,
            providedIn: "root",
            factory: Q0,
          }));
          constructor(i) {
            this.factories = i;
          }
          static create(i, c) {
            if (c) {
              const m = c.factories.slice();
              i = i.concat(m);
            }
            return new t(i);
          }
          static extend(i) {
            return {
              provide: t,
              useFactory: (c) => t.create(i, c || Q0()),
              deps: [[t, new nc(), new Gc()]],
            };
          }
          find(i) {
            const c = this.factories.find((m) => m.supports(i));
            if (c) return c;
            throw new wt(901, !1);
          }
        }
        return t;
      })();
      const bE = R0(null, "core", []);
      let yE = (() => {
        class t {
          constructor(i) {}
          static #t = (this.ɵfac = function (c) {
            return new (c || t)(le(rf));
          });
          static #e = (this.ɵmod = Xe({ type: t }));
          static #i = (this.ɵinj = fi({}));
        }
        return t;
      })();
      function OE(t) {
        return "boolean" == typeof t ? t : null != t && "false" !== t;
      }
      function RE(t) {
        const e = on(t);
        if (!e) return null;
        const i = new wm(e);
        return {
          get selector() {
            return i.selector;
          },
          get type() {
            return i.componentType;
          },
          get inputs() {
            return i.inputs;
          },
          get outputs() {
            return i.outputs;
          },
          get ngContentSelectors() {
            return i.ngContentSelectors;
          },
          get isStandalone() {
            return e.standalone;
          },
          get isSignal() {
            return e.signals;
          },
        };
      }
    },
    5766: (ui, Zt, D) => {
      function s($) {
        for (let _ in $) {
          let A = $[_] ?? "";
          switch (_) {
            case "display":
              $.display =
                "flex" === A
                  ? ["-webkit-flex", "flex"]
                  : "inline-flex" === A
                    ? ["-webkit-inline-flex", "inline-flex"]
                    : A;
              break;
            case "align-items":
            case "align-self":
            case "align-content":
            case "flex":
            case "flex-basis":
            case "flex-flow":
            case "flex-grow":
            case "flex-shrink":
            case "flex-wrap":
            case "justify-content":
              $["-webkit-" + _] = A;
              break;
            case "flex-direction":
              ($["-webkit-flex-direction"] = A), ($["flex-direction"] = A);
              break;
            case "order":
              $.order = $["-webkit-" + _] = isNaN(+A) ? "0" : A;
          }
        }
        return $;
      }
      D.d(Zt, {
        Ar: () => p,
        GK: () => s,
        iQ: () => C,
        kt: () => kt,
        tj: () => lt,
      });
      const x = "inline",
        C = ["row", "column", "row-reverse", "column-reverse"];
      function p($) {
        let [_, A, jt] = at($);
        return (function B($, _ = null, A = !1) {
          return {
            display: A ? "inline-flex" : "flex",
            "box-sizing": "border-box",
            "flex-direction": $,
            "flex-wrap": _ || null,
          };
        })(_, A, jt);
      }
      function at($) {
        $ = $?.toLowerCase() ?? "";
        let [_, A, jt] = $.split(" ");
        return (
          C.find((gt) => gt === _) || (_ = C[0]),
          A === x && ((A = jt !== x ? jt : ""), (jt = x)),
          [_, bt(A), !!jt]
        );
      }
      function lt($) {
        let [_] = at($);
        return _.indexOf("row") > -1;
      }
      function bt($) {
        if ($)
          switch ($.toLowerCase()) {
            case "reverse":
            case "wrap-reverse":
            case "reverse-wrap":
              $ = "wrap-reverse";
              break;
            case "no":
            case "none":
            case "nowrap":
              $ = "nowrap";
              break;
            default:
              $ = "wrap";
          }
        return $;
      }
      function kt($, ..._) {
        if (null == $)
          throw TypeError("Cannot convert undefined or null to object");
        for (let A of _)
          if (null != A)
            for (let jt in A) A.hasOwnProperty(jt) && ($[jt] = A[jt]);
        return $;
      }
    },
    1462: (ui, Zt, D) => {
      D.d(Zt, {
        Bs: () => We,
        FL: () => Nt,
        IR: () => jt,
        Ot: () => q,
        QI: () => wt,
        RK: () => _t,
        WU: () => Ve,
        g5: () => De,
        iR: () => _i,
        wY: () => He,
        yB: () => gi,
      });
      var s = D(5879),
        x = D(6814),
        C = D(5619),
        p = D(5592),
        at = D(3019),
        lt = D(8645),
        bt = D(5766),
        B = D(2181),
        kt = D(9397);
      const _ = {
          provide: s.tb,
          useFactory: function $(X, se) {
            return () => {
              if ((0, x.NF)(se)) {
                const it = Array.from(X.querySelectorAll(`[class*=${A}]`)),
                  Ut = /\bflex-layout-.+?\b/g;
                it.forEach((ve) => {
                  ve.classList.contains(`${A}ssr`) && ve.parentNode
                    ? ve.parentNode.removeChild(ve)
                    : ve.className.replace(Ut, "");
                });
              }
            };
          },
          deps: [x.K0, s.Lbi],
          multi: !0,
        },
        A = "flex-layout-";
      let jt = (() => {
        class X {}
        return (
          (X.ɵfac = function (it) {
            return new (it || X)();
          }),
          (X.ɵmod = s.oAB({ type: X })),
          (X.ɵinj = s.cJS({ providers: [_] })),
          X
        );
      })();
      class gt {
        constructor(se = !1, it = "all", Ut = "", ve = "", qe = 0) {
          (this.matches = se),
            (this.mediaQuery = it),
            (this.mqAlias = Ut),
            (this.suffix = ve),
            (this.priority = qe),
            (this.property = "");
        }
        clone() {
          return new gt(
            this.matches,
            this.mediaQuery,
            this.mqAlias,
            this.suffix,
          );
        }
      }
      let Jt = (() => {
        class X {
          constructor() {
            this.stylesheet = new Map();
          }
          addStyleToElement(it, Ut, ve) {
            const qe = this.stylesheet.get(it);
            qe ? qe.set(Ut, ve) : this.stylesheet.set(it, new Map([[Ut, ve]]));
          }
          clearStyles() {
            this.stylesheet.clear();
          }
          getStyleForElement(it, Ut) {
            const ve = this.stylesheet.get(it);
            let qe = "";
            if (ve) {
              const ki = ve.get(Ut);
              ("number" == typeof ki || "string" == typeof ki) &&
                (qe = ki + "");
            }
            return qe;
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)();
          }),
          (X.ɵprov = s.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
          X
        );
      })();
      const De = {
          addFlexToParent: !0,
          addOrientationBps: !1,
          disableDefaultBps: !1,
          disableVendorPrefixes: !1,
          serverLoaded: !1,
          useColumnBasisZero: !0,
          printWithBreakpoints: [],
          mediaTriggerAutoRestore: !0,
          ssrObserveBreakpoints: [],
          multiplier: void 0,
          defaultUnit: "px",
          detectLayoutDisplay: !1,
        },
        Ve = new s.OlP("Flex Layout token, config options for the library", {
          providedIn: "root",
          factory: () => De,
        }),
        He = new s.OlP("FlexLayoutServerLoaded", {
          providedIn: "root",
          factory: () => !1,
        }),
        We = new s.OlP(
          "Flex Layout token, collect all breakpoints into one provider",
          { providedIn: "root", factory: () => null },
        );
      function Re(X, se) {
        return (
          (X = X?.clone() ?? new gt()),
          se &&
            ((X.mqAlias = se.alias),
            (X.mediaQuery = se.mediaQuery),
            (X.suffix = se.suffix),
            (X.priority = se.priority)),
          X
        );
      }
      class wt {
        constructor() {
          this.shouldCache = !0;
        }
        sideEffect(se, it, Ut) {}
      }
      let _t = (() => {
        class X {
          constructor(it, Ut, ve, qe) {
            (this._serverStylesheet = it),
              (this._serverModuleLoaded = Ut),
              (this._platformId = ve),
              (this.layoutConfig = qe);
          }
          applyStyleToElement(it, Ut, ve = null) {
            let qe = {};
            "string" == typeof Ut && ((qe[Ut] = ve), (Ut = qe)),
              (qe = this.layoutConfig.disableVendorPrefixes
                ? Ut
                : (0, bt.GK)(Ut)),
              this._applyMultiValueStyleToElement(qe, it);
          }
          applyStyleToElements(it, Ut = []) {
            const ve = this.layoutConfig.disableVendorPrefixes
              ? it
              : (0, bt.GK)(it);
            Ut.forEach((qe) => {
              this._applyMultiValueStyleToElement(ve, qe);
            });
          }
          getFlowDirection(it) {
            const Ut = "flex-direction";
            let ve = this.lookupStyle(it, Ut);
            return [
              ve || "row",
              this.lookupInlineStyle(it, Ut) ||
              ((0, x.PM)(this._platformId) && this._serverModuleLoaded)
                ? ve
                : "",
            ];
          }
          hasWrap(it) {
            return "wrap" === this.lookupStyle(it, "flex-wrap");
          }
          lookupAttributeValue(it, Ut) {
            return it.getAttribute(Ut) ?? "";
          }
          lookupInlineStyle(it, Ut) {
            return (0, x.NF)(this._platformId)
              ? it.style.getPropertyValue(Ut)
              : (function St(X, se) {
                  return Kt(X)[se] ?? "";
                })(it, Ut);
          }
          lookupStyle(it, Ut, ve = !1) {
            let qe = "";
            return (
              it &&
                ((qe = this.lookupInlineStyle(it, Ut)) ||
                  ((0, x.NF)(this._platformId)
                    ? ve || (qe = getComputedStyle(it).getPropertyValue(Ut))
                    : this._serverModuleLoaded &&
                      (qe = this._serverStylesheet.getStyleForElement(
                        it,
                        Ut,
                      )))),
              qe ? qe.trim() : ""
            );
          }
          _applyMultiValueStyleToElement(it, Ut) {
            Object.keys(it)
              .sort()
              .forEach((ve) => {
                const qe = it[ve],
                  ki = Array.isArray(qe) ? qe : [qe];
                ki.sort();
                for (let Xt of ki)
                  (Xt = Xt ? Xt + "" : ""),
                    (0, x.NF)(this._platformId) || !this._serverModuleLoaded
                      ? (0, x.NF)(this._platformId)
                        ? Ut.style.setProperty(ve, Xt)
                        : Pt(Ut, ve, Xt)
                      : this._serverStylesheet.addStyleToElement(Ut, ve, Xt);
              });
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)(s.LFG(Jt), s.LFG(He), s.LFG(s.Lbi), s.LFG(Ve));
          }),
          (X.ɵprov = s.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
          X
        );
      })();
      function Pt(X, se, it) {
        se = se.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
        const Ut = Kt(X);
        (Ut[se] = it ?? ""),
          (function ee(X, se) {
            let it = "";
            for (const Ut in se) se[Ut] && (it += `${Ut}:${se[Ut]};`);
            X.setAttribute("style", it);
          })(X, Ut);
      }
      function Kt(X) {
        const se = {},
          it = X.getAttribute("style");
        if (it) {
          const Ut = it.split(/;+/g);
          for (let ve = 0; ve < Ut.length; ve++) {
            const qe = Ut[ve].trim();
            if (qe.length > 0) {
              const ki = qe.indexOf(":");
              if (-1 === ki) throw new Error(`Invalid CSS style: ${qe}`);
              se[qe.substr(0, ki).trim()] = qe.substr(ki + 1).trim();
            }
          }
        }
        return se;
      }
      function ze(X, se) {
        return ((se && se.priority) || 0) - ((X && X.priority) || 0);
      }
      function mi(X, se) {
        return (X.priority || 0) - (se.priority || 0);
      }
      let ie = (() => {
        class X {
          constructor(it, Ut, ve) {
            (this._zone = it),
              (this._platformId = Ut),
              (this._document = ve),
              (this.source = new C.X(new gt(!0))),
              (this.registry = new Map()),
              (this.pendingRemoveListenerFns = []),
              (this._observable$ = this.source.asObservable());
          }
          get activations() {
            const it = [];
            return (
              this.registry.forEach((Ut, ve) => {
                Ut.matches && it.push(ve);
              }),
              it
            );
          }
          isActive(it) {
            return (
              this.registry.get(it)?.matches ??
              this.registerQuery(it).some((ve) => ve.matches)
            );
          }
          observe(it, Ut = !1) {
            if (it && it.length) {
              const ve = this._observable$.pipe(
                  (0, B.h)((ki) => !Ut || it.indexOf(ki.mediaQuery) > -1),
                ),
                qe = new p.y((ki) => {
                  const Xt = this.registerQuery(it);
                  if (Xt.length) {
                    const ae = Xt.pop();
                    Xt.forEach((ye) => {
                      ki.next(ye);
                    }),
                      this.source.next(ae);
                  }
                  ki.complete();
                });
              return (0, at.T)(qe, ve);
            }
            return this._observable$;
          }
          registerQuery(it) {
            const Ut = Array.isArray(it) ? it : [it],
              ve = [];
            return (
              (function Ge(X, se) {
                const it = X.filter((Ut) => !vi[Ut]);
                if (it.length > 0) {
                  const Ut = it.join(", ");
                  try {
                    const ve = se.createElement("style");
                    ve.setAttribute("type", "text/css"),
                      ve.styleSheet ||
                        ve.appendChild(
                          se.createTextNode(
                            `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${Ut} {.fx-query-test{ }}\n`,
                          ),
                        ),
                      se.head.appendChild(ve),
                      it.forEach((qe) => (vi[qe] = ve));
                  } catch (ve) {
                    console.error(ve);
                  }
                }
              })(Ut, this._document),
              Ut.forEach((qe) => {
                const ki = (ae) => {
                  this._zone.run(() =>
                    this.source.next(new gt(ae.matches, qe)),
                  );
                };
                let Xt = this.registry.get(qe);
                Xt ||
                  ((Xt = this.buildMQL(qe)),
                  Xt.addListener(ki),
                  this.pendingRemoveListenerFns.push(() =>
                    Xt.removeListener(ki),
                  ),
                  this.registry.set(qe, Xt)),
                  Xt.matches && ve.push(new gt(!0, qe));
              }),
              ve
            );
          }
          ngOnDestroy() {
            let it;
            for (; (it = this.pendingRemoveListenerFns.pop()); ) it();
          }
          buildMQL(it) {
            return (function Si(X, se) {
              return se && window.matchMedia("all").addListener
                ? window.matchMedia(X)
                : (function hi(X) {
                    const se = new EventTarget();
                    return (
                      (se.matches = "all" === X || "" === X),
                      (se.media = X),
                      (se.addListener = () => {}),
                      (se.removeListener = () => {}),
                      (se.addEventListener = () => {}),
                      (se.dispatchEvent = () => !1),
                      (se.onchange = null),
                      se
                    );
                  })(X);
            })(it, (0, x.NF)(this._platformId));
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)(s.LFG(s.R0b), s.LFG(s.Lbi), s.LFG(x.K0));
          }),
          (X.ɵprov = s.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
          X
        );
      })();
      const vi = {},
        Vi = [
          {
            alias: "xs",
            mediaQuery: "screen and (min-width: 0px) and (max-width: 599.98px)",
            priority: 1e3,
          },
          {
            alias: "sm",
            mediaQuery:
              "screen and (min-width: 600px) and (max-width: 959.98px)",
            priority: 900,
          },
          {
            alias: "md",
            mediaQuery:
              "screen and (min-width: 960px) and (max-width: 1279.98px)",
            priority: 800,
          },
          {
            alias: "lg",
            mediaQuery:
              "screen and (min-width: 1280px) and (max-width: 1919.98px)",
            priority: 700,
          },
          {
            alias: "xl",
            mediaQuery:
              "screen and (min-width: 1920px) and (max-width: 4999.98px)",
            priority: 600,
          },
          {
            alias: "lt-sm",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 599.98px)",
            priority: 950,
          },
          {
            alias: "lt-md",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 959.98px)",
            priority: 850,
          },
          {
            alias: "lt-lg",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 1279.98px)",
            priority: 750,
          },
          {
            alias: "lt-xl",
            overlapping: !0,
            priority: 650,
            mediaQuery: "screen and (max-width: 1919.98px)",
          },
          {
            alias: "gt-xs",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 600px)",
            priority: -950,
          },
          {
            alias: "gt-sm",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 960px)",
            priority: -850,
          },
          {
            alias: "gt-md",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 1280px)",
            priority: -750,
          },
          {
            alias: "gt-lg",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 1920px)",
            priority: -650,
          },
        ],
        qi = "(orientation: portrait) and (max-width: 599.98px)",
        Ie = "(orientation: landscape) and (max-width: 959.98px)",
        Fe =
          "(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)",
        xe =
          "(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)",
        Ue = "(orientation: portrait) and (min-width: 840px)",
        Ft = "(orientation: landscape) and (min-width: 1280px)",
        Mt = {
          HANDSET: `${qi}, ${Ie}`,
          TABLET: `${Fe} , ${xe}`,
          WEB: `${Ue}, ${Ft} `,
          HANDSET_PORTRAIT: `${qi}`,
          TABLET_PORTRAIT: `${Fe} `,
          WEB_PORTRAIT: `${Ue}`,
          HANDSET_LANDSCAPE: `${Ie}`,
          TABLET_LANDSCAPE: `${xe}`,
          WEB_LANDSCAPE: `${Ft}`,
        },
        we = [
          { alias: "handset", priority: 2e3, mediaQuery: Mt.HANDSET },
          {
            alias: "handset.landscape",
            priority: 2e3,
            mediaQuery: Mt.HANDSET_LANDSCAPE,
          },
          {
            alias: "handset.portrait",
            priority: 2e3,
            mediaQuery: Mt.HANDSET_PORTRAIT,
          },
          { alias: "tablet", priority: 2100, mediaQuery: Mt.TABLET },
          {
            alias: "tablet.landscape",
            priority: 2100,
            mediaQuery: Mt.TABLET_LANDSCAPE,
          },
          {
            alias: "tablet.portrait",
            priority: 2100,
            mediaQuery: Mt.TABLET_PORTRAIT,
          },
          { alias: "web", priority: 2200, mediaQuery: Mt.WEB, overlapping: !0 },
          {
            alias: "web.landscape",
            priority: 2200,
            mediaQuery: Mt.WEB_LANDSCAPE,
            overlapping: !0,
          },
          {
            alias: "web.portrait",
            priority: 2200,
            mediaQuery: Mt.WEB_PORTRAIT,
            overlapping: !0,
          },
        ],
        Vt = /(\.|-|_)/g;
      function re(X) {
        let se = X.length > 0 ? X.charAt(0) : "",
          it = X.length > 1 ? X.slice(1) : "";
        return se.toUpperCase() + it;
      }
      const Mi = new s.OlP("Token (@angular/flex-layout) Breakpoints", {
        providedIn: "root",
        factory: () => {
          const X = (0, s.f3M)(We),
            se = (0, s.f3M)(Ve),
            it = [].concat.apply(
              [],
              (X || []).map((ve) => (Array.isArray(ve) ? ve : [ve])),
            );
          return (function ii(X, se = []) {
            const it = {};
            return (
              X.forEach((Ut) => {
                it[Ut.alias] = Ut;
              }),
              se.forEach((Ut) => {
                it[Ut.alias]
                  ? (0, bt.kt)(it[Ut.alias], Ut)
                  : (it[Ut.alias] = Ut);
              }),
              (function li(X) {
                return (
                  X.forEach((se) => {
                    se.suffix ||
                      ((se.suffix = (function Le(X) {
                        return X.replace(Vt, "|").split("|").map(re).join("");
                      })(se.alias)),
                      (se.overlapping = !!se.overlapping));
                  }),
                  X
                );
              })(Object.keys(it).map((Ut) => it[Ut]))
            );
          })(
            (se.disableDefaultBps ? [] : Vi).concat(
              se.addOrientationBps ? we : [],
            ),
            it,
          );
        },
      });
      let fi = (() => {
        class X {
          constructor(it) {
            (this.findByMap = new Map()), (this.items = [...it].sort(mi));
          }
          findByAlias(it) {
            return it
              ? this.findWithPredicate(it, (Ut) => Ut.alias === it)
              : null;
          }
          findByQuery(it) {
            return this.findWithPredicate(it, (Ut) => Ut.mediaQuery === it);
          }
          get overlappings() {
            return this.items.filter((it) => it.overlapping);
          }
          get aliases() {
            return this.items.map((it) => it.alias);
          }
          get suffixes() {
            return this.items.map((it) => it?.suffix ?? "");
          }
          findWithPredicate(it, Ut) {
            let ve = this.findByMap.get(it);
            return (
              ve ||
                ((ve = this.items.find(Ut) ?? null),
                this.findByMap.set(it, ve)),
              ve ?? null
            );
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)(s.LFG(Mi));
          }),
          (X.ɵprov = s.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
          X
        );
      })();
      const ri = "print",
        te = { alias: ri, mediaQuery: ri, priority: 1e3 };
      let Be = (() => {
        class X {
          constructor(it, Ut, ve) {
            (this.breakpoints = it),
              (this.layoutConfig = Ut),
              (this._document = ve),
              (this.registeredBeforeAfterPrintHooks = !1),
              (this.isPrintingBeforeAfterEvent = !1),
              (this.beforePrintEventListeners = []),
              (this.afterPrintEventListeners = []),
              (this.formerActivations = null),
              (this.isPrinting = !1),
              (this.queue = new Ne()),
              (this.deactivations = []);
          }
          withPrintQuery(it) {
            return [...it, ri];
          }
          isPrintEvent(it) {
            return it.mediaQuery.startsWith(ri);
          }
          get printAlias() {
            return [...(this.layoutConfig.printWithBreakpoints ?? [])];
          }
          get printBreakPoints() {
            return this.printAlias
              .map((it) => this.breakpoints.findByAlias(it))
              .filter((it) => null !== it);
          }
          getEventBreakpoints({ mediaQuery: it }) {
            const Ut = this.breakpoints.findByQuery(it);
            return (
              Ut ? [...this.printBreakPoints, Ut] : this.printBreakPoints
            ).sort(ze);
          }
          updateEvent(it) {
            let Ut = this.breakpoints.findByQuery(it.mediaQuery);
            return (
              this.isPrintEvent(it) &&
                ((Ut = this.getEventBreakpoints(it)[0]),
                (it.mediaQuery = Ut?.mediaQuery ?? "")),
              Re(it, Ut)
            );
          }
          registerBeforeAfterPrintHooks(it) {
            if (
              !this._document.defaultView ||
              this.registeredBeforeAfterPrintHooks
            )
              return;
            this.registeredBeforeAfterPrintHooks = !0;
            const Ut = () => {
                this.isPrinting ||
                  ((this.isPrintingBeforeAfterEvent = !0),
                  this.startPrinting(
                    it,
                    this.getEventBreakpoints(new gt(!0, ri)),
                  ),
                  it.updateStyles());
              },
              ve = () => {
                (this.isPrintingBeforeAfterEvent = !1),
                  this.isPrinting && (this.stopPrinting(it), it.updateStyles());
              };
            this._document.defaultView.addEventListener("beforeprint", Ut),
              this._document.defaultView.addEventListener("afterprint", ve),
              this.beforePrintEventListeners.push(Ut),
              this.afterPrintEventListeners.push(ve);
          }
          interceptEvents(it) {
            return (Ut) => {
              this.isPrintEvent(Ut)
                ? Ut.matches && !this.isPrinting
                  ? (this.startPrinting(it, this.getEventBreakpoints(Ut)),
                    it.updateStyles())
                  : !Ut.matches &&
                    this.isPrinting &&
                    !this.isPrintingBeforeAfterEvent &&
                    (this.stopPrinting(it), it.updateStyles())
                : this.collectActivations(it, Ut);
            };
          }
          blockPropagation() {
            return (it) => !(this.isPrinting || this.isPrintEvent(it));
          }
          startPrinting(it, Ut) {
            (this.isPrinting = !0),
              (this.formerActivations = it.activatedBreakpoints),
              (it.activatedBreakpoints = this.queue.addPrintBreakpoints(Ut));
          }
          stopPrinting(it) {
            (it.activatedBreakpoints = this.deactivations),
              (this.deactivations = []),
              (this.formerActivations = null),
              this.queue.clear(),
              (this.isPrinting = !1);
          }
          collectActivations(it, Ut) {
            if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {
              if (!this.isPrintingBeforeAfterEvent)
                return void (this.deactivations = []);
              if (!Ut.matches) {
                const ve = this.breakpoints.findByQuery(Ut.mediaQuery);
                if (ve) {
                  const qe =
                      this.formerActivations &&
                      this.formerActivations.includes(ve),
                    ki =
                      !this.formerActivations &&
                      it.activatedBreakpoints.includes(ve);
                  (qe || ki) &&
                    (this.deactivations.push(ve), this.deactivations.sort(ze));
                }
              }
            }
          }
          ngOnDestroy() {
            this._document.defaultView &&
              (this.beforePrintEventListeners.forEach((it) =>
                this._document.defaultView.removeEventListener(
                  "beforeprint",
                  it,
                ),
              ),
              this.afterPrintEventListeners.forEach((it) =>
                this._document.defaultView.removeEventListener(
                  "afterprint",
                  it,
                ),
              ));
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)(s.LFG(fi), s.LFG(Ve), s.LFG(x.K0));
          }),
          (X.ɵprov = s.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
          X
        );
      })();
      class Ne {
        constructor() {
          this.printBreakpoints = [];
        }
        addPrintBreakpoints(se) {
          return (
            se.push(te),
            se.sort(ze),
            se.forEach((it) => this.addBreakpoint(it)),
            this.printBreakpoints
          );
        }
        addBreakpoint(se) {
          se &&
            void 0 ===
              this.printBreakpoints.find(
                (Ut) => Ut.mediaQuery === se.mediaQuery,
              ) &&
            (this.printBreakpoints = (function Ri(X) {
              return X?.mediaQuery.startsWith(ri) ?? !1;
            })(se)
              ? [se, ...this.printBreakpoints]
              : [...this.printBreakpoints, se]);
        }
        clear() {
          this.printBreakpoints = [];
        }
      }
      let gi = (() => {
        class X {
          constructor(it, Ut, ve) {
            (this.matchMedia = it),
              (this.breakpoints = Ut),
              (this.hook = ve),
              (this._useFallbacks = !0),
              (this._activatedBreakpoints = []),
              (this.elementMap = new Map()),
              (this.elementKeyMap = new WeakMap()),
              (this.watcherMap = new WeakMap()),
              (this.updateMap = new WeakMap()),
              (this.clearMap = new WeakMap()),
              (this.subject = new lt.x()),
              this.observeActivations();
          }
          get activatedAlias() {
            return this.activatedBreakpoints[0]?.alias ?? "";
          }
          set activatedBreakpoints(it) {
            this._activatedBreakpoints = [...it];
          }
          get activatedBreakpoints() {
            return [...this._activatedBreakpoints];
          }
          set useFallbacks(it) {
            this._useFallbacks = it;
          }
          onMediaChange(it) {
            const Ut = this.findByQuery(it.mediaQuery);
            if (Ut) {
              it = Re(it, Ut);
              const ve = this.activatedBreakpoints.indexOf(Ut);
              it.matches && -1 === ve
                ? (this._activatedBreakpoints.push(Ut),
                  this._activatedBreakpoints.sort(ze),
                  this.updateStyles())
                : !it.matches &&
                  -1 !== ve &&
                  (this._activatedBreakpoints.splice(ve, 1),
                  this._activatedBreakpoints.sort(ze),
                  this.updateStyles());
            }
          }
          init(it, Ut, ve, qe, ki = []) {
            Xi(this.updateMap, it, Ut, ve),
              Xi(this.clearMap, it, Ut, qe),
              this.buildElementKeyMap(it, Ut),
              this.watchExtraTriggers(it, Ut, ki);
          }
          getValue(it, Ut, ve) {
            const qe = this.elementMap.get(it);
            if (qe) {
              const ki =
                void 0 !== ve ? qe.get(ve) : this.getActivatedValues(qe, Ut);
              if (ki) return ki.get(Ut);
            }
          }
          hasValue(it, Ut) {
            const ve = this.elementMap.get(it);
            if (ve) {
              const qe = this.getActivatedValues(ve, Ut);
              if (qe) return void 0 !== qe.get(Ut) || !1;
            }
            return !1;
          }
          setValue(it, Ut, ve, qe) {
            let ki = this.elementMap.get(it);
            if (ki) {
              const ae = (ki.get(qe) ?? new Map()).set(Ut, ve);
              ki.set(qe, ae), this.elementMap.set(it, ki);
            } else
              (ki = new Map().set(qe, new Map().set(Ut, ve))),
                this.elementMap.set(it, ki);
            const Xt = this.getValue(it, Ut);
            void 0 !== Xt && this.updateElement(it, Ut, Xt);
          }
          trackValue(it, Ut) {
            return this.subject
              .asObservable()
              .pipe((0, B.h)((ve) => ve.element === it && ve.key === Ut));
          }
          updateStyles() {
            this.elementMap.forEach((it, Ut) => {
              const ve = new Set(this.elementKeyMap.get(Ut));
              let qe = this.getActivatedValues(it);
              qe &&
                qe.forEach((ki, Xt) => {
                  this.updateElement(Ut, Xt, ki), ve.delete(Xt);
                }),
                ve.forEach((ki) => {
                  if (((qe = this.getActivatedValues(it, ki)), qe)) {
                    const Xt = qe.get(ki);
                    this.updateElement(Ut, ki, Xt);
                  } else this.clearElement(Ut, ki);
                });
            });
          }
          clearElement(it, Ut) {
            const ve = this.clearMap.get(it);
            if (ve) {
              const qe = ve.get(Ut);
              qe &&
                (qe(), this.subject.next({ element: it, key: Ut, value: "" }));
            }
          }
          updateElement(it, Ut, ve) {
            const qe = this.updateMap.get(it);
            if (qe) {
              const ki = qe.get(Ut);
              ki &&
                (ki(ve),
                this.subject.next({ element: it, key: Ut, value: ve }));
            }
          }
          releaseElement(it) {
            const Ut = this.watcherMap.get(it);
            Ut &&
              (Ut.forEach((qe) => qe.unsubscribe()),
              this.watcherMap.delete(it));
            const ve = this.elementMap.get(it);
            ve &&
              (ve.forEach((qe, ki) => ve.delete(ki)),
              this.elementMap.delete(it));
          }
          triggerUpdate(it, Ut) {
            const ve = this.elementMap.get(it);
            if (ve) {
              const qe = this.getActivatedValues(ve, Ut);
              qe &&
                (Ut
                  ? this.updateElement(it, Ut, qe.get(Ut))
                  : qe.forEach((ki, Xt) => this.updateElement(it, Xt, ki)));
            }
          }
          buildElementKeyMap(it, Ut) {
            let ve = this.elementKeyMap.get(it);
            ve || ((ve = new Set()), this.elementKeyMap.set(it, ve)),
              ve.add(Ut);
          }
          watchExtraTriggers(it, Ut, ve) {
            if (ve && ve.length) {
              let qe = this.watcherMap.get(it);
              if (
                (qe || ((qe = new Map()), this.watcherMap.set(it, qe)),
                !qe.get(Ut))
              ) {
                const Xt = (0, at.T)(...ve).subscribe(() => {
                  const ae = this.getValue(it, Ut);
                  this.updateElement(it, Ut, ae);
                });
                qe.set(Ut, Xt);
              }
            }
          }
          findByQuery(it) {
            return this.breakpoints.findByQuery(it);
          }
          getActivatedValues(it, Ut) {
            for (let qe = 0; qe < this.activatedBreakpoints.length; qe++) {
              const Xt = it.get(this.activatedBreakpoints[qe].alias);
              if (Xt && (void 0 === Ut || (Xt.has(Ut) && null != Xt.get(Ut))))
                return Xt;
            }
            if (!this._useFallbacks) return;
            const ve = it.get("");
            return void 0 === Ut || (ve && ve.has(Ut)) ? ve : void 0;
          }
          observeActivations() {
            const it = this.breakpoints.items.map((Ut) => Ut.mediaQuery);
            this.hook.registerBeforeAfterPrintHooks(this),
              this.matchMedia
                .observe(this.hook.withPrintQuery(it))
                .pipe(
                  (0, kt.b)(this.hook.interceptEvents(this)),
                  (0, B.h)(this.hook.blockPropagation()),
                )
                .subscribe(this.onMediaChange.bind(this));
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)(s.LFG(ie), s.LFG(fi), s.LFG(Be));
          }),
          (X.ɵprov = s.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
          X
        );
      })();
      function Xi(X, se, it, Ut) {
        if (void 0 !== Ut) {
          const ve = X.get(se) ?? new Map();
          ve.set(it, Ut), X.set(se, ve);
        }
      }
      let _i = (() => {
        class X {
          constructor(it, Ut, ve, qe) {
            (this.elementRef = it),
              (this.styleBuilder = Ut),
              (this.styler = ve),
              (this.marshal = qe),
              (this.DIRECTIVE_KEY = ""),
              (this.inputs = []),
              (this.mru = {}),
              (this.destroySubject = new lt.x()),
              (this.styleCache = new Map());
          }
          get parentElement() {
            return this.elementRef.nativeElement.parentElement;
          }
          get nativeElement() {
            return this.elementRef.nativeElement;
          }
          get activatedValue() {
            return this.marshal.getValue(
              this.nativeElement,
              this.DIRECTIVE_KEY,
            );
          }
          set activatedValue(it) {
            this.marshal.setValue(
              this.nativeElement,
              this.DIRECTIVE_KEY,
              it,
              this.marshal.activatedAlias,
            );
          }
          ngOnChanges(it) {
            Object.keys(it).forEach((Ut) => {
              if (-1 !== this.inputs.indexOf(Ut)) {
                const ve = Ut.split(".").slice(1).join(".");
                this.setValue(it[Ut].currentValue, ve);
              }
            });
          }
          ngOnDestroy() {
            this.destroySubject.next(),
              this.destroySubject.complete(),
              this.marshal.releaseElement(this.nativeElement);
          }
          init(it = []) {
            this.marshal.init(
              this.elementRef.nativeElement,
              this.DIRECTIVE_KEY,
              this.updateWithValue.bind(this),
              this.clearStyles.bind(this),
              it,
            );
          }
          addStyles(it, Ut) {
            const ve = this.styleBuilder,
              qe = ve.shouldCache;
            let ki = this.styleCache.get(it);
            (!ki || !qe) &&
              ((ki = ve.buildStyles(it, Ut)),
              qe && this.styleCache.set(it, ki)),
              (this.mru = { ...ki }),
              this.applyStyleToElement(ki),
              ve.sideEffect(it, ki, Ut);
          }
          clearStyles() {
            Object.keys(this.mru).forEach((it) => {
              this.mru[it] = "";
            }),
              this.applyStyleToElement(this.mru),
              (this.mru = {}),
              (this.currentValue = void 0);
          }
          triggerUpdate() {
            this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
          }
          getFlexFlowDirection(it, Ut = !1) {
            if (it) {
              const [ve, qe] = this.styler.getFlowDirection(it);
              if (!qe && Ut) {
                const ki = (0, bt.Ar)(ve);
                this.styler.applyStyleToElements(ki, [it]);
              }
              return ve.trim();
            }
            return "row";
          }
          hasWrap(it) {
            return this.styler.hasWrap(it);
          }
          applyStyleToElement(it, Ut, ve = this.nativeElement) {
            this.styler.applyStyleToElement(ve, it, Ut);
          }
          setValue(it, Ut) {
            this.marshal.setValue(
              this.nativeElement,
              this.DIRECTIVE_KEY,
              it,
              Ut,
            );
          }
          updateWithValue(it) {
            this.currentValue !== it &&
              (this.addStyles(it), (this.currentValue = it));
          }
        }
        return (
          (X.ɵfac = function (it) {
            return new (it || X)(s.Y36(s.SBq), s.Y36(wt), s.Y36(_t), s.Y36(gi));
          }),
          (X.ɵdir = s.lG2({ type: X, features: [s.TTD] })),
          X
        );
      })();
      function q(X, se = "1", it = "1") {
        let Ut = [se, it, X],
          ve = X.indexOf("calc");
        if (ve > 0) {
          Ut[2] = Ct(X.substring(ve).trim());
          let qe = X.substr(0, ve).trim().split(" ");
          2 == qe.length && ((Ut[0] = qe[0]), (Ut[1] = qe[1]));
        } else if (0 == ve) Ut[2] = Ct(X.trim());
        else {
          let qe = X.split(" ");
          Ut = 3 === qe.length ? qe : [se, it, X];
        }
        return Ut;
      }
      function Ct(X) {
        return X.replace(/[\s]/g, "").replace(/[\/\*\+\-]/g, " $& ");
      }
      EventTarget;
      const H = "x";
      function Nt(X, se) {
        if (void 0 === se) return X;
        const it = (Ut) => {
          const ve = +Ut.slice(0, -H.length);
          return X.endsWith(H) && !isNaN(ve) ? `${ve * se.value}${se.unit}` : X;
        };
        return X.includes(" ") ? X.split(" ").map(it).join(" ") : it(X);
      }
    },
    3814: (ui, Zt, D) => {
      D.d(Zt, {
        SQ: () => He,
        Wh: () => q,
        ae: () => ki,
        xw: () => _,
        yH: () => hi,
      });
      var s = D(5879),
        x = D(9388),
        C = D(1462),
        p = D(5766),
        at = D(8645),
        lt = D(9773);
      let bt = (() => {
        class Xt extends C.QI {
          buildStyles(ye, { display: $t }) {
            const fe = (0, p.Ar)(ye);
            return { ...fe, display: "none" === $t ? $t : fe.display };
          }
        }
        return (
          (Xt.ɵfac = (function () {
            let ae;
            return function ($t) {
              return (ae || (ae = s.n5z(Xt)))($t || Xt);
            };
          })()),
          (Xt.ɵprov = s.Yz7({
            token: Xt,
            factory: Xt.ɵfac,
            providedIn: "root",
          })),
          Xt
        );
      })();
      const B = [
        "fxLayout",
        "fxLayout.xs",
        "fxLayout.sm",
        "fxLayout.md",
        "fxLayout.lg",
        "fxLayout.xl",
        "fxLayout.lt-sm",
        "fxLayout.lt-md",
        "fxLayout.lt-lg",
        "fxLayout.lt-xl",
        "fxLayout.gt-xs",
        "fxLayout.gt-sm",
        "fxLayout.gt-md",
        "fxLayout.gt-lg",
      ];
      let $ = (() => {
          class Xt extends C.iR {
            constructor(ye, $t, fe, ke, yi) {
              super(ye, fe, $t, ke),
                (this._config = yi),
                (this.DIRECTIVE_KEY = "layout"),
                this.init();
            }
            updateWithValue(ye) {
              const fe = this._config.detectLayoutDisplay
                ? this.styler.lookupStyle(this.nativeElement, "display")
                : "";
              (this.styleCache = A.get(fe) ?? new Map()),
                A.set(fe, this.styleCache),
                this.currentValue !== ye &&
                  (this.addStyles(ye, { display: fe }),
                  (this.currentValue = ye));
            }
          }
          return (
            (Xt.ɵfac = function (ye) {
              return new (ye || Xt)(
                s.Y36(s.SBq),
                s.Y36(C.RK),
                s.Y36(bt),
                s.Y36(C.yB),
                s.Y36(C.WU),
              );
            }),
            (Xt.ɵdir = s.lG2({ type: Xt, features: [s.qOj] })),
            Xt
          );
        })(),
        _ = (() => {
          class Xt extends $ {
            constructor() {
              super(...arguments), (this.inputs = B);
            }
          }
          return (
            (Xt.ɵfac = (function () {
              let ae;
              return function ($t) {
                return (ae || (ae = s.n5z(Xt)))($t || Xt);
              };
            })()),
            (Xt.ɵdir = s.lG2({
              type: Xt,
              selectors: [
                ["", "fxLayout", ""],
                ["", "fxLayout.xs", ""],
                ["", "fxLayout.sm", ""],
                ["", "fxLayout.md", ""],
                ["", "fxLayout.lg", ""],
                ["", "fxLayout.xl", ""],
                ["", "fxLayout.lt-sm", ""],
                ["", "fxLayout.lt-md", ""],
                ["", "fxLayout.lt-lg", ""],
                ["", "fxLayout.lt-xl", ""],
                ["", "fxLayout.gt-xs", ""],
                ["", "fxLayout.gt-sm", ""],
                ["", "fxLayout.gt-md", ""],
                ["", "fxLayout.gt-lg", ""],
              ],
              inputs: {
                fxLayout: "fxLayout",
                "fxLayout.xs": "fxLayout.xs",
                "fxLayout.sm": "fxLayout.sm",
                "fxLayout.md": "fxLayout.md",
                "fxLayout.lg": "fxLayout.lg",
                "fxLayout.xl": "fxLayout.xl",
                "fxLayout.lt-sm": "fxLayout.lt-sm",
                "fxLayout.lt-md": "fxLayout.lt-md",
                "fxLayout.lt-lg": "fxLayout.lt-lg",
                "fxLayout.lt-xl": "fxLayout.lt-xl",
                "fxLayout.gt-xs": "fxLayout.gt-xs",
                "fxLayout.gt-sm": "fxLayout.gt-sm",
                "fxLayout.gt-md": "fxLayout.gt-md",
                "fxLayout.gt-lg": "fxLayout.gt-lg",
              },
              features: [s.qOj],
            })),
            Xt
          );
        })();
      const A = new Map(),
        jt = {
          "margin-left": null,
          "margin-right": null,
          "margin-top": null,
          "margin-bottom": null,
        };
      let gt = (() => {
        class Xt extends C.QI {
          constructor(ye, $t) {
            super(), (this._styler = ye), (this._config = $t);
          }
          buildStyles(ye, $t) {
            return ye.endsWith(St)
              ? ((ye = ye.slice(0, ye.indexOf(St))),
                (function ee(Xt, ae) {
                  const [ye, $t] = Xt.split(" "),
                    ke = (U) => `-${U}`;
                  let yi = "0px",
                    pt = ke($t ?? ye),
                    vt = "0px";
                  return (
                    "rtl" === ae ? (vt = ke(ye)) : (yi = ke(ye)),
                    { margin: `0px ${yi} ${pt} ${vt}` }
                  );
                })(
                  (ye = (0, C.FL)(ye, this._config.multiplier)),
                  $t.directionality,
                ))
              : {};
          }
          sideEffect(ye, $t, fe) {
            const ke = fe.items;
            if (ye.endsWith(St)) {
              ye = ye.slice(0, ye.indexOf(St));
              const yi = (function Pt(Xt, ae) {
                const [ye, $t] = Xt.split(" ");
                let ke = "0px",
                  pt = "0px";
                return (
                  "rtl" === ae ? (pt = ye) : (ke = ye),
                  { padding: `0px ${ke} ${$t ?? ye} ${pt}` }
                );
              })(
                (ye = (0, C.FL)(ye, this._config.multiplier)),
                fe.directionality,
              );
              this._styler.applyStyleToElements(yi, fe.items);
            } else {
              (ye = (0, C.FL)(ye, this._config.multiplier)),
                (ye = this.addFallbackUnit(ye));
              const yi = ke.pop(),
                pt = (function ze(Xt, ae) {
                  const ye = Kt(ae.directionality, ae.layout),
                    $t = { ...jt };
                  return ($t[ye] = Xt), $t;
                })(ye, fe);
              this._styler.applyStyleToElements(pt, ke),
                this._styler.applyStyleToElements(jt, [yi]);
            }
          }
          addFallbackUnit(ye) {
            return isNaN(+ye) ? ye : `${ye}${this._config.defaultUnit}`;
          }
        }
        return (
          (Xt.ɵfac = function (ye) {
            return new (ye || Xt)(s.LFG(C.RK), s.LFG(C.WU));
          }),
          (Xt.ɵprov = s.Yz7({
            token: Xt,
            factory: Xt.ɵfac,
            providedIn: "root",
          })),
          Xt
        );
      })();
      const Jt = [
        "fxLayoutGap",
        "fxLayoutGap.xs",
        "fxLayoutGap.sm",
        "fxLayoutGap.md",
        "fxLayoutGap.lg",
        "fxLayoutGap.xl",
        "fxLayoutGap.lt-sm",
        "fxLayoutGap.lt-md",
        "fxLayoutGap.lt-lg",
        "fxLayoutGap.lt-xl",
        "fxLayoutGap.gt-xs",
        "fxLayoutGap.gt-sm",
        "fxLayoutGap.gt-md",
        "fxLayoutGap.gt-lg",
      ];
      let Ve = (() => {
          class Xt extends C.iR {
            constructor(ye, $t, fe, ke, yi, pt) {
              super(ye, yi, ke, pt),
                (this.zone = $t),
                (this.directionality = fe),
                (this.styleUtils = ke),
                (this.layout = "row"),
                (this.DIRECTIVE_KEY = "layout-gap"),
                (this.observerSubject = new at.x());
              const vt = [
                this.directionality.change,
                this.observerSubject.asObservable(),
              ];
              this.init(vt),
                this.marshal
                  .trackValue(this.nativeElement, "layout")
                  .pipe((0, lt.R)(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this));
            }
            get childrenNodes() {
              const ye = this.nativeElement.children,
                $t = [];
              for (let fe = ye.length; fe--; ) $t[fe] = ye[fe];
              return $t;
            }
            ngAfterContentInit() {
              this.buildChildObservable(), this.triggerUpdate();
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.observer && this.observer.disconnect();
            }
            onLayoutChange(ye) {
              const fe = ye.value.split(" ");
              (this.layout = fe[0]),
                p.iQ.find((ke) => ke === this.layout) || (this.layout = "row"),
                this.triggerUpdate();
            }
            updateWithValue(ye) {
              const $t = this.childrenNodes
                .filter((fe) => 1 === fe.nodeType && this.willDisplay(fe))
                .sort((fe, ke) => {
                  const yi = +this.styler.lookupStyle(fe, "order"),
                    pt = +this.styler.lookupStyle(ke, "order");
                  return isNaN(yi) || isNaN(pt) || yi === pt
                    ? 0
                    : yi > pt
                      ? 1
                      : -1;
                });
              if ($t.length > 0) {
                const fe = this.directionality.value,
                  ke = this.layout;
                "row" === ke && "rtl" === fe
                  ? (this.styleCache = We)
                  : "row" === ke && "rtl" !== fe
                    ? (this.styleCache = wt)
                    : "column" === ke && "rtl" === fe
                      ? (this.styleCache = Re)
                      : "column" === ke &&
                        "rtl" !== fe &&
                        (this.styleCache = _t),
                  this.addStyles(ye, {
                    directionality: fe,
                    items: $t,
                    layout: ke,
                  });
              }
            }
            clearStyles() {
              const ye = Object.keys(this.mru).length > 0,
                $t = ye
                  ? "padding"
                  : Kt(this.directionality.value, this.layout);
              ye && super.clearStyles(),
                this.styleUtils.applyStyleToElements(
                  { [$t]: "" },
                  this.childrenNodes,
                );
            }
            willDisplay(ye) {
              const $t = this.marshal.getValue(ye, "show-hide");
              return (
                !0 === $t ||
                (void 0 === $t &&
                  "none" !== this.styleUtils.lookupStyle(ye, "display"))
              );
            }
            buildChildObservable() {
              this.zone.runOutsideAngular(() => {
                typeof MutationObserver < "u" &&
                  ((this.observer = new MutationObserver((ye) => {
                    ye.some(
                      (fe) =>
                        (fe.addedNodes && fe.addedNodes.length > 0) ||
                        (fe.removedNodes && fe.removedNodes.length > 0),
                    ) && this.observerSubject.next();
                  })),
                  this.observer.observe(this.nativeElement, { childList: !0 }));
              });
            }
          }
          return (
            (Xt.ɵfac = function (ye) {
              return new (ye || Xt)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(x.Is),
                s.Y36(C.RK),
                s.Y36(gt),
                s.Y36(C.yB),
              );
            }),
            (Xt.ɵdir = s.lG2({ type: Xt, features: [s.qOj] })),
            Xt
          );
        })(),
        He = (() => {
          class Xt extends Ve {
            constructor() {
              super(...arguments), (this.inputs = Jt);
            }
          }
          return (
            (Xt.ɵfac = (function () {
              let ae;
              return function ($t) {
                return (ae || (ae = s.n5z(Xt)))($t || Xt);
              };
            })()),
            (Xt.ɵdir = s.lG2({
              type: Xt,
              selectors: [
                ["", "fxLayoutGap", ""],
                ["", "fxLayoutGap.xs", ""],
                ["", "fxLayoutGap.sm", ""],
                ["", "fxLayoutGap.md", ""],
                ["", "fxLayoutGap.lg", ""],
                ["", "fxLayoutGap.xl", ""],
                ["", "fxLayoutGap.lt-sm", ""],
                ["", "fxLayoutGap.lt-md", ""],
                ["", "fxLayoutGap.lt-lg", ""],
                ["", "fxLayoutGap.lt-xl", ""],
                ["", "fxLayoutGap.gt-xs", ""],
                ["", "fxLayoutGap.gt-sm", ""],
                ["", "fxLayoutGap.gt-md", ""],
                ["", "fxLayoutGap.gt-lg", ""],
              ],
              inputs: {
                fxLayoutGap: "fxLayoutGap",
                "fxLayoutGap.xs": "fxLayoutGap.xs",
                "fxLayoutGap.sm": "fxLayoutGap.sm",
                "fxLayoutGap.md": "fxLayoutGap.md",
                "fxLayoutGap.lg": "fxLayoutGap.lg",
                "fxLayoutGap.xl": "fxLayoutGap.xl",
                "fxLayoutGap.lt-sm": "fxLayoutGap.lt-sm",
                "fxLayoutGap.lt-md": "fxLayoutGap.lt-md",
                "fxLayoutGap.lt-lg": "fxLayoutGap.lt-lg",
                "fxLayoutGap.lt-xl": "fxLayoutGap.lt-xl",
                "fxLayoutGap.gt-xs": "fxLayoutGap.gt-xs",
                "fxLayoutGap.gt-sm": "fxLayoutGap.gt-sm",
                "fxLayoutGap.gt-md": "fxLayoutGap.gt-md",
                "fxLayoutGap.gt-lg": "fxLayoutGap.gt-lg",
              },
              features: [s.qOj],
            })),
            Xt
          );
        })();
      const We = new Map(),
        Re = new Map(),
        wt = new Map(),
        _t = new Map(),
        St = " grid";
      function Kt(Xt, ae) {
        switch (ae) {
          case "column":
            return "margin-bottom";
          case "column-reverse":
            return "margin-top";
          case "row":
          default:
            return "rtl" === Xt ? "margin-left" : "margin-right";
          case "row-reverse":
            return "rtl" === Xt ? "margin-right" : "margin-left";
        }
      }
      let mi = (() => {
        class Xt extends C.QI {
          constructor(ye) {
            super(), (this.layoutConfig = ye);
          }
          buildStyles(ye, $t) {
            let [fe, ke, ...yi] = ye.split(" "),
              pt = yi.join(" ");
            const vt = $t.direction.indexOf("column") > -1 ? "column" : "row",
              U = (0, p.tj)(vt) ? "max-width" : "max-height",
              j = (0, p.tj)(vt) ? "min-width" : "min-height",
              ct = String(pt).indexOf("calc") > -1,
              ue = ct || "auto" === pt,
              Wt = String(pt).indexOf("%") > -1 && !ct,
              le =
                String(pt).indexOf("px") > -1 ||
                String(pt).indexOf("rem") > -1 ||
                String(pt).indexOf("em") > -1 ||
                String(pt).indexOf("vw") > -1 ||
                String(pt).indexOf("vh") > -1;
            let It = ct || le;
            (fe = "0" == fe ? 0 : fe), (ke = "0" == ke ? 0 : ke);
            const Yt = !fe && !ke;
            let Ae = {};
            const oi = {
              "max-width": null,
              "max-height": null,
              "min-width": null,
              "min-height": null,
            };
            switch (pt || "") {
              case "":
                pt =
                  "row" === vt
                    ? "0%"
                    : !1 !== this.layoutConfig.useColumnBasisZero
                      ? "0.000000001px"
                      : "auto";
                break;
              case "initial":
              case "nogrow":
                (fe = 0), (pt = "auto");
                break;
              case "grow":
                pt = "100%";
                break;
              case "noshrink":
                (ke = 0), (pt = "auto");
                break;
              case "auto":
                break;
              case "none":
                (fe = 0), (ke = 0), (pt = "auto");
                break;
              default:
                !It && !Wt && !isNaN(pt) && (pt += "%"),
                  "0%" === pt && (It = !0),
                  "0px" === pt && (pt = "0%"),
                  (Ae = (0, p.kt)(
                    oi,
                    ct
                      ? {
                          "flex-grow": fe,
                          "flex-shrink": ke,
                          "flex-basis": It ? pt : "100%",
                        }
                      : { flex: `${fe} ${ke} ${It ? pt : "100%"}` },
                  ));
            }
            return (
              Ae.flex ||
                Ae["flex-grow"] ||
                (Ae = (0, p.kt)(
                  oi,
                  ct
                    ? { "flex-grow": fe, "flex-shrink": ke, "flex-basis": pt }
                    : { flex: `${fe} ${ke} ${pt}` },
                )),
              "0%" !== pt &&
                "0px" !== pt &&
                "0.000000001px" !== pt &&
                "auto" !== pt &&
                ((Ae[j] = Yt || (It && fe) ? pt : null),
                (Ae[U] = Yt || (!ue && ke) ? pt : null)),
              Ae[j] || Ae[U]
                ? $t.hasWrap &&
                  (Ae[ct ? "flex-basis" : "flex"] = Ae[U]
                    ? ct
                      ? Ae[U]
                      : `${fe} ${ke} ${Ae[U]}`
                    : ct
                      ? Ae[j]
                      : `${fe} ${ke} ${Ae[j]}`)
                : (Ae = (0, p.kt)(
                    oi,
                    ct
                      ? { "flex-grow": fe, "flex-shrink": ke, "flex-basis": pt }
                      : { flex: `${fe} ${ke} ${pt}` },
                  )),
              (0, p.kt)(Ae, { "box-sizing": "border-box" })
            );
          }
        }
        return (
          (Xt.ɵfac = function (ye) {
            return new (ye || Xt)(s.LFG(C.WU));
          }),
          (Xt.ɵprov = s.Yz7({
            token: Xt,
            factory: Xt.ɵfac,
            providedIn: "root",
          })),
          Xt
        );
      })();
      const ie = [
        "fxFlex",
        "fxFlex.xs",
        "fxFlex.sm",
        "fxFlex.md",
        "fxFlex.lg",
        "fxFlex.xl",
        "fxFlex.lt-sm",
        "fxFlex.lt-md",
        "fxFlex.lt-lg",
        "fxFlex.lt-xl",
        "fxFlex.gt-xs",
        "fxFlex.gt-sm",
        "fxFlex.gt-md",
        "fxFlex.gt-lg",
      ];
      let Ge = (() => {
          class Xt extends C.iR {
            constructor(ye, $t, fe, ke, yi) {
              super(ye, ke, $t, yi),
                (this.layoutConfig = fe),
                (this.marshal = yi),
                (this.DIRECTIVE_KEY = "flex"),
                (this.direction = void 0),
                (this.wrap = void 0),
                (this.flexGrow = "1"),
                (this.flexShrink = "1"),
                this.init();
            }
            get shrink() {
              return this.flexShrink;
            }
            set shrink(ye) {
              (this.flexShrink = ye || "1"), this.triggerReflow();
            }
            get grow() {
              return this.flexGrow;
            }
            set grow(ye) {
              (this.flexGrow = ye || "1"), this.triggerReflow();
            }
            ngOnInit() {
              this.parentElement &&
                (this.marshal
                  .trackValue(this.parentElement, "layout")
                  .pipe((0, lt.R)(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this)),
                this.marshal
                  .trackValue(this.nativeElement, "layout-align")
                  .pipe((0, lt.R)(this.destroySubject))
                  .subscribe(this.triggerReflow.bind(this)));
            }
            onLayoutChange(ye) {
              const fe = ye.value.split(" ");
              (this.direction = fe[0]),
                (this.wrap = void 0 !== fe[1] && "wrap" === fe[1]),
                this.triggerUpdate();
            }
            updateWithValue(ye) {
              void 0 === this.direction &&
                (this.direction = this.getFlexFlowDirection(
                  this.parentElement,
                  !1 !== this.layoutConfig.addFlexToParent,
                )),
                void 0 === this.wrap &&
                  (this.wrap = this.hasWrap(this.parentElement));
              const fe = this.direction,
                ke = fe.startsWith("row"),
                yi = this.wrap;
              ke && yi
                ? (this.styleCache = qi)
                : ke && !yi
                  ? (this.styleCache = Si)
                  : !ke && yi
                    ? (this.styleCache = Ie)
                    : !ke && !yi && (this.styleCache = Vi);
              const pt = String(ye).replace(";", ""),
                vt = (0, C.Ot)(pt, this.flexGrow, this.flexShrink);
              this.addStyles(vt.join(" "), { direction: fe, hasWrap: yi });
            }
            triggerReflow() {
              const ye = this.activatedValue;
              if (void 0 !== ye) {
                const $t = (0, C.Ot)(ye + "", this.flexGrow, this.flexShrink);
                this.marshal.updateElement(
                  this.nativeElement,
                  this.DIRECTIVE_KEY,
                  $t.join(" "),
                );
              }
            }
          }
          return (
            (Xt.ɵfac = function (ye) {
              return new (ye || Xt)(
                s.Y36(s.SBq),
                s.Y36(C.RK),
                s.Y36(C.WU),
                s.Y36(mi),
                s.Y36(C.yB),
              );
            }),
            (Xt.ɵdir = s.lG2({
              type: Xt,
              inputs: {
                shrink: ["fxShrink", "shrink"],
                grow: ["fxGrow", "grow"],
              },
              features: [s.qOj],
            })),
            Xt
          );
        })(),
        hi = (() => {
          class Xt extends Ge {
            constructor() {
              super(...arguments), (this.inputs = ie);
            }
          }
          return (
            (Xt.ɵfac = (function () {
              let ae;
              return function ($t) {
                return (ae || (ae = s.n5z(Xt)))($t || Xt);
              };
            })()),
            (Xt.ɵdir = s.lG2({
              type: Xt,
              selectors: [
                ["", "fxFlex", ""],
                ["", "fxFlex.xs", ""],
                ["", "fxFlex.sm", ""],
                ["", "fxFlex.md", ""],
                ["", "fxFlex.lg", ""],
                ["", "fxFlex.xl", ""],
                ["", "fxFlex.lt-sm", ""],
                ["", "fxFlex.lt-md", ""],
                ["", "fxFlex.lt-lg", ""],
                ["", "fxFlex.lt-xl", ""],
                ["", "fxFlex.gt-xs", ""],
                ["", "fxFlex.gt-sm", ""],
                ["", "fxFlex.gt-md", ""],
                ["", "fxFlex.gt-lg", ""],
              ],
              inputs: {
                fxFlex: "fxFlex",
                "fxFlex.xs": "fxFlex.xs",
                "fxFlex.sm": "fxFlex.sm",
                "fxFlex.md": "fxFlex.md",
                "fxFlex.lg": "fxFlex.lg",
                "fxFlex.xl": "fxFlex.xl",
                "fxFlex.lt-sm": "fxFlex.lt-sm",
                "fxFlex.lt-md": "fxFlex.lt-md",
                "fxFlex.lt-lg": "fxFlex.lt-lg",
                "fxFlex.lt-xl": "fxFlex.lt-xl",
                "fxFlex.gt-xs": "fxFlex.gt-xs",
                "fxFlex.gt-sm": "fxFlex.gt-sm",
                "fxFlex.gt-md": "fxFlex.gt-md",
                "fxFlex.gt-lg": "fxFlex.gt-lg",
              },
              features: [s.qOj],
            })),
            Xt
          );
        })();
      const Si = new Map(),
        Vi = new Map(),
        qi = new Map(),
        Ie = new Map();
      let yt = (() => {
        class Xt extends C.QI {
          buildStyles(ye, $t) {
            const fe = {},
              [ke, yi] = ye.split(" ");
            switch (ke) {
              case "center":
                fe["justify-content"] = "center";
                break;
              case "space-around":
                fe["justify-content"] = "space-around";
                break;
              case "space-between":
                fe["justify-content"] = "space-between";
                break;
              case "space-evenly":
                fe["justify-content"] = "space-evenly";
                break;
              case "end":
              case "flex-end":
                fe["justify-content"] = "flex-end";
                break;
              default:
                fe["justify-content"] = "flex-start";
            }
            switch (yi) {
              case "start":
              case "flex-start":
                fe["align-items"] = fe["align-content"] = "flex-start";
                break;
              case "center":
                fe["align-items"] = fe["align-content"] = "center";
                break;
              case "end":
              case "flex-end":
                fe["align-items"] = fe["align-content"] = "flex-end";
                break;
              case "space-between":
                (fe["align-content"] = "space-between"),
                  (fe["align-items"] = "stretch");
                break;
              case "space-around":
                (fe["align-content"] = "space-around"),
                  (fe["align-items"] = "stretch");
                break;
              case "baseline":
                (fe["align-content"] = "stretch"),
                  (fe["align-items"] = "baseline");
                break;
              default:
                fe["align-items"] = fe["align-content"] = "stretch";
            }
            return (0, p.kt)(fe, {
              display: $t.inline ? "inline-flex" : "flex",
              "flex-direction": $t.layout,
              "box-sizing": "border-box",
              "max-width":
                "stretch" === yi
                  ? (0, p.tj)($t.layout)
                    ? null
                    : "100%"
                  : null,
              "max-height":
                "stretch" === yi && (0, p.tj)($t.layout) ? "100%" : null,
            });
          }
        }
        return (
          (Xt.ɵfac = (function () {
            let ae;
            return function ($t) {
              return (ae || (ae = s.n5z(Xt)))($t || Xt);
            };
          })()),
          (Xt.ɵprov = s.Yz7({
            token: Xt,
            factory: Xt.ɵfac,
            providedIn: "root",
          })),
          Xt
        );
      })();
      const Rt = [
        "fxLayoutAlign",
        "fxLayoutAlign.xs",
        "fxLayoutAlign.sm",
        "fxLayoutAlign.md",
        "fxLayoutAlign.lg",
        "fxLayoutAlign.xl",
        "fxLayoutAlign.lt-sm",
        "fxLayoutAlign.lt-md",
        "fxLayoutAlign.lt-lg",
        "fxLayoutAlign.lt-xl",
        "fxLayoutAlign.gt-xs",
        "fxLayoutAlign.gt-sm",
        "fxLayoutAlign.gt-md",
        "fxLayoutAlign.gt-lg",
      ];
      let ut = (() => {
          class Xt extends C.iR {
            constructor(ye, $t, fe, ke) {
              super(ye, fe, $t, ke),
                (this.DIRECTIVE_KEY = "layout-align"),
                (this.layout = "row"),
                (this.inline = !1),
                this.init(),
                this.marshal
                  .trackValue(this.nativeElement, "layout")
                  .pipe((0, lt.R)(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this));
            }
            updateWithValue(ye) {
              const $t = this.layout || "row",
                fe = this.inline;
              "row" === $t && fe
                ? (this.styleCache = se)
                : "row" !== $t || fe
                  ? "row-reverse" === $t && fe
                    ? (this.styleCache = Ut)
                    : "row-reverse" !== $t || fe
                      ? "column" === $t && fe
                        ? (this.styleCache = it)
                        : "column" !== $t || fe
                          ? "column-reverse" === $t && fe
                            ? (this.styleCache = ve)
                            : "column-reverse" === $t &&
                              !fe &&
                              (this.styleCache = X)
                          : (this.styleCache = H)
                      : (this.styleCache = Nt)
                  : (this.styleCache = Ct),
                this.addStyles(ye, { layout: $t, inline: fe });
            }
            onLayoutChange(ye) {
              const $t = ye.value.split(" ");
              (this.layout = $t[0]),
                (this.inline = ye.value.includes("inline")),
                p.iQ.find((fe) => fe === this.layout) || (this.layout = "row"),
                this.triggerUpdate();
            }
          }
          return (
            (Xt.ɵfac = function (ye) {
              return new (ye || Xt)(
                s.Y36(s.SBq),
                s.Y36(C.RK),
                s.Y36(yt),
                s.Y36(C.yB),
              );
            }),
            (Xt.ɵdir = s.lG2({ type: Xt, features: [s.qOj] })),
            Xt
          );
        })(),
        q = (() => {
          class Xt extends ut {
            constructor() {
              super(...arguments), (this.inputs = Rt);
            }
          }
          return (
            (Xt.ɵfac = (function () {
              let ae;
              return function ($t) {
                return (ae || (ae = s.n5z(Xt)))($t || Xt);
              };
            })()),
            (Xt.ɵdir = s.lG2({
              type: Xt,
              selectors: [
                ["", "fxLayoutAlign", ""],
                ["", "fxLayoutAlign.xs", ""],
                ["", "fxLayoutAlign.sm", ""],
                ["", "fxLayoutAlign.md", ""],
                ["", "fxLayoutAlign.lg", ""],
                ["", "fxLayoutAlign.xl", ""],
                ["", "fxLayoutAlign.lt-sm", ""],
                ["", "fxLayoutAlign.lt-md", ""],
                ["", "fxLayoutAlign.lt-lg", ""],
                ["", "fxLayoutAlign.lt-xl", ""],
                ["", "fxLayoutAlign.gt-xs", ""],
                ["", "fxLayoutAlign.gt-sm", ""],
                ["", "fxLayoutAlign.gt-md", ""],
                ["", "fxLayoutAlign.gt-lg", ""],
              ],
              inputs: {
                fxLayoutAlign: "fxLayoutAlign",
                "fxLayoutAlign.xs": "fxLayoutAlign.xs",
                "fxLayoutAlign.sm": "fxLayoutAlign.sm",
                "fxLayoutAlign.md": "fxLayoutAlign.md",
                "fxLayoutAlign.lg": "fxLayoutAlign.lg",
                "fxLayoutAlign.xl": "fxLayoutAlign.xl",
                "fxLayoutAlign.lt-sm": "fxLayoutAlign.lt-sm",
                "fxLayoutAlign.lt-md": "fxLayoutAlign.lt-md",
                "fxLayoutAlign.lt-lg": "fxLayoutAlign.lt-lg",
                "fxLayoutAlign.lt-xl": "fxLayoutAlign.lt-xl",
                "fxLayoutAlign.gt-xs": "fxLayoutAlign.gt-xs",
                "fxLayoutAlign.gt-sm": "fxLayoutAlign.gt-sm",
                "fxLayoutAlign.gt-md": "fxLayoutAlign.gt-md",
                "fxLayoutAlign.gt-lg": "fxLayoutAlign.gt-lg",
              },
              features: [s.qOj],
            })),
            Xt
          );
        })();
      const Ct = new Map(),
        H = new Map(),
        Nt = new Map(),
        X = new Map(),
        se = new Map(),
        it = new Map(),
        Ut = new Map(),
        ve = new Map();
      let ki = (() => {
        class Xt {}
        return (
          (Xt.ɵfac = function (ye) {
            return new (ye || Xt)();
          }),
          (Xt.ɵmod = s.oAB({ type: Xt })),
          (Xt.ɵinj = s.cJS({ imports: [C.IR, x.vT] })),
          Xt
        );
      })();
    },
    6216: (ui, Zt, D) => {
      D.d(Zt, { o9: () => Jn });
      var s = D(5879),
        x = D(1462),
        C = D(6814);
      D(2495), D(9773), D(6593);
      let Ie = (() => {
        class Dt {}
        return (
          (Dt.ɵfac = function (he) {
            return new (he || Dt)();
          }),
          (Dt.ɵmod = s.oAB({ type: Dt })),
          (Dt.ɵinj = s.cJS({ imports: [x.IR] })),
          Dt
        );
      })();
      var Fe = D(3814);
      let ro = (() => {
          class Dt {}
          return (
            (Dt.ɵfac = function (he) {
              return new (he || Dt)();
            }),
            (Dt.ɵmod = s.oAB({ type: Dt })),
            (Dt.ɵinj = s.cJS({ imports: [x.IR] })),
            Dt
          );
        })(),
        Jn = (() => {
          class Dt {
            constructor(he, Xe) {
              (0, C.PM)(Xe) &&
                !he &&
                console.warn(
                  "Warning: Flex Layout loaded on the server without FlexLayoutServerModule",
                );
            }
            static withConfig(he, Xe = []) {
              return {
                ngModule: Dt,
                providers: he.serverLoaded
                  ? [
                      { provide: x.WU, useValue: { ...x.g5, ...he } },
                      { provide: x.Bs, useValue: Xe, multi: !0 },
                      { provide: x.wY, useValue: !0 },
                    ]
                  : [
                      { provide: x.WU, useValue: { ...x.g5, ...he } },
                      { provide: x.Bs, useValue: Xe, multi: !0 },
                    ],
              };
            }
          }
          return (
            (Dt.ɵfac = function (he) {
              return new (he || Dt)(s.LFG(x.wY), s.LFG(s.Lbi));
            }),
            (Dt.ɵmod = s.oAB({ type: Dt })),
            (Dt.ɵinj = s.cJS({ imports: [Fe.ae, Ie, ro, Fe.ae, Ie, ro] })),
            Dt
          );
        })();
    },
    6223: (ui, Zt, D) => {
      D.d(Zt, {
        CE: () => Mr,
        Cf: () => Ve,
        F: () => yn,
        Fj: () => gt,
        JJ: () => Ne,
        JL: () => Ri,
        JU: () => B,
        NI: () => oo,
        On: () => ro,
        Q7: () => Io,
        UX: () => da,
        Zs: () => Ko,
        _Y: () => ss,
        a5: () => fi,
        cw: () => pt,
        kI: () => Re,
        qu: () => Ro,
        sg: () => _o,
        u: () => Fi,
        u5: () => ka,
        wO: () => so,
        wV: () => Dt,
        x0: () => Rr,
      });
      var s = D(5879),
        x = D(6814),
        C = D(9666),
        p = D(9315),
        at = D(7398);
      let lt = (() => {
          class J {
            constructor(z, Et) {
              (this._renderer = z),
                (this._elementRef = Et),
                (this.onChange = (_e) => {}),
                (this.onTouched = () => {});
            }
            setProperty(z, Et) {
              this._renderer.setProperty(this._elementRef.nativeElement, z, Et);
            }
            registerOnTouched(z) {
              this.onTouched = z;
            }
            registerOnChange(z) {
              this.onChange = z;
            }
            setDisabledState(z) {
              this.setProperty("disabled", z);
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)(s.Y36(s.Qsj), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({ type: J }));
          }
          return J;
        })(),
        bt = (() => {
          class J extends lt {
            static #t = (this.ɵfac = (function () {
              let z;
              return function (_e) {
                return (z || (z = s.n5z(J)))(_e || J);
              };
            })());
            static #e = (this.ɵdir = s.lG2({ type: J, features: [s.qOj] }));
          }
          return J;
        })();
      const B = new s.OlP("NgValueAccessor"),
        _ = { provide: B, useExisting: (0, s.Gpc)(() => gt), multi: !0 },
        jt = new s.OlP("CompositionEventMode");
      let gt = (() => {
        class J extends lt {
          constructor(z, Et, _e) {
            super(z, Et),
              (this._compositionMode = _e),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function A() {
                  const J = (0, x.q)() ? (0, x.q)().getUserAgent() : "";
                  return /android (\d+)/.test(J.toLowerCase());
                })());
          }
          writeValue(z) {
            this.setProperty("value", z ?? "");
          }
          _handleInput(z) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(z);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(z) {
            (this._composing = !1), this._compositionMode && this.onChange(z);
          }
          static #t = (this.ɵfac = function (Et) {
            return new (Et || J)(s.Y36(s.Qsj), s.Y36(s.SBq), s.Y36(jt, 8));
          });
          static #e = (this.ɵdir = s.lG2({
            type: J,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (Et, _e) {
              1 & Et &&
                s.NdJ("input", function (hn) {
                  return _e._handleInput(hn.target.value);
                })("blur", function () {
                  return _e.onTouched();
                })("compositionstart", function () {
                  return _e._compositionStart();
                })("compositionend", function (hn) {
                  return _e._compositionEnd(hn.target.value);
                });
            },
            features: [s._Bn([_]), s.qOj],
          }));
        }
        return J;
      })();
      function Jt(J) {
        return (
          null == J ||
          (("string" == typeof J || Array.isArray(J)) && 0 === J.length)
        );
      }
      function De(J) {
        return null != J && "number" == typeof J.length;
      }
      const Ve = new s.OlP("NgValidators"),
        He = new s.OlP("NgAsyncValidators"),
        We =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class Re {
        static min(st) {
          return (function wt(J) {
            return (st) => {
              if (Jt(st.value) || Jt(J)) return null;
              const z = parseFloat(st.value);
              return !isNaN(z) && z < J
                ? { min: { min: J, actual: st.value } }
                : null;
            };
          })(st);
        }
        static max(st) {
          return (function _t(J) {
            return (st) => {
              if (Jt(st.value) || Jt(J)) return null;
              const z = parseFloat(st.value);
              return !isNaN(z) && z > J
                ? { max: { max: J, actual: st.value } }
                : null;
            };
          })(st);
        }
        static required(st) {
          return St(st);
        }
        static requiredTrue(st) {
          return Pt(st);
        }
        static email(st) {
          return (function ee(J) {
            return Jt(J.value) || We.test(J.value) ? null : { email: !0 };
          })(st);
        }
        static minLength(st) {
          return Kt(st);
        }
        static maxLength(st) {
          return (function ze(J) {
            return (st) =>
              De(st.value) && st.value.length > J
                ? {
                    maxlength: {
                      requiredLength: J,
                      actualLength: st.value.length,
                    },
                  }
                : null;
          })(st);
        }
        static pattern(st) {
          return (function mi(J) {
            if (!J) return ie;
            let st, z;
            return (
              "string" == typeof J
                ? ((z = ""),
                  "^" !== J.charAt(0) && (z += "^"),
                  (z += J),
                  "$" !== J.charAt(J.length - 1) && (z += "$"),
                  (st = new RegExp(z)))
                : ((z = J.toString()), (st = J)),
              (Et) => {
                if (Jt(Et.value)) return null;
                const _e = Et.value;
                return st.test(_e)
                  ? null
                  : { pattern: { requiredPattern: z, actualValue: _e } };
              }
            );
          })(st);
        }
        static nullValidator(st) {
          return null;
        }
        static compose(st) {
          return Ie(st);
        }
        static composeAsync(st) {
          return xe(st);
        }
      }
      function St(J) {
        return Jt(J.value) ? { required: !0 } : null;
      }
      function Pt(J) {
        return !0 === J.value ? null : { required: !0 };
      }
      function Kt(J) {
        return (st) =>
          Jt(st.value) || !De(st.value)
            ? null
            : st.value.length < J
              ? {
                  minlength: {
                    requiredLength: J,
                    actualLength: st.value.length,
                  },
                }
              : null;
      }
      function ie(J) {
        return null;
      }
      function vi(J) {
        return null != J;
      }
      function Ge(J) {
        return (0, s.QGY)(J) ? (0, C.D)(J) : J;
      }
      function hi(J) {
        let st = {};
        return (
          J.forEach((z) => {
            st = null != z ? { ...st, ...z } : st;
          }),
          0 === Object.keys(st).length ? null : st
        );
      }
      function Si(J, st) {
        return st.map((z) => z(J));
      }
      function qi(J) {
        return J.map((st) =>
          (function Vi(J) {
            return !J.validate;
          })(st)
            ? st
            : (z) => st.validate(z),
        );
      }
      function Ie(J) {
        if (!J) return null;
        const st = J.filter(vi);
        return 0 == st.length
          ? null
          : function (z) {
              return hi(Si(z, st));
            };
      }
      function Fe(J) {
        return null != J ? Ie(qi(J)) : null;
      }
      function xe(J) {
        if (!J) return null;
        const st = J.filter(vi);
        return 0 == st.length
          ? null
          : function (z) {
              const Et = Si(z, st).map(Ge);
              return (0, p.D)(Et).pipe((0, at.U)(hi));
            };
      }
      function Ue(J) {
        return null != J ? xe(qi(J)) : null;
      }
      function Ft(J, st) {
        return null === J ? [st] : Array.isArray(J) ? [...J, st] : [J, st];
      }
      function Mt(J) {
        return J._rawValidators;
      }
      function we(J) {
        return J._rawAsyncValidators;
      }
      function Vt(J) {
        return J ? (Array.isArray(J) ? J : [J]) : [];
      }
      function re(J, st) {
        return Array.isArray(J) ? J.includes(st) : J === st;
      }
      function Le(J, st) {
        const z = Vt(st);
        return (
          Vt(J).forEach((_e) => {
            re(z, _e) || z.push(_e);
          }),
          z
        );
      }
      function li(J, st) {
        return Vt(st).filter((z) => !re(J, z));
      }
      class ii {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(st) {
          (this._rawValidators = st || []),
            (this._composedValidatorFn = Fe(this._rawValidators));
        }
        _setAsyncValidators(st) {
          (this._rawAsyncValidators = st || []),
            (this._composedAsyncValidatorFn = Ue(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(st) {
          this._onDestroyCallbacks.push(st);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((st) => st()),
            (this._onDestroyCallbacks = []);
        }
        reset(st = void 0) {
          this.control && this.control.reset(st);
        }
        hasError(st, z) {
          return !!this.control && this.control.hasError(st, z);
        }
        getError(st, z) {
          return this.control ? this.control.getError(st, z) : null;
        }
      }
      class Mi extends ii {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class fi extends ii {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class ri {
        constructor(st) {
          this._cd = st;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let Ne = (() => {
          class J extends ri {
            constructor(z) {
              super(z);
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)(s.Y36(fi, 2));
            });
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (Et, _e) {
                2 & Et &&
                  s.ekj("ng-untouched", _e.isUntouched)(
                    "ng-touched",
                    _e.isTouched,
                  )("ng-pristine", _e.isPristine)("ng-dirty", _e.isDirty)(
                    "ng-valid",
                    _e.isValid,
                  )("ng-invalid", _e.isInvalid)("ng-pending", _e.isPending);
              },
              features: [s.qOj],
            }));
          }
          return J;
        })(),
        Ri = (() => {
          class J extends ri {
            constructor(z) {
              super(z);
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)(s.Y36(Mi, 10));
            });
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (Et, _e) {
                2 & Et &&
                  s.ekj("ng-untouched", _e.isUntouched)(
                    "ng-touched",
                    _e.isTouched,
                  )("ng-pristine", _e.isPristine)("ng-dirty", _e.isDirty)(
                    "ng-valid",
                    _e.isValid,
                  )("ng-invalid", _e.isInvalid)("ng-pending", _e.isPending)(
                    "ng-submitted",
                    _e.isSubmitted,
                  );
              },
              features: [s.qOj],
            }));
          }
          return J;
        })();
      const it = "VALID",
        Ut = "INVALID",
        ve = "PENDING",
        qe = "DISABLED";
      function ki(J) {
        return ($t(J) ? J.validators : J) || null;
      }
      function ae(J, st) {
        return ($t(st) ? st.asyncValidators : J) || null;
      }
      function $t(J) {
        return null != J && !Array.isArray(J) && "object" == typeof J;
      }
      function fe(J, st, z) {
        const Et = J.controls;
        if (!(st ? Object.keys(Et) : Et).length) throw new s.vHH(1e3, "");
        if (!Et[z]) throw new s.vHH(1001, "");
      }
      function ke(J, st, z) {
        J._forEachChild((Et, _e) => {
          if (void 0 === z[_e]) throw new s.vHH(1002, "");
        });
      }
      class yi {
        constructor(st, z) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(st),
            this._assignAsyncValidators(z);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(st) {
          this._rawValidators = this._composedValidatorFn = st;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(st) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = st;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === it;
        }
        get invalid() {
          return this.status === Ut;
        }
        get pending() {
          return this.status == ve;
        }
        get disabled() {
          return this.status === qe;
        }
        get enabled() {
          return this.status !== qe;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
              ? this.parent.updateOn
              : "change";
        }
        setValidators(st) {
          this._assignValidators(st);
        }
        setAsyncValidators(st) {
          this._assignAsyncValidators(st);
        }
        addValidators(st) {
          this.setValidators(Le(st, this._rawValidators));
        }
        addAsyncValidators(st) {
          this.setAsyncValidators(Le(st, this._rawAsyncValidators));
        }
        removeValidators(st) {
          this.setValidators(li(st, this._rawValidators));
        }
        removeAsyncValidators(st) {
          this.setAsyncValidators(li(st, this._rawAsyncValidators));
        }
        hasValidator(st) {
          return re(this._rawValidators, st);
        }
        hasAsyncValidator(st) {
          return re(this._rawAsyncValidators, st);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(st = {}) {
          (this.touched = !0),
            this._parent && !st.onlySelf && this._parent.markAsTouched(st);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((st) => st.markAllAsTouched());
        }
        markAsUntouched(st = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((z) => {
              z.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !st.onlySelf && this._parent._updateTouched(st);
        }
        markAsDirty(st = {}) {
          (this.pristine = !1),
            this._parent && !st.onlySelf && this._parent.markAsDirty(st);
        }
        markAsPristine(st = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((z) => {
              z.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !st.onlySelf && this._parent._updatePristine(st);
        }
        markAsPending(st = {}) {
          (this.status = ve),
            !1 !== st.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !st.onlySelf && this._parent.markAsPending(st);
        }
        disable(st = {}) {
          const z = this._parentMarkedDirty(st.onlySelf);
          (this.status = qe),
            (this.errors = null),
            this._forEachChild((Et) => {
              Et.disable({ ...st, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== st.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...st, skipPristineCheck: z }),
            this._onDisabledChange.forEach((Et) => Et(!0));
        }
        enable(st = {}) {
          const z = this._parentMarkedDirty(st.onlySelf);
          (this.status = it),
            this._forEachChild((Et) => {
              Et.enable({ ...st, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: st.emitEvent,
            }),
            this._updateAncestors({ ...st, skipPristineCheck: z }),
            this._onDisabledChange.forEach((Et) => Et(!1));
        }
        _updateAncestors(st) {
          this._parent &&
            !st.onlySelf &&
            (this._parent.updateValueAndValidity(st),
            st.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(st) {
          this._parent = st;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(st = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === it || this.status === ve) &&
                this._runAsyncValidator(st.emitEvent)),
            !1 !== st.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !st.onlySelf &&
              this._parent.updateValueAndValidity(st);
        }
        _updateTreeValidity(st = { emitEvent: !0 }) {
          this._forEachChild((z) => z._updateTreeValidity(st)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: st.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? qe : it;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(st) {
          if (this.asyncValidator) {
            (this.status = ve), (this._hasOwnPendingAsyncValidator = !0);
            const z = Ge(this.asyncValidator(this));
            this._asyncValidationSubscription = z.subscribe((Et) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(Et, { emitEvent: st });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(st, z = {}) {
          (this.errors = st), this._updateControlsErrors(!1 !== z.emitEvent);
        }
        get(st) {
          let z = st;
          return null == z ||
            (Array.isArray(z) || (z = z.split(".")), 0 === z.length)
            ? null
            : z.reduce((Et, _e) => Et && Et._find(_e), this);
        }
        getError(st, z) {
          const Et = z ? this.get(z) : this;
          return Et && Et.errors ? Et.errors[st] : null;
        }
        hasError(st, z) {
          return !!this.getError(st, z);
        }
        get root() {
          let st = this;
          for (; st._parent; ) st = st._parent;
          return st;
        }
        _updateControlsErrors(st) {
          (this.status = this._calculateStatus()),
            st && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(st);
        }
        _initObservables() {
          (this.valueChanges = new s.vpe()), (this.statusChanges = new s.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? qe
            : this.errors
              ? Ut
              : this._hasOwnPendingAsyncValidator ||
                  this._anyControlsHaveStatus(ve)
                ? ve
                : this._anyControlsHaveStatus(Ut)
                  ? Ut
                  : it;
        }
        _anyControlsHaveStatus(st) {
          return this._anyControls((z) => z.status === st);
        }
        _anyControlsDirty() {
          return this._anyControls((st) => st.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((st) => st.touched);
        }
        _updatePristine(st = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !st.onlySelf && this._parent._updatePristine(st);
        }
        _updateTouched(st = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !st.onlySelf && this._parent._updateTouched(st);
        }
        _registerOnCollectionChange(st) {
          this._onCollectionChange = st;
        }
        _setUpdateStrategy(st) {
          $t(st) && null != st.updateOn && (this._updateOn = st.updateOn);
        }
        _parentMarkedDirty(st) {
          return (
            !st &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(st) {
          return null;
        }
        _assignValidators(st) {
          (this._rawValidators = Array.isArray(st) ? st.slice() : st),
            (this._composedValidatorFn = (function Xt(J) {
              return Array.isArray(J) ? Fe(J) : J || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(st) {
          (this._rawAsyncValidators = Array.isArray(st) ? st.slice() : st),
            (this._composedAsyncValidatorFn = (function ye(J) {
              return Array.isArray(J) ? Ue(J) : J || null;
            })(this._rawAsyncValidators));
        }
      }
      class pt extends yi {
        constructor(st, z, Et) {
          super(ki(z), ae(Et, z)),
            (this.controls = st),
            this._initObservables(),
            this._setUpdateStrategy(z),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(st, z) {
          return this.controls[st]
            ? this.controls[st]
            : ((this.controls[st] = z),
              z.setParent(this),
              z._registerOnCollectionChange(this._onCollectionChange),
              z);
        }
        addControl(st, z, Et = {}) {
          this.registerControl(st, z),
            this.updateValueAndValidity({ emitEvent: Et.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(st, z = {}) {
          this.controls[st] &&
            this.controls[st]._registerOnCollectionChange(() => {}),
            delete this.controls[st],
            this.updateValueAndValidity({ emitEvent: z.emitEvent }),
            this._onCollectionChange();
        }
        setControl(st, z, Et = {}) {
          this.controls[st] &&
            this.controls[st]._registerOnCollectionChange(() => {}),
            delete this.controls[st],
            z && this.registerControl(st, z),
            this.updateValueAndValidity({ emitEvent: Et.emitEvent }),
            this._onCollectionChange();
        }
        contains(st) {
          return this.controls.hasOwnProperty(st) && this.controls[st].enabled;
        }
        setValue(st, z = {}) {
          ke(this, 0, st),
            Object.keys(st).forEach((Et) => {
              fe(this, !0, Et),
                this.controls[Et].setValue(st[Et], {
                  onlySelf: !0,
                  emitEvent: z.emitEvent,
                });
            }),
            this.updateValueAndValidity(z);
        }
        patchValue(st, z = {}) {
          null != st &&
            (Object.keys(st).forEach((Et) => {
              const _e = this.controls[Et];
              _e &&
                _e.patchValue(st[Et], { onlySelf: !0, emitEvent: z.emitEvent });
            }),
            this.updateValueAndValidity(z));
        }
        reset(st = {}, z = {}) {
          this._forEachChild((Et, _e) => {
            Et.reset(st ? st[_e] : null, {
              onlySelf: !0,
              emitEvent: z.emitEvent,
            });
          }),
            this._updatePristine(z),
            this._updateTouched(z),
            this.updateValueAndValidity(z);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (st, z, Et) => ((st[Et] = z.getRawValue()), st),
          );
        }
        _syncPendingControls() {
          let st = this._reduceChildren(
            !1,
            (z, Et) => !!Et._syncPendingControls() || z,
          );
          return st && this.updateValueAndValidity({ onlySelf: !0 }), st;
        }
        _forEachChild(st) {
          Object.keys(this.controls).forEach((z) => {
            const Et = this.controls[z];
            Et && st(Et, z);
          });
        }
        _setUpControls() {
          this._forEachChild((st) => {
            st.setParent(this),
              st._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(st) {
          for (const [z, Et] of Object.entries(this.controls))
            if (this.contains(z) && st(Et)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (z, Et, _e) => (
              (Et.enabled || this.disabled) && (z[_e] = Et.value), z
            ),
          );
        }
        _reduceChildren(st, z) {
          let Et = st;
          return (
            this._forEachChild((_e, Zi) => {
              Et = z(Et, _e, Zi);
            }),
            Et
          );
        }
        _allControlsDisabled() {
          for (const st of Object.keys(this.controls))
            if (this.controls[st].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(st) {
          return this.controls.hasOwnProperty(st) ? this.controls[st] : null;
        }
      }
      class j extends pt {}
      const ue = new s.OlP("CallSetDisabledState", {
          providedIn: "root",
          factory: () => Wt,
        }),
        Wt = "always";
      function le(J, st) {
        return [...st.path, J];
      }
      function It(J, st, z = Wt) {
        pe(J, st),
          st.valueAccessor.writeValue(J.value),
          (J.disabled || "always" === z) &&
            st.valueAccessor.setDisabledState?.(J.disabled),
          (function tt(J, st) {
            st.valueAccessor.registerOnChange((z) => {
              (J._pendingValue = z),
                (J._pendingChange = !0),
                (J._pendingDirty = !0),
                "change" === J.updateOn && Bt(J, st);
            });
          })(J, st),
          (function Te(J, st) {
            const z = (Et, _e) => {
              st.valueAccessor.writeValue(Et), _e && st.viewToModelUpdate(Et);
            };
            J.registerOnChange(z),
              st._registerOnDestroy(() => {
                J._unregisterOnChange(z);
              });
          })(J, st),
          (function me(J, st) {
            st.valueAccessor.registerOnTouched(() => {
              (J._pendingTouched = !0),
                "blur" === J.updateOn && J._pendingChange && Bt(J, st),
                "submit" !== J.updateOn && J.markAsTouched();
            });
          })(J, st),
          (function oi(J, st) {
            if (st.valueAccessor.setDisabledState) {
              const z = (Et) => {
                st.valueAccessor.setDisabledState(Et);
              };
              J.registerOnDisabledChange(z),
                st._registerOnDestroy(() => {
                  J._unregisterOnDisabledChange(z);
                });
            }
          })(J, st);
      }
      function Yt(J, st, z = !0) {
        const Et = () => {};
        st.valueAccessor &&
          (st.valueAccessor.registerOnChange(Et),
          st.valueAccessor.registerOnTouched(Et)),
          ne(J, st),
          J &&
            (st._invokeOnDestroyCallbacks(),
            J._registerOnCollectionChange(() => {}));
      }
      function Ae(J, st) {
        J.forEach((z) => {
          z.registerOnValidatorChange && z.registerOnValidatorChange(st);
        });
      }
      function pe(J, st) {
        const z = Mt(J);
        null !== st.validator
          ? J.setValidators(Ft(z, st.validator))
          : "function" == typeof z && J.setValidators([z]);
        const Et = we(J);
        null !== st.asyncValidator
          ? J.setAsyncValidators(Ft(Et, st.asyncValidator))
          : "function" == typeof Et && J.setAsyncValidators([Et]);
        const _e = () => J.updateValueAndValidity();
        Ae(st._rawValidators, _e), Ae(st._rawAsyncValidators, _e);
      }
      function ne(J, st) {
        let z = !1;
        if (null !== J) {
          if (null !== st.validator) {
            const _e = Mt(J);
            if (Array.isArray(_e) && _e.length > 0) {
              const Zi = _e.filter((hn) => hn !== st.validator);
              Zi.length !== _e.length && ((z = !0), J.setValidators(Zi));
            }
          }
          if (null !== st.asyncValidator) {
            const _e = we(J);
            if (Array.isArray(_e) && _e.length > 0) {
              const Zi = _e.filter((hn) => hn !== st.asyncValidator);
              Zi.length !== _e.length && ((z = !0), J.setAsyncValidators(Zi));
            }
          }
        }
        const Et = () => {};
        return Ae(st._rawValidators, Et), Ae(st._rawAsyncValidators, Et), z;
      }
      function Bt(J, st) {
        J._pendingDirty && J.markAsDirty(),
          J.setValue(J._pendingValue, { emitModelToViewChange: !1 }),
          st.viewToModelUpdate(J._pendingValue),
          (J._pendingChange = !1);
      }
      function Je(J, st) {
        pe(J, st);
      }
      function Ei(J, st) {
        if (!J.hasOwnProperty("model")) return !1;
        const z = J.model;
        return !!z.isFirstChange() || !Object.is(st, z.currentValue);
      }
      function Yi(J, st) {
        J._syncPendingControls(),
          st.forEach((z) => {
            const Et = z.control;
            "submit" === Et.updateOn &&
              Et._pendingChange &&
              (z.viewToModelUpdate(Et._pendingValue), (Et._pendingChange = !1));
          });
      }
      function ln(J, st) {
        if (!st) return null;
        let z, Et, _e;
        return (
          Array.isArray(st),
          st.forEach((Zi) => {
            Zi.constructor === gt
              ? (z = Zi)
              : (function Hi(J) {
                    return Object.getPrototypeOf(J.constructor) === bt;
                  })(Zi)
                ? (Et = Zi)
                : (_e = Zi);
          }),
          _e || Et || z || null
        );
      }
      const pn = { provide: Mi, useExisting: (0, s.Gpc)(() => yn) },
        An = (() => Promise.resolve())();
      let yn = (() => {
        class J extends Mi {
          constructor(z, Et, _e) {
            super(),
              (this.callSetDisabledState = _e),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new s.vpe()),
              (this.form = new pt({}, Fe(z), Ue(Et)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(z) {
            An.then(() => {
              const Et = this._findContainer(z.path);
              (z.control = Et.registerControl(z.name, z.control)),
                It(z.control, z, this.callSetDisabledState),
                z.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(z);
            });
          }
          getControl(z) {
            return this.form.get(z.path);
          }
          removeControl(z) {
            An.then(() => {
              const Et = this._findContainer(z.path);
              Et && Et.removeControl(z.name), this._directives.delete(z);
            });
          }
          addFormGroup(z) {
            An.then(() => {
              const Et = this._findContainer(z.path),
                _e = new pt({});
              Je(_e, z),
                Et.registerControl(z.name, _e),
                _e.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(z) {
            An.then(() => {
              const Et = this._findContainer(z.path);
              Et && Et.removeControl(z.name);
            });
          }
          getFormGroup(z) {
            return this.form.get(z.path);
          }
          updateModel(z, Et) {
            An.then(() => {
              this.form.get(z.path).setValue(Et);
            });
          }
          setValue(z) {
            this.control.setValue(z);
          }
          onSubmit(z) {
            return (
              (this.submitted = !0),
              Yi(this.form, this._directives),
              this.ngSubmit.emit(z),
              "dialog" === z?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(z = void 0) {
            this.form.reset(z), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(z) {
            return z.pop(), z.length ? this.form.get(z) : this.form;
          }
          static #t = (this.ɵfac = function (Et) {
            return new (Et || J)(s.Y36(Ve, 10), s.Y36(He, 10), s.Y36(ue, 8));
          });
          static #e = (this.ɵdir = s.lG2({
            type: J,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (Et, _e) {
              1 & Et &&
                s.NdJ("submit", function (hn) {
                  return _e.onSubmit(hn);
                })("reset", function () {
                  return _e.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [s._Bn([pn]), s.qOj],
          }));
        }
        return J;
      })();
      function uo(J, st) {
        const z = J.indexOf(st);
        z > -1 && J.splice(z, 1);
      }
      function Tn(J) {
        return (
          "object" == typeof J &&
          null !== J &&
          2 === Object.keys(J).length &&
          "value" in J &&
          "disabled" in J
        );
      }
      const oo = class extends yi {
        constructor(st = null, z, Et) {
          super(ki(z), ae(Et, z)),
            (this.defaultValue = null),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(st),
            this._setUpdateStrategy(z),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            }),
            $t(z) &&
              (z.nonNullable || z.initialValueIsDefault) &&
              (this.defaultValue = Tn(st) ? st.value : st);
        }
        setValue(st, z = {}) {
          (this.value = this._pendingValue = st),
            this._onChange.length &&
              !1 !== z.emitModelToViewChange &&
              this._onChange.forEach((Et) =>
                Et(this.value, !1 !== z.emitViewToModelChange),
              ),
            this.updateValueAndValidity(z);
        }
        patchValue(st, z = {}) {
          this.setValue(st, z);
        }
        reset(st = this.defaultValue, z = {}) {
          this._applyFormState(st),
            this.markAsPristine(z),
            this.markAsUntouched(z),
            this.setValue(this.value, z),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(st) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(st) {
          this._onChange.push(st);
        }
        _unregisterOnChange(st) {
          uo(this._onChange, st);
        }
        registerOnDisabledChange(st) {
          this._onDisabledChange.push(st);
        }
        _unregisterOnDisabledChange(st) {
          uo(this._onDisabledChange, st);
        }
        _forEachChild(st) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(st) {
          Tn(st)
            ? ((this.value = this._pendingValue = st.value),
              st.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = st);
        }
      };
      let Kn = (() => {
        class J extends Mi {
          ngOnInit() {
            this._checkParentType(), this.formDirective.addFormGroup(this);
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeFormGroup(this);
          }
          get control() {
            return this.formDirective.getFormGroup(this);
          }
          get path() {
            return le(
              null == this.name ? this.name : this.name.toString(),
              this._parent,
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          static #t = (this.ɵfac = (function () {
            let z;
            return function (_e) {
              return (z || (z = s.n5z(J)))(_e || J);
            };
          })());
          static #e = (this.ɵdir = s.lG2({ type: J, features: [s.qOj] }));
        }
        return J;
      })();
      const Zr = { provide: fi, useExisting: (0, s.Gpc)(() => ro) },
        _s = (() => Promise.resolve())();
      let ro = (() => {
          class J extends fi {
            constructor(z, Et, _e, Zi, hn, Po) {
              super(),
                (this._changeDetectorRef = hn),
                (this.callSetDisabledState = Po),
                (this.control = new oo()),
                (this._registered = !1),
                (this.name = ""),
                (this.update = new s.vpe()),
                (this._parent = z),
                this._setValidators(Et),
                this._setAsyncValidators(_e),
                (this.valueAccessor = ln(0, Zi));
            }
            ngOnChanges(z) {
              if ((this._checkForErrors(), !this._registered || "name" in z)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const Et = z.name.previousValue;
                  this.formDirective.removeControl({
                    name: Et,
                    path: this._getPath(Et),
                  });
                }
                this._setUpControl();
              }
              "isDisabled" in z && this._updateDisabled(z),
                Ei(z, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(z) {
              (this.viewModel = z), this.update.emit(z);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              It(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(z) {
              _s.then(() => {
                this.control.setValue(z, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(z) {
              const Et = z.isDisabled.currentValue,
                _e = 0 !== Et && (0, s.VuI)(Et);
              _s.then(() => {
                _e && !this.control.disabled
                  ? this.control.disable()
                  : !_e && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(z) {
              return this._parent ? le(z, this._parent) : [z];
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)(
                s.Y36(Mi, 9),
                s.Y36(Ve, 10),
                s.Y36(He, 10),
                s.Y36(B, 10),
                s.Y36(s.sBO, 8),
                s.Y36(ue, 8),
              );
            });
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                [
                  "",
                  "ngModel",
                  "",
                  3,
                  "formControlName",
                  "",
                  3,
                  "formControl",
                  "",
                ],
              ],
              inputs: {
                name: "name",
                isDisabled: ["disabled", "isDisabled"],
                model: ["ngModel", "model"],
                options: ["ngModelOptions", "options"],
              },
              outputs: { update: "ngModelChange" },
              exportAs: ["ngModel"],
              features: [s._Bn([Zr]), s.qOj, s.TTD],
            }));
          }
          return J;
        })(),
        ss = (() => {
          class J {
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            }));
          }
          return J;
        })();
      const Jn = { provide: B, useExisting: (0, s.Gpc)(() => Dt), multi: !0 };
      let Dt = (() => {
          class J extends bt {
            writeValue(z) {
              this.setProperty("value", z ?? "");
            }
            registerOnChange(z) {
              this.onChange = (Et) => {
                z("" == Et ? null : parseFloat(Et));
              };
            }
            static #t = (this.ɵfac = (function () {
              let z;
              return function (_e) {
                return (z || (z = s.n5z(J)))(_e || J);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                ["input", "type", "number", "formControlName", ""],
                ["input", "type", "number", "formControl", ""],
                ["input", "type", "number", "ngModel", ""],
              ],
              hostBindings: function (Et, _e) {
                1 & Et &&
                  s.NdJ("input", function (hn) {
                    return _e.onChange(hn.target.value);
                  })("blur", function () {
                    return _e.onTouched();
                  });
              },
              features: [s._Bn([Jn]), s.qOj],
            }));
          }
          return J;
        })(),
        Xe = (() => {
          class J {
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)();
            });
            static #e = (this.ɵmod = s.oAB({ type: J }));
            static #i = (this.ɵinj = s.cJS({}));
          }
          return J;
        })();
      const on = new s.OlP("NgModelWithFormControlWarning"),
        nr = { provide: Mi, useExisting: (0, s.Gpc)(() => _o) };
      let _o = (() => {
        class J extends Mi {
          constructor(z, Et, _e) {
            super(),
              (this.callSetDisabledState = _e),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new s.vpe()),
              this._setValidators(z),
              this._setAsyncValidators(Et);
          }
          ngOnChanges(z) {
            this._checkFormPresent(),
              z.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (ne(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(z) {
            const Et = this.form.get(z.path);
            return (
              It(Et, z, this.callSetDisabledState),
              Et.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(z),
              Et
            );
          }
          getControl(z) {
            return this.form.get(z.path);
          }
          removeControl(z) {
            Yt(z.control || null, z, !1),
              (function bn(J, st) {
                const z = J.indexOf(st);
                z > -1 && J.splice(z, 1);
              })(this.directives, z);
          }
          addFormGroup(z) {
            this._setUpFormContainer(z);
          }
          removeFormGroup(z) {
            this._cleanUpFormContainer(z);
          }
          getFormGroup(z) {
            return this.form.get(z.path);
          }
          addFormArray(z) {
            this._setUpFormContainer(z);
          }
          removeFormArray(z) {
            this._cleanUpFormContainer(z);
          }
          getFormArray(z) {
            return this.form.get(z.path);
          }
          updateModel(z, Et) {
            this.form.get(z.path).setValue(Et);
          }
          onSubmit(z) {
            return (
              (this.submitted = !0),
              Yi(this.form, this.directives),
              this.ngSubmit.emit(z),
              "dialog" === z?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(z = void 0) {
            this.form.reset(z), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((z) => {
              const Et = z.control,
                _e = this.form.get(z.path);
              Et !== _e &&
                (Yt(Et || null, z),
                ((J) => J instanceof oo)(_e) &&
                  (It(_e, z, this.callSetDisabledState), (z.control = _e)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(z) {
            const Et = this.form.get(z.path);
            Je(Et, z), Et.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(z) {
            if (this.form) {
              const Et = this.form.get(z.path);
              Et &&
                (function Ot(J, st) {
                  return ne(J, st);
                })(Et, z) &&
                Et.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            pe(this.form, this), this._oldForm && ne(this._oldForm, this);
          }
          _checkFormPresent() {}
          static #t = (this.ɵfac = function (Et) {
            return new (Et || J)(s.Y36(Ve, 10), s.Y36(He, 10), s.Y36(ue, 8));
          });
          static #e = (this.ɵdir = s.lG2({
            type: J,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (Et, _e) {
              1 & Et &&
                s.NdJ("submit", function (hn) {
                  return _e.onSubmit(hn);
                })("reset", function () {
                  return _e.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [s._Bn([nr]), s.qOj, s.TTD],
          }));
        }
        return J;
      })();
      const Oo = { provide: Mi, useExisting: (0, s.Gpc)(() => Rr) };
      let Rr = (() => {
        class J extends Kn {
          constructor(z, Et, _e) {
            super(),
              (this.name = null),
              (this._parent = z),
              this._setValidators(Et),
              this._setAsyncValidators(_e);
          }
          _checkParentType() {
            Vo(this._parent);
          }
          static #t = (this.ɵfac = function (Et) {
            return new (Et || J)(s.Y36(Mi, 13), s.Y36(Ve, 10), s.Y36(He, 10));
          });
          static #e = (this.ɵdir = s.lG2({
            type: J,
            selectors: [["", "formGroupName", ""]],
            inputs: { name: ["formGroupName", "name"] },
            features: [s._Bn([Oo]), s.qOj],
          }));
        }
        return J;
      })();
      const Pr = { provide: Mi, useExisting: (0, s.Gpc)(() => Mr) };
      let Mr = (() => {
        class J extends Mi {
          constructor(z, Et, _e) {
            super(),
              (this.name = null),
              (this._parent = z),
              this._setValidators(Et),
              this._setAsyncValidators(_e);
          }
          ngOnInit() {
            this._checkParentType(), this.formDirective.addFormArray(this);
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeFormArray(this);
          }
          get control() {
            return this.formDirective.getFormArray(this);
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          get path() {
            return le(
              null == this.name ? this.name : this.name.toString(),
              this._parent,
            );
          }
          _checkParentType() {
            Vo(this._parent);
          }
          static #t = (this.ɵfac = function (Et) {
            return new (Et || J)(s.Y36(Mi, 13), s.Y36(Ve, 10), s.Y36(He, 10));
          });
          static #e = (this.ɵdir = s.lG2({
            type: J,
            selectors: [["", "formArrayName", ""]],
            inputs: { name: ["formArrayName", "name"] },
            features: [s._Bn([Pr]), s.qOj],
          }));
        }
        return J;
      })();
      function Vo(J) {
        return !(J instanceof Rr || J instanceof _o || J instanceof Mr);
      }
      const On = { provide: fi, useExisting: (0, s.Gpc)(() => Fi) };
      let Fi = (() => {
        class J extends fi {
          set isDisabled(z) {}
          static #t = (this._ngModelWarningSentOnce = !1);
          constructor(z, Et, _e, Zi, hn) {
            super(),
              (this._ngModelWarningConfig = hn),
              (this._added = !1),
              (this.name = null),
              (this.update = new s.vpe()),
              (this._ngModelWarningSent = !1),
              (this._parent = z),
              this._setValidators(Et),
              this._setAsyncValidators(_e),
              (this.valueAccessor = ln(0, Zi));
          }
          ngOnChanges(z) {
            this._added || this._setUpControl(),
              Ei(z, this.viewModel) &&
                ((this.viewModel = this.model),
                this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(z) {
            (this.viewModel = z), this.update.emit(z);
          }
          get path() {
            return le(
              null == this.name ? this.name : this.name.toString(),
              this._parent,
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              (this._added = !0);
          }
          static #e = (this.ɵfac = function (Et) {
            return new (Et || J)(
              s.Y36(Mi, 13),
              s.Y36(Ve, 10),
              s.Y36(He, 10),
              s.Y36(B, 10),
              s.Y36(on, 8),
            );
          });
          static #i = (this.ɵdir = s.lG2({
            type: J,
            selectors: [["", "formControlName", ""]],
            inputs: {
              name: ["formControlName", "name"],
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            features: [s._Bn([On]), s.qOj, s.TTD],
          }));
        }
        return J;
      })();
      let xn = (() => {
        class J {
          constructor() {
            this._validator = ie;
          }
          ngOnChanges(z) {
            if (this.inputName in z) {
              const Et = this.normalizeInput(z[this.inputName].currentValue);
              (this._enabled = this.enabled(Et)),
                (this._validator = this._enabled
                  ? this.createValidator(Et)
                  : ie),
                this._onChange && this._onChange();
            }
          }
          validate(z) {
            return this._validator(z);
          }
          registerOnValidatorChange(z) {
            this._onChange = z;
          }
          enabled(z) {
            return null != z;
          }
          static #t = (this.ɵfac = function (Et) {
            return new (Et || J)();
          });
          static #e = (this.ɵdir = s.lG2({ type: J, features: [s.TTD] }));
        }
        return J;
      })();
      const or = { provide: Ve, useExisting: (0, s.Gpc)(() => Io), multi: !0 },
        Qo = { provide: Ve, useExisting: (0, s.Gpc)(() => Ko), multi: !0 };
      let Io = (() => {
          class J extends xn {
            constructor() {
              super(...arguments),
                (this.inputName = "required"),
                (this.normalizeInput = s.VuI),
                (this.createValidator = (z) => St);
            }
            enabled(z) {
              return z;
            }
            static #t = (this.ɵfac = (function () {
              let z;
              return function (_e) {
                return (z || (z = s.n5z(J)))(_e || J);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                [
                  "",
                  "required",
                  "",
                  "formControlName",
                  "",
                  3,
                  "type",
                  "checkbox",
                ],
                ["", "required", "", "formControl", "", 3, "type", "checkbox"],
                ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
              ],
              hostVars: 1,
              hostBindings: function (Et, _e) {
                2 & Et && s.uIk("required", _e._enabled ? "" : null);
              },
              inputs: { required: "required" },
              features: [s._Bn([or]), s.qOj],
            }));
          }
          return J;
        })(),
        Ko = (() => {
          class J extends Io {
            constructor() {
              super(...arguments), (this.createValidator = (z) => Pt);
            }
            static #t = (this.ɵfac = (function () {
              let z;
              return function (_e) {
                return (z || (z = s.n5z(J)))(_e || J);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                [
                  "input",
                  "type",
                  "checkbox",
                  "required",
                  "",
                  "formControlName",
                  "",
                ],
                [
                  "input",
                  "type",
                  "checkbox",
                  "required",
                  "",
                  "formControl",
                  "",
                ],
                ["input", "type", "checkbox", "required", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (Et, _e) {
                2 & Et && s.uIk("required", _e._enabled ? "" : null);
              },
              features: [s._Bn([Qo]), s.qOj],
            }));
          }
          return J;
        })();
      const Aa = { provide: Ve, useExisting: (0, s.Gpc)(() => so), multi: !0 };
      let so = (() => {
          class J extends xn {
            constructor() {
              super(...arguments),
                (this.inputName = "minlength"),
                (this.normalizeInput = (z) =>
                  (function Zo(J) {
                    return "number" == typeof J ? J : parseInt(J, 10);
                  })(z)),
                (this.createValidator = (z) => Kt(z));
            }
            static #t = (this.ɵfac = (function () {
              let z;
              return function (_e) {
                return (z || (z = s.n5z(J)))(_e || J);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: J,
              selectors: [
                ["", "minlength", "", "formControlName", ""],
                ["", "minlength", "", "formControl", ""],
                ["", "minlength", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (Et, _e) {
                2 & Et && s.uIk("minlength", _e._enabled ? _e.minlength : null);
              },
              inputs: { minlength: "minlength" },
              features: [s._Bn([Aa]), s.qOj],
            }));
          }
          return J;
        })(),
        to = (() => {
          class J {
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)();
            });
            static #e = (this.ɵmod = s.oAB({ type: J }));
            static #i = (this.ɵinj = s.cJS({ imports: [Xe] }));
          }
          return J;
        })();
      class Eo extends yi {
        constructor(st, z, Et) {
          super(ki(z), ae(Et, z)),
            (this.controls = st),
            this._initObservables(),
            this._setUpdateStrategy(z),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(st) {
          return this.controls[this._adjustIndex(st)];
        }
        push(st, z = {}) {
          this.controls.push(st),
            this._registerControl(st),
            this.updateValueAndValidity({ emitEvent: z.emitEvent }),
            this._onCollectionChange();
        }
        insert(st, z, Et = {}) {
          this.controls.splice(st, 0, z),
            this._registerControl(z),
            this.updateValueAndValidity({ emitEvent: Et.emitEvent });
        }
        removeAt(st, z = {}) {
          let Et = this._adjustIndex(st);
          Et < 0 && (Et = 0),
            this.controls[Et] &&
              this.controls[Et]._registerOnCollectionChange(() => {}),
            this.controls.splice(Et, 1),
            this.updateValueAndValidity({ emitEvent: z.emitEvent });
        }
        setControl(st, z, Et = {}) {
          let _e = this._adjustIndex(st);
          _e < 0 && (_e = 0),
            this.controls[_e] &&
              this.controls[_e]._registerOnCollectionChange(() => {}),
            this.controls.splice(_e, 1),
            z && (this.controls.splice(_e, 0, z), this._registerControl(z)),
            this.updateValueAndValidity({ emitEvent: Et.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(st, z = {}) {
          ke(this, 0, st),
            st.forEach((Et, _e) => {
              fe(this, !1, _e),
                this.at(_e).setValue(Et, {
                  onlySelf: !0,
                  emitEvent: z.emitEvent,
                });
            }),
            this.updateValueAndValidity(z);
        }
        patchValue(st, z = {}) {
          null != st &&
            (st.forEach((Et, _e) => {
              this.at(_e) &&
                this.at(_e).patchValue(Et, {
                  onlySelf: !0,
                  emitEvent: z.emitEvent,
                });
            }),
            this.updateValueAndValidity(z));
        }
        reset(st = [], z = {}) {
          this._forEachChild((Et, _e) => {
            Et.reset(st[_e], { onlySelf: !0, emitEvent: z.emitEvent });
          }),
            this._updatePristine(z),
            this._updateTouched(z),
            this.updateValueAndValidity(z);
        }
        getRawValue() {
          return this.controls.map((st) => st.getRawValue());
        }
        clear(st = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((z) => z._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: st.emitEvent }));
        }
        _adjustIndex(st) {
          return st < 0 ? st + this.length : st;
        }
        _syncPendingControls() {
          let st = this.controls.reduce(
            (z, Et) => !!Et._syncPendingControls() || z,
            !1,
          );
          return st && this.updateValueAndValidity({ onlySelf: !0 }), st;
        }
        _forEachChild(st) {
          this.controls.forEach((z, Et) => {
            st(z, Et);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((st) => st.enabled || this.disabled)
            .map((st) => st.value);
        }
        _anyControls(st) {
          return this.controls.some((z) => z.enabled && st(z));
        }
        _setUpControls() {
          this._forEachChild((st) => this._registerControl(st));
        }
        _allControlsDisabled() {
          for (const st of this.controls) if (st.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(st) {
          st.setParent(this),
            st._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(st) {
          return this.at(st) ?? null;
        }
      }
      function sr(J) {
        return (
          !!J &&
          (void 0 !== J.asyncValidators ||
            void 0 !== J.validators ||
            void 0 !== J.updateOn)
        );
      }
      let Ro = (() => {
          class J {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const z = new J();
              return (z.useNonNullable = !0), z;
            }
            group(z, Et = null) {
              const _e = this._reduceControls(z);
              let Zi = {};
              return (
                sr(Et)
                  ? (Zi = Et)
                  : null !== Et &&
                    ((Zi.validators = Et.validator),
                    (Zi.asyncValidators = Et.asyncValidator)),
                new pt(_e, Zi)
              );
            }
            record(z, Et = null) {
              const _e = this._reduceControls(z);
              return new j(_e, Et);
            }
            control(z, Et, _e) {
              let Zi = {};
              return this.useNonNullable
                ? (sr(Et)
                    ? (Zi = Et)
                    : ((Zi.validators = Et), (Zi.asyncValidators = _e)),
                  new oo(z, { ...Zi, nonNullable: !0 }))
                : new oo(z, Et, _e);
            }
            array(z, Et, _e) {
              const Zi = z.map((hn) => this._createControl(hn));
              return new Eo(Zi, Et, _e);
            }
            _reduceControls(z) {
              const Et = {};
              return (
                Object.keys(z).forEach((_e) => {
                  Et[_e] = this._createControl(z[_e]);
                }),
                Et
              );
            }
            _createControl(z) {
              return z instanceof oo || z instanceof yi
                ? z
                : Array.isArray(z)
                  ? this.control(
                      z[0],
                      z.length > 1 ? z[1] : null,
                      z.length > 2 ? z[2] : null,
                    )
                  : this.control(z);
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)();
            });
            static #e = (this.ɵprov = s.Yz7({
              token: J,
              factory: J.ɵfac,
              providedIn: "root",
            }));
          }
          return J;
        })(),
        ka = (() => {
          class J {
            static withConfig(z) {
              return {
                ngModule: J,
                providers: [
                  { provide: ue, useValue: z.callSetDisabledState ?? Wt },
                ],
              };
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)();
            });
            static #e = (this.ɵmod = s.oAB({ type: J }));
            static #i = (this.ɵinj = s.cJS({ imports: [to] }));
          }
          return J;
        })(),
        da = (() => {
          class J {
            static withConfig(z) {
              return {
                ngModule: J,
                providers: [
                  {
                    provide: on,
                    useValue: z.warnOnNgModelWithFormControl ?? "always",
                  },
                  { provide: ue, useValue: z.callSetDisabledState ?? Wt },
                ],
              };
            }
            static #t = (this.ɵfac = function (Et) {
              return new (Et || J)();
            });
            static #e = (this.ɵmod = s.oAB({ type: J }));
            static #i = (this.ɵinj = s.cJS({ imports: [to] }));
          }
          return J;
        })();
    },
    2296: (ui, Zt, D) => {
      D.d(Zt, { RK: () => qi, lW: () => ee, ot: () => Fe });
      var s = D(2831),
        x = D(5879),
        C = D(7849),
        p = D(2495),
        at = D(3680);
      const lt = ["mat-button", ""],
        bt = [
          [
            ["", 8, "material-icons", 3, "iconPositionEnd", ""],
            ["mat-icon", 3, "iconPositionEnd", ""],
            ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
          ],
          "*",
          [
            ["", "iconPositionEnd", "", 8, "material-icons"],
            ["mat-icon", "iconPositionEnd", ""],
            ["", "matButtonIcon", "", "iconPositionEnd", ""],
          ],
        ],
        B = [
          ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
          "*",
          ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
        ],
        gt = ["mat-icon-button", ""],
        Jt = ["*"],
        We = [
          {
            selector: "mat-button",
            mdcClasses: ["mdc-button", "mat-mdc-button"],
          },
          {
            selector: "mat-flat-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--unelevated",
              "mat-mdc-unelevated-button",
            ],
          },
          {
            selector: "mat-raised-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--raised",
              "mat-mdc-raised-button",
            ],
          },
          {
            selector: "mat-stroked-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--outlined",
              "mat-mdc-outlined-button",
            ],
          },
          { selector: "mat-fab", mdcClasses: ["mdc-fab", "mat-mdc-fab"] },
          {
            selector: "mat-mini-fab",
            mdcClasses: ["mdc-fab", "mdc-fab--mini", "mat-mdc-mini-fab"],
          },
          {
            selector: "mat-icon-button",
            mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
          },
        ],
        Re = (0, at.pj)(
          (0, at.Id)(
            (0, at.Kr)(
              class {
                constructor(xe) {
                  this._elementRef = xe;
                }
              },
            ),
          ),
        );
      let wt = (() => {
          class xe extends Re {
            get ripple() {
              return this._rippleLoader?.getRipple(
                this._elementRef.nativeElement,
              );
            }
            set ripple(Ft) {
              this._rippleLoader?.attachRipple(
                this._elementRef.nativeElement,
                Ft,
              );
            }
            get disableRipple() {
              return this._disableRipple;
            }
            set disableRipple(Ft) {
              (this._disableRipple = (0, p.Ig)(Ft)),
                this._updateRippleDisabled();
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(Ft) {
              (this._disabled = (0, p.Ig)(Ft)), this._updateRippleDisabled();
            }
            constructor(Ft, Mt, we, Vt) {
              super(Ft),
                (this._platform = Mt),
                (this._ngZone = we),
                (this._animationMode = Vt),
                (this._focusMonitor = (0, x.f3M)(C.tE)),
                (this._rippleLoader = (0, x.f3M)(at.Fq)),
                (this._isFab = !1),
                (this._disableRipple = !1),
                (this._disabled = !1),
                this._rippleLoader?.configureRipple(
                  this._elementRef.nativeElement,
                  { className: "mat-mdc-button-ripple" },
                );
              const re = Ft.nativeElement.classList;
              for (const Le of We)
                this._hasHostAttributes(Le.selector) &&
                  Le.mdcClasses.forEach((li) => {
                    re.add(li);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._rippleLoader?.destroyRipple(
                  this._elementRef.nativeElement,
                );
            }
            focus(Ft = "program", Mt) {
              Ft
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    Ft,
                    Mt,
                  )
                : this._elementRef.nativeElement.focus(Mt);
            }
            _hasHostAttributes(...Ft) {
              return Ft.some((Mt) =>
                this._elementRef.nativeElement.hasAttribute(Mt),
              );
            }
            _updateRippleDisabled() {
              this._rippleLoader?.setDisabled(
                this._elementRef.nativeElement,
                this.disableRipple || this.disabled,
              );
            }
            static #t = (this.ɵfac = function (Mt) {
              x.$Z();
            });
            static #e = (this.ɵdir = x.lG2({ type: xe, features: [x.qOj] }));
          }
          return xe;
        })(),
        ee = (() => {
          class xe extends wt {
            constructor(Ft, Mt, we, Vt) {
              super(Ft, Mt, we, Vt);
            }
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            });
            static #e = (this.ɵcmp = x.Xpm({
              type: xe,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-flat-button", ""],
                ["button", "mat-stroked-button", ""],
              ],
              hostVars: 7,
              hostBindings: function (Mt, we) {
                2 & Mt &&
                  (x.uIk("disabled", we.disabled || null),
                  x.ekj(
                    "_mat-animation-noopable",
                    "NoopAnimations" === we._animationMode,
                  )("mat-unthemed", !we.color)("mat-mdc-button-base", !0));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [x.qOj],
              attrs: lt,
              ngContentSelectors: B,
              decls: 7,
              vars: 4,
              consts: [
                [1, "mat-mdc-button-persistent-ripple"],
                [1, "mdc-button__label"],
                [1, "mat-mdc-focus-indicator"],
                [1, "mat-mdc-button-touch-target"],
              ],
              template: function (Mt, we) {
                1 & Mt &&
                  (x.F$t(bt),
                  x._UZ(0, "span", 0),
                  x.Hsn(1),
                  x.TgZ(2, "span", 1),
                  x.Hsn(3, 1),
                  x.qZA(),
                  x.Hsn(4, 2),
                  x._UZ(5, "span", 2)(6, "span", 3)),
                  2 & Mt &&
                    x.ekj("mdc-button__ripple", !we._isFab)(
                      "mdc-fab__ripple",
                      we._isFab,
                    );
              },
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return xe;
        })(),
        qi = (() => {
          class xe extends wt {
            constructor(Ft, Mt, we, Vt) {
              super(Ft, Mt, we, Vt),
                this._rippleLoader.configureRipple(
                  this._elementRef.nativeElement,
                  { centered: !0 },
                );
            }
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)(
                x.Y36(x.SBq),
                x.Y36(s.t4),
                x.Y36(x.R0b),
                x.Y36(x.QbO, 8),
              );
            });
            static #e = (this.ɵcmp = x.Xpm({
              type: xe,
              selectors: [["button", "mat-icon-button", ""]],
              hostVars: 7,
              hostBindings: function (Mt, we) {
                2 & Mt &&
                  (x.uIk("disabled", we.disabled || null),
                  x.ekj(
                    "_mat-animation-noopable",
                    "NoopAnimations" === we._animationMode,
                  )("mat-unthemed", !we.color)("mat-mdc-button-base", !0));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [x.qOj],
              attrs: gt,
              ngContentSelectors: Jt,
              decls: 4,
              vars: 0,
              consts: [
                [
                  1,
                  "mat-mdc-button-persistent-ripple",
                  "mdc-icon-button__ripple",
                ],
                [1, "mat-mdc-focus-indicator"],
                [1, "mat-mdc-button-touch-target"],
              ],
              template: function (Mt, we) {
                1 & Mt &&
                  (x.F$t(),
                  x._UZ(0, "span", 0),
                  x.Hsn(1),
                  x._UZ(2, "span", 1)(3, "span", 2));
              },
              styles: [
                '.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size);width:var(--mdc-icon-button-state-layer-size);color:var(--mdc-icon-button-icon-color);--mdc-icon-button-state-layer-size:48px;--mdc-icon-button-icon-size:24px;--mdc-icon-button-disabled-icon-color:black;--mdc-icon-button-disabled-icon-opacity:0.38}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button{padding:12px;font-size:var(--mdc-icon-button-icon-size);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return xe;
        })(),
        Fe = (() => {
          class xe {
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)();
            });
            static #e = (this.ɵmod = x.oAB({ type: xe }));
            static #i = (this.ɵinj = x.cJS({ imports: [at.BQ, at.si, at.BQ] }));
          }
          return xe;
        })();
    },
    5195: (ui, Zt, D) => {
      D.d(Zt, {
        QW: () => ee,
        a8: () => $,
        dk: () => De,
        dn: () => jt,
        n5: () => _,
      });
      var s = D(5879),
        x = D(6814),
        C = D(3680);
      const p = ["*"],
        bt = [
          [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          "*",
        ],
        B = [
          "[mat-card-avatar], [matCardAvatar]",
          "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
          "*",
        ],
        kt = new s.OlP("MAT_CARD_CONFIG");
      let $ = (() => {
          class Kt {
            constructor(mi) {
              this.appearance = mi?.appearance || "raised";
            }
            static #t = (this.ɵfac = function (ie) {
              return new (ie || Kt)(s.Y36(kt, 8));
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Kt,
              selectors: [["mat-card"]],
              hostAttrs: [1, "mat-mdc-card", "mdc-card"],
              hostVars: 4,
              hostBindings: function (ie, vi) {
                2 & ie &&
                  s.ekj("mat-mdc-card-outlined", "outlined" === vi.appearance)(
                    "mdc-card--outlined",
                    "outlined" === vi.appearance,
                  );
              },
              inputs: { appearance: "appearance" },
              exportAs: ["matCard"],
              ngContentSelectors: p,
              decls: 1,
              vars: 0,
              template: function (ie, vi) {
                1 & ie && (s.F$t(), s.Hsn(0));
              },
              styles: [
                '.mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:""}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return Kt;
        })(),
        _ = (() => {
          class Kt {
            static #t = (this.ɵfac = function (ie) {
              return new (ie || Kt)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: Kt,
              selectors: [
                ["mat-card-title"],
                ["", "mat-card-title", ""],
                ["", "matCardTitle", ""],
              ],
              hostAttrs: [1, "mat-mdc-card-title"],
            }));
          }
          return Kt;
        })(),
        jt = (() => {
          class Kt {
            static #t = (this.ɵfac = function (ie) {
              return new (ie || Kt)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: Kt,
              selectors: [["mat-card-content"]],
              hostAttrs: [1, "mat-mdc-card-content"],
            }));
          }
          return Kt;
        })(),
        De = (() => {
          class Kt {
            static #t = (this.ɵfac = function (ie) {
              return new (ie || Kt)();
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Kt,
              selectors: [["mat-card-header"]],
              hostAttrs: [1, "mat-mdc-card-header"],
              ngContentSelectors: B,
              decls: 4,
              vars: 0,
              consts: [[1, "mat-mdc-card-header-text"]],
              template: function (ie, vi) {
                1 & ie &&
                  (s.F$t(bt),
                  s.Hsn(0),
                  s.TgZ(1, "div", 0),
                  s.Hsn(2, 1),
                  s.qZA(),
                  s.Hsn(3, 2));
              },
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return Kt;
        })(),
        ee = (() => {
          class Kt {
            static #t = (this.ɵfac = function (ie) {
              return new (ie || Kt)();
            });
            static #e = (this.ɵmod = s.oAB({ type: Kt }));
            static #i = (this.ɵinj = s.cJS({ imports: [C.BQ, x.ez, C.BQ] }));
          }
          return Kt;
        })();
    },
    2557: (ui, Zt, D) => {
      D.d(Zt, { HS: () => ii, Hi: () => ut, J4: () => Ri });
      var s = D(2495),
        x = D(5879),
        C = D(6814),
        p = D(3680),
        at = D(7849),
        lt = D(8645),
        bt = D(3019),
        B = D(8180),
        kt = D(9773),
        $ = D(7921),
        _ = D(4664),
        A = D(6028),
        jt = D(9388);
      function De(q, Ct) {
        1 & q && (x.TgZ(0, "span", 7), x.Hsn(1, 1), x.qZA());
      }
      function Ve(q, Ct) {
        1 & q && (x.TgZ(0, "span", 8), x.Hsn(1, 2), x.qZA());
      }
      D(6223), D(9157);
      const He = [
          "*",
          [["mat-chip-avatar"], ["", "matChipAvatar", ""]],
          [
            ["mat-chip-trailing-icon"],
            ["", "matChipRemove", ""],
            ["", "matChipTrailingIcon", ""],
          ],
        ],
        We = [
          "*",
          "mat-chip-avatar, [matChipAvatar]",
          "mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]",
        ],
        hi = ["*"],
        Vi = new x.OlP("mat-chips-default-options"),
        qi = new x.OlP("MatChipAvatar"),
        Ie = new x.OlP("MatChipTrailingIcon"),
        Fe = new x.OlP("MatChipRemove"),
        xe = new x.OlP("MatChip");
      class Ue {}
      const Ft = (0, p.sb)(Ue, -1);
      let Mt = (() => {
          class q extends Ft {
            get disabled() {
              return this._disabled || this._parentChip.disabled;
            }
            set disabled(H) {
              this._disabled = (0, s.Ig)(H);
            }
            _getDisabledAttribute() {
              return this.disabled && !this._allowFocusWhenDisabled ? "" : null;
            }
            _getTabindex() {
              return (this.disabled && !this._allowFocusWhenDisabled) ||
                !this.isInteractive
                ? null
                : this.tabIndex.toString();
            }
            constructor(H, Nt) {
              super(),
                (this._elementRef = H),
                (this._parentChip = Nt),
                (this.isInteractive = !0),
                (this._isPrimary = !0),
                (this._disabled = !1),
                (this._allowFocusWhenDisabled = !1),
                "BUTTON" === H.nativeElement.nodeName &&
                  H.nativeElement.setAttribute("type", "button");
            }
            focus() {
              this._elementRef.nativeElement.focus();
            }
            _handleClick(H) {
              !this.disabled &&
                this.isInteractive &&
                this._isPrimary &&
                (H.preventDefault(),
                this._parentChip._handlePrimaryActionInteraction());
            }
            _handleKeydown(H) {
              (H.keyCode === A.K5 || H.keyCode === A.L_) &&
                !this.disabled &&
                this.isInteractive &&
                this._isPrimary &&
                !this._parentChip._isEditing &&
                (H.preventDefault(),
                this._parentChip._handlePrimaryActionInteraction());
            }
            static #t = (this.ɵfac = function (Nt) {
              return new (Nt || q)(x.Y36(x.SBq), x.Y36(xe));
            });
            static #e = (this.ɵdir = x.lG2({
              type: q,
              selectors: [["", "matChipAction", ""]],
              hostAttrs: [
                1,
                "mdc-evolution-chip__action",
                "mat-mdc-chip-action",
              ],
              hostVars: 9,
              hostBindings: function (Nt, X) {
                1 & Nt &&
                  x.NdJ("click", function (it) {
                    return X._handleClick(it);
                  })("keydown", function (it) {
                    return X._handleKeydown(it);
                  }),
                  2 & Nt &&
                    (x.uIk("tabindex", X._getTabindex())(
                      "disabled",
                      X._getDisabledAttribute(),
                    )("aria-disabled", X.disabled),
                    x.ekj("mdc-evolution-chip__action--primary", X._isPrimary)(
                      "mdc-evolution-chip__action--presentational",
                      !X.isInteractive,
                    )("mdc-evolution-chip__action--trailing", !X._isPrimary));
              },
              inputs: {
                disabled: "disabled",
                tabIndex: "tabIndex",
                isInteractive: "isInteractive",
                _allowFocusWhenDisabled: "_allowFocusWhenDisabled",
              },
              features: [x.qOj],
            }));
          }
          return q;
        })(),
        Le = 0;
      const li = (0, p.sb)(
        (0, p.pj)(
          (0, p.Kr)(
            (0, p.Id)(
              class {
                constructor(q) {
                  this._elementRef = q;
                }
              },
            ),
          ),
          "primary",
        ),
        -1,
      );
      let ii = (() => {
        class q extends li {
          _hasFocus() {
            return this._hasFocusInternal;
          }
          get value() {
            return void 0 !== this._value
              ? this._value
              : this._textElement.textContent.trim();
          }
          set value(H) {
            this._value = H;
          }
          get removable() {
            return this._removable;
          }
          set removable(H) {
            this._removable = (0, s.Ig)(H);
          }
          get highlighted() {
            return this._highlighted;
          }
          set highlighted(H) {
            this._highlighted = (0, s.Ig)(H);
          }
          get ripple() {
            return this._rippleLoader?.getRipple(
              this._elementRef.nativeElement,
            );
          }
          set ripple(H) {
            this._rippleLoader?.attachRipple(this._elementRef.nativeElement, H);
          }
          constructor(H, Nt, X, se, it, Ut, ve, qe) {
            super(Nt),
              (this._changeDetectorRef = H),
              (this._ngZone = X),
              (this._focusMonitor = se),
              (this._globalRippleOptions = ve),
              (this._onFocus = new lt.x()),
              (this._onBlur = new lt.x()),
              (this.role = null),
              (this._hasFocusInternal = !1),
              (this.id = "mat-mdc-chip-" + Le++),
              (this.ariaLabel = null),
              (this.ariaDescription = null),
              (this._ariaDescriptionId = `${this.id}-aria-description`),
              (this._removable = !0),
              (this._highlighted = !1),
              (this.removed = new x.vpe()),
              (this.destroyed = new x.vpe()),
              (this.basicChipAttrName = "mat-basic-chip"),
              (this._rippleLoader = (0, x.f3M)(p.Fq)),
              (this._document = it),
              (this._animationsDisabled = "NoopAnimations" === Ut),
              null != qe &&
                (this.tabIndex = parseInt(qe) ?? this.defaultTabIndex),
              this._monitorFocus(),
              this._rippleLoader?.configureRipple(
                this._elementRef.nativeElement,
                {
                  className: "mat-mdc-chip-ripple",
                  disabled: this._isRippleDisabled(),
                },
              );
          }
          ngOnInit() {
            const H = this._elementRef.nativeElement;
            this._isBasicChip =
              H.hasAttribute(this.basicChipAttrName) ||
              H.tagName.toLowerCase() === this.basicChipAttrName;
          }
          ngAfterViewInit() {
            (this._textElement = this._elementRef.nativeElement.querySelector(
              ".mat-mdc-chip-action-label",
            )),
              this._pendingFocus && ((this._pendingFocus = !1), this.focus());
          }
          ngAfterContentInit() {
            this._actionChanges = (0, bt.T)(
              this._allLeadingIcons.changes,
              this._allTrailingIcons.changes,
              this._allRemoveIcons.changes,
            ).subscribe(() => this._changeDetectorRef.markForCheck());
          }
          ngDoCheck() {
            this._rippleLoader.setDisabled(
              this._elementRef.nativeElement,
              this._isRippleDisabled(),
            );
          }
          ngOnDestroy() {
            this._focusMonitor.stopMonitoring(this._elementRef),
              this._rippleLoader?.destroyRipple(this._elementRef.nativeElement),
              this._actionChanges?.unsubscribe(),
              this.destroyed.emit({ chip: this }),
              this.destroyed.complete();
          }
          remove() {
            this.removable && this.removed.emit({ chip: this });
          }
          _isRippleDisabled() {
            return (
              this.disabled ||
              this.disableRipple ||
              this._animationsDisabled ||
              this._isBasicChip ||
              !!this._globalRippleOptions?.disabled
            );
          }
          _hasTrailingIcon() {
            return !(!this.trailingIcon && !this.removeIcon);
          }
          _handleKeydown(H) {
            (H.keyCode === A.ZH || H.keyCode === A.yY) &&
              (H.preventDefault(), this.remove());
          }
          focus() {
            this.disabled ||
              (this.primaryAction
                ? this.primaryAction.focus()
                : (this._pendingFocus = !0));
          }
          _getSourceAction(H) {
            return this._getActions().find((Nt) => {
              const X = Nt._elementRef.nativeElement;
              return X === H || X.contains(H);
            });
          }
          _getActions() {
            const H = [];
            return (
              this.primaryAction && H.push(this.primaryAction),
              this.removeIcon && H.push(this.removeIcon),
              this.trailingIcon && H.push(this.trailingIcon),
              H
            );
          }
          _handlePrimaryActionInteraction() {}
          _monitorFocus() {
            this._focusMonitor.monitor(this._elementRef, !0).subscribe((H) => {
              const Nt = null !== H;
              Nt !== this._hasFocusInternal &&
                ((this._hasFocusInternal = Nt),
                Nt
                  ? this._onFocus.next({ chip: this })
                  : this._ngZone.onStable
                      .pipe((0, B.q)(1))
                      .subscribe(() =>
                        this._ngZone.run(() =>
                          this._onBlur.next({ chip: this }),
                        ),
                      ));
            });
          }
          static #t = (this.ɵfac = function (Nt) {
            return new (Nt || q)(
              x.Y36(x.sBO),
              x.Y36(x.SBq),
              x.Y36(x.R0b),
              x.Y36(at.tE),
              x.Y36(C.K0),
              x.Y36(x.QbO, 8),
              x.Y36(p.Y2, 8),
              x.$8M("tabindex"),
            );
          });
          static #e = (this.ɵcmp = x.Xpm({
            type: q,
            selectors: [
              ["mat-basic-chip"],
              ["", "mat-basic-chip", ""],
              ["mat-chip"],
              ["", "mat-chip", ""],
            ],
            contentQueries: function (Nt, X, se) {
              if (
                (1 & Nt &&
                  (x.Suo(se, qi, 5),
                  x.Suo(se, Ie, 5),
                  x.Suo(se, Fe, 5),
                  x.Suo(se, qi, 5),
                  x.Suo(se, Ie, 5),
                  x.Suo(se, Fe, 5)),
                2 & Nt)
              ) {
                let it;
                x.iGM((it = x.CRH())) && (X.leadingIcon = it.first),
                  x.iGM((it = x.CRH())) && (X.trailingIcon = it.first),
                  x.iGM((it = x.CRH())) && (X.removeIcon = it.first),
                  x.iGM((it = x.CRH())) && (X._allLeadingIcons = it),
                  x.iGM((it = x.CRH())) && (X._allTrailingIcons = it),
                  x.iGM((it = x.CRH())) && (X._allRemoveIcons = it);
              }
            },
            viewQuery: function (Nt, X) {
              if ((1 & Nt && x.Gf(Mt, 5), 2 & Nt)) {
                let se;
                x.iGM((se = x.CRH())) && (X.primaryAction = se.first);
              }
            },
            hostAttrs: [1, "mat-mdc-chip"],
            hostVars: 30,
            hostBindings: function (Nt, X) {
              1 & Nt &&
                x.NdJ("keydown", function (it) {
                  return X._handleKeydown(it);
                }),
                2 & Nt &&
                  (x.Ikx("id", X.id),
                  x.uIk("role", X.role)("tabindex", X.role ? X.tabIndex : null)(
                    "aria-label",
                    X.ariaLabel,
                  ),
                  x.ekj("mdc-evolution-chip", !X._isBasicChip)(
                    "mdc-evolution-chip--disabled",
                    X.disabled,
                  )(
                    "mdc-evolution-chip--with-trailing-action",
                    X._hasTrailingIcon(),
                  )("mdc-evolution-chip--with-primary-graphic", X.leadingIcon)(
                    "mdc-evolution-chip--with-primary-icon",
                    X.leadingIcon,
                  )("mdc-evolution-chip--with-avatar", X.leadingIcon)(
                    "mat-mdc-chip-with-avatar",
                    X.leadingIcon,
                  )("mat-mdc-chip-highlighted", X.highlighted)(
                    "mat-mdc-chip-disabled",
                    X.disabled,
                  )("mat-mdc-basic-chip", X._isBasicChip)(
                    "mat-mdc-standard-chip",
                    !X._isBasicChip,
                  )("mat-mdc-chip-with-trailing-icon", X._hasTrailingIcon())(
                    "_mat-animation-noopable",
                    X._animationsDisabled,
                  ));
            },
            inputs: {
              color: "color",
              disabled: "disabled",
              disableRipple: "disableRipple",
              tabIndex: "tabIndex",
              role: "role",
              id: "id",
              ariaLabel: ["aria-label", "ariaLabel"],
              ariaDescription: ["aria-description", "ariaDescription"],
              value: "value",
              removable: "removable",
              highlighted: "highlighted",
            },
            outputs: { removed: "removed", destroyed: "destroyed" },
            exportAs: ["matChip"],
            features: [x._Bn([{ provide: xe, useExisting: q }]), x.qOj],
            ngContentSelectors: We,
            decls: 8,
            vars: 3,
            consts: [
              [1, "mat-mdc-chip-focus-overlay"],
              [
                1,
                "mdc-evolution-chip__cell",
                "mdc-evolution-chip__cell--primary",
              ],
              ["matChipAction", "", 3, "isInteractive"],
              [
                "class",
                "mdc-evolution-chip__graphic mat-mdc-chip-graphic",
                4,
                "ngIf",
              ],
              [
                1,
                "mdc-evolution-chip__text-label",
                "mat-mdc-chip-action-label",
              ],
              [
                1,
                "mat-mdc-chip-primary-focus-indicator",
                "mat-mdc-focus-indicator",
              ],
              [
                "class",
                "mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing",
                4,
                "ngIf",
              ],
              [1, "mdc-evolution-chip__graphic", "mat-mdc-chip-graphic"],
              [
                1,
                "mdc-evolution-chip__cell",
                "mdc-evolution-chip__cell--trailing",
              ],
            ],
            template: function (Nt, X) {
              1 & Nt &&
                (x.F$t(He),
                x._UZ(0, "span", 0),
                x.TgZ(1, "span", 1)(2, "span", 2),
                x.YNc(3, De, 2, 0, "span", 3),
                x.TgZ(4, "span", 4),
                x.Hsn(5),
                x._UZ(6, "span", 5),
                x.qZA()()(),
                x.YNc(7, Ve, 2, 0, "span", 6)),
                2 & Nt &&
                  (x.xp6(2),
                  x.Q6J("isInteractive", !1),
                  x.xp6(1),
                  x.Q6J("ngIf", X.leadingIcon),
                  x.xp6(4),
                  x.Q6J("ngIf", X._hasTrailingIcon()));
            },
            dependencies: [C.O5, Mt],
            styles: [
              '.mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:"";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:""}',
            ],
            encapsulation: 2,
            changeDetection: 0,
          }));
        }
        return q;
      })();
      class Be {
        constructor(Ct) {}
      }
      const Ne = (0, p.sb)(Be);
      let Ri = (() => {
          class q extends Ne {
            get chipFocusChanges() {
              return this._getChipStream((H) => H._onFocus);
            }
            get chipDestroyedChanges() {
              return this._getChipStream((H) => H.destroyed);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(H) {
              (this._disabled = (0, s.Ig)(H)), this._syncChipsState();
            }
            get empty() {
              return !this._chips || 0 === this._chips.length;
            }
            get role() {
              return this._explicitRole
                ? this._explicitRole
                : this.empty
                  ? null
                  : this._defaultRole;
            }
            set role(H) {
              this._explicitRole = H;
            }
            get focused() {
              return this._hasFocusedChip();
            }
            constructor(H, Nt, X) {
              super(H),
                (this._elementRef = H),
                (this._changeDetectorRef = Nt),
                (this._dir = X),
                (this._lastDestroyedFocusedChipIndex = null),
                (this._destroyed = new lt.x()),
                (this._defaultRole = "presentation"),
                (this._disabled = !1),
                (this._explicitRole = null),
                (this._chipActions = new x.n_E());
            }
            ngAfterViewInit() {
              this._setUpFocusManagement(),
                this._trackChipSetChanges(),
                this._trackDestroyedFocusedChip();
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._chipActions.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            _hasFocusedChip() {
              return this._chips && this._chips.some((H) => H._hasFocus());
            }
            _syncChipsState() {
              this._chips &&
                this._chips.forEach((H) => {
                  (H.disabled = this._disabled),
                    H._changeDetectorRef.markForCheck();
                });
            }
            focus() {}
            _handleKeydown(H) {
              this._originatesFromChip(H) && this._keyManager.onKeydown(H);
            }
            _isValidIndex(H) {
              return H >= 0 && H < this._chips.length;
            }
            _allowFocusEscape() {
              if (-1 !== this.tabIndex) {
                const H = this.tabIndex;
                (this.tabIndex = -1), setTimeout(() => (this.tabIndex = H));
              }
            }
            _getChipStream(H) {
              return this._chips.changes.pipe(
                (0, $.O)(null),
                (0, _.w)(() => (0, bt.T)(...this._chips.map(H))),
              );
            }
            _originatesFromChip(H) {
              let Nt = H.target;
              for (; Nt && Nt !== this._elementRef.nativeElement; ) {
                if (Nt.classList.contains("mat-mdc-chip")) return !0;
                Nt = Nt.parentElement;
              }
              return !1;
            }
            _setUpFocusManagement() {
              this._chips.changes.pipe((0, $.O)(this._chips)).subscribe((H) => {
                const Nt = [];
                H.forEach((X) => X._getActions().forEach((se) => Nt.push(se))),
                  this._chipActions.reset(Nt),
                  this._chipActions.notifyOnChanges();
              }),
                (this._keyManager = new at.Em(this._chipActions)
                  .withVerticalOrientation()
                  .withHorizontalOrientation(
                    this._dir ? this._dir.value : "ltr",
                  )
                  .withHomeAndEnd()
                  .skipPredicate((H) => this._skipPredicate(H))),
                this.chipFocusChanges
                  .pipe((0, kt.R)(this._destroyed))
                  .subscribe(({ chip: H }) => {
                    const Nt = H._getSourceAction(document.activeElement);
                    Nt && this._keyManager.updateActiveItem(Nt);
                  }),
                this._dir?.change
                  .pipe((0, kt.R)(this._destroyed))
                  .subscribe((H) =>
                    this._keyManager.withHorizontalOrientation(H),
                  );
            }
            _skipPredicate(H) {
              return !H.isInteractive || H.disabled;
            }
            _trackChipSetChanges() {
              this._chips.changes
                .pipe((0, $.O)(null), (0, kt.R)(this._destroyed))
                .subscribe(() => {
                  this.disabled &&
                    Promise.resolve().then(() => this._syncChipsState()),
                    this._redirectDestroyedChipFocus();
                });
            }
            _trackDestroyedFocusedChip() {
              this.chipDestroyedChanges
                .pipe((0, kt.R)(this._destroyed))
                .subscribe((H) => {
                  const X = this._chips.toArray().indexOf(H.chip);
                  this._isValidIndex(X) &&
                    H.chip._hasFocus() &&
                    (this._lastDestroyedFocusedChipIndex = X);
                });
            }
            _redirectDestroyedChipFocus() {
              if (null != this._lastDestroyedFocusedChipIndex) {
                if (this._chips.length) {
                  const H = Math.min(
                      this._lastDestroyedFocusedChipIndex,
                      this._chips.length - 1,
                    ),
                    Nt = this._chips.toArray()[H];
                  Nt.disabled
                    ? 1 === this._chips.length
                      ? this.focus()
                      : this._keyManager.setPreviousItemActive()
                    : Nt.focus();
                } else this.focus();
                this._lastDestroyedFocusedChipIndex = null;
              }
            }
            static #t = (this.ɵfac = function (Nt) {
              return new (Nt || q)(x.Y36(x.SBq), x.Y36(x.sBO), x.Y36(jt.Is, 8));
            });
            static #e = (this.ɵcmp = x.Xpm({
              type: q,
              selectors: [["mat-chip-set"]],
              contentQueries: function (Nt, X, se) {
                if ((1 & Nt && x.Suo(se, ii, 5), 2 & Nt)) {
                  let it;
                  x.iGM((it = x.CRH())) && (X._chips = it);
                }
              },
              hostAttrs: [1, "mat-mdc-chip-set", "mdc-evolution-chip-set"],
              hostVars: 1,
              hostBindings: function (Nt, X) {
                1 & Nt &&
                  x.NdJ("keydown", function (it) {
                    return X._handleKeydown(it);
                  }),
                  2 & Nt && x.uIk("role", X.role);
              },
              inputs: { disabled: "disabled", role: "role" },
              features: [x.qOj],
              ngContentSelectors: hi,
              decls: 2,
              vars: 0,
              consts: [
                ["role", "presentation", 1, "mdc-evolution-chip-set__chips"],
              ],
              template: function (Nt, X) {
                1 & Nt && (x.F$t(), x.TgZ(0, "div", 0), x.Hsn(1), x.qZA());
              },
              styles: [
                ".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return q;
        })(),
        ut = (() => {
          class q {
            static #t = (this.ɵfac = function (Nt) {
              return new (Nt || q)();
            });
            static #e = (this.ɵmod = x.oAB({ type: q }));
            static #i = (this.ɵinj = x.cJS({
              providers: [
                p.rD,
                { provide: Vi, useValue: { separatorKeyCodes: [A.K5] } },
              ],
              imports: [p.BQ, C.ez, p.si, p.BQ],
            }));
          }
          return q;
        })();
    },
    3680: (ui, Zt, D) => {
      D.d(Zt, {
        yN: () => Re,
        mZ: () => wt,
        rD: () => Le,
        K7: () => Nt,
        HF: () => ut,
        Y2: () => Z,
        BQ: () => Pt,
        ey: () => ve,
        Ng: () => Xt,
        rN: () => it,
        us: () => Lt,
        wG: () => rt,
        Fq: () => pt,
        si: () => yt,
        IR: () => de,
        CB: () => qe,
        jH: () => ki,
        pj: () => ie,
        Kr: () => vi,
        Id: () => mi,
        FD: () => hi,
        dB: () => Si,
        sb: () => Ge,
      });
      var s = D(5879),
        x = D(7849),
        C = D(9388),
        at = D(6814),
        lt = D(2831),
        bt = D(2495),
        B = D(5592),
        kt = D(8645),
        $ = D(6028);
      const jt = ["text"];
      function gt(vt, U) {
        if ((1 & vt && s._UZ(0, "mat-pseudo-checkbox", 6), 2 & vt)) {
          const j = s.oxw();
          s.Q6J("disabled", j.disabled)(
            "state",
            j.selected ? "checked" : "unchecked",
          );
        }
      }
      function Jt(vt, U) {
        if ((1 & vt && s._UZ(0, "mat-pseudo-checkbox", 7), 2 & vt)) {
          const j = s.oxw();
          s.Q6J("disabled", j.disabled);
        }
      }
      function De(vt, U) {
        if ((1 & vt && (s.TgZ(0, "span", 8), s._uU(1), s.qZA()), 2 & vt)) {
          const j = s.oxw();
          s.xp6(1), s.hij("(", j.group.label, ")");
        }
      }
      const Ve = [[["mat-icon"]], "*"],
        He = ["mat-icon", "*"];
      let Re = (() => {
          class vt {
            static #t = (this.STANDARD_CURVE = "cubic-bezier(0.4,0.0,0.2,1)");
            static #e = (this.DECELERATION_CURVE =
              "cubic-bezier(0.0,0.0,0.2,1)");
            static #i = (this.ACCELERATION_CURVE = "cubic-bezier(0.4,0.0,1,1)");
            static #n = (this.SHARP_CURVE = "cubic-bezier(0.4,0.0,0.6,1)");
          }
          return vt;
        })(),
        wt = (() => {
          class vt {
            static #t = (this.COMPLEX = "375ms");
            static #e = (this.ENTERING = "225ms");
            static #i = (this.EXITING = "195ms");
          }
          return vt;
        })();
      const St = new s.OlP("mat-sanity-checks", {
        providedIn: "root",
        factory: function _t() {
          return !0;
        },
      });
      let Pt = (() => {
        class vt {
          constructor(j, ct, ue) {
            (this._sanityChecks = ct),
              (this._document = ue),
              (this._hasDoneGlobalChecks = !1),
              j._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(j) {
            return (
              !(0, lt.Oy)() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[j])
            );
          }
          static #t = (this.ɵfac = function (ct) {
            return new (ct || vt)(s.LFG(x.qm), s.LFG(St, 8), s.LFG(at.K0));
          });
          static #e = (this.ɵmod = s.oAB({ type: vt }));
          static #i = (this.ɵinj = s.cJS({ imports: [C.vT, C.vT] }));
        }
        return vt;
      })();
      function mi(vt) {
        return class extends vt {
          get disabled() {
            return this._disabled;
          }
          set disabled(U) {
            this._disabled = (0, bt.Ig)(U);
          }
          constructor(...U) {
            super(...U), (this._disabled = !1);
          }
        };
      }
      function ie(vt, U) {
        return class extends vt {
          get color() {
            return this._color;
          }
          set color(j) {
            const ct = j || this.defaultColor;
            ct !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`,
                ),
              ct && this._elementRef.nativeElement.classList.add(`mat-${ct}`),
              (this._color = ct));
          }
          constructor(...j) {
            super(...j), (this.defaultColor = U), (this.color = U);
          }
        };
      }
      function vi(vt) {
        return class extends vt {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(U) {
            this._disableRipple = (0, bt.Ig)(U);
          }
          constructor(...U) {
            super(...U), (this._disableRipple = !1);
          }
        };
      }
      function Ge(vt, U = 0) {
        return class extends vt {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(j) {
            this._tabIndex = null != j ? (0, bt.su)(j) : this.defaultTabIndex;
          }
          constructor(...j) {
            super(...j), (this._tabIndex = U), (this.defaultTabIndex = U);
          }
        };
      }
      function hi(vt) {
        return class extends vt {
          updateErrorState() {
            const U = this.errorState,
              Wt = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm,
              );
            Wt !== U && ((this.errorState = Wt), this.stateChanges.next());
          }
          constructor(...U) {
            super(...U), (this.errorState = !1);
          }
        };
      }
      function Si(vt) {
        return class extends vt {
          constructor(...U) {
            super(...U),
              (this._isInitialized = !1),
              (this._pendingSubscribers = []),
              (this.initialized = new B.y((j) => {
                this._isInitialized
                  ? this._notifySubscriber(j)
                  : this._pendingSubscribers.push(j);
              }));
          }
          _markInitialized() {
            (this._isInitialized = !0),
              this._pendingSubscribers.forEach(this._notifySubscriber),
              (this._pendingSubscribers = null);
          }
          _notifySubscriber(U) {
            U.next(), U.complete();
          }
        };
      }
      let Le = (() => {
        class vt {
          isErrorState(j, ct) {
            return !!(j && j.invalid && (j.touched || (ct && ct.submitted)));
          }
          static #t = (this.ɵfac = function (ct) {
            return new (ct || vt)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: vt,
            factory: vt.ɵfac,
            providedIn: "root",
          }));
        }
        return vt;
      })();
      class ri {
        constructor(U, j, ct, ue = !1) {
          (this._renderer = U),
            (this.element = j),
            (this.config = ct),
            (this._animationForciblyDisabledThroughCss = ue),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const te = (0, lt.i$)({ passive: !0, capture: !0 });
      class Be {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = (U) => {
              const j = (0, lt.sA)(U);
              j &&
                this._events.get(U.type)?.forEach((ct, ue) => {
                  (ue === j || ue.contains(j)) &&
                    ct.forEach((Wt) => Wt.handleEvent(U));
                });
            });
        }
        addHandler(U, j, ct, ue) {
          const Wt = this._events.get(j);
          if (Wt) {
            const le = Wt.get(ct);
            le ? le.add(ue) : Wt.set(ct, new Set([ue]));
          } else
            this._events.set(j, new Map([[ct, new Set([ue])]])),
              U.runOutsideAngular(() => {
                document.addEventListener(j, this._delegateEventHandler, te);
              });
        }
        removeHandler(U, j, ct) {
          const ue = this._events.get(U);
          if (!ue) return;
          const Wt = ue.get(j);
          Wt &&
            (Wt.delete(ct),
            0 === Wt.size && ue.delete(j),
            0 === ue.size &&
              (this._events.delete(U),
              document.removeEventListener(U, this._delegateEventHandler, te)));
        }
      }
      const Ne = { enterDuration: 225, exitDuration: 150 },
        gi = (0, lt.i$)({ passive: !0, capture: !0 }),
        Xi = ["mousedown", "touchstart"],
        _i = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class de {
        static #t = (this._eventManager = new Be());
        constructor(U, j, ct, ue) {
          (this._target = U),
            (this._ngZone = j),
            (this._platform = ue),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            ue.isBrowser && (this._containerElement = (0, bt.fI)(ct));
        }
        fadeInRipple(U, j, ct = {}) {
          const ue = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            Wt = { ...Ne, ...ct.animation };
          ct.centered &&
            ((U = ue.left + ue.width / 2), (j = ue.top + ue.height / 2));
          const le =
              ct.radius ||
              (function ot(vt, U, j) {
                const ct = Math.max(
                    Math.abs(vt - j.left),
                    Math.abs(vt - j.right),
                  ),
                  ue = Math.max(Math.abs(U - j.top), Math.abs(U - j.bottom));
                return Math.sqrt(ct * ct + ue * ue);
              })(U, j, ue),
            It = U - ue.left,
            Yt = j - ue.top,
            Ae = Wt.enterDuration,
            oi = document.createElement("div");
          oi.classList.add("mat-ripple-element"),
            (oi.style.left = It - le + "px"),
            (oi.style.top = Yt - le + "px"),
            (oi.style.height = 2 * le + "px"),
            (oi.style.width = 2 * le + "px"),
            null != ct.color && (oi.style.backgroundColor = ct.color),
            (oi.style.transitionDuration = `${Ae}ms`),
            this._containerElement.appendChild(oi);
          const pe = window.getComputedStyle(oi),
            tt = pe.transitionDuration,
            me =
              "none" === pe.transitionProperty ||
              "0s" === tt ||
              "0s, 0s" === tt ||
              (0 === ue.width && 0 === ue.height),
            Bt = new ri(this, oi, ct, me);
          (oi.style.transform = "scale3d(1, 1, 1)"),
            (Bt.state = 0),
            ct.persistent || (this._mostRecentTransientRipple = Bt);
          let Te = null;
          return (
            !me &&
              (Ae || Wt.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const Je = () => this._finishRippleTransition(Bt),
                  Ot = () => this._destroyRipple(Bt);
                oi.addEventListener("transitionend", Je),
                  oi.addEventListener("transitioncancel", Ot),
                  (Te = { onTransitionEnd: Je, onTransitionCancel: Ot });
              }),
            this._activeRipples.set(Bt, Te),
            (me || !Ae) && this._finishRippleTransition(Bt),
            Bt
          );
        }
        fadeOutRipple(U) {
          if (2 === U.state || 3 === U.state) return;
          const j = U.element,
            ct = { ...Ne, ...U.config.animation };
          (j.style.transitionDuration = `${ct.exitDuration}ms`),
            (j.style.opacity = "0"),
            (U.state = 2),
            (U._animationForciblyDisabledThroughCss || !ct.exitDuration) &&
              this._finishRippleTransition(U);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((U) => U.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((U) => {
            U.config.persistent || U.fadeOut();
          });
        }
        setupTriggerEvents(U) {
          const j = (0, bt.fI)(U);
          !this._platform.isBrowser ||
            !j ||
            j === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = j),
            Xi.forEach((ct) => {
              de._eventManager.addHandler(this._ngZone, ct, j, this);
            }));
        }
        handleEvent(U) {
          "mousedown" === U.type
            ? this._onMousedown(U)
            : "touchstart" === U.type
              ? this._onTouchStart(U)
              : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                _i.forEach((j) => {
                  this._triggerElement.addEventListener(j, this, gi);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(U) {
          0 === U.state
            ? this._startFadeOutTransition(U)
            : 2 === U.state && this._destroyRipple(U);
        }
        _startFadeOutTransition(U) {
          const j = U === this._mostRecentTransientRipple,
            { persistent: ct } = U.config;
          (U.state = 1), !ct && (!j || !this._isPointerDown) && U.fadeOut();
        }
        _destroyRipple(U) {
          const j = this._activeRipples.get(U) ?? null;
          this._activeRipples.delete(U),
            this._activeRipples.size || (this._containerRect = null),
            U === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (U.state = 3),
            null !== j &&
              (U.element.removeEventListener(
                "transitionend",
                j.onTransitionEnd,
              ),
              U.element.removeEventListener(
                "transitioncancel",
                j.onTransitionCancel,
              )),
            U.element.remove();
        }
        _onMousedown(U) {
          const j = (0, x.X6)(U),
            ct =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !j &&
            !ct &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(U.clientX, U.clientY, this._target.rippleConfig));
        }
        _onTouchStart(U) {
          if (!this._target.rippleDisabled && !(0, x.yG)(U)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const j = U.changedTouches;
            if (j)
              for (let ct = 0; ct < j.length; ct++)
                this.fadeInRipple(
                  j[ct].clientX,
                  j[ct].clientY,
                  this._target.rippleConfig,
                );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((U) => {
              !U.config.persistent &&
                (1 === U.state ||
                  (U.config.terminateOnPointerUp && 0 === U.state)) &&
                U.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const U = this._triggerElement;
          U &&
            (Xi.forEach((j) => de._eventManager.removeHandler(j, U, this)),
            this._pointerUpEventsRegistered &&
              _i.forEach((j) => U.removeEventListener(j, this, gi)));
        }
      }
      const Z = new s.OlP("mat-ripple-global-options");
      let rt = (() => {
          class vt {
            get disabled() {
              return this._disabled;
            }
            set disabled(j) {
              j && this.fadeOutAllNonPersistent(),
                (this._disabled = j),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(j) {
              (this._trigger = j), this._setupTriggerEventsIfEnabled();
            }
            constructor(j, ct, ue, Wt, le) {
              (this._elementRef = j),
                (this._animationMode = le),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = Wt || {}),
                (this._rippleRenderer = new de(this, ct, j, ue));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...("NoopAnimations" === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(j, ct = 0, ue) {
              return "number" == typeof j
                ? this._rippleRenderer.fadeInRipple(j, ct, {
                    ...this.rippleConfig,
                    ...ue,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...j,
                  });
            }
            static #t = (this.ɵfac = function (ct) {
              return new (ct || vt)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(lt.t4),
                s.Y36(Z, 8),
                s.Y36(s.QbO, 8),
              );
            });
            static #e = (this.ɵdir = s.lG2({
              type: vt,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (ct, ue) {
                2 & ct && s.ekj("mat-ripple-unbounded", ue.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            }));
          }
          return vt;
        })(),
        yt = (() => {
          class vt {
            static #t = (this.ɵfac = function (ct) {
              return new (ct || vt)();
            });
            static #e = (this.ɵmod = s.oAB({ type: vt }));
            static #i = (this.ɵinj = s.cJS({ imports: [Pt, Pt] }));
          }
          return vt;
        })(),
        Rt = (() => {
          class vt {
            constructor(j) {
              (this._animationMode = j),
                (this.state = "unchecked"),
                (this.disabled = !1),
                (this.appearance = "full");
            }
            static #t = (this.ɵfac = function (ct) {
              return new (ct || vt)(s.Y36(s.QbO, 8));
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: vt,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 12,
              hostBindings: function (ct, ue) {
                2 & ct &&
                  s.ekj(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === ue.state,
                  )("mat-pseudo-checkbox-checked", "checked" === ue.state)(
                    "mat-pseudo-checkbox-disabled",
                    ue.disabled,
                  )("mat-pseudo-checkbox-minimal", "minimal" === ue.appearance)(
                    "mat-pseudo-checkbox-full",
                    "full" === ue.appearance,
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === ue._animationMode,
                  );
              },
              inputs: {
                state: "state",
                disabled: "disabled",
                appearance: "appearance",
              },
              decls: 0,
              vars: 0,
              template: function (ct, ue) {},
              styles: [
                '.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return vt;
        })(),
        Lt = (() => {
          class vt {
            static #t = (this.ɵfac = function (ct) {
              return new (ct || vt)();
            });
            static #e = (this.ɵmod = s.oAB({ type: vt }));
            static #i = (this.ɵinj = s.cJS({ imports: [Pt] }));
          }
          return vt;
        })();
      const ut = new s.OlP("MAT_OPTION_PARENT_COMPONENT"),
        Nt = new s.OlP("MatOptgroup");
      let se = 0;
      class it {
        constructor(U, j = !1) {
          (this.source = U), (this.isUserInput = j);
        }
      }
      let Ut = (() => {
          class vt {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(j) {
              this._disabled = (0, bt.Ig)(j);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get hideSingleSelectionIndicator() {
              return !(
                !this._parent || !this._parent.hideSingleSelectionIndicator
              );
            }
            constructor(j, ct, ue, Wt) {
              (this._element = j),
                (this._changeDetectorRef = ct),
                (this._parent = ue),
                (this.group = Wt),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + se++),
                (this.onSelectionChange = new s.vpe()),
                (this._stateChanges = new kt.x());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || "").trim();
            }
            select(j = !0) {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                j && this._emitSelectionChangeEvent());
            }
            deselect(j = !0) {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                j && this._emitSelectionChangeEvent());
            }
            focus(j, ct) {
              const ue = this._getHostElement();
              "function" == typeof ue.focus && ue.focus(ct);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(j) {
              (j.keyCode === $.K5 || j.keyCode === $.L_) &&
                !(0, $.Vb)(j) &&
                (this._selectViaInteraction(), j.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const j = this.viewValue;
                j !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = j));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(j = !1) {
              this.onSelectionChange.emit(new it(this, j));
            }
            static #t = (this.ɵfac = function (ct) {
              s.$Z();
            });
            static #e = (this.ɵdir = s.lG2({
              type: vt,
              viewQuery: function (ct, ue) {
                if ((1 & ct && s.Gf(jt, 7), 2 & ct)) {
                  let Wt;
                  s.iGM((Wt = s.CRH())) && (ue._text = Wt.first);
                }
              },
              inputs: { value: "value", id: "id", disabled: "disabled" },
              outputs: { onSelectionChange: "onSelectionChange" },
            }));
          }
          return vt;
        })(),
        ve = (() => {
          class vt extends Ut {
            constructor(j, ct, ue, Wt) {
              super(j, ct, ue, Wt);
            }
            static #t = (this.ɵfac = function (ct) {
              return new (ct || vt)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(ut, 8),
                s.Y36(Nt, 8),
              );
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: vt,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-mdc-option",
                "mdc-list-item",
              ],
              hostVars: 11,
              hostBindings: function (ct, ue) {
                1 & ct &&
                  s.NdJ("click", function () {
                    return ue._selectViaInteraction();
                  })("keydown", function (le) {
                    return ue._handleKeydown(le);
                  }),
                  2 & ct &&
                    (s.Ikx("id", ue.id),
                    s.uIk("aria-selected", ue.selected)(
                      "aria-disabled",
                      ue.disabled.toString(),
                    ),
                    s.ekj("mdc-list-item--selected", ue.selected)(
                      "mat-mdc-option-multiple",
                      ue.multiple,
                    )("mat-mdc-option-active", ue.active)(
                      "mdc-list-item--disabled",
                      ue.disabled,
                    ));
              },
              exportAs: ["matOption"],
              features: [s.qOj],
              ngContentSelectors: He,
              decls: 8,
              vars: 5,
              consts: [
                [
                  "class",
                  "mat-mdc-option-pseudo-checkbox",
                  "aria-hidden",
                  "true",
                  3,
                  "disabled",
                  "state",
                  4,
                  "ngIf",
                ],
                [1, "mdc-list-item__primary-text"],
                ["text", ""],
                [
                  "class",
                  "mat-mdc-option-pseudo-checkbox",
                  "state",
                  "checked",
                  "aria-hidden",
                  "true",
                  "appearance",
                  "minimal",
                  3,
                  "disabled",
                  4,
                  "ngIf",
                ],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "aria-hidden",
                  "true",
                  "mat-ripple",
                  "",
                  1,
                  "mat-mdc-option-ripple",
                  "mat-mdc-focus-indicator",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-mdc-option-pseudo-checkbox",
                  3,
                  "disabled",
                  "state",
                ],
                [
                  "state",
                  "checked",
                  "aria-hidden",
                  "true",
                  "appearance",
                  "minimal",
                  1,
                  "mat-mdc-option-pseudo-checkbox",
                  3,
                  "disabled",
                ],
                [1, "cdk-visually-hidden"],
              ],
              template: function (ct, ue) {
                1 & ct &&
                  (s.F$t(Ve),
                  s.YNc(0, gt, 1, 2, "mat-pseudo-checkbox", 0),
                  s.Hsn(1),
                  s.TgZ(2, "span", 1, 2),
                  s.Hsn(4, 1),
                  s.qZA(),
                  s.YNc(5, Jt, 1, 1, "mat-pseudo-checkbox", 3),
                  s.YNc(6, De, 2, 1, "span", 4),
                  s._UZ(7, "div", 5)),
                  2 & ct &&
                    (s.Q6J("ngIf", ue.multiple),
                    s.xp6(5),
                    s.Q6J(
                      "ngIf",
                      !ue.multiple &&
                        ue.selected &&
                        !ue.hideSingleSelectionIndicator,
                    ),
                    s.xp6(1),
                    s.Q6J("ngIf", ue.group && ue.group._inert),
                    s.xp6(1),
                    s.Q6J("matRippleTrigger", ue._getHostElement())(
                      "matRippleDisabled",
                      ue.disabled || ue.disableRipple,
                    ));
              },
              dependencies: [rt, at.O5, Rt],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return vt;
        })();
      function qe(vt, U, j) {
        if (j.length) {
          let ct = U.toArray(),
            ue = j.toArray(),
            Wt = 0;
          for (let le = 0; le < vt + 1; le++)
            ct[le].group && ct[le].group === ue[Wt] && Wt++;
          return Wt;
        }
        return 0;
      }
      function ki(vt, U, j, ct) {
        return vt < j ? vt : vt + U > j + ct ? Math.max(0, vt - ct + U) : j;
      }
      let Xt = (() => {
        class vt {
          static #t = (this.ɵfac = function (ct) {
            return new (ct || vt)();
          });
          static #e = (this.ɵmod = s.oAB({ type: vt }));
          static #i = (this.ɵinj = s.cJS({ imports: [yt, at.ez, Pt, Lt] }));
        }
        return vt;
      })();
      const ae = { capture: !0 },
        ye = ["focus", "click", "mouseenter", "touchstart"],
        $t = "mat-ripple-loader-uninitialized",
        fe = "mat-ripple-loader-class-name",
        ke = "mat-ripple-loader-centered",
        yi = "mat-ripple-loader-disabled";
      let pt = (() => {
        class vt {
          constructor() {
            (this._document = (0, s.f3M)(at.K0, { optional: !0 })),
              (this._animationMode = (0, s.f3M)(s.QbO, { optional: !0 })),
              (this._globalRippleOptions = (0, s.f3M)(Z, { optional: !0 })),
              (this._platform = (0, s.f3M)(lt.t4)),
              (this._ngZone = (0, s.f3M)(s.R0b)),
              (this._hosts = new Map()),
              (this._onInteraction = (j) => {
                if (!(j.target instanceof HTMLElement)) return;
                const ue = j.target.closest(`[${$t}]`);
                ue && this._createRipple(ue);
              }),
              this._ngZone.runOutsideAngular(() => {
                for (const j of ye)
                  this._document?.addEventListener(j, this._onInteraction, ae);
              });
          }
          ngOnDestroy() {
            const j = this._hosts.keys();
            for (const ct of j) this.destroyRipple(ct);
            for (const ct of ye)
              this._document?.removeEventListener(ct, this._onInteraction, ae);
          }
          configureRipple(j, ct) {
            j.setAttribute($t, ""),
              (ct.className || !j.hasAttribute(fe)) &&
                j.setAttribute(fe, ct.className || ""),
              ct.centered && j.setAttribute(ke, ""),
              ct.disabled && j.setAttribute(yi, "");
          }
          getRipple(j) {
            return this._hosts.get(j) || this._createRipple(j);
          }
          setDisabled(j, ct) {
            const ue = this._hosts.get(j);
            ue
              ? (ue.disabled = ct)
              : ct
                ? j.setAttribute(yi, "")
                : j.removeAttribute(yi);
          }
          _createRipple(j) {
            if (!this._document) return;
            const ct = this._hosts.get(j);
            if (ct) return ct;
            j.querySelector(".mat-ripple")?.remove();
            const ue = this._document.createElement("span");
            ue.classList.add("mat-ripple", j.getAttribute(fe)), j.append(ue);
            const Wt = new rt(
              new s.SBq(ue),
              this._ngZone,
              this._platform,
              this._globalRippleOptions ? this._globalRippleOptions : void 0,
              this._animationMode ? this._animationMode : void 0,
            );
            return (
              (Wt._isInitialized = !0),
              (Wt.trigger = j),
              (Wt.centered = j.hasAttribute(ke)),
              (Wt.disabled = j.hasAttribute(yi)),
              this.attachRipple(j, Wt),
              Wt
            );
          }
          attachRipple(j, ct) {
            j.removeAttribute($t), this._hosts.set(j, ct);
          }
          destroyRipple(j) {
            const ct = this._hosts.get(j);
            ct && (ct.ngOnDestroy(), this._hosts.delete(j));
          }
          static #t = (this.ɵfac = function (ct) {
            return new (ct || vt)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: vt,
            factory: vt.ɵfac,
            providedIn: "root",
          }));
        }
        return vt;
      })();
    },
    7700: (ui, Zt, D) => {
      D.d(Zt, {
        WI: () => li,
        uw: () => Ri,
        H8: () => ot,
        ZT: () => Xi,
        xY: () => de,
        Is: () => rt,
        so: () => re,
        uh: () => _i,
      });
      var s = D(3651),
        x = D(6814),
        C = D(5879),
        p = D(7849),
        at = D(2831),
        lt = D(8484),
        bt = D(6028),
        B = D(8645),
        kt = D(4911),
        $ = D(2096),
        _ = D(9388),
        A = D(7921);
      function jt(Lt, ut) {}
      class gt {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let De = (() => {
        class Lt extends lt.en {
          constructor(q, Ct, H, Nt, X, se, it, Ut) {
            super(),
              (this._elementRef = q),
              (this._focusTrapFactory = Ct),
              (this._config = Nt),
              (this._interactivityChecker = X),
              (this._ngZone = se),
              (this._overlayRef = it),
              (this._focusMonitor = Ut),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this._ariaLabelledByQueue = []),
              (this.attachDomPortal = (ve) => {
                this._portalOutlet.hasAttached();
                const qe = this._portalOutlet.attachDomPortal(ve);
                return this._contentAttached(), qe;
              }),
              (this._document = H),
              this._config.ariaLabelledBy &&
                this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(q) {
            this._portalOutlet.hasAttached();
            const Ct = this._portalOutlet.attachComponentPortal(q);
            return this._contentAttached(), Ct;
          }
          attachTemplatePortal(q) {
            this._portalOutlet.hasAttached();
            const Ct = this._portalOutlet.attachTemplatePortal(q);
            return this._contentAttached(), Ct;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(q, Ct) {
            this._interactivityChecker.isFocusable(q) ||
              ((q.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const H = () => {
                  q.removeEventListener("blur", H),
                    q.removeEventListener("mousedown", H),
                    q.removeAttribute("tabindex");
                };
                q.addEventListener("blur", H),
                  q.addEventListener("mousedown", H);
              })),
              q.focus(Ct);
          }
          _focusByCssSelector(q, Ct) {
            let H = this._elementRef.nativeElement.querySelector(q);
            H && this._forceFocus(H, Ct);
          }
          _trapFocus() {
            const q = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case "dialog":
                this._containsFocus() || q.focus();
                break;
              case !0:
              case "first-tabbable":
                this._focusTrap.focusInitialElementWhenReady().then((Ct) => {
                  Ct || this._focusDialogContainer();
                });
                break;
              case "first-heading":
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]',
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const q = this._config.restoreFocus;
            let Ct = null;
            if (
              ("string" == typeof q
                ? (Ct = this._document.querySelector(q))
                : "boolean" == typeof q
                  ? (Ct = q ? this._elementFocusedBeforeDialogWasOpened : null)
                  : q && (Ct = q),
              this._config.restoreFocus && Ct && "function" == typeof Ct.focus)
            ) {
              const H = (0, at.ht)(),
                Nt = this._elementRef.nativeElement;
              (!H || H === this._document.body || H === Nt || Nt.contains(H)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(
                      Ct,
                      this._closeInteractionType,
                    ),
                    (this._closeInteractionType = null))
                  : Ct.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const q = this._elementRef.nativeElement,
              Ct = (0, at.ht)();
            return q === Ct || q.contains(Ct);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = (0, at.ht)());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
          static #t = (this.ɵfac = function (Ct) {
            return new (Ct || Lt)(
              C.Y36(C.SBq),
              C.Y36(p.qV),
              C.Y36(x.K0, 8),
              C.Y36(gt),
              C.Y36(p.ic),
              C.Y36(C.R0b),
              C.Y36(s.Iu),
              C.Y36(p.tE),
            );
          });
          static #e = (this.ɵcmp = C.Xpm({
            type: Lt,
            selectors: [["cdk-dialog-container"]],
            viewQuery: function (Ct, H) {
              if ((1 & Ct && C.Gf(lt.Pl, 7), 2 & Ct)) {
                let Nt;
                C.iGM((Nt = C.CRH())) && (H._portalOutlet = Nt.first);
              }
            },
            hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
            hostVars: 6,
            hostBindings: function (Ct, H) {
              2 & Ct &&
                C.uIk("id", H._config.id || null)("role", H._config.role)(
                  "aria-modal",
                  H._config.ariaModal,
                )(
                  "aria-labelledby",
                  H._config.ariaLabel ? null : H._ariaLabelledByQueue[0],
                )("aria-label", H._config.ariaLabel)(
                  "aria-describedby",
                  H._config.ariaDescribedBy || null,
                );
            },
            features: [C.qOj],
            decls: 1,
            vars: 0,
            consts: [["cdkPortalOutlet", ""]],
            template: function (Ct, H) {
              1 & Ct && C.YNc(0, jt, 0, 0, "ng-template", 0);
            },
            dependencies: [lt.Pl],
            styles: [
              ".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}",
            ],
            encapsulation: 2,
          }));
        }
        return Lt;
      })();
      class Ve {
        constructor(ut, q) {
          (this.overlayRef = ut),
            (this.config = q),
            (this.closed = new B.x()),
            (this.disableClose = q.disableClose),
            (this.backdropClick = ut.backdropClick()),
            (this.keydownEvents = ut.keydownEvents()),
            (this.outsidePointerEvents = ut.outsidePointerEvents()),
            (this.id = q.id),
            this.keydownEvents.subscribe((Ct) => {
              Ct.keyCode === bt.hY &&
                !this.disableClose &&
                !(0, bt.Vb)(Ct) &&
                (Ct.preventDefault(),
                this.close(void 0, { focusOrigin: "keyboard" }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: "mouse" });
            }),
            (this._detachSubscription = ut.detachments().subscribe(() => {
              !1 !== q.closeOnOverlayDetachments && this.close();
            }));
        }
        close(ut, q) {
          if (this.containerInstance) {
            const Ct = this.closed;
            (this.containerInstance._closeInteractionType =
              q?.focusOrigin || "program"),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              Ct.next(ut),
              Ct.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(ut = "", q = "") {
          return this.overlayRef.updateSize({ width: ut, height: q }), this;
        }
        addPanelClass(ut) {
          return this.overlayRef.addPanelClass(ut), this;
        }
        removePanelClass(ut) {
          return this.overlayRef.removePanelClass(ut), this;
        }
      }
      const He = new C.OlP("DialogScrollStrategy"),
        We = new C.OlP("DialogData"),
        Re = new C.OlP("DefaultDialogConfig"),
        _t = {
          provide: He,
          deps: [s.aV],
          useFactory: function wt(Lt) {
            return () => Lt.scrollStrategies.block();
          },
        };
      let St = 0,
        Pt = (() => {
          class Lt {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(q, Ct, H, Nt, X, se) {
              (this._overlay = q),
                (this._injector = Ct),
                (this._defaultOptions = H),
                (this._parentDialog = Nt),
                (this._overlayContainer = X),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new B.x()),
                (this._afterOpenedAtThisLevel = new B.x()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = (0, kt.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, A.O)(void 0)),
                )),
                (this._scrollStrategy = se);
            }
            open(q, Ct) {
              ((Ct = { ...(this._defaultOptions || new gt()), ...Ct }).id =
                Ct.id || "cdk-dialog-" + St++),
                Ct.id && this.getDialogById(Ct.id);
              const Nt = this._getOverlayConfig(Ct),
                X = this._overlay.create(Nt),
                se = new Ve(X, Ct),
                it = this._attachContainer(X, se, Ct);
              return (
                (se.containerInstance = it),
                this._attachDialogContent(q, se, it, Ct),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(se),
                se.closed.subscribe(() => this._removeOpenDialog(se, !0)),
                this.afterOpened.next(se),
                se
              );
            }
            closeAll() {
              ee(this.openDialogs, (q) => q.close());
            }
            getDialogById(q) {
              return this.openDialogs.find((Ct) => Ct.id === q);
            }
            ngOnDestroy() {
              ee(this._openDialogsAtThisLevel, (q) => {
                !1 === q.config.closeOnDestroy && this._removeOpenDialog(q, !1);
              }),
                ee(this._openDialogsAtThisLevel, (q) => q.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(q) {
              const Ct = new s.X_({
                positionStrategy:
                  q.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: q.scrollStrategy || this._scrollStrategy(),
                panelClass: q.panelClass,
                hasBackdrop: q.hasBackdrop,
                direction: q.direction,
                minWidth: q.minWidth,
                minHeight: q.minHeight,
                maxWidth: q.maxWidth,
                maxHeight: q.maxHeight,
                width: q.width,
                height: q.height,
                disposeOnNavigation: q.closeOnNavigation,
              });
              return (
                q.backdropClass && (Ct.backdropClass = q.backdropClass), Ct
              );
            }
            _attachContainer(q, Ct, H) {
              const Nt = H.injector || H.viewContainerRef?.injector,
                X = [
                  { provide: gt, useValue: H },
                  { provide: Ve, useValue: Ct },
                  { provide: s.Iu, useValue: q },
                ];
              let se;
              H.container
                ? "function" == typeof H.container
                  ? (se = H.container)
                  : ((se = H.container.type),
                    X.push(...H.container.providers(H)))
                : (se = De);
              const it = new lt.C5(
                se,
                H.viewContainerRef,
                C.zs3.create({ parent: Nt || this._injector, providers: X }),
                H.componentFactoryResolver,
              );
              return q.attach(it).instance;
            }
            _attachDialogContent(q, Ct, H, Nt) {
              if (q instanceof C.Rgc) {
                const X = this._createInjector(Nt, Ct, H, void 0);
                let se = { $implicit: Nt.data, dialogRef: Ct };
                Nt.templateContext &&
                  (se = {
                    ...se,
                    ...("function" == typeof Nt.templateContext
                      ? Nt.templateContext()
                      : Nt.templateContext),
                  }),
                  H.attachTemplatePortal(new lt.UE(q, null, se, X));
              } else {
                const X = this._createInjector(Nt, Ct, H, this._injector),
                  se = H.attachComponentPortal(
                    new lt.C5(
                      q,
                      Nt.viewContainerRef,
                      X,
                      Nt.componentFactoryResolver,
                    ),
                  );
                (Ct.componentRef = se), (Ct.componentInstance = se.instance);
              }
            }
            _createInjector(q, Ct, H, Nt) {
              const X = q.injector || q.viewContainerRef?.injector,
                se = [
                  { provide: We, useValue: q.data },
                  { provide: Ve, useValue: Ct },
                ];
              return (
                q.providers &&
                  ("function" == typeof q.providers
                    ? se.push(...q.providers(Ct, q, H))
                    : se.push(...q.providers)),
                q.direction &&
                  (!X || !X.get(_.Is, null, { optional: !0 })) &&
                  se.push({
                    provide: _.Is,
                    useValue: { value: q.direction, change: (0, $.of)() },
                  }),
                C.zs3.create({ parent: X || Nt, providers: se })
              );
            }
            _removeOpenDialog(q, Ct) {
              const H = this.openDialogs.indexOf(q);
              H > -1 &&
                (this.openDialogs.splice(H, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((Nt, X) => {
                    Nt
                      ? X.setAttribute("aria-hidden", Nt)
                      : X.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  Ct && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const q = this._overlayContainer.getContainerElement();
              if (q.parentElement) {
                const Ct = q.parentElement.children;
                for (let H = Ct.length - 1; H > -1; H--) {
                  const Nt = Ct[H];
                  Nt !== q &&
                    "SCRIPT" !== Nt.nodeName &&
                    "STYLE" !== Nt.nodeName &&
                    !Nt.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      Nt,
                      Nt.getAttribute("aria-hidden"),
                    ),
                    Nt.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _getAfterAllClosed() {
              const q = this._parentDialog;
              return q
                ? q._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            static #t = (this.ɵfac = function (Ct) {
              return new (Ct || Lt)(
                C.LFG(s.aV),
                C.LFG(C.zs3),
                C.LFG(Re, 8),
                C.LFG(Lt, 12),
                C.LFG(s.Xj),
                C.LFG(He),
              );
            });
            static #e = (this.ɵprov = C.Yz7({ token: Lt, factory: Lt.ɵfac }));
          }
          return Lt;
        })();
      function ee(Lt, ut) {
        let q = Lt.length;
        for (; q--; ) ut(Lt[q]);
      }
      let Kt = (() => {
        class Lt {
          static #t = (this.ɵfac = function (Ct) {
            return new (Ct || Lt)();
          });
          static #e = (this.ɵmod = C.oAB({ type: Lt }));
          static #i = (this.ɵinj = C.cJS({
            providers: [Pt, _t],
            imports: [s.U8, lt.eL, p.rt, lt.eL],
          }));
        }
        return Lt;
      })();
      var ze = D(2495),
        mi = D(3019),
        ie = D(2181),
        vi = D(8180),
        Ge = D(3680);
      function Si(Lt, ut) {}
      D(6825);
      class Vi {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const qi = "mdc-dialog--open",
        Ie = "mdc-dialog--opening",
        Fe = "mdc-dialog--closing";
      let Ft = (() => {
        class Lt extends De {
          constructor(q, Ct, H, Nt, X, se, it, Ut) {
            super(q, Ct, H, Nt, X, se, it, Ut),
              (this._animationStateChanged = new C.vpe());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(q) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: "opened",
                totalTime: q,
              });
          }
          static #t = (this.ɵfac = function (Ct) {
            return new (Ct || Lt)(
              C.Y36(C.SBq),
              C.Y36(p.qV),
              C.Y36(x.K0, 8),
              C.Y36(Vi),
              C.Y36(p.ic),
              C.Y36(C.R0b),
              C.Y36(s.Iu),
              C.Y36(p.tE),
            );
          });
          static #e = (this.ɵcmp = C.Xpm({
            type: Lt,
            selectors: [["ng-component"]],
            features: [C.qOj],
            decls: 0,
            vars: 0,
            template: function (Ct, H) {},
            encapsulation: 2,
          }));
        }
        return Lt;
      })();
      const Mt = "--mat-dialog-transition-duration";
      function we(Lt) {
        return null == Lt
          ? null
          : "number" == typeof Lt
            ? Lt
            : Lt.endsWith("ms")
              ? (0, ze.su)(Lt.substring(0, Lt.length - 2))
              : Lt.endsWith("s")
                ? 1e3 * (0, ze.su)(Lt.substring(0, Lt.length - 1))
                : "0" === Lt
                  ? 0
                  : null;
      }
      let Vt = (() => {
        class Lt extends Ft {
          constructor(q, Ct, H, Nt, X, se, it, Ut, ve) {
            super(q, Ct, H, Nt, X, se, it, ve),
              (this._animationMode = Ut),
              (this._animationsEnabled =
                "NoopAnimations" !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._enterAnimationDuration = this._animationsEnabled
                ? (we(this._config.enterAnimationDuration) ?? 150)
                : 0),
              (this._exitAnimationDuration = this._animationsEnabled
                ? (we(this._config.exitAnimationDuration) ?? 75)
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._enterAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: "closed",
                    totalTime: this._exitAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: "opening",
              totalTime: this._enterAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    Mt,
                    `${this._enterAnimationDuration}ms`,
                  ),
                  this._requestAnimationFrame(() =>
                    this._hostElement.classList.add(Ie, qi),
                  ),
                  this._waitForAnimationToComplete(
                    this._enterAnimationDuration,
                    this._finishDialogOpen,
                  ))
                : (this._hostElement.classList.add(qi),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: "closing",
              totalTime: this._exitAnimationDuration,
            }),
              this._hostElement.classList.remove(qi),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    Mt,
                    `${this._exitAnimationDuration}ms`,
                  ),
                  this._requestAnimationFrame(() =>
                    this._hostElement.classList.add(Fe),
                  ),
                  this._waitForAnimationToComplete(
                    this._exitAnimationDuration,
                    this._finishDialogClose,
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(Ie, Fe);
          }
          _waitForAnimationToComplete(q, Ct) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(Ct, q));
          }
          _requestAnimationFrame(q) {
            this._ngZone.runOutsideAngular(() => {
              "function" == typeof requestAnimationFrame
                ? requestAnimationFrame(q)
                : q();
            });
          }
          static #t = (this.ɵfac = function (Ct) {
            return new (Ct || Lt)(
              C.Y36(C.SBq),
              C.Y36(p.qV),
              C.Y36(x.K0, 8),
              C.Y36(Vi),
              C.Y36(p.ic),
              C.Y36(C.R0b),
              C.Y36(s.Iu),
              C.Y36(C.QbO, 8),
              C.Y36(p.tE),
            );
          });
          static #e = (this.ɵcmp = C.Xpm({
            type: Lt,
            selectors: [["mat-dialog-container"]],
            hostAttrs: [
              "tabindex",
              "-1",
              1,
              "mat-mdc-dialog-container",
              "mdc-dialog",
            ],
            hostVars: 8,
            hostBindings: function (Ct, H) {
              2 & Ct &&
                (C.Ikx("id", H._config.id),
                C.uIk("aria-modal", H._config.ariaModal)(
                  "role",
                  H._config.role,
                )(
                  "aria-labelledby",
                  H._config.ariaLabel ? null : H._ariaLabelledByQueue[0],
                )("aria-label", H._config.ariaLabel)(
                  "aria-describedby",
                  H._config.ariaDescribedBy || null,
                ),
                C.ekj("_mat-animation-noopable", !H._animationsEnabled));
            },
            features: [C.qOj],
            decls: 3,
            vars: 0,
            consts: [
              [1, "mdc-dialog__container"],
              [1, "mat-mdc-dialog-surface", "mdc-dialog__surface"],
              ["cdkPortalOutlet", ""],
            ],
            template: function (Ct, H) {
              1 & Ct &&
                (C.TgZ(0, "div", 0)(1, "div", 1),
                C.YNc(2, Si, 0, 0, "ng-template", 2),
                C.qZA()());
            },
            dependencies: [lt.Pl],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{--mdc-dialog-container-elevation-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);--mdc-dialog-container-shadow-color:#000;--mdc-dialog-container-shape:4px;--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          }));
        }
        return Lt;
      })();
      class re {
        constructor(ut, q, Ct) {
          (this._ref = ut),
            (this._containerInstance = Ct),
            (this._afterOpened = new B.x()),
            (this._beforeClosed = new B.x()),
            (this._state = 0),
            (this.disableClose = q.disableClose),
            (this.id = ut.id),
            Ct._animationStateChanged
              .pipe(
                (0, ie.h)((H) => "opened" === H.state),
                (0, vi.q)(1),
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            Ct._animationStateChanged
              .pipe(
                (0, ie.h)((H) => "closed" === H.state),
                (0, vi.q)(1),
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            ut.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            (0, mi.T)(
              this.backdropClick(),
              this.keydownEvents().pipe(
                (0, ie.h)(
                  (H) =>
                    H.keyCode === bt.hY && !this.disableClose && !(0, bt.Vb)(H),
                ),
              ),
            ).subscribe((H) => {
              this.disableClose ||
                (H.preventDefault(),
                Le(this, "keydown" === H.type ? "keyboard" : "mouse"));
            });
        }
        close(ut) {
          (this._result = ut),
            this._containerInstance._animationStateChanged
              .pipe(
                (0, ie.h)((q) => "closing" === q.state),
                (0, vi.q)(1),
              )
              .subscribe((q) => {
                this._beforeClosed.next(ut),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    q.totalTime + 100,
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(ut) {
          let q = this._ref.config.positionStrategy;
          return (
            ut && (ut.left || ut.right)
              ? ut.left
                ? q.left(ut.left)
                : q.right(ut.right)
              : q.centerHorizontally(),
            ut && (ut.top || ut.bottom)
              ? ut.top
                ? q.top(ut.top)
                : q.bottom(ut.bottom)
              : q.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(ut = "", q = "") {
          return this._ref.updateSize(ut, q), this;
        }
        addPanelClass(ut) {
          return this._ref.addPanelClass(ut), this;
        }
        removePanelClass(ut) {
          return this._ref.removePanelClass(ut), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      function Le(Lt, ut, q) {
        return (Lt._closeInteractionType = ut), Lt.close(q);
      }
      const li = new C.OlP("MatMdcDialogData"),
        ii = new C.OlP("mat-mdc-dialog-default-options"),
        Mi = new C.OlP("mat-mdc-dialog-scroll-strategy"),
        ri = {
          provide: Mi,
          deps: [s.aV],
          useFactory: function fi(Lt) {
            return () => Lt.scrollStrategies.block();
          },
        };
      let Be = 0,
        Ne = (() => {
          class Lt {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const q = this._parentDialog;
              return q
                ? q._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(q, Ct, H, Nt, X, se, it, Ut, ve, qe) {
              (this._overlay = q),
                (this._defaultOptions = H),
                (this._parentDialog = Nt),
                (this._dialogRefConstructor = it),
                (this._dialogContainerType = Ut),
                (this._dialogDataToken = ve),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new B.x()),
                (this._afterOpenedAtThisLevel = new B.x()),
                (this._idPrefix = "mat-dialog-"),
                (this.dialogConfigClass = Vi),
                (this.afterAllClosed = (0, kt.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, A.O)(void 0)),
                )),
                (this._scrollStrategy = se),
                (this._dialog = Ct.get(Pt));
            }
            open(q, Ct) {
              let H;
              ((Ct = { ...(this._defaultOptions || new Vi()), ...Ct }).id =
                Ct.id || `${this._idPrefix}${Be++}`),
                (Ct.scrollStrategy =
                  Ct.scrollStrategy || this._scrollStrategy());
              const Nt = this._dialog.open(q, {
                ...Ct,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: Ct },
                    { provide: gt, useValue: Ct },
                  ],
                },
                templateContext: () => ({ dialogRef: H }),
                providers: (X, se, it) => (
                  (H = new this._dialogRefConstructor(X, Ct, it)),
                  H.updatePosition(Ct?.position),
                  [
                    { provide: this._dialogContainerType, useValue: it },
                    { provide: this._dialogDataToken, useValue: se.data },
                    { provide: this._dialogRefConstructor, useValue: H },
                  ]
                ),
              });
              return (
                (H.componentRef = Nt.componentRef),
                (H.componentInstance = Nt.componentInstance),
                this.openDialogs.push(H),
                this.afterOpened.next(H),
                H.afterClosed().subscribe(() => {
                  const X = this.openDialogs.indexOf(H);
                  X > -1 &&
                    (this.openDialogs.splice(X, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                H
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(q) {
              return this.openDialogs.find((Ct) => Ct.id === q);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(q) {
              let Ct = q.length;
              for (; Ct--; ) q[Ct].close();
            }
            static #t = (this.ɵfac = function (Ct) {
              C.$Z();
            });
            static #e = (this.ɵprov = C.Yz7({ token: Lt, factory: Lt.ɵfac }));
          }
          return Lt;
        })(),
        Ri = (() => {
          class Lt extends Ne {
            constructor(q, Ct, H, Nt, X, se, it, Ut) {
              super(q, Ct, Nt, se, it, X, re, Vt, li, Ut),
                (this._idPrefix = "mat-mdc-dialog-");
            }
            static #t = (this.ɵfac = function (Ct) {
              return new (Ct || Lt)(
                C.LFG(s.aV),
                C.LFG(C.zs3),
                C.LFG(x.Ye, 8),
                C.LFG(ii, 8),
                C.LFG(Mi),
                C.LFG(Lt, 12),
                C.LFG(s.Xj),
                C.LFG(C.QbO, 8),
              );
            });
            static #e = (this.ɵprov = C.Yz7({ token: Lt, factory: Lt.ɵfac }));
          }
          return Lt;
        })(),
        gi = 0,
        Xi = (() => {
          class Lt {
            constructor(q, Ct, H) {
              (this.dialogRef = q),
                (this._elementRef = Ct),
                (this._dialog = H),
                (this.type = "button");
            }
            ngOnInit() {
              this.dialogRef ||
                (this.dialogRef = Z(
                  this._elementRef,
                  this._dialog.openDialogs,
                ));
            }
            ngOnChanges(q) {
              const Ct = q._matDialogClose || q._matDialogCloseResult;
              Ct && (this.dialogResult = Ct.currentValue);
            }
            _onButtonClick(q) {
              Le(
                this.dialogRef,
                0 === q.screenX && 0 === q.screenY ? "keyboard" : "mouse",
                this.dialogResult,
              );
            }
            static #t = (this.ɵfac = function (Ct) {
              return new (Ct || Lt)(C.Y36(re, 8), C.Y36(C.SBq), C.Y36(Ri));
            });
            static #e = (this.ɵdir = C.lG2({
              type: Lt,
              selectors: [
                ["", "mat-dialog-close", ""],
                ["", "matDialogClose", ""],
              ],
              hostVars: 2,
              hostBindings: function (Ct, H) {
                1 & Ct &&
                  C.NdJ("click", function (X) {
                    return H._onButtonClick(X);
                  }),
                  2 & Ct &&
                    C.uIk("aria-label", H.ariaLabel || null)("type", H.type);
              },
              inputs: {
                ariaLabel: ["aria-label", "ariaLabel"],
                type: "type",
                dialogResult: ["mat-dialog-close", "dialogResult"],
                _matDialogClose: ["matDialogClose", "_matDialogClose"],
              },
              exportAs: ["matDialogClose"],
              features: [C.TTD],
            }));
          }
          return Lt;
        })(),
        _i = (() => {
          class Lt {
            constructor(q, Ct, H) {
              (this._dialogRef = q),
                (this._elementRef = Ct),
                (this._dialog = H),
                (this.id = "mat-mdc-dialog-title-" + gi++);
            }
            ngOnInit() {
              this._dialogRef ||
                (this._dialogRef = Z(
                  this._elementRef,
                  this._dialog.openDialogs,
                )),
                this._dialogRef &&
                  Promise.resolve().then(() => {
                    this._dialogRef._containerInstance?._ariaLabelledByQueue?.push(
                      this.id,
                    );
                  });
            }
            ngOnDestroy() {
              const q =
                this._dialogRef?._containerInstance?._ariaLabelledByQueue;
              q &&
                Promise.resolve().then(() => {
                  const Ct = q.indexOf(this.id);
                  Ct > -1 && q.splice(Ct, 1);
                });
            }
            static #t = (this.ɵfac = function (Ct) {
              return new (Ct || Lt)(C.Y36(re, 8), C.Y36(C.SBq), C.Y36(Ri));
            });
            static #e = (this.ɵdir = C.lG2({
              type: Lt,
              selectors: [
                ["", "mat-dialog-title", ""],
                ["", "matDialogTitle", ""],
              ],
              hostAttrs: [1, "mat-mdc-dialog-title", "mdc-dialog__title"],
              hostVars: 1,
              hostBindings: function (Ct, H) {
                2 & Ct && C.Ikx("id", H.id);
              },
              inputs: { id: "id" },
              exportAs: ["matDialogTitle"],
            }));
          }
          return Lt;
        })(),
        de = (() => {
          class Lt {
            static #t = (this.ɵfac = function (Ct) {
              return new (Ct || Lt)();
            });
            static #e = (this.ɵdir = C.lG2({
              type: Lt,
              selectors: [
                ["", "mat-dialog-content", ""],
                ["mat-dialog-content"],
                ["", "matDialogContent", ""],
              ],
              hostAttrs: [1, "mat-mdc-dialog-content", "mdc-dialog__content"],
            }));
          }
          return Lt;
        })(),
        ot = (() => {
          class Lt {
            constructor() {
              this.align = "start";
            }
            static #t = (this.ɵfac = function (Ct) {
              return new (Ct || Lt)();
            });
            static #e = (this.ɵdir = C.lG2({
              type: Lt,
              selectors: [
                ["", "mat-dialog-actions", ""],
                ["mat-dialog-actions"],
                ["", "matDialogActions", ""],
              ],
              hostAttrs: [1, "mat-mdc-dialog-actions", "mdc-dialog__actions"],
              hostVars: 4,
              hostBindings: function (Ct, H) {
                2 & Ct &&
                  C.ekj(
                    "mat-mdc-dialog-actions-align-center",
                    "center" === H.align,
                  )("mat-mdc-dialog-actions-align-end", "end" === H.align);
              },
              inputs: { align: "align" },
            }));
          }
          return Lt;
        })();
      function Z(Lt, ut) {
        let q = Lt.nativeElement.parentElement;
        for (; q && !q.classList.contains("mat-mdc-dialog-container"); )
          q = q.parentElement;
        return q ? ut.find((Ct) => Ct.id === q.id) : null;
      }
      let rt = (() => {
        class Lt {
          static #t = (this.ɵfac = function (Ct) {
            return new (Ct || Lt)();
          });
          static #e = (this.ɵmod = C.oAB({ type: Lt }));
          static #i = (this.ɵinj = C.cJS({
            providers: [Ri, ri],
            imports: [Kt, s.U8, lt.eL, Ge.BQ, Ge.BQ],
          }));
        }
        return Lt;
      })();
    },
    6385: (ui, Zt, D) => {
      D.d(Zt, { t: () => p });
      var s = D(5879),
        x = D(3680);
      let p = (() => {
        class at {
          static #t = (this.ɵfac = function (B) {
            return new (B || at)();
          });
          static #e = (this.ɵmod = s.oAB({ type: at }));
          static #i = (this.ɵinj = s.cJS({ imports: [x.BQ, x.BQ] }));
        }
        return at;
      })();
    },
    9157: (ui, Zt, D) => {
      D.d(Zt, {
        G_: () => Nt,
        TO: () => ri,
        KE: () => ki,
        Eo: () => ut,
        lN: () => Xt,
        hX: () => ii,
      });
      var s = D(5879),
        x = D(9388),
        C = D(2831),
        p = D(7394),
        at = D(8645),
        lt = D(3019),
        bt = D(9773),
        B = D(5592),
        kt = D(2181),
        $ = D(4552);
      class _ extends at.x {
        constructor(ye = 1 / 0, $t = 1 / 0, fe = $.l) {
          super(),
            (this._bufferSize = ye),
            (this._windowTime = $t),
            (this._timestampProvider = fe),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = $t === 1 / 0),
            (this._bufferSize = Math.max(1, ye)),
            (this._windowTime = Math.max(1, $t));
        }
        next(ye) {
          const {
            isStopped: $t,
            _buffer: fe,
            _infiniteTimeWindow: ke,
            _timestampProvider: yi,
            _windowTime: pt,
          } = this;
          $t || (fe.push(ye), !ke && fe.push(yi.now() + pt)),
            this._trimBuffer(),
            super.next(ye);
        }
        _subscribe(ye) {
          this._throwIfClosed(), this._trimBuffer();
          const $t = this._innerSubscribe(ye),
            { _infiniteTimeWindow: fe, _buffer: ke } = this,
            yi = ke.slice();
          for (let pt = 0; pt < yi.length && !ye.closed; pt += fe ? 1 : 2)
            ye.next(yi[pt]);
          return this._checkFinalizedStatuses(ye), $t;
        }
        _trimBuffer() {
          const {
              _bufferSize: ye,
              _timestampProvider: $t,
              _buffer: fe,
              _infiniteTimeWindow: ke,
            } = this,
            yi = (ke ? 1 : 2) * ye;
          if (
            (ye < 1 / 0 && yi < fe.length && fe.splice(0, fe.length - yi), !ke)
          ) {
            const pt = $t.now();
            let vt = 0;
            for (let U = 1; U < fe.length && fe[U] <= pt; U += 2) vt = U;
            vt && fe.splice(0, vt + 1);
          }
        }
      }
      var A = D(3020);
      class Jt {
        constructor(ye) {
          (this._box = ye),
            (this._destroyed = new at.x()),
            (this._resizeSubject = new at.x()),
            (this._elementObservables = new Map()),
            typeof ResizeObserver < "u" &&
              (this._resizeObserver = new ResizeObserver(($t) =>
                this._resizeSubject.next($t),
              ));
        }
        observe(ye) {
          return (
            this._elementObservables.has(ye) ||
              this._elementObservables.set(
                ye,
                new B.y(($t) => {
                  const fe = this._resizeSubject.subscribe($t);
                  return (
                    this._resizeObserver?.observe(ye, { box: this._box }),
                    () => {
                      this._resizeObserver?.unobserve(ye),
                        fe.unsubscribe(),
                        this._elementObservables.delete(ye);
                    }
                  );
                }).pipe(
                  (0, kt.h)(($t) => $t.some((fe) => fe.target === ye)),
                  (function jt(ae, ye, $t) {
                    let fe,
                      ke = !1;
                    return (
                      ae && "object" == typeof ae
                        ? ({
                            bufferSize: fe = 1 / 0,
                            windowTime: ye = 1 / 0,
                            refCount: ke = !1,
                            scheduler: $t,
                          } = ae)
                        : (fe = ae ?? 1 / 0),
                      (0, A.B)({
                        connector: () => new _(fe, ye, $t),
                        resetOnError: !0,
                        resetOnComplete: !1,
                        resetOnRefCountZero: ke,
                      })
                    );
                  })({ bufferSize: 1, refCount: !0 }),
                  (0, bt.R)(this._destroyed),
                ),
              ),
            this._elementObservables.get(ye)
          );
        }
        destroy() {
          this._destroyed.next(),
            this._destroyed.complete(),
            this._resizeSubject.complete(),
            this._elementObservables.clear();
        }
      }
      let De = (() => {
        class ae {
          constructor() {
            (this._observers = new Map()), (this._ngZone = (0, s.f3M)(s.R0b));
          }
          ngOnDestroy() {
            for (const [, $t] of this._observers) $t.destroy();
            this._observers.clear();
          }
          observe($t, fe) {
            const ke = fe?.box || "content-box";
            return (
              this._observers.has(ke) || this._observers.set(ke, new Jt(ke)),
              this._observers.get(ke).observe($t)
            );
          }
          static #t = (this.ɵfac = function (fe) {
            return new (fe || ae)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: ae,
            factory: ae.ɵfac,
            providedIn: "root",
          }));
        }
        return ae;
      })();
      var Ve = D(2495),
        He = D(6825),
        We = D(6814),
        Re = D(7131),
        wt = D(3680);
      const _t = ["notch"],
        St = ["matFormFieldNotchedOutline", ""],
        Pt = ["*"],
        ee = ["textField"],
        Kt = ["iconPrefixContainer"],
        ze = ["textPrefixContainer"];
      function mi(ae, ye) {
        1 & ae && s._UZ(0, "span", 19);
      }
      function ie(ae, ye) {
        if (
          (1 & ae &&
            (s.TgZ(0, "label", 17),
            s.Hsn(1, 1),
            s.YNc(2, mi, 1, 0, "span", 18),
            s.qZA()),
          2 & ae)
        ) {
          const $t = s.oxw(2);
          s.Q6J("floating", $t._shouldLabelFloat())(
            "monitorResize",
            $t._hasOutline(),
          )("id", $t._labelId),
            s.uIk("for", $t._control.id),
            s.xp6(2),
            s.Q6J("ngIf", !$t.hideRequiredMarker && $t._control.required);
        }
      }
      function vi(ae, ye) {
        if ((1 & ae && s.YNc(0, ie, 3, 5, "label", 16), 2 & ae)) {
          const $t = s.oxw();
          s.Q6J("ngIf", $t._hasFloatingLabel());
        }
      }
      function Ge(ae, ye) {
        1 & ae && s._UZ(0, "div", 20);
      }
      function hi(ae, ye) {}
      function Si(ae, ye) {
        if ((1 & ae && s.YNc(0, hi, 0, 0, "ng-template", 22), 2 & ae)) {
          s.oxw(2);
          const $t = s.MAs(1);
          s.Q6J("ngTemplateOutlet", $t);
        }
      }
      function Vi(ae, ye) {
        if (
          (1 & ae &&
            (s.TgZ(0, "div", 21),
            s.YNc(1, Si, 1, 1, "ng-template", 9),
            s.qZA()),
          2 & ae)
        ) {
          const $t = s.oxw();
          s.Q6J("matFormFieldNotchedOutlineOpen", $t._shouldLabelFloat()),
            s.xp6(1),
            s.Q6J("ngIf", !$t._forceDisplayInfixLabel());
        }
      }
      function qi(ae, ye) {
        1 & ae && (s.TgZ(0, "div", 23, 24), s.Hsn(2, 2), s.qZA());
      }
      function Ie(ae, ye) {
        1 & ae && (s.TgZ(0, "div", 25, 26), s.Hsn(2, 3), s.qZA());
      }
      function Fe(ae, ye) {}
      function xe(ae, ye) {
        if ((1 & ae && s.YNc(0, Fe, 0, 0, "ng-template", 22), 2 & ae)) {
          s.oxw();
          const $t = s.MAs(1);
          s.Q6J("ngTemplateOutlet", $t);
        }
      }
      function Ue(ae, ye) {
        1 & ae && (s.TgZ(0, "div", 27), s.Hsn(1, 4), s.qZA());
      }
      function Ft(ae, ye) {
        1 & ae && (s.TgZ(0, "div", 28), s.Hsn(1, 5), s.qZA());
      }
      function Mt(ae, ye) {
        1 & ae && s._UZ(0, "div", 29);
      }
      function we(ae, ye) {
        if ((1 & ae && (s.TgZ(0, "div", 30), s.Hsn(1, 6), s.qZA()), 2 & ae)) {
          const $t = s.oxw();
          s.Q6J("@transitionMessages", $t._subscriptAnimationState);
        }
      }
      function Vt(ae, ye) {
        if ((1 & ae && (s.TgZ(0, "mat-hint", 34), s._uU(1), s.qZA()), 2 & ae)) {
          const $t = s.oxw(2);
          s.Q6J("id", $t._hintLabelId), s.xp6(1), s.Oqu($t.hintLabel);
        }
      }
      function re(ae, ye) {
        if (
          (1 & ae &&
            (s.TgZ(0, "div", 31),
            s.YNc(1, Vt, 2, 2, "mat-hint", 32),
            s.Hsn(2, 7),
            s._UZ(3, "div", 33),
            s.Hsn(4, 8),
            s.qZA()),
          2 & ae)
        ) {
          const $t = s.oxw();
          s.Q6J("@transitionMessages", $t._subscriptAnimationState),
            s.xp6(1),
            s.Q6J("ngIf", $t.hintLabel);
        }
      }
      const Le = [
          "*",
          [["mat-label"]],
          [
            ["", "matPrefix", ""],
            ["", "matIconPrefix", ""],
          ],
          [["", "matTextPrefix", ""]],
          [["", "matTextSuffix", ""]],
          [
            ["", "matSuffix", ""],
            ["", "matIconSuffix", ""],
          ],
          [["mat-error"], ["", "matError", ""]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        li = [
          "*",
          "mat-label",
          "[matPrefix], [matIconPrefix]",
          "[matTextPrefix]",
          "[matTextSuffix]",
          "[matSuffix], [matIconSuffix]",
          "mat-error, [matError]",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let ii = (() => {
          class ae {
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: ae,
              selectors: [["mat-label"]],
            }));
          }
          return ae;
        })(),
        Mi = 0;
      const fi = new s.OlP("MatError");
      let ri = (() => {
          class ae {
            constructor($t, fe) {
              (this.id = "mat-mdc-error-" + Mi++),
                $t || fe.nativeElement.setAttribute("aria-live", "polite");
            }
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)(s.$8M("aria-live"), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: ae,
              selectors: [["mat-error"], ["", "matError", ""]],
              hostAttrs: [
                "aria-atomic",
                "true",
                1,
                "mat-mdc-form-field-error",
                "mat-mdc-form-field-bottom-align",
              ],
              hostVars: 1,
              hostBindings: function (fe, ke) {
                2 & fe && s.Ikx("id", ke.id);
              },
              inputs: { id: "id" },
              features: [s._Bn([{ provide: fi, useExisting: ae }])],
            }));
          }
          return ae;
        })(),
        te = 0,
        Be = (() => {
          class ae {
            constructor() {
              (this.align = "start"), (this.id = "mat-mdc-hint-" + te++);
            }
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: ae,
              selectors: [["mat-hint"]],
              hostAttrs: [
                1,
                "mat-mdc-form-field-hint",
                "mat-mdc-form-field-bottom-align",
              ],
              hostVars: 4,
              hostBindings: function (fe, ke) {
                2 & fe &&
                  (s.Ikx("id", ke.id),
                  s.uIk("align", null),
                  s.ekj("mat-mdc-form-field-hint-end", "end" === ke.align));
              },
              inputs: { align: "align", id: "id" },
            }));
          }
          return ae;
        })();
      const Ne = new s.OlP("MatPrefix"),
        gi = new s.OlP("MatSuffix"),
        _i = new s.OlP("FloatingLabelParent");
      let de = (() => {
        class ae {
          get floating() {
            return this._floating;
          }
          set floating($t) {
            (this._floating = $t), this.monitorResize && this._handleResize();
          }
          get monitorResize() {
            return this._monitorResize;
          }
          set monitorResize($t) {
            (this._monitorResize = $t),
              this._monitorResize
                ? this._subscribeToResize()
                : this._resizeSubscription.unsubscribe();
          }
          constructor($t) {
            (this._elementRef = $t),
              (this._floating = !1),
              (this._monitorResize = !1),
              (this._resizeObserver = (0, s.f3M)(De)),
              (this._ngZone = (0, s.f3M)(s.R0b)),
              (this._parent = (0, s.f3M)(_i)),
              (this._resizeSubscription = new p.w0());
          }
          ngOnDestroy() {
            this._resizeSubscription.unsubscribe();
          }
          getWidth() {
            return (function ot(ae) {
              if (null !== ae.offsetParent) return ae.scrollWidth;
              const $t = ae.cloneNode(!0);
              $t.style.setProperty("position", "absolute"),
                $t.style.setProperty(
                  "transform",
                  "translate(-9999px, -9999px)",
                ),
                document.documentElement.appendChild($t);
              const fe = $t.scrollWidth;
              return $t.remove(), fe;
            })(this._elementRef.nativeElement);
          }
          get element() {
            return this._elementRef.nativeElement;
          }
          _handleResize() {
            setTimeout(() => this._parent._handleLabelResized());
          }
          _subscribeToResize() {
            this._resizeSubscription.unsubscribe(),
              this._ngZone.runOutsideAngular(() => {
                this._resizeSubscription = this._resizeObserver
                  .observe(this._elementRef.nativeElement, {
                    box: "border-box",
                  })
                  .subscribe(() => this._handleResize());
              });
          }
          static #t = (this.ɵfac = function (fe) {
            return new (fe || ae)(s.Y36(s.SBq));
          });
          static #e = (this.ɵdir = s.lG2({
            type: ae,
            selectors: [["label", "matFormFieldFloatingLabel", ""]],
            hostAttrs: [1, "mdc-floating-label", "mat-mdc-floating-label"],
            hostVars: 2,
            hostBindings: function (fe, ke) {
              2 & fe && s.ekj("mdc-floating-label--float-above", ke.floating);
            },
            inputs: { floating: "floating", monitorResize: "monitorResize" },
          }));
        }
        return ae;
      })();
      const Z = "mdc-line-ripple--active",
        rt = "mdc-line-ripple--deactivating";
      let yt = (() => {
          class ae {
            constructor($t, fe) {
              (this._elementRef = $t),
                (this._handleTransitionEnd = (ke) => {
                  const yi = this._elementRef.nativeElement.classList,
                    pt = yi.contains(rt);
                  "opacity" === ke.propertyName && pt && yi.remove(Z, rt);
                }),
                fe.runOutsideAngular(() => {
                  $t.nativeElement.addEventListener(
                    "transitionend",
                    this._handleTransitionEnd,
                  );
                });
            }
            activate() {
              const $t = this._elementRef.nativeElement.classList;
              $t.remove(rt), $t.add(Z);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(rt);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                "transitionend",
                this._handleTransitionEnd,
              );
            }
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)(s.Y36(s.SBq), s.Y36(s.R0b));
            });
            static #e = (this.ɵdir = s.lG2({
              type: ae,
              selectors: [["div", "matFormFieldLineRipple", ""]],
              hostAttrs: [1, "mdc-line-ripple"],
            }));
          }
          return ae;
        })(),
        Rt = (() => {
          class ae {
            constructor($t, fe) {
              (this._elementRef = $t), (this._ngZone = fe), (this.open = !1);
            }
            ngAfterViewInit() {
              const $t = this._elementRef.nativeElement.querySelector(
                ".mdc-floating-label",
              );
              $t
                ? (this._elementRef.nativeElement.classList.add(
                    "mdc-notched-outline--upgraded",
                  ),
                  "function" == typeof requestAnimationFrame &&
                    (($t.style.transitionDuration = "0s"),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => ($t.style.transitionDuration = ""),
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    "mdc-notched-outline--no-label",
                  );
            }
            _setNotchWidth($t) {
              this._notch.nativeElement.style.width =
                this.open && $t
                  ? `calc(${$t}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : "";
            }
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)(s.Y36(s.SBq), s.Y36(s.R0b));
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: ae,
              selectors: [["div", "matFormFieldNotchedOutline", ""]],
              viewQuery: function (fe, ke) {
                if ((1 & fe && s.Gf(_t, 5), 2 & fe)) {
                  let yi;
                  s.iGM((yi = s.CRH())) && (ke._notch = yi.first);
                }
              },
              hostAttrs: [1, "mdc-notched-outline"],
              hostVars: 2,
              hostBindings: function (fe, ke) {
                2 & fe && s.ekj("mdc-notched-outline--notched", ke.open);
              },
              inputs: { open: ["matFormFieldNotchedOutlineOpen", "open"] },
              attrs: St,
              ngContentSelectors: Pt,
              decls: 5,
              vars: 0,
              consts: [
                [1, "mdc-notched-outline__leading"],
                [1, "mdc-notched-outline__notch"],
                ["notch", ""],
                [1, "mdc-notched-outline__trailing"],
              ],
              template: function (fe, ke) {
                1 & fe &&
                  (s.F$t(),
                  s._UZ(0, "div", 0),
                  s.TgZ(1, "div", 1, 2),
                  s.Hsn(3),
                  s.qZA(),
                  s._UZ(4, "div", 3));
              },
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return ae;
        })();
      const Lt = {
        transitionMessages: (0, He.X$)("transitionMessages", [
          (0, He.SB)(
            "enter",
            (0, He.oB)({ opacity: 1, transform: "translateY(0%)" }),
          ),
          (0, He.eR)("void => enter", [
            (0, He.oB)({ opacity: 0, transform: "translateY(-5px)" }),
            (0, He.jt)("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      let ut = (() => {
        class ae {
          static #t = (this.ɵfac = function (fe) {
            return new (fe || ae)();
          });
          static #e = (this.ɵdir = s.lG2({ type: ae }));
        }
        return ae;
      })();
      const Nt = new s.OlP("MatFormField"),
        X = new s.OlP("MAT_FORM_FIELD_DEFAULT_OPTIONS");
      let se = 0,
        ki = (() => {
          class ae {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker($t) {
              this._hideRequiredMarker = (0, Ve.Ig)($t);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || "auto";
            }
            set floatLabel($t) {
              $t !== this._floatLabel &&
                ((this._floatLabel = $t),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance($t) {
              const fe = this._appearance;
              (this._appearance = $t || this._defaults?.appearance || "fill"),
                "outline" === this._appearance &&
                  this._appearance !== fe &&
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0);
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                "fixed"
              );
            }
            set subscriptSizing($t) {
              this._subscriptSizing =
                $t || this._defaults?.subscriptSizing || "fixed";
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel($t) {
              (this._hintLabel = $t), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control($t) {
              this._explicitFormFieldControl = $t;
            }
            constructor($t, fe, ke, yi, pt, vt, U, j) {
              (this._elementRef = $t),
                (this._changeDetectorRef = fe),
                (this._ngZone = ke),
                (this._dir = yi),
                (this._platform = pt),
                (this._defaults = vt),
                (this._animationMode = U),
                (this._hideRequiredMarker = !1),
                (this.color = "primary"),
                (this._appearance = "fill"),
                (this._subscriptSizing = null),
                (this._hintLabel = ""),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = "mat-mdc-form-field-label-" + se++),
                (this._hintLabelId = "mat-mdc-hint-" + se++),
                (this._subscriptAnimationState = ""),
                (this._destroyed = new at.x()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                vt &&
                  (vt.appearance && (this.appearance = vt.appearance),
                  (this._hideRequiredMarker = !!vt?.hideRequiredMarker),
                  vt.color && (this.color = vt.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = "always");
            }
            _initializeControl() {
              const $t = this._control;
              $t.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${$t.controlType}`,
                ),
                $t.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                $t.ngControl &&
                  $t.ngControl.valueChanges &&
                  $t.ngControl.valueChanges
                    .pipe((0, bt.R)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                ($t) => !$t._isText,
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  ($t) => $t._isText,
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  ($t) => !$t._isText,
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  ($t) => $t._isText,
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                (0, lt.T)(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes,
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  "mdc-text-field--focused",
                  this._control.focused,
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe((0, bt.R)(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe((0, bt.R)(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0),
                  );
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel;
            }
            _hasOutline() {
              return "outline" === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward($t) {
              const fe = this._control ? this._control.ngControl : null;
              return fe && fe[$t];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _handleLabelResized() {
              this._refreshOutlineNotchWidth();
            }
            _refreshOutlineNotchWidth() {
              this._hasOutline() &&
              this._floatingLabel &&
              this._shouldLabelFloat()
                ? this._notchedOutline?._setNotchWidth(
                    this._floatingLabel.getWidth(),
                  )
                : this._notchedOutline?._setNotchWidth(0);
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let $t = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    $t.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const fe = this._hintChildren
                      ? this._hintChildren.find((yi) => "start" === yi.align)
                      : null,
                    ke = this._hintChildren
                      ? this._hintChildren.find((yi) => "end" === yi.align)
                      : null;
                  fe
                    ? $t.push(fe.id)
                    : this._hintLabel && $t.push(this._hintLabelId),
                    ke && $t.push(ke.id);
                } else
                  this._errorChildren &&
                    $t.push(...this._errorChildren.map((fe) => fe.id));
                this._control.setDescribedByIds($t);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const $t = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void ($t.style.transform = "");
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const fe = this._iconPrefixContainer?.nativeElement,
                ke = this._textPrefixContainer?.nativeElement,
                yi = fe?.getBoundingClientRect().width ?? 0,
                pt = ke?.getBoundingClientRect().width ?? 0;
              $t.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${"rtl" === this._dir.value ? "-1" : "1"} * (${yi + pt}px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const $t = this._elementRef.nativeElement;
              if ($t.getRootNode) {
                const fe = $t.getRootNode();
                return fe && fe !== $t;
              }
              return document.documentElement.contains($t);
            }
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)(
                s.Y36(s.SBq),
                s.Y36(s.sBO),
                s.Y36(s.R0b),
                s.Y36(x.Is),
                s.Y36(C.t4),
                s.Y36(X, 8),
                s.Y36(s.QbO, 8),
                s.Y36(We.K0),
              );
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: ae,
              selectors: [["mat-form-field"]],
              contentQueries: function (fe, ke, yi) {
                if (
                  (1 & fe &&
                    (s.Suo(yi, ii, 5),
                    s.Suo(yi, ii, 7),
                    s.Suo(yi, ut, 5),
                    s.Suo(yi, Ne, 5),
                    s.Suo(yi, gi, 5),
                    s.Suo(yi, fi, 5),
                    s.Suo(yi, Be, 5)),
                  2 & fe)
                ) {
                  let pt;
                  s.iGM((pt = s.CRH())) && (ke._labelChildNonStatic = pt.first),
                    s.iGM((pt = s.CRH())) && (ke._labelChildStatic = pt.first),
                    s.iGM((pt = s.CRH())) && (ke._formFieldControl = pt.first),
                    s.iGM((pt = s.CRH())) && (ke._prefixChildren = pt),
                    s.iGM((pt = s.CRH())) && (ke._suffixChildren = pt),
                    s.iGM((pt = s.CRH())) && (ke._errorChildren = pt),
                    s.iGM((pt = s.CRH())) && (ke._hintChildren = pt);
                }
              },
              viewQuery: function (fe, ke) {
                if (
                  (1 & fe &&
                    (s.Gf(ee, 5),
                    s.Gf(Kt, 5),
                    s.Gf(ze, 5),
                    s.Gf(de, 5),
                    s.Gf(Rt, 5),
                    s.Gf(yt, 5)),
                  2 & fe)
                ) {
                  let yi;
                  s.iGM((yi = s.CRH())) && (ke._textField = yi.first),
                    s.iGM((yi = s.CRH())) &&
                      (ke._iconPrefixContainer = yi.first),
                    s.iGM((yi = s.CRH())) &&
                      (ke._textPrefixContainer = yi.first),
                    s.iGM((yi = s.CRH())) && (ke._floatingLabel = yi.first),
                    s.iGM((yi = s.CRH())) && (ke._notchedOutline = yi.first),
                    s.iGM((yi = s.CRH())) && (ke._lineRipple = yi.first);
                }
              },
              hostAttrs: [1, "mat-mdc-form-field"],
              hostVars: 42,
              hostBindings: function (fe, ke) {
                2 & fe &&
                  s.ekj(
                    "mat-mdc-form-field-label-always-float",
                    ke._shouldAlwaysFloat(),
                  )("mat-mdc-form-field-has-icon-prefix", ke._hasIconPrefix)(
                    "mat-mdc-form-field-has-icon-suffix",
                    ke._hasIconSuffix,
                  )("mat-form-field-invalid", ke._control.errorState)(
                    "mat-form-field-disabled",
                    ke._control.disabled,
                  )("mat-form-field-autofilled", ke._control.autofilled)(
                    "mat-form-field-no-animations",
                    "NoopAnimations" === ke._animationMode,
                  )("mat-form-field-appearance-fill", "fill" == ke.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == ke.appearance,
                  )(
                    "mat-form-field-hide-placeholder",
                    ke._hasFloatingLabel() && !ke._shouldLabelFloat(),
                  )("mat-focused", ke._control.focused)(
                    "mat-primary",
                    "accent" !== ke.color && "warn" !== ke.color,
                  )("mat-accent", "accent" === ke.color)(
                    "mat-warn",
                    "warn" === ke.color,
                  )("ng-untouched", ke._shouldForward("untouched"))(
                    "ng-touched",
                    ke._shouldForward("touched"),
                  )("ng-pristine", ke._shouldForward("pristine"))(
                    "ng-dirty",
                    ke._shouldForward("dirty"),
                  )("ng-valid", ke._shouldForward("valid"))(
                    "ng-invalid",
                    ke._shouldForward("invalid"),
                  )("ng-pending", ke._shouldForward("pending"));
              },
              inputs: {
                hideRequiredMarker: "hideRequiredMarker",
                color: "color",
                floatLabel: "floatLabel",
                appearance: "appearance",
                subscriptSizing: "subscriptSizing",
                hintLabel: "hintLabel",
              },
              exportAs: ["matFormField"],
              features: [
                s._Bn([
                  { provide: Nt, useExisting: ae },
                  { provide: _i, useExisting: ae },
                ]),
              ],
              ngContentSelectors: li,
              decls: 18,
              vars: 23,
              consts: [
                ["labelTemplate", ""],
                [1, "mat-mdc-text-field-wrapper", "mdc-text-field", 3, "click"],
                ["textField", ""],
                ["class", "mat-mdc-form-field-focus-overlay", 4, "ngIf"],
                [1, "mat-mdc-form-field-flex"],
                [
                  "matFormFieldNotchedOutline",
                  "",
                  3,
                  "matFormFieldNotchedOutlineOpen",
                  4,
                  "ngIf",
                ],
                ["class", "mat-mdc-form-field-icon-prefix", 4, "ngIf"],
                ["class", "mat-mdc-form-field-text-prefix", 4, "ngIf"],
                [1, "mat-mdc-form-field-infix"],
                [3, "ngIf"],
                ["class", "mat-mdc-form-field-text-suffix", 4, "ngIf"],
                ["class", "mat-mdc-form-field-icon-suffix", 4, "ngIf"],
                ["matFormFieldLineRipple", "", 4, "ngIf"],
                [
                  1,
                  "mat-mdc-form-field-subscript-wrapper",
                  "mat-mdc-form-field-bottom-align",
                  3,
                  "ngSwitch",
                ],
                [
                  "class",
                  "mat-mdc-form-field-error-wrapper",
                  4,
                  "ngSwitchCase",
                ],
                ["class", "mat-mdc-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [
                  "matFormFieldFloatingLabel",
                  "",
                  3,
                  "floating",
                  "monitorResize",
                  "id",
                  4,
                  "ngIf",
                ],
                [
                  "matFormFieldFloatingLabel",
                  "",
                  3,
                  "floating",
                  "monitorResize",
                  "id",
                ],
                [
                  "aria-hidden",
                  "true",
                  "class",
                  "mat-mdc-form-field-required-marker mdc-floating-label--required",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-mdc-form-field-required-marker",
                  "mdc-floating-label--required",
                ],
                [1, "mat-mdc-form-field-focus-overlay"],
                [
                  "matFormFieldNotchedOutline",
                  "",
                  3,
                  "matFormFieldNotchedOutlineOpen",
                ],
                [3, "ngTemplateOutlet"],
                [1, "mat-mdc-form-field-icon-prefix"],
                ["iconPrefixContainer", ""],
                [1, "mat-mdc-form-field-text-prefix"],
                ["textPrefixContainer", ""],
                [1, "mat-mdc-form-field-text-suffix"],
                [1, "mat-mdc-form-field-icon-suffix"],
                ["matFormFieldLineRipple", ""],
                [1, "mat-mdc-form-field-error-wrapper"],
                [1, "mat-mdc-form-field-hint-wrapper"],
                [3, "id", 4, "ngIf"],
                [1, "mat-mdc-form-field-hint-spacer"],
                [3, "id"],
              ],
              template: function (fe, ke) {
                1 & fe &&
                  (s.F$t(Le),
                  s.YNc(0, vi, 1, 1, "ng-template", null, 0, s.W1O),
                  s.TgZ(2, "div", 1, 2),
                  s.NdJ("click", function (pt) {
                    return ke._control.onContainerClick(pt);
                  }),
                  s.YNc(4, Ge, 1, 0, "div", 3),
                  s.TgZ(5, "div", 4),
                  s.YNc(6, Vi, 2, 2, "div", 5),
                  s.YNc(7, qi, 3, 0, "div", 6),
                  s.YNc(8, Ie, 3, 0, "div", 7),
                  s.TgZ(9, "div", 8),
                  s.YNc(10, xe, 1, 1, "ng-template", 9),
                  s.Hsn(11),
                  s.qZA(),
                  s.YNc(12, Ue, 2, 0, "div", 10),
                  s.YNc(13, Ft, 2, 0, "div", 11),
                  s.qZA(),
                  s.YNc(14, Mt, 1, 0, "div", 12),
                  s.qZA(),
                  s.TgZ(15, "div", 13),
                  s.YNc(16, we, 2, 1, "div", 14),
                  s.YNc(17, re, 5, 2, "div", 15),
                  s.qZA()),
                  2 & fe &&
                    (s.xp6(2),
                    s.ekj("mdc-text-field--filled", !ke._hasOutline())(
                      "mdc-text-field--outlined",
                      ke._hasOutline(),
                    )("mdc-text-field--no-label", !ke._hasFloatingLabel())(
                      "mdc-text-field--disabled",
                      ke._control.disabled,
                    )("mdc-text-field--invalid", ke._control.errorState),
                    s.xp6(2),
                    s.Q6J("ngIf", !ke._hasOutline() && !ke._control.disabled),
                    s.xp6(2),
                    s.Q6J("ngIf", ke._hasOutline()),
                    s.xp6(1),
                    s.Q6J("ngIf", ke._hasIconPrefix),
                    s.xp6(1),
                    s.Q6J("ngIf", ke._hasTextPrefix),
                    s.xp6(2),
                    s.Q6J(
                      "ngIf",
                      !ke._hasOutline() || ke._forceDisplayInfixLabel(),
                    ),
                    s.xp6(2),
                    s.Q6J("ngIf", ke._hasTextSuffix),
                    s.xp6(1),
                    s.Q6J("ngIf", ke._hasIconSuffix),
                    s.xp6(1),
                    s.Q6J("ngIf", !ke._hasOutline()),
                    s.xp6(1),
                    s.ekj(
                      "mat-mdc-form-field-subscript-dynamic-size",
                      "dynamic" === ke.subscriptSizing,
                    ),
                    s.Q6J("ngSwitch", ke._getDisplayedMessages()),
                    s.xp6(1),
                    s.Q6J("ngSwitchCase", "error"),
                    s.xp6(1),
                    s.Q6J("ngSwitchCase", "hint"));
              },
              dependencies: [We.O5, We.tP, We.RF, We.n9, Be, de, Rt, yt],
              styles: [
                '.mdc-text-field{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:4px;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:4px;border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:4px;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:4px;border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:4px;border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:4px;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;pointer-events:none}.mdc-notched-outline__trailing{flex-grow:1}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{border-top:1px solid;border-bottom:1px solid}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{max-width:calc(100% - 12px * 2)}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-text-field--filled{--mdc-filled-text-field-active-indicator-height:1px;--mdc-filled-text-field-focus-active-indicator-height:2px;--mdc-filled-text-field-container-shape:4px;border-top-left-radius:var(--mdc-filled-text-field-container-shape);border-top-right-radius:var(--mdc-filled-text-field-container-shape);border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-caret-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-focus-label-text-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-disabled-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-label-text-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-filled-text-field-error-focus-label-text-color)}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font);font-size:var(--mdc-filled-text-field-label-text-size);font-weight:var(--mdc-filled-text-field-label-text-weight);letter-spacing:var(--mdc-filled-text-field-label-text-tracking)}@media all{.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}}@media all{.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color)}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color)}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color)}.mdc-text-field--filled .mdc-line-ripple::before{border-bottom-width:var(--mdc-filled-text-field-active-indicator-height)}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height)}.mdc-text-field--outlined{--mdc-outlined-text-field-outline-width:1px;--mdc-outlined-text-field-focus-outline-width:2px;--mdc-outlined-text-field-container-shape:4px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-caret-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-focus-label-text-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-disabled-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-label-text-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label--float-above{color:var(--mdc-outlined-text-field-error-focus-label-text-color)}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font);font-size:var(--mdc-outlined-text-field-label-text-size);font-weight:var(--mdc-outlined-text-field-label-text-weight);letter-spacing:var(--mdc-outlined-text-field-label-text-tracking)}@media all{.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color)}}@media all{.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-outlined-text-field-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-outlined-text-field-container-shape))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-outlined-text-field-container-shape))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-outlined-text-field-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-outlined-text-field-container-shape))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-outlined-text-field-container-shape))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-outlined-text-field-container-shape))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-outlined-text-field-container-shape))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-outlined-text-field-container-shape) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-hover-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-focus-outline-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-disabled-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-hover-outline-color)}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-outlined-text-field-error-focus-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline .mdc-notched-outline__trailing{border-width:var(--mdc-outlined-text-field-outline-width)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mdc-notched-outline__trailing{border-width:var(--mdc-outlined-text-field-focus-outline-width)}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font);line-height:var(--mat-form-field-container-text-line-height);font-size:var(--mat-form-field-container-text-size);letter-spacing:var(--mat-form-field-container-text-tracking);font-weight:var(--mat-form-field-container-text-weight)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size) * var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 34.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 10.25px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 24.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - 32px)) translateY(calc(0% - 34.75px)) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}100%{transform:translateX(calc(0% - -32px)) translateY(calc(0% - 34.75px)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}100%{transform:translateX(calc(0% - 0%)) translateY(calc(0% - 106%)) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}',
              ],
              encapsulation: 2,
              data: { animation: [Lt.transitionMessages] },
              changeDetection: 0,
            }));
          }
          return ae;
        })(),
        Xt = (() => {
          class ae {
            static #t = (this.ɵfac = function (fe) {
              return new (fe || ae)();
            });
            static #e = (this.ɵmod = s.oAB({ type: ae }));
            static #i = (this.ɵinj = s.cJS({
              imports: [wt.BQ, We.ez, Re.Q8, wt.BQ],
            }));
          }
          return ae;
        })();
    },
    617: (ui, Zt, D) => {
      D.d(Zt, { Hw: () => Ue, Ps: () => Ft });
      var s = D(5879),
        x = D(3680),
        C = D(2495),
        p = D(6814),
        at = D(2096),
        lt = D(8504),
        bt = D(9315),
        B = D(7394),
        kt = D(9397),
        $ = D(7398),
        _ = D(6306),
        A = D(4716),
        jt = D(3020),
        gt = D(8180),
        Jt = D(9862),
        De = D(6593);
      const Ve = ["*"];
      let He;
      function Re(Mt) {
        return (
          (function We() {
            if (void 0 === He && ((He = null), typeof window < "u")) {
              const Mt = window;
              void 0 !== Mt.trustedTypes &&
                (He = Mt.trustedTypes.createPolicy("angular#components", {
                  createHTML: (we) => we,
                }));
            }
            return He;
          })()?.createHTML(Mt) || Mt
        );
      }
      function wt(Mt) {
        return Error(`Unable to find icon with the name "${Mt}"`);
      }
      function St(Mt) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${Mt}".`,
        );
      }
      function Pt(Mt) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${Mt}".`,
        );
      }
      class ee {
        constructor(we, Vt, re) {
          (this.url = we), (this.svgText = Vt), (this.options = re);
        }
      }
      let Kt = (() => {
        class Mt {
          constructor(Vt, re, Le, li) {
            (this._httpClient = Vt),
              (this._sanitizer = re),
              (this._errorHandler = li),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                "material-icons",
                "mat-ligature-font",
              ]),
              (this._document = Le);
          }
          addSvgIcon(Vt, re, Le) {
            return this.addSvgIconInNamespace("", Vt, re, Le);
          }
          addSvgIconLiteral(Vt, re, Le) {
            return this.addSvgIconLiteralInNamespace("", Vt, re, Le);
          }
          addSvgIconInNamespace(Vt, re, Le, li) {
            return this._addSvgIconConfig(Vt, re, new ee(Le, null, li));
          }
          addSvgIconResolver(Vt) {
            return this._resolvers.push(Vt), this;
          }
          addSvgIconLiteralInNamespace(Vt, re, Le, li) {
            const ii = this._sanitizer.sanitize(s.q3G.HTML, Le);
            if (!ii) throw Pt(Le);
            const Mi = Re(ii);
            return this._addSvgIconConfig(Vt, re, new ee("", Mi, li));
          }
          addSvgIconSet(Vt, re) {
            return this.addSvgIconSetInNamespace("", Vt, re);
          }
          addSvgIconSetLiteral(Vt, re) {
            return this.addSvgIconSetLiteralInNamespace("", Vt, re);
          }
          addSvgIconSetInNamespace(Vt, re, Le) {
            return this._addSvgIconSetConfig(Vt, new ee(re, null, Le));
          }
          addSvgIconSetLiteralInNamespace(Vt, re, Le) {
            const li = this._sanitizer.sanitize(s.q3G.HTML, re);
            if (!li) throw Pt(re);
            const ii = Re(li);
            return this._addSvgIconSetConfig(Vt, new ee("", ii, Le));
          }
          registerFontClassAlias(Vt, re = Vt) {
            return this._fontCssClassesByAlias.set(Vt, re), this;
          }
          classNameForFontAlias(Vt) {
            return this._fontCssClassesByAlias.get(Vt) || Vt;
          }
          setDefaultFontSetClass(...Vt) {
            return (this._defaultFontSetClass = Vt), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(Vt) {
            const re = this._sanitizer.sanitize(s.q3G.RESOURCE_URL, Vt);
            if (!re) throw St(Vt);
            const Le = this._cachedIconsByUrl.get(re);
            return Le
              ? (0, at.of)(ie(Le))
              : this._loadSvgIconFromConfig(new ee(Vt, null)).pipe(
                  (0, kt.b)((li) => this._cachedIconsByUrl.set(re, li)),
                  (0, $.U)((li) => ie(li)),
                );
          }
          getNamedSvgIcon(Vt, re = "") {
            const Le = vi(re, Vt);
            let li = this._svgIconConfigs.get(Le);
            if (li) return this._getSvgFromConfig(li);
            if (((li = this._getIconConfigFromResolvers(re, Vt)), li))
              return (
                this._svgIconConfigs.set(Le, li), this._getSvgFromConfig(li)
              );
            const ii = this._iconSetConfigs.get(re);
            return ii
              ? this._getSvgFromIconSetConfigs(Vt, ii)
              : (0, lt._)(wt(Le));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(Vt) {
            return Vt.svgText
              ? (0, at.of)(ie(this._svgElementFromConfig(Vt)))
              : this._loadSvgIconFromConfig(Vt).pipe((0, $.U)((re) => ie(re)));
          }
          _getSvgFromIconSetConfigs(Vt, re) {
            const Le = this._extractIconWithNameFromAnySet(Vt, re);
            if (Le) return (0, at.of)(Le);
            const li = re
              .filter((ii) => !ii.svgText)
              .map((ii) =>
                this._loadSvgIconSetFromConfig(ii).pipe(
                  (0, _.K)((Mi) => {
                    const ri = `Loading icon set URL: ${this._sanitizer.sanitize(s.q3G.RESOURCE_URL, ii.url)} failed: ${Mi.message}`;
                    return (
                      this._errorHandler.handleError(new Error(ri)),
                      (0, at.of)(null)
                    );
                  }),
                ),
              );
            return (0, bt.D)(li).pipe(
              (0, $.U)(() => {
                const ii = this._extractIconWithNameFromAnySet(Vt, re);
                if (!ii) throw wt(Vt);
                return ii;
              }),
            );
          }
          _extractIconWithNameFromAnySet(Vt, re) {
            for (let Le = re.length - 1; Le >= 0; Le--) {
              const li = re[Le];
              if (li.svgText && li.svgText.toString().indexOf(Vt) > -1) {
                const ii = this._svgElementFromConfig(li),
                  Mi = this._extractSvgIconFromSet(ii, Vt, li.options);
                if (Mi) return Mi;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(Vt) {
            return this._fetchIcon(Vt).pipe(
              (0, kt.b)((re) => (Vt.svgText = re)),
              (0, $.U)(() => this._svgElementFromConfig(Vt)),
            );
          }
          _loadSvgIconSetFromConfig(Vt) {
            return Vt.svgText
              ? (0, at.of)(null)
              : this._fetchIcon(Vt).pipe((0, kt.b)((re) => (Vt.svgText = re)));
          }
          _extractSvgIconFromSet(Vt, re, Le) {
            const li = Vt.querySelector(`[id="${re}"]`);
            if (!li) return null;
            const ii = li.cloneNode(!0);
            if ((ii.removeAttribute("id"), "svg" === ii.nodeName.toLowerCase()))
              return this._setSvgAttributes(ii, Le);
            if ("symbol" === ii.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(ii), Le);
            const Mi = this._svgElementFromString(Re("<svg></svg>"));
            return Mi.appendChild(ii), this._setSvgAttributes(Mi, Le);
          }
          _svgElementFromString(Vt) {
            const re = this._document.createElement("DIV");
            re.innerHTML = Vt;
            const Le = re.querySelector("svg");
            if (!Le) throw Error("<svg> tag not found");
            return Le;
          }
          _toSvgElement(Vt) {
            const re = this._svgElementFromString(Re("<svg></svg>")),
              Le = Vt.attributes;
            for (let li = 0; li < Le.length; li++) {
              const { name: ii, value: Mi } = Le[li];
              "id" !== ii && re.setAttribute(ii, Mi);
            }
            for (let li = 0; li < Vt.childNodes.length; li++)
              Vt.childNodes[li].nodeType === this._document.ELEMENT_NODE &&
                re.appendChild(Vt.childNodes[li].cloneNode(!0));
            return re;
          }
          _setSvgAttributes(Vt, re) {
            return (
              Vt.setAttribute("fit", ""),
              Vt.setAttribute("height", "100%"),
              Vt.setAttribute("width", "100%"),
              Vt.setAttribute("preserveAspectRatio", "xMidYMid meet"),
              Vt.setAttribute("focusable", "false"),
              re && re.viewBox && Vt.setAttribute("viewBox", re.viewBox),
              Vt
            );
          }
          _fetchIcon(Vt) {
            const { url: re, options: Le } = Vt,
              li = Le?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function _t() {
                return Error(
                  "Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.",
                );
              })();
            if (null == re) throw Error(`Cannot fetch icon from URL "${re}".`);
            const ii = this._sanitizer.sanitize(s.q3G.RESOURCE_URL, re);
            if (!ii) throw St(re);
            const Mi = this._inProgressUrlFetches.get(ii);
            if (Mi) return Mi;
            const fi = this._httpClient
              .get(ii, { responseType: "text", withCredentials: li })
              .pipe(
                (0, $.U)((ri) => Re(ri)),
                (0, A.x)(() => this._inProgressUrlFetches.delete(ii)),
                (0, jt.B)(),
              );
            return this._inProgressUrlFetches.set(ii, fi), fi;
          }
          _addSvgIconConfig(Vt, re, Le) {
            return this._svgIconConfigs.set(vi(Vt, re), Le), this;
          }
          _addSvgIconSetConfig(Vt, re) {
            const Le = this._iconSetConfigs.get(Vt);
            return Le ? Le.push(re) : this._iconSetConfigs.set(Vt, [re]), this;
          }
          _svgElementFromConfig(Vt) {
            if (!Vt.svgElement) {
              const re = this._svgElementFromString(Vt.svgText);
              this._setSvgAttributes(re, Vt.options), (Vt.svgElement = re);
            }
            return Vt.svgElement;
          }
          _getIconConfigFromResolvers(Vt, re) {
            for (let Le = 0; Le < this._resolvers.length; Le++) {
              const li = this._resolvers[Le](re, Vt);
              if (li)
                return Ge(li)
                  ? new ee(li.url, null, li.options)
                  : new ee(li, null);
            }
          }
          static #t = (this.ɵfac = function (re) {
            return new (re || Mt)(
              s.LFG(Jt.eN, 8),
              s.LFG(De.H7),
              s.LFG(p.K0, 8),
              s.LFG(s.qLn),
            );
          });
          static #e = (this.ɵprov = s.Yz7({
            token: Mt,
            factory: Mt.ɵfac,
            providedIn: "root",
          }));
        }
        return Mt;
      })();
      function ie(Mt) {
        return Mt.cloneNode(!0);
      }
      function vi(Mt, we) {
        return Mt + ":" + we;
      }
      function Ge(Mt) {
        return !(!Mt.url || !Mt.options);
      }
      const hi = (0, x.pj)(
          class {
            constructor(Mt) {
              this._elementRef = Mt;
            }
          },
        ),
        Si = new s.OlP("MAT_ICON_DEFAULT_OPTIONS"),
        Vi = new s.OlP("mat-icon-location", {
          providedIn: "root",
          factory: function qi() {
            const Mt = (0, s.f3M)(p.K0),
              we = Mt ? Mt.location : null;
            return { getPathname: () => (we ? we.pathname + we.search : "") };
          },
        }),
        Ie = [
          "clip-path",
          "color-profile",
          "src",
          "cursor",
          "fill",
          "filter",
          "marker",
          "marker-start",
          "marker-mid",
          "marker-end",
          "mask",
          "stroke",
        ],
        Fe = Ie.map((Mt) => `[${Mt}]`).join(", "),
        xe = /^url\(['"]?#(.*?)['"]?\)$/;
      let Ue = (() => {
          class Mt extends hi {
            get inline() {
              return this._inline;
            }
            set inline(Vt) {
              this._inline = (0, C.Ig)(Vt);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(Vt) {
              Vt !== this._svgIcon &&
                (Vt
                  ? this._updateSvgIcon(Vt)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = Vt));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(Vt) {
              const re = this._cleanupFontValue(Vt);
              re !== this._fontSet &&
                ((this._fontSet = re), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(Vt) {
              const re = this._cleanupFontValue(Vt);
              re !== this._fontIcon &&
                ((this._fontIcon = re), this._updateFontIconClasses());
            }
            constructor(Vt, re, Le, li, ii, Mi) {
              super(Vt),
                (this._iconRegistry = re),
                (this._location = li),
                (this._errorHandler = ii),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = B.w0.EMPTY),
                Mi &&
                  (Mi.color && (this.color = this.defaultColor = Mi.color),
                  Mi.fontSet && (this.fontSet = Mi.fontSet)),
                Le || Vt.nativeElement.setAttribute("aria-hidden", "true");
            }
            _splitIconName(Vt) {
              if (!Vt) return ["", ""];
              const re = Vt.split(":");
              switch (re.length) {
                case 1:
                  return ["", re[0]];
                case 2:
                  return re;
                default:
                  throw Error(`Invalid icon name: "${Vt}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const Vt = this._elementsWithExternalReferences;
              if (Vt && Vt.size) {
                const re = this._location.getPathname();
                re !== this._previousPath &&
                  ((this._previousPath = re),
                  this._prependPathToReferences(re));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(Vt) {
              this._clearSvgElement();
              const re = this._location.getPathname();
              (this._previousPath = re),
                this._cacheChildrenWithExternalReferences(Vt),
                this._prependPathToReferences(re),
                this._elementRef.nativeElement.appendChild(Vt);
            }
            _clearSvgElement() {
              const Vt = this._elementRef.nativeElement;
              let re = Vt.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                re--;

              ) {
                const Le = Vt.childNodes[re];
                (1 !== Le.nodeType || "svg" === Le.nodeName.toLowerCase()) &&
                  Le.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const Vt = this._elementRef.nativeElement,
                re = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter((Le) => Le.length > 0);
              this._previousFontSetClass.forEach((Le) =>
                Vt.classList.remove(Le),
              ),
                re.forEach((Le) => Vt.classList.add(Le)),
                (this._previousFontSetClass = re),
                this.fontIcon !== this._previousFontIconClass &&
                  !re.includes("mat-ligature-font") &&
                  (this._previousFontIconClass &&
                    Vt.classList.remove(this._previousFontIconClass),
                  this.fontIcon && Vt.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(Vt) {
              return "string" == typeof Vt ? Vt.trim().split(" ")[0] : Vt;
            }
            _prependPathToReferences(Vt) {
              const re = this._elementsWithExternalReferences;
              re &&
                re.forEach((Le, li) => {
                  Le.forEach((ii) => {
                    li.setAttribute(ii.name, `url('${Vt}#${ii.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(Vt) {
              const re = Vt.querySelectorAll(Fe),
                Le = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let li = 0; li < re.length; li++)
                Ie.forEach((ii) => {
                  const Mi = re[li],
                    fi = Mi.getAttribute(ii),
                    ri = fi ? fi.match(xe) : null;
                  if (ri) {
                    let te = Le.get(Mi);
                    te || ((te = []), Le.set(Mi, te)),
                      te.push({ name: ii, value: ri[1] });
                  }
                });
            }
            _updateSvgIcon(Vt) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                Vt)
              ) {
                const [re, Le] = this._splitIconName(Vt);
                re && (this._svgNamespace = re),
                  Le && (this._svgName = Le),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(Le, re)
                    .pipe((0, gt.q)(1))
                    .subscribe(
                      (li) => this._setSvgElement(li),
                      (li) => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${re}:${Le}! ${li.message}`,
                          ),
                        );
                      },
                    ));
              }
            }
            static #t = (this.ɵfac = function (re) {
              return new (re || Mt)(
                s.Y36(s.SBq),
                s.Y36(Kt),
                s.$8M("aria-hidden"),
                s.Y36(Vi),
                s.Y36(s.qLn),
                s.Y36(Si, 8),
              );
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Mt,
              selectors: [["mat-icon"]],
              hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
              hostVars: 8,
              hostBindings: function (re, Le) {
                2 & re &&
                  (s.uIk(
                    "data-mat-icon-type",
                    Le._usingFontIcon() ? "font" : "svg",
                  )("data-mat-icon-name", Le._svgName || Le.fontIcon)(
                    "data-mat-icon-namespace",
                    Le._svgNamespace || Le.fontSet,
                  )("fontIcon", Le._usingFontIcon() ? Le.fontIcon : null),
                  s.ekj("mat-icon-inline", Le.inline)(
                    "mat-icon-no-color",
                    "primary" !== Le.color &&
                      "accent" !== Le.color &&
                      "warn" !== Le.color,
                  ));
              },
              inputs: {
                color: "color",
                inline: "inline",
                svgIcon: "svgIcon",
                fontSet: "fontSet",
                fontIcon: "fontIcon",
              },
              exportAs: ["matIcon"],
              features: [s.qOj],
              ngContentSelectors: Ve,
              decls: 1,
              vars: 0,
              template: function (re, Le) {
                1 & re && (s.F$t(), s.Hsn(0));
              },
              styles: [
                "mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return Mt;
        })(),
        Ft = (() => {
          class Mt {
            static #t = (this.ɵfac = function (re) {
              return new (re || Mt)();
            });
            static #e = (this.ɵmod = s.oAB({ type: Mt }));
            static #i = (this.ɵinj = s.cJS({ imports: [x.BQ, x.BQ] }));
          }
          return Mt;
        })();
    },
    2032: (ui, Zt, D) => {
      D.d(Zt, { Nt: () => We, c: () => Re });
      var s = D(2495),
        x = D(2831),
        C = D(5879),
        p = D(6232),
        at = D(8645);
      const lt = (0, x.i$)({ passive: !0 });
      let bt = (() => {
          class wt {
            constructor(St, Pt) {
              (this._platform = St),
                (this._ngZone = Pt),
                (this._monitoredElements = new Map());
            }
            monitor(St) {
              if (!this._platform.isBrowser) return p.E;
              const Pt = (0, s.fI)(St),
                ee = this._monitoredElements.get(Pt);
              if (ee) return ee.subject;
              const Kt = new at.x(),
                ze = "cdk-text-field-autofilled",
                mi = (ie) => {
                  "cdk-text-field-autofill-start" !== ie.animationName ||
                  Pt.classList.contains(ze)
                    ? "cdk-text-field-autofill-end" === ie.animationName &&
                      Pt.classList.contains(ze) &&
                      (Pt.classList.remove(ze),
                      this._ngZone.run(() =>
                        Kt.next({ target: ie.target, isAutofilled: !1 }),
                      ))
                    : (Pt.classList.add(ze),
                      this._ngZone.run(() =>
                        Kt.next({ target: ie.target, isAutofilled: !0 }),
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  Pt.addEventListener("animationstart", mi, lt),
                    Pt.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(Pt, {
                  subject: Kt,
                  unlisten: () => {
                    Pt.removeEventListener("animationstart", mi, lt);
                  },
                }),
                Kt
              );
            }
            stopMonitoring(St) {
              const Pt = (0, s.fI)(St),
                ee = this._monitoredElements.get(Pt);
              ee &&
                (ee.unlisten(),
                ee.subject.complete(),
                Pt.classList.remove("cdk-text-field-autofill-monitored"),
                Pt.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(Pt));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((St, Pt) =>
                this.stopMonitoring(Pt),
              );
            }
            static #t = (this.ɵfac = function (Pt) {
              return new (Pt || wt)(C.LFG(x.t4), C.LFG(C.R0b));
            });
            static #e = (this.ɵprov = C.Yz7({
              token: wt,
              factory: wt.ɵfac,
              providedIn: "root",
            }));
          }
          return wt;
        })(),
        $ = (() => {
          class wt {
            static #t = (this.ɵfac = function (Pt) {
              return new (Pt || wt)();
            });
            static #e = (this.ɵmod = C.oAB({ type: wt }));
            static #i = (this.ɵinj = C.cJS({}));
          }
          return wt;
        })();
      var _ = D(6223),
        A = D(3680),
        jt = D(9157);
      const Jt = new C.OlP("MAT_INPUT_VALUE_ACCESSOR"),
        De = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let Ve = 0;
      const He = (0, A.FD)(
        class {
          constructor(wt, _t, St, Pt) {
            (this._defaultErrorStateMatcher = wt),
              (this._parentForm = _t),
              (this._parentFormGroup = St),
              (this.ngControl = Pt),
              (this.stateChanges = new at.x());
          }
        },
      );
      let We = (() => {
          class wt extends He {
            get disabled() {
              return this._disabled;
            }
            set disabled(St) {
              (this._disabled = (0, s.Ig)(St)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(St) {
              this._id = St || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(_.kI.required) ??
                !1
              );
            }
            set required(St) {
              this._required = (0, s.Ig)(St);
            }
            get type() {
              return this._type;
            }
            set type(St) {
              (this._type = St || "text"),
                this._validateType(),
                !this._isTextarea &&
                  (0, x.qK)().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(St) {
              St !== this.value &&
                ((this._inputValueAccessor.value = St),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(St) {
              this._readonly = (0, s.Ig)(St);
            }
            constructor(St, Pt, ee, Kt, ze, mi, ie, vi, Ge, hi) {
              super(mi, Kt, ze, ee),
                (this._elementRef = St),
                (this._platform = Pt),
                (this._autofillMonitor = vi),
                (this._formField = hi),
                (this._uid = "mat-input-" + Ve++),
                (this.focused = !1),
                (this.stateChanges = new at.x()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((qi) => (0, x.qK)().has(qi))),
                (this._iOSKeyupListener = (qi) => {
                  const Ie = qi.target;
                  !Ie.value &&
                    0 === Ie.selectionStart &&
                    0 === Ie.selectionEnd &&
                    (Ie.setSelectionRange(1, 1), Ie.setSelectionRange(0, 0));
                });
              const Si = this._elementRef.nativeElement,
                Vi = Si.nodeName.toLowerCase();
              (this._inputValueAccessor = ie || Si),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                Pt.IOS &&
                  Ge.runOutsideAngular(() => {
                    St.nativeElement.addEventListener(
                      "keyup",
                      this._iOSKeyupListener,
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === Vi),
                (this._isTextarea = "textarea" === Vi),
                (this._isInFormField = !!hi),
                this._isNativeSelect &&
                  (this.controlType = Si.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((St) => {
                    (this.autofilled = St.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement,
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    "keyup",
                    this._iOSKeyupListener,
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(St) {
              this._elementRef.nativeElement.focus(St);
            }
            _focusChanged(St) {
              St !== this.focused &&
                ((this.focused = St), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const St = this._elementRef.nativeElement.value;
              this._previousNativeValue !== St &&
                ((this._previousNativeValue = St), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const St = this._getPlaceholder();
              if (St !== this._previousPlaceholder) {
                const Pt = this._elementRef.nativeElement;
                (this._previousPlaceholder = St),
                  St
                    ? Pt.setAttribute("placeholder", St)
                    : Pt.removeAttribute("placeholder");
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              De.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let St = this._elementRef.nativeElement.validity;
              return St && St.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const St = this._elementRef.nativeElement,
                  Pt = St.options[0];
                return (
                  this.focused ||
                  St.multiple ||
                  !this.empty ||
                  !!(St.selectedIndex > -1 && Pt && Pt.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(St) {
              St.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    St.join(" "),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby",
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const St = this._elementRef.nativeElement;
              return this._isNativeSelect && (St.multiple || St.size > 1);
            }
            static #t = (this.ɵfac = function (Pt) {
              return new (Pt || wt)(
                C.Y36(C.SBq),
                C.Y36(x.t4),
                C.Y36(_.a5, 10),
                C.Y36(_.F, 8),
                C.Y36(_.sg, 8),
                C.Y36(A.rD),
                C.Y36(Jt, 10),
                C.Y36(bt),
                C.Y36(C.R0b),
                C.Y36(jt.G_, 8),
              );
            });
            static #e = (this.ɵdir = C.lG2({
              type: wt,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [1, "mat-mdc-input-element"],
              hostVars: 18,
              hostBindings: function (Pt, ee) {
                1 & Pt &&
                  C.NdJ("focus", function () {
                    return ee._focusChanged(!0);
                  })("blur", function () {
                    return ee._focusChanged(!1);
                  })("input", function () {
                    return ee._onInput();
                  }),
                  2 & Pt &&
                    (C.Ikx("id", ee.id)("disabled", ee.disabled)(
                      "required",
                      ee.required,
                    ),
                    C.uIk("name", ee.name || null)(
                      "readonly",
                      (ee.readonly && !ee._isNativeSelect) || null,
                    )(
                      "aria-invalid",
                      ee.empty && ee.required ? null : ee.errorState,
                    )("aria-required", ee.required)("id", ee.id),
                    C.ekj("mat-input-server", ee._isServer)(
                      "mat-mdc-form-field-textarea-control",
                      ee._isInFormField && ee._isTextarea,
                    )("mat-mdc-form-field-input-control", ee._isInFormField)(
                      "mdc-text-field__input",
                      ee._isInFormField,
                    )("mat-mdc-native-select-inline", ee._isInlineSelect()));
              },
              inputs: {
                disabled: "disabled",
                id: "id",
                placeholder: "placeholder",
                name: "name",
                required: "required",
                type: "type",
                errorStateMatcher: "errorStateMatcher",
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                value: "value",
                readonly: "readonly",
              },
              exportAs: ["matInput"],
              features: [
                C._Bn([{ provide: jt.Eo, useExisting: wt }]),
                C.qOj,
                C.TTD,
              ],
            }));
          }
          return wt;
        })(),
        Re = (() => {
          class wt {
            static #t = (this.ɵfac = function (Pt) {
              return new (Pt || wt)();
            });
            static #e = (this.ɵmod = C.oAB({ type: wt }));
            static #i = (this.ɵinj = C.cJS({
              imports: [A.BQ, jt.lN, jt.lN, $, A.BQ],
            }));
          }
          return wt;
        })();
    },
    9038: (ui, Zt, D) => {
      D.d(Zt, { Tg: () => Ne, i$: () => Be, ie: () => yt });
      var s = D(5879),
        x = D(2495),
        C = D(2831),
        p = D(3680),
        at = D(7394),
        lt = D(3019),
        B = (D(8645), D(7131)),
        kt = D(6814),
        $ = D(6385);
      D(7849), D(8337), D(6028), D(6223), D(9773);
      const De = ["*"],
        He = ["unscopedContent"],
        We = ["text"],
        Re = [
          [
            ["", "matListItemAvatar", ""],
            ["", "matListItemIcon", ""],
          ],
          [["", "matListItemTitle", ""]],
          [["", "matListItemLine", ""]],
          "*",
          [["", "matListItemMeta", ""]],
          [["mat-divider"]],
        ],
        wt = [
          "[matListItemAvatar],[matListItemIcon]",
          "[matListItemTitle]",
          "[matListItemLine]",
          "*",
          "[matListItemMeta]",
          "mat-divider",
        ],
        Ue = new s.OlP("ListOption");
      let Ft = (() => {
          class Rt {
            constructor(ut) {
              this._elementRef = ut;
            }
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)(s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              selectors: [["", "matListItemTitle", ""]],
              hostAttrs: [
                1,
                "mat-mdc-list-item-title",
                "mdc-list-item__primary-text",
              ],
            }));
          }
          return Rt;
        })(),
        Mt = (() => {
          class Rt {
            constructor(ut) {
              this._elementRef = ut;
            }
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)(s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              selectors: [["", "matListItemLine", ""]],
              hostAttrs: [
                1,
                "mat-mdc-list-item-line",
                "mdc-list-item__secondary-text",
              ],
            }));
          }
          return Rt;
        })(),
        we = (() => {
          class Rt {
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              selectors: [["", "matListItemMeta", ""]],
              hostAttrs: [1, "mat-mdc-list-item-meta", "mdc-list-item__end"],
            }));
          }
          return Rt;
        })(),
        Vt = (() => {
          class Rt {
            constructor(ut) {
              this._listOption = ut;
            }
            _isAlignedAtStart() {
              return (
                !this._listOption ||
                "after" === this._listOption?._getTogglePosition()
              );
            }
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)(s.Y36(Ue, 8));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              hostVars: 4,
              hostBindings: function (q, Ct) {
                2 & q &&
                  s.ekj("mdc-list-item__start", Ct._isAlignedAtStart())(
                    "mdc-list-item__end",
                    !Ct._isAlignedAtStart(),
                  );
              },
            }));
          }
          return Rt;
        })(),
        re = (() => {
          class Rt extends Vt {
            static #t = (this.ɵfac = (function () {
              let ut;
              return function (Ct) {
                return (ut || (ut = s.n5z(Rt)))(Ct || Rt);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              selectors: [["", "matListItemAvatar", ""]],
              hostAttrs: [1, "mat-mdc-list-item-avatar"],
              features: [s.qOj],
            }));
          }
          return Rt;
        })(),
        Le = (() => {
          class Rt extends Vt {
            static #t = (this.ɵfac = (function () {
              let ut;
              return function (Ct) {
                return (ut || (ut = s.n5z(Rt)))(Ct || Rt);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              selectors: [["", "matListItemIcon", ""]],
              hostAttrs: [1, "mat-mdc-list-item-icon"],
              features: [s.qOj],
            }));
          }
          return Rt;
        })();
      const li = new s.OlP("MAT_LIST_CONFIG");
      let ii = (() => {
          class Rt {
            constructor() {
              (this._isNonInteractive = !0),
                (this._disableRipple = !1),
                (this._disabled = !1),
                (this._defaultOptions = (0, s.f3M)(li, { optional: !0 }));
            }
            get disableRipple() {
              return this._disableRipple;
            }
            set disableRipple(ut) {
              this._disableRipple = (0, x.Ig)(ut);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(ut) {
              this._disabled = (0, x.Ig)(ut);
            }
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)();
            });
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              hostVars: 1,
              hostBindings: function (q, Ct) {
                2 & q && s.uIk("aria-disabled", Ct.disabled);
              },
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
            }));
          }
          return Rt;
        })(),
        Mi = (() => {
          class Rt {
            set lines(ut) {
              (this._explicitLines = (0, x.su)(ut, null)),
                this._updateItemLines(!1);
            }
            get disableRipple() {
              return (
                this.disabled ||
                this._disableRipple ||
                this._noopAnimations ||
                !!this._listBase?.disableRipple
              );
            }
            set disableRipple(ut) {
              this._disableRipple = (0, x.Ig)(ut);
            }
            get disabled() {
              return this._disabled || !!this._listBase?.disabled;
            }
            set disabled(ut) {
              this._disabled = (0, x.Ig)(ut);
            }
            get rippleDisabled() {
              return this.disableRipple || !!this.rippleConfig.disabled;
            }
            constructor(ut, q, Ct, H, Nt, X) {
              (this._elementRef = ut),
                (this._ngZone = q),
                (this._listBase = Ct),
                (this._platform = H),
                (this._explicitLines = null),
                (this._disableRipple = !1),
                (this._disabled = !1),
                (this._subscriptions = new at.w0()),
                (this._rippleRenderer = null),
                (this._hasUnscopedTextContent = !1),
                (this.rippleConfig = Nt || {}),
                (this._hostElement = this._elementRef.nativeElement),
                (this._isButtonElement =
                  "button" === this._hostElement.nodeName.toLowerCase()),
                (this._noopAnimations = "NoopAnimations" === X),
                Ct && !Ct._isNonInteractive && this._initInteractiveListItem(),
                this._isButtonElement &&
                  !this._hostElement.hasAttribute("type") &&
                  this._hostElement.setAttribute("type", "button");
            }
            ngAfterViewInit() {
              this._monitorProjectedLinesAndTitle(), this._updateItemLines(!0);
            }
            ngOnDestroy() {
              this._subscriptions.unsubscribe(),
                null !== this._rippleRenderer &&
                  this._rippleRenderer._removeTriggerEvents();
            }
            _hasIconOrAvatar() {
              return !(!this._avatars.length && !this._icons.length);
            }
            _initInteractiveListItem() {
              this._hostElement.classList.add("mat-mdc-list-item-interactive"),
                (this._rippleRenderer = new p.IR(
                  this,
                  this._ngZone,
                  this._hostElement,
                  this._platform,
                )),
                this._rippleRenderer.setupTriggerEvents(this._hostElement);
            }
            _monitorProjectedLinesAndTitle() {
              this._ngZone.runOutsideAngular(() => {
                this._subscriptions.add(
                  (0, lt.T)(
                    this._lines.changes,
                    this._titles.changes,
                  ).subscribe(() => this._updateItemLines(!1)),
                );
              });
            }
            _updateItemLines(ut) {
              if (!this._lines || !this._titles || !this._unscopedContent)
                return;
              ut && this._checkDomForUnscopedTextContent();
              const q = this._explicitLines ?? this._inferLinesFromContent(),
                Ct = this._unscopedContent.nativeElement;
              if (
                (this._hostElement.classList.toggle(
                  "mat-mdc-list-item-single-line",
                  q <= 1,
                ),
                this._hostElement.classList.toggle(
                  "mdc-list-item--with-one-line",
                  q <= 1,
                ),
                this._hostElement.classList.toggle(
                  "mdc-list-item--with-two-lines",
                  2 === q,
                ),
                this._hostElement.classList.toggle(
                  "mdc-list-item--with-three-lines",
                  3 === q,
                ),
                this._hasUnscopedTextContent)
              ) {
                const H = 0 === this._titles.length && 1 === q;
                Ct.classList.toggle("mdc-list-item__primary-text", H),
                  Ct.classList.toggle("mdc-list-item__secondary-text", !H);
              } else
                Ct.classList.remove("mdc-list-item__primary-text"),
                  Ct.classList.remove("mdc-list-item__secondary-text");
            }
            _inferLinesFromContent() {
              let ut = this._titles.length + this._lines.length;
              return this._hasUnscopedTextContent && (ut += 1), ut;
            }
            _checkDomForUnscopedTextContent() {
              this._hasUnscopedTextContent = Array.from(
                this._unscopedContent.nativeElement.childNodes,
              )
                .filter((ut) => ut.nodeType !== ut.COMMENT_NODE)
                .some((ut) => !(!ut.textContent || !ut.textContent.trim()));
            }
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(ii, 8),
                s.Y36(C.t4),
                s.Y36(p.Y2, 8),
                s.Y36(s.QbO, 8),
              );
            });
            static #e = (this.ɵdir = s.lG2({
              type: Rt,
              contentQueries: function (q, Ct, H) {
                if ((1 & q && (s.Suo(H, re, 4), s.Suo(H, Le, 4)), 2 & q)) {
                  let Nt;
                  s.iGM((Nt = s.CRH())) && (Ct._avatars = Nt),
                    s.iGM((Nt = s.CRH())) && (Ct._icons = Nt);
                }
              },
              hostVars: 4,
              hostBindings: function (q, Ct) {
                2 & q &&
                  (s.uIk("aria-disabled", Ct.disabled)(
                    "disabled",
                    (Ct._isButtonElement && Ct.disabled) || null,
                  ),
                  s.ekj("mdc-list-item--disabled", Ct.disabled));
              },
              inputs: {
                lines: "lines",
                disableRipple: "disableRipple",
                disabled: "disabled",
              },
            }));
          }
          return Rt;
        })(),
        Be = (() => {
          class Rt extends ii {
            static #t = (this.ɵfac = (function () {
              let ut;
              return function (Ct) {
                return (ut || (ut = s.n5z(Rt)))(Ct || Rt);
              };
            })());
            static #e = (this.ɵcmp = s.Xpm({
              type: Rt,
              selectors: [["mat-list"]],
              hostAttrs: [1, "mat-mdc-list", "mat-mdc-list-base", "mdc-list"],
              exportAs: ["matList"],
              features: [s._Bn([{ provide: ii, useExisting: Rt }]), s.qOj],
              ngContentSelectors: De,
              decls: 1,
              vars: 0,
              template: function (q, Ct) {
                1 & q && (s.F$t(), s.Hsn(0));
              },
              styles: [
                '@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:"";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:"";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:"";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:"";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:"";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:"";vertical-align:0}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-caption-font-family);font-size:var(--mdc-typography-caption-font-size);line-height:var(--mdc-typography-caption-line-height);font-weight:var(--mdc-typography-caption-font-weight);letter-spacing:var(--mdc-typography-caption-letter-spacing);text-decoration:var(--mdc-typography-caption-text-decoration);text-transform:var(--mdc-typography-caption-text-transform)}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:"";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:"";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.mdc-list-item{background-color:var(--mdc-list-list-item-container-color)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item--with-one-line{border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item--with-one-line.mdc-list-item--with-leading-avatar,.mdc-list-item--with-one-line.mdc-list-item--with-leading-icon,.mdc-list-item--with-one-line.mdc-list-item--with-leading-thumbnail,.mdc-list-item--with-one-line.mdc-list-item--with-leading-checkbox,.mdc-list-item--with-one-line.mdc-list-item--with-leading-radio,.mdc-list-item--with-one-line.mdc-list-item--with-leading-switch{border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item--with-one-line.mdc-list-item--with-leading-image,.mdc-list-item--with-one-line.mdc-list-item--with-leading-video{border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item--with-two-lines{border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item--with-two-lines.mdc-list-item--with-leading-avatar,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-icon,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-thumbnail,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-checkbox,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-radio,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-switch,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-image,.mdc-list-item--with-two-lines.mdc-list-item--with-leading-video{border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item--with-three-lines{border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item__primary-text{color:var(--mdc-list-list-item-label-text-color)}.mdc-list-item__primary-text{font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item__secondary-text{color:var(--mdc-list-list-item-supporting-text-color)}.mdc-list-item__secondary-text{font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color)}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size)}.mdc-list-item--with-leading-icon .mdc-list-item__start>i{font-size:var(--mdc-list-list-item-leading-icon-size)}.mdc-list-item--with-leading-icon .mdc-list-item__start .mdc-list-item__icon{font-size:var(--mdc-list-list-item-leading-icon-size);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size)}.mdc-list-item--with-leading-icon .mdc-list-item__start .mdc-list-item__icon,.mdc-list-item--with-leading-icon .mdc-list-item__start .mdc-list-item__icon>.materialdesignWizIconSvgsSvgIcon{display:block}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon .mdc-list-item__end>i{font-size:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon .mdc-list-item__end .mdc-list-item__icon{font-size:var(--mdc-list-list-item-trailing-icon-size);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon .mdc-list-item__end .mdc-list-item__icon,.mdc-list-item--with-trailing-icon .mdc-list-item__end .mdc-list-item__icon>.materialdesignWizIconSvgsSvgIcon{display:block}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text,.mdc-list-item--disabled .mdc-list-item__overline-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-base{--mdc-list-list-item-container-shape:0;--mdc-list-list-item-leading-avatar-shape:50%;--mdc-list-list-item-container-color:transparent;--mdc-list-list-item-selected-container-color:transparent;--mdc-list-list-item-leading-avatar-color:transparent;--mdc-list-list-item-leading-icon-size:24px;--mdc-list-list-item-leading-avatar-size:40px;--mdc-list-list-item-trailing-icon-size:24px;--mdc-list-list-item-disabled-state-layer-color:transparent;--mdc-list-list-item-disabled-state-layer-opacity:0;--mdc-list-list-item-disabled-label-text-opacity:0.38;--mdc-list-list-item-disabled-leading-icon-opacity:0.38;--mdc-list-list-item-disabled-trailing-icon-opacity:0.38}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:"";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:""}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return Rt;
        })(),
        Ne = (() => {
          class Rt extends Mi {
            get activated() {
              return this._activated;
            }
            set activated(ut) {
              this._activated = (0, x.Ig)(ut);
            }
            constructor(ut, q, Ct, H, Nt, X) {
              super(ut, q, Ct, H, Nt, X), (this._activated = !1);
            }
            _getAriaCurrent() {
              return "A" === this._hostElement.nodeName && this._activated
                ? "page"
                : null;
            }
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)(
                s.Y36(s.SBq),
                s.Y36(s.R0b),
                s.Y36(ii, 8),
                s.Y36(C.t4),
                s.Y36(p.Y2, 8),
                s.Y36(s.QbO, 8),
              );
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Rt,
              selectors: [
                ["mat-list-item"],
                ["a", "mat-list-item", ""],
                ["button", "mat-list-item", ""],
              ],
              contentQueries: function (q, Ct, H) {
                if (
                  (1 & q && (s.Suo(H, Mt, 5), s.Suo(H, Ft, 5), s.Suo(H, we, 5)),
                  2 & q)
                ) {
                  let Nt;
                  s.iGM((Nt = s.CRH())) && (Ct._lines = Nt),
                    s.iGM((Nt = s.CRH())) && (Ct._titles = Nt),
                    s.iGM((Nt = s.CRH())) && (Ct._meta = Nt);
                }
              },
              viewQuery: function (q, Ct) {
                if ((1 & q && (s.Gf(He, 5), s.Gf(We, 5)), 2 & q)) {
                  let H;
                  s.iGM((H = s.CRH())) && (Ct._unscopedContent = H.first),
                    s.iGM((H = s.CRH())) && (Ct._itemText = H.first);
                }
              },
              hostAttrs: [1, "mat-mdc-list-item", "mdc-list-item"],
              hostVars: 11,
              hostBindings: function (q, Ct) {
                2 & q &&
                  (s.uIk("aria-current", Ct._getAriaCurrent()),
                  s.ekj("mdc-list-item--activated", Ct.activated)(
                    "mdc-list-item--with-leading-avatar",
                    0 !== Ct._avatars.length,
                  )("mdc-list-item--with-leading-icon", 0 !== Ct._icons.length)(
                    "mdc-list-item--with-trailing-meta",
                    0 !== Ct._meta.length,
                  )("_mat-animation-noopable", Ct._noopAnimations));
              },
              inputs: { activated: "activated" },
              exportAs: ["matListItem"],
              features: [s.qOj],
              ngContentSelectors: wt,
              decls: 10,
              vars: 0,
              consts: [
                [1, "mdc-list-item__content"],
                [
                  1,
                  "mat-mdc-list-item-unscoped-content",
                  3,
                  "cdkObserveContent",
                ],
                ["unscopedContent", ""],
                [1, "mat-mdc-focus-indicator"],
              ],
              template: function (q, Ct) {
                1 & q &&
                  (s.F$t(Re),
                  s.Hsn(0),
                  s.TgZ(1, "span", 0),
                  s.Hsn(2, 1),
                  s.Hsn(3, 2),
                  s.TgZ(4, "span", 1, 2),
                  s.NdJ("cdkObserveContent", function () {
                    return Ct._updateItemLines(!0);
                  }),
                  s.Hsn(6, 3),
                  s.qZA()(),
                  s.Hsn(7, 4),
                  s.Hsn(8, 5),
                  s._UZ(9, "div", 3));
              },
              dependencies: [B.wD],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return Rt;
        })(),
        yt = (() => {
          class Rt {
            static #t = (this.ɵfac = function (q) {
              return new (q || Rt)();
            });
            static #e = (this.ɵmod = s.oAB({ type: Rt }));
            static #i = (this.ɵinj = s.cJS({
              imports: [B.Q8, kt.ez, p.BQ, p.si, p.us, $.t],
            }));
          }
          return Rt;
        })();
    },
    1476: (ui, Zt, D) => {
      D.d(Zt, { NW: () => ee, TU: () => Kt });
      var s = D(6814),
        x = D(5879),
        C = D(8645),
        p = D(2296),
        at = D(8525),
        lt = D(2596),
        bt = D(3680),
        B = D(2495),
        kt = D(9157);
      function $(ze, mi) {
        if (
          (1 & ze && (x.TgZ(0, "mat-option", 19), x._uU(1), x.qZA()), 2 & ze)
        ) {
          const ie = mi.$implicit;
          x.Q6J("value", ie), x.xp6(1), x.hij(" ", ie, " ");
        }
      }
      function _(ze, mi) {
        if (1 & ze) {
          const ie = x.EpF();
          x.TgZ(0, "mat-form-field", 16)(1, "mat-select", 17),
            x.NdJ("selectionChange", function (Ge) {
              x.CHM(ie);
              const hi = x.oxw(2);
              return x.KtG(hi._changePageSize(Ge.value));
            }),
            x.YNc(2, $, 2, 2, "mat-option", 18),
            x.qZA()();
        }
        if (2 & ze) {
          const ie = x.oxw(2);
          x.Q6J("appearance", ie._formFieldAppearance)("color", ie.color),
            x.xp6(1),
            x.Q6J("value", ie.pageSize)("disabled", ie.disabled)(
              "aria-labelledby",
              ie._pageSizeLabelId,
            )("panelClass", ie.selectConfig.panelClass || "")(
              "disableOptionCentering",
              ie.selectConfig.disableOptionCentering,
            ),
            x.xp6(1),
            x.Q6J("ngForOf", ie._displayedPageSizeOptions);
        }
      }
      function A(ze, mi) {
        if ((1 & ze && (x.TgZ(0, "div", 20), x._uU(1), x.qZA()), 2 & ze)) {
          const ie = x.oxw(2);
          x.xp6(1), x.Oqu(ie.pageSize);
        }
      }
      function jt(ze, mi) {
        if (
          (1 & ze &&
            (x.TgZ(0, "div", 12)(1, "div", 13),
            x._uU(2),
            x.qZA(),
            x.YNc(3, _, 3, 8, "mat-form-field", 14),
            x.YNc(4, A, 2, 1, "div", 15),
            x.qZA()),
          2 & ze)
        ) {
          const ie = x.oxw();
          x.xp6(1),
            x.s9C("id", ie._pageSizeLabelId),
            x.xp6(1),
            x.hij(" ", ie._intl.itemsPerPageLabel, " "),
            x.xp6(1),
            x.Q6J("ngIf", ie._displayedPageSizeOptions.length > 1),
            x.xp6(1),
            x.Q6J("ngIf", ie._displayedPageSizeOptions.length <= 1);
        }
      }
      function gt(ze, mi) {
        if (1 & ze) {
          const ie = x.EpF();
          x.TgZ(0, "button", 21),
            x.NdJ("click", function () {
              x.CHM(ie);
              const Ge = x.oxw();
              return x.KtG(Ge.firstPage());
            }),
            x.O4$(),
            x.TgZ(1, "svg", 7),
            x._UZ(2, "path", 22),
            x.qZA()();
        }
        if (2 & ze) {
          const ie = x.oxw();
          x.Q6J("matTooltip", ie._intl.firstPageLabel)(
            "matTooltipDisabled",
            ie._previousButtonsDisabled(),
          )("matTooltipPosition", "above")(
            "disabled",
            ie._previousButtonsDisabled(),
          ),
            x.uIk("aria-label", ie._intl.firstPageLabel);
        }
      }
      function Jt(ze, mi) {
        if (1 & ze) {
          const ie = x.EpF();
          x.O4$(),
            x.kcU(),
            x.TgZ(0, "button", 23),
            x.NdJ("click", function () {
              x.CHM(ie);
              const Ge = x.oxw();
              return x.KtG(Ge.lastPage());
            }),
            x.O4$(),
            x.TgZ(1, "svg", 7),
            x._UZ(2, "path", 24),
            x.qZA()();
        }
        if (2 & ze) {
          const ie = x.oxw();
          x.Q6J("matTooltip", ie._intl.lastPageLabel)(
            "matTooltipDisabled",
            ie._nextButtonsDisabled(),
          )("matTooltipPosition", "above")(
            "disabled",
            ie._nextButtonsDisabled(),
          ),
            x.uIk("aria-label", ie._intl.lastPageLabel);
        }
      }
      let De = (() => {
        class ze {
          constructor() {
            (this.changes = new C.x()),
              (this.itemsPerPageLabel = "Items per page:"),
              (this.nextPageLabel = "Next page"),
              (this.previousPageLabel = "Previous page"),
              (this.firstPageLabel = "First page"),
              (this.lastPageLabel = "Last page"),
              (this.getRangeLabel = (ie, vi, Ge) => {
                if (0 == Ge || 0 == vi) return `0 of ${Ge}`;
                const hi = ie * vi;
                return `${hi + 1} \u2013 ${hi < (Ge = Math.max(Ge, 0)) ? Math.min(hi + vi, Ge) : hi + vi} of ${Ge}`;
              });
          }
          static #t = (this.ɵfac = function (vi) {
            return new (vi || ze)();
          });
          static #e = (this.ɵprov = x.Yz7({
            token: ze,
            factory: ze.ɵfac,
            providedIn: "root",
          }));
        }
        return ze;
      })();
      const He = {
          provide: De,
          deps: [[new x.FiY(), new x.tp0(), De]],
          useFactory: function Ve(ze) {
            return ze || new De();
          },
        },
        wt = new x.OlP("MAT_PAGINATOR_DEFAULT_OPTIONS"),
        _t = (0, bt.Id)((0, bt.dB)(class {}));
      let St = (() => {
          class ze extends _t {
            get pageIndex() {
              return this._pageIndex;
            }
            set pageIndex(ie) {
              (this._pageIndex = Math.max((0, B.su)(ie), 0)),
                this._changeDetectorRef.markForCheck();
            }
            get length() {
              return this._length;
            }
            set length(ie) {
              (this._length = (0, B.su)(ie)),
                this._changeDetectorRef.markForCheck();
            }
            get pageSize() {
              return this._pageSize;
            }
            set pageSize(ie) {
              (this._pageSize = Math.max((0, B.su)(ie), 0)),
                this._updateDisplayedPageSizeOptions();
            }
            get pageSizeOptions() {
              return this._pageSizeOptions;
            }
            set pageSizeOptions(ie) {
              (this._pageSizeOptions = (ie || []).map((vi) => (0, B.su)(vi))),
                this._updateDisplayedPageSizeOptions();
            }
            get hidePageSize() {
              return this._hidePageSize;
            }
            set hidePageSize(ie) {
              this._hidePageSize = (0, B.Ig)(ie);
            }
            get showFirstLastButtons() {
              return this._showFirstLastButtons;
            }
            set showFirstLastButtons(ie) {
              this._showFirstLastButtons = (0, B.Ig)(ie);
            }
            constructor(ie, vi, Ge) {
              if (
                (super(),
                (this._intl = ie),
                (this._changeDetectorRef = vi),
                (this._pageIndex = 0),
                (this._length = 0),
                (this._pageSizeOptions = []),
                (this._hidePageSize = !1),
                (this._showFirstLastButtons = !1),
                (this.selectConfig = {}),
                (this.page = new x.vpe()),
                (this._intlChanges = ie.changes.subscribe(() =>
                  this._changeDetectorRef.markForCheck(),
                )),
                Ge)
              ) {
                const {
                  pageSize: hi,
                  pageSizeOptions: Si,
                  hidePageSize: Vi,
                  showFirstLastButtons: qi,
                } = Ge;
                null != hi && (this._pageSize = hi),
                  null != Si && (this._pageSizeOptions = Si),
                  null != Vi && (this._hidePageSize = Vi),
                  null != qi && (this._showFirstLastButtons = qi);
              }
            }
            ngOnInit() {
              (this._initialized = !0),
                this._updateDisplayedPageSizeOptions(),
                this._markInitialized();
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe();
            }
            nextPage() {
              if (!this.hasNextPage()) return;
              const ie = this.pageIndex;
              (this.pageIndex = this.pageIndex + 1), this._emitPageEvent(ie);
            }
            previousPage() {
              if (!this.hasPreviousPage()) return;
              const ie = this.pageIndex;
              (this.pageIndex = this.pageIndex - 1), this._emitPageEvent(ie);
            }
            firstPage() {
              if (!this.hasPreviousPage()) return;
              const ie = this.pageIndex;
              (this.pageIndex = 0), this._emitPageEvent(ie);
            }
            lastPage() {
              if (!this.hasNextPage()) return;
              const ie = this.pageIndex;
              (this.pageIndex = this.getNumberOfPages() - 1),
                this._emitPageEvent(ie);
            }
            hasPreviousPage() {
              return this.pageIndex >= 1 && 0 != this.pageSize;
            }
            hasNextPage() {
              const ie = this.getNumberOfPages() - 1;
              return this.pageIndex < ie && 0 != this.pageSize;
            }
            getNumberOfPages() {
              return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0;
            }
            _changePageSize(ie) {
              const Ge = this.pageIndex;
              (this.pageIndex =
                Math.floor((this.pageIndex * this.pageSize) / ie) || 0),
                (this.pageSize = ie),
                this._emitPageEvent(Ge);
            }
            _nextButtonsDisabled() {
              return this.disabled || !this.hasNextPage();
            }
            _previousButtonsDisabled() {
              return this.disabled || !this.hasPreviousPage();
            }
            _updateDisplayedPageSizeOptions() {
              this._initialized &&
                (this.pageSize ||
                  (this._pageSize =
                    0 != this.pageSizeOptions.length
                      ? this.pageSizeOptions[0]
                      : 50),
                (this._displayedPageSizeOptions = this.pageSizeOptions.slice()),
                -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) &&
                  this._displayedPageSizeOptions.push(this.pageSize),
                this._displayedPageSizeOptions.sort((ie, vi) => ie - vi),
                this._changeDetectorRef.markForCheck());
            }
            _emitPageEvent(ie) {
              this.page.emit({
                previousPageIndex: ie,
                pageIndex: this.pageIndex,
                pageSize: this.pageSize,
                length: this.length,
              });
            }
            static #t = (this.ɵfac = function (vi) {
              x.$Z();
            });
            static #e = (this.ɵdir = x.lG2({
              type: ze,
              inputs: {
                color: "color",
                pageIndex: "pageIndex",
                length: "length",
                pageSize: "pageSize",
                pageSizeOptions: "pageSizeOptions",
                hidePageSize: "hidePageSize",
                showFirstLastButtons: "showFirstLastButtons",
                selectConfig: "selectConfig",
              },
              outputs: { page: "page" },
              features: [x.qOj],
            }));
          }
          return ze;
        })(),
        Pt = 0,
        ee = (() => {
          class ze extends St {
            constructor(ie, vi, Ge) {
              super(ie, vi, Ge),
                (this._pageSizeLabelId =
                  "mat-paginator-page-size-label-" + Pt++),
                (this._formFieldAppearance =
                  Ge?.formFieldAppearance || "outline");
            }
            static #t = (this.ɵfac = function (vi) {
              return new (vi || ze)(x.Y36(De), x.Y36(x.sBO), x.Y36(wt, 8));
            });
            static #e = (this.ɵcmp = x.Xpm({
              type: ze,
              selectors: [["mat-paginator"]],
              hostAttrs: ["role", "group", 1, "mat-mdc-paginator"],
              inputs: { disabled: "disabled" },
              exportAs: ["matPaginator"],
              features: [x.qOj],
              decls: 14,
              vars: 14,
              consts: [
                [1, "mat-mdc-paginator-outer-container"],
                [1, "mat-mdc-paginator-container"],
                ["class", "mat-mdc-paginator-page-size", 4, "ngIf"],
                [1, "mat-mdc-paginator-range-actions"],
                ["aria-live", "polite", 1, "mat-mdc-paginator-range-label"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-mdc-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-previous",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "viewBox",
                  "0 0 24 24",
                  "focusable",
                  "false",
                  "aria-hidden",
                  "true",
                  1,
                  "mat-mdc-paginator-icon",
                ],
                ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-next",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-mdc-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "mat-mdc-paginator-page-size"],
                [1, "mat-mdc-paginator-page-size-label", 3, "id"],
                [
                  "class",
                  "mat-mdc-paginator-page-size-select",
                  3,
                  "appearance",
                  "color",
                  4,
                  "ngIf",
                ],
                ["class", "mat-mdc-paginator-page-size-value", 4, "ngIf"],
                [
                  1,
                  "mat-mdc-paginator-page-size-select",
                  3,
                  "appearance",
                  "color",
                ],
                [
                  "hideSingleSelectionIndicator",
                  "",
                  3,
                  "value",
                  "disabled",
                  "aria-labelledby",
                  "panelClass",
                  "disableOptionCentering",
                  "selectionChange",
                ],
                [3, "value", 4, "ngFor", "ngForOf"],
                [3, "value"],
                [1, "mat-mdc-paginator-page-size-value"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z",
                ],
              ],
              template: function (vi, Ge) {
                1 & vi &&
                  (x.TgZ(0, "div", 0)(1, "div", 1),
                  x.YNc(2, jt, 5, 4, "div", 2),
                  x.TgZ(3, "div", 3)(4, "div", 4),
                  x._uU(5),
                  x.qZA(),
                  x.YNc(6, gt, 3, 5, "button", 5),
                  x.TgZ(7, "button", 6),
                  x.NdJ("click", function () {
                    return Ge.previousPage();
                  }),
                  x.O4$(),
                  x.TgZ(8, "svg", 7),
                  x._UZ(9, "path", 8),
                  x.qZA()(),
                  x.kcU(),
                  x.TgZ(10, "button", 9),
                  x.NdJ("click", function () {
                    return Ge.nextPage();
                  }),
                  x.O4$(),
                  x.TgZ(11, "svg", 7),
                  x._UZ(12, "path", 10),
                  x.qZA()(),
                  x.YNc(13, Jt, 3, 5, "button", 11),
                  x.qZA()()()),
                  2 & vi &&
                    (x.xp6(2),
                    x.Q6J("ngIf", !Ge.hidePageSize),
                    x.xp6(3),
                    x.hij(
                      " ",
                      Ge._intl.getRangeLabel(
                        Ge.pageIndex,
                        Ge.pageSize,
                        Ge.length,
                      ),
                      " ",
                    ),
                    x.xp6(1),
                    x.Q6J("ngIf", Ge.showFirstLastButtons),
                    x.xp6(1),
                    x.Q6J("matTooltip", Ge._intl.previousPageLabel)(
                      "matTooltipDisabled",
                      Ge._previousButtonsDisabled(),
                    )("matTooltipPosition", "above")(
                      "disabled",
                      Ge._previousButtonsDisabled(),
                    ),
                    x.uIk("aria-label", Ge._intl.previousPageLabel),
                    x.xp6(3),
                    x.Q6J("matTooltip", Ge._intl.nextPageLabel)(
                      "matTooltipDisabled",
                      Ge._nextButtonsDisabled(),
                    )("matTooltipPosition", "above")(
                      "disabled",
                      Ge._nextButtonsDisabled(),
                    ),
                    x.uIk("aria-label", Ge._intl.nextPageLabel),
                    x.xp6(3),
                    x.Q6J("ngIf", Ge.showFirstLastButtons));
              },
              dependencies: [s.sg, s.O5, p.RK, kt.KE, at.gD, bt.ey, lt.gM],
              styles: [
                ".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return ze;
        })(),
        Kt = (() => {
          class ze {
            static #t = (this.ɵfac = function (vi) {
              return new (vi || ze)();
            });
            static #e = (this.ɵmod = x.oAB({ type: ze }));
            static #i = (this.ɵinj = x.cJS({
              providers: [He],
              imports: [s.ez, p.ot, at.LD, lt.AV],
            }));
          }
          return ze;
        })();
    },
    8525: (ui, Zt, D) => {
      D.d(Zt, { LD: () => Mi, gD: () => ii });
      var s = D(3651),
        x = D(6814),
        C = D(5879),
        p = D(3680),
        at = D(9157),
        lt = D(6702),
        bt = D(7849),
        B = D(9388),
        kt = D(2495),
        $ = D(8337),
        _ = D(6028),
        A = D(6223),
        jt = D(8645),
        gt = D(4911),
        Jt = D(3019),
        De = D(7921),
        Ve = D(4664),
        He = D(8180),
        We = D(2181),
        Re = D(7398),
        wt = D(3997),
        _t = D(9773),
        St = D(6825);
      const Pt = ["trigger"],
        ee = ["panel"];
      function Kt(fi, ri) {
        if ((1 & fi && (C.TgZ(0, "span", 10), C._uU(1), C.qZA()), 2 & fi)) {
          const te = C.oxw();
          C.xp6(1), C.Oqu(te.placeholder);
        }
      }
      function ze(fi, ri) {
        if ((1 & fi && (C.TgZ(0, "span", 14), C._uU(1), C.qZA()), 2 & fi)) {
          const te = C.oxw(2);
          C.xp6(1), C.Oqu(te.triggerValue);
        }
      }
      function mi(fi, ri) {
        1 & fi && C.Hsn(0, 0, ["*ngSwitchCase", "true"]);
      }
      function ie(fi, ri) {
        if (
          (1 & fi &&
            (C.TgZ(0, "span", 11),
            C.YNc(1, ze, 2, 1, "span", 12),
            C.YNc(2, mi, 1, 0, "ng-content", 13),
            C.qZA()),
          2 & fi)
        ) {
          const te = C.oxw();
          C.Q6J("ngSwitch", !!te.customTrigger),
            C.xp6(2),
            C.Q6J("ngSwitchCase", !0);
        }
      }
      function vi(fi, ri) {
        if (1 & fi) {
          const te = C.EpF();
          C.O4$(),
            C.kcU(),
            C.TgZ(0, "div", 15, 16),
            C.NdJ("@transformPanel.done", function (Ne) {
              C.CHM(te);
              const Ri = C.oxw();
              return C.KtG(Ri._panelDoneAnimatingStream.next(Ne.toState));
            })("keydown", function (Ne) {
              C.CHM(te);
              const Ri = C.oxw();
              return C.KtG(Ri._handleKeydown(Ne));
            }),
            C.Hsn(2, 1),
            C.qZA();
        }
        if (2 & fi) {
          const te = C.oxw();
          C.Gre(
            "mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ",
            te._getPanelTheme(),
            "",
          ),
            C.Q6J("ngClass", te.panelClass)("@transformPanel", "showing"),
            C.uIk("id", te.id + "-panel")("aria-multiselectable", te.multiple)(
              "aria-label",
              te.ariaLabel || null,
            )("aria-labelledby", te._getPanelAriaLabelledby());
        }
      }
      const Ge = [[["mat-select-trigger"]], "*"],
        hi = ["mat-select-trigger", "*"],
        Si = {
          transformPanelWrap: (0, St.X$)("transformPanelWrap", [
            (0, St.eR)(
              "* => void",
              (0, St.IO)("@transformPanel", [(0, St.pV)()], { optional: !0 }),
            ),
          ]),
          transformPanel: (0, St.X$)("transformPanel", [
            (0, St.SB)(
              "void",
              (0, St.oB)({ opacity: 0, transform: "scale(1, 0.8)" }),
            ),
            (0, St.eR)(
              "void => showing",
              (0, St.jt)(
                "120ms cubic-bezier(0, 0, 0.2, 1)",
                (0, St.oB)({ opacity: 1, transform: "scale(1, 1)" }),
              ),
            ),
            (0, St.eR)(
              "* => void",
              (0, St.jt)("100ms linear", (0, St.oB)({ opacity: 0 })),
            ),
          ]),
        };
      let Fe = 0;
      const xe = new C.OlP("mat-select-scroll-strategy"),
        Ft = new C.OlP("MAT_SELECT_CONFIG"),
        Mt = {
          provide: xe,
          deps: [s.aV],
          useFactory: function Ue(fi) {
            return () => fi.scrollStrategies.reposition();
          },
        },
        we = new C.OlP("MatSelectTrigger");
      class Vt {
        constructor(ri, te) {
          (this.source = ri), (this.value = te);
        }
      }
      const re = (0, p.Kr)(
        (0, p.sb)(
          (0, p.Id)(
            (0, p.FD)(
              class {
                constructor(fi, ri, te, Be, Ne) {
                  (this._elementRef = fi),
                    (this._defaultErrorStateMatcher = ri),
                    (this._parentForm = te),
                    (this._parentFormGroup = Be),
                    (this.ngControl = Ne),
                    (this.stateChanges = new jt.x());
                }
              },
            ),
          ),
        ),
      );
      let Le = (() => {
          class fi extends re {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(te) {
              (this._placeholder = te), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(A.kI.required) ??
                !1
              );
            }
            set required(te) {
              (this._required = (0, kt.Ig)(te)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(te) {
              this._multiple = (0, kt.Ig)(te);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(te) {
              this._disableOptionCentering = (0, kt.Ig)(te);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(te) {
              (this._compareWith = te),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(te) {
              this._assignValue(te) && this._onChange(te);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(te) {
              this._typeaheadDebounceInterval = (0, kt.su)(te);
            }
            get id() {
              return this._id;
            }
            set id(te) {
              (this._id = te || this._uid), this.stateChanges.next();
            }
            constructor(te, Be, Ne, Ri, gi, Xi, _i, de, ot, Z, rt, yt, Rt, Lt) {
              super(gi, Ri, _i, de, Z),
                (this._viewportRuler = te),
                (this._changeDetectorRef = Be),
                (this._ngZone = Ne),
                (this._dir = Xi),
                (this._parentFormField = ot),
                (this._liveAnnouncer = Rt),
                (this._defaultOptions = Lt),
                (this._panelOpen = !1),
                (this._compareWith = (ut, q) => ut === q),
                (this._uid = "mat-select-" + Fe++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new jt.x()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + Fe++),
                (this._panelDoneAnimatingStream = new jt.x()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = (0, gt.P)(() => {
                  const ut = this.options;
                  return ut
                    ? ut.changes.pipe(
                        (0, De.O)(ut),
                        (0, Ve.w)(() =>
                          (0, Jt.T)(...ut.map((q) => q.onSelectionChange)),
                        ),
                      )
                    : this._ngZone.onStable.pipe(
                        (0, He.q)(1),
                        (0, Ve.w)(() => this.optionSelectionChanges),
                      );
                })),
                (this.openedChange = new C.vpe()),
                (this._openedStream = this.openedChange.pipe(
                  (0, We.h)((ut) => ut),
                  (0, Re.U)(() => {}),
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, We.h)((ut) => !ut),
                  (0, Re.U)(() => {}),
                )),
                (this.selectionChange = new C.vpe()),
                (this.valueChange = new C.vpe()),
                (this._trackedModal = null),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != Lt?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    Lt.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = yt),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(rt) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new $.Ov(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe((0, wt.x)(), (0, _t.R)(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe((0, _t.R)(this._destroy))
                  .subscribe((te) => {
                    te.added.forEach((Be) => Be.select()),
                      te.removed.forEach((Be) => Be.deselect());
                  }),
                this.options.changes
                  .pipe((0, De.O)(null), (0, _t.R)(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const te = this._getTriggerAriaLabelledby(),
                Be = this.ngControl;
              if (te !== this._triggerAriaLabelledBy) {
                const Ne = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = te),
                  te
                    ? Ne.setAttribute("aria-labelledby", te)
                    : Ne.removeAttribute("aria-labelledby");
              }
              Be &&
                (this._previousControl !== Be.control &&
                  (void 0 !== this._previousControl &&
                    null !== Be.disabled &&
                    Be.disabled !== this.disabled &&
                    (this.disabled = Be.disabled),
                  (this._previousControl = Be.control)),
                this.updateErrorState());
            }
            ngOnChanges(te) {
              (te.disabled || te.userAriaDescribedBy) &&
                this.stateChanges.next(),
                te.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval,
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete(),
                this._clearFromModal();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                (this._applyModalPanelOwnership(),
                (this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            _applyModalPanelOwnership() {
              const te = this._elementRef.nativeElement.closest(
                'body > .cdk-overlay-container [aria-modal="true"]',
              );
              if (!te) return;
              const Be = `${this.id}-panel`;
              this._trackedModal &&
                (0, bt.iD)(this._trackedModal, "aria-owns", Be),
                (0, bt.Zf)(te, "aria-owns", Be),
                (this._trackedModal = te);
            }
            _clearFromModal() {
              this._trackedModal &&
                ((0, bt.iD)(
                  this._trackedModal,
                  "aria-owns",
                  `${this.id}-panel`,
                ),
                (this._trackedModal = null));
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr",
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(te) {
              this._assignValue(te);
            }
            registerOnChange(te) {
              this._onChange = te;
            }
            registerOnTouched(te) {
              this._onTouched = te;
            }
            setDisabledState(te) {
              (this.disabled = te),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const te = this._selectionModel.selected.map(
                  (Be) => Be.viewValue,
                );
                return this._isRtl() && te.reverse(), te.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(te) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(te)
                  : this._handleClosedKeydown(te));
            }
            _handleClosedKeydown(te) {
              const Be = te.keyCode,
                Ne = Be === _.JH || Be === _.LH || Be === _.oh || Be === _.SV,
                Ri = Be === _.K5 || Be === _.L_,
                gi = this._keyManager;
              if (
                (!gi.isTyping() && Ri && !(0, _.Vb)(te)) ||
                ((this.multiple || te.altKey) && Ne)
              )
                te.preventDefault(), this.open();
              else if (!this.multiple) {
                const Xi = this.selected;
                gi.onKeydown(te);
                const _i = this.selected;
                _i &&
                  Xi !== _i &&
                  this._liveAnnouncer.announce(_i.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(te) {
              const Be = this._keyManager,
                Ne = te.keyCode,
                Ri = Ne === _.JH || Ne === _.LH,
                gi = Be.isTyping();
              if (Ri && te.altKey) te.preventDefault(), this.close();
              else if (
                gi ||
                (Ne !== _.K5 && Ne !== _.L_) ||
                !Be.activeItem ||
                (0, _.Vb)(te)
              )
                if (!gi && this._multiple && Ne === _.A && te.ctrlKey) {
                  te.preventDefault();
                  const Xi = this.options.some(
                    (_i) => !_i.disabled && !_i.selected,
                  );
                  this.options.forEach((_i) => {
                    _i.disabled || (Xi ? _i.select() : _i.deselect());
                  });
                } else {
                  const Xi = Be.activeItemIndex;
                  Be.onKeydown(te),
                    this._multiple &&
                      Ri &&
                      te.shiftKey &&
                      Be.activeItem &&
                      Be.activeItemIndex !== Xi &&
                      Be.activeItem._selectViaInteraction();
                }
              else te.preventDefault(), Be.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange
                .pipe((0, He.q)(1))
                .subscribe(() => {
                  this._changeDetectorRef.detectChanges(),
                    this._positioningSettled();
                });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(te) {
              if (
                (this.options.forEach((Be) => Be.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && te)
              )
                Array.isArray(te),
                  te.forEach((Be) => this._selectOptionByValue(Be)),
                  this._sortValues();
              else {
                const Be = this._selectOptionByValue(te);
                Be
                  ? this._keyManager.updateActiveItem(Be)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(te) {
              const Be = this.options.find((Ne) => {
                if (this._selectionModel.isSelected(Ne)) return !1;
                try {
                  return null != Ne.value && this._compareWith(Ne.value, te);
                } catch {
                  return !1;
                }
              });
              return Be && this._selectionModel.select(Be), Be;
            }
            _assignValue(te) {
              return (
                !!(
                  te !== this._value ||
                  (this._multiple && Array.isArray(te))
                ) &&
                (this.options && this._setSelectionByValue(te),
                (this._value = te),
                !0)
              );
            }
            _skipPredicate(te) {
              return te.disabled;
            }
            _initKeyManager() {
              (this._keyManager = new bt.s1(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(["shiftKey"])
                .skipPredicate(this._skipPredicate)),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0,
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const te = (0, Jt.T)(this.options.changes, this._destroy);
              this.optionSelectionChanges
                .pipe((0, _t.R)(te))
                .subscribe((Be) => {
                  this._onSelect(Be.source, Be.isUserInput),
                    Be.isUserInput &&
                      !this.multiple &&
                      this._panelOpen &&
                      (this.close(), this.focus());
                }),
                (0, Jt.T)(...this.options.map((Be) => Be._stateChanges))
                  .pipe((0, _t.R)(te))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(te, Be) {
              const Ne = this._selectionModel.isSelected(te);
              null != te.value || this._multiple
                ? (Ne !== te.selected &&
                    (te.selected
                      ? this._selectionModel.select(te)
                      : this._selectionModel.deselect(te)),
                  Be && this._keyManager.setActiveItem(te),
                  this.multiple && (this._sortValues(), Be && this.focus()))
                : (te.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(te.value)),
                Ne !== this._selectionModel.isSelected(te) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const te = this.options.toArray();
                this._selectionModel.sort((Be, Ne) =>
                  this.sortComparator
                    ? this.sortComparator(Be, Ne, te)
                    : te.indexOf(Be) - te.indexOf(Ne),
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(te) {
              let Be = null;
              (Be = this.multiple
                ? this.selected.map((Ne) => Ne.value)
                : this.selected
                  ? this.selected.value
                  : te),
                (this._value = Be),
                this.valueChange.emit(Be),
                this._onChange(Be),
                this.selectionChange.emit(this._getChangeEvent(Be)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              if (this._keyManager)
                if (this.empty) {
                  let te = -1;
                  for (let Be = 0; Be < this.options.length; Be++)
                    if (!this.options.get(Be).disabled) {
                      te = Be;
                      break;
                    }
                  this._keyManager.setActiveItem(te);
                } else
                  this._keyManager.setActiveItem(
                    this._selectionModel.selected[0],
                  );
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(te) {
              this._elementRef.nativeElement.focus(te);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const te = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (te ? te + " " : "") + this.ariaLabelledby
                : te;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const te = this._parentFormField?.getLabelId();
              let Be = (te ? te + " " : "") + this._valueId;
              return (
                this.ariaLabelledby && (Be += " " + this.ariaLabelledby), Be
              );
            }
            _panelDoneAnimating(te) {
              this.openedChange.emit(te);
            }
            setDescribedByIds(te) {
              te.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    te.join(" "),
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby",
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
            static #t = (this.ɵfac = function (Be) {
              return new (Be || fi)(
                C.Y36(lt.rL),
                C.Y36(C.sBO),
                C.Y36(C.R0b),
                C.Y36(p.rD),
                C.Y36(C.SBq),
                C.Y36(B.Is, 8),
                C.Y36(A.F, 8),
                C.Y36(A.sg, 8),
                C.Y36(at.G_, 8),
                C.Y36(A.a5, 10),
                C.$8M("tabindex"),
                C.Y36(xe),
                C.Y36(bt.Kd),
                C.Y36(Ft, 8),
              );
            });
            static #e = (this.ɵdir = C.lG2({
              type: fi,
              viewQuery: function (Be, Ne) {
                if (
                  (1 & Be && (C.Gf(Pt, 5), C.Gf(ee, 5), C.Gf(s.pI, 5)), 2 & Be)
                ) {
                  let Ri;
                  C.iGM((Ri = C.CRH())) && (Ne.trigger = Ri.first),
                    C.iGM((Ri = C.CRH())) && (Ne.panel = Ri.first),
                    C.iGM((Ri = C.CRH())) && (Ne._overlayDir = Ri.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                panelClass: "panelClass",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                sortComparator: "sortComparator",
                id: "id",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [C.qOj, C.TTD],
            }));
          }
          return fi;
        })(),
        ii = (() => {
          class fi extends Le {
            constructor() {
              super(...arguments),
                (this.panelWidth =
                  this._defaultOptions &&
                  typeof this._defaultOptions.panelWidth < "u"
                    ? this._defaultOptions.panelWidth
                    : "auto"),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "end",
                    originY: "bottom",
                    overlayX: "end",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "bottom",
                    panelClass: "mat-mdc-select-panel-above",
                  },
                  {
                    originX: "end",
                    originY: "top",
                    overlayX: "end",
                    overlayY: "bottom",
                    panelClass: "mat-mdc-select-panel-above",
                  },
                ]),
                (this._hideSingleSelectionIndicator =
                  this._defaultOptions?.hideSingleSelectionIndicator ?? !1),
                (this._skipPredicate = (te) => !this.panelOpen && te.disabled);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe((0, _t.R)(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth(
                        this._preferredOverlayOrigin,
                      )),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            open() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin()),
                (this._overlayWidth = this._getOverlayWidth(
                  this._preferredOverlayOrigin,
                )),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(te) {
              const Be = this.options.toArray()[te];
              if (Be) {
                const Ne = this.panel.nativeElement,
                  Ri = (0, p.CB)(te, this.options, this.optionGroups),
                  gi = Be._getHostElement();
                Ne.scrollTop =
                  0 === te && 1 === Ri
                    ? 0
                    : (0, p.jH)(
                        gi.offsetTop,
                        gi.offsetHeight,
                        Ne.scrollTop,
                        Ne.offsetHeight,
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(te) {
              return new Vt(this, te);
            }
            _getOverlayWidth(te) {
              return "auto" === this.panelWidth
                ? (te instanceof s.xu
                    ? te.elementRef
                    : te || this._elementRef
                  ).nativeElement.getBoundingClientRect().width
                : null === this.panelWidth
                  ? ""
                  : this.panelWidth;
            }
            get hideSingleSelectionIndicator() {
              return this._hideSingleSelectionIndicator;
            }
            set hideSingleSelectionIndicator(te) {
              (this._hideSingleSelectionIndicator = (0, kt.Ig)(te)),
                this._syncParentProperties();
            }
            _syncParentProperties() {
              if (this.options)
                for (const te of this.options)
                  te._changeDetectorRef.markForCheck();
            }
            static #t = (this.ɵfac = (function () {
              let te;
              return function (Ne) {
                return (te || (te = C.n5z(fi)))(Ne || fi);
              };
            })());
            static #e = (this.ɵcmp = C.Xpm({
              type: fi,
              selectors: [["mat-select"]],
              contentQueries: function (Be, Ne, Ri) {
                if (
                  (1 & Be &&
                    (C.Suo(Ri, we, 5), C.Suo(Ri, p.ey, 5), C.Suo(Ri, p.K7, 5)),
                  2 & Be)
                ) {
                  let gi;
                  C.iGM((gi = C.CRH())) && (Ne.customTrigger = gi.first),
                    C.iGM((gi = C.CRH())) && (Ne.options = gi),
                    C.iGM((gi = C.CRH())) && (Ne.optionGroups = gi);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "listbox",
                "ngSkipHydration",
                "",
                1,
                "mat-mdc-select",
              ],
              hostVars: 19,
              hostBindings: function (Be, Ne) {
                1 & Be &&
                  C.NdJ("keydown", function (gi) {
                    return Ne._handleKeydown(gi);
                  })("focus", function () {
                    return Ne._onFocus();
                  })("blur", function () {
                    return Ne._onBlur();
                  }),
                  2 & Be &&
                    (C.uIk("id", Ne.id)("tabindex", Ne.tabIndex)(
                      "aria-controls",
                      Ne.panelOpen ? Ne.id + "-panel" : null,
                    )("aria-expanded", Ne.panelOpen)(
                      "aria-label",
                      Ne.ariaLabel || null,
                    )("aria-required", Ne.required.toString())(
                      "aria-disabled",
                      Ne.disabled.toString(),
                    )("aria-invalid", Ne.errorState)(
                      "aria-activedescendant",
                      Ne._getAriaActiveDescendant(),
                    ),
                    C.ekj("mat-mdc-select-disabled", Ne.disabled)(
                      "mat-mdc-select-invalid",
                      Ne.errorState,
                    )("mat-mdc-select-required", Ne.required)(
                      "mat-mdc-select-empty",
                      Ne.empty,
                    )("mat-mdc-select-multiple", Ne.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
                panelWidth: "panelWidth",
                hideSingleSelectionIndicator: "hideSingleSelectionIndicator",
              },
              exportAs: ["matSelect"],
              features: [
                C._Bn([
                  { provide: at.Eo, useExisting: fi },
                  { provide: p.HF, useExisting: fi },
                ]),
                C.qOj,
              ],
              ngContentSelectors: hi,
              decls: 11,
              vars: 10,
              consts: [
                [
                  "cdk-overlay-origin",
                  "",
                  1,
                  "mat-mdc-select-trigger",
                  3,
                  "click",
                ],
                ["fallbackOverlayOrigin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-mdc-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-mdc-select-placeholder mat-mdc-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-mdc-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-mdc-select-arrow-wrapper"],
                [1, "mat-mdc-select-arrow"],
                [
                  "viewBox",
                  "0 0 24 24",
                  "width",
                  "24px",
                  "height",
                  "24px",
                  "focusable",
                  "false",
                  "aria-hidden",
                  "true",
                ],
                ["d", "M7 10l5 5 5-5z"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayWidth",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-mdc-select-placeholder", "mat-mdc-select-min-line"],
                [1, "mat-mdc-select-value-text", 3, "ngSwitch"],
                ["class", "mat-mdc-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-mdc-select-min-line"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (Be, Ne) {
                if (
                  (1 & Be &&
                    (C.F$t(Ge),
                    C.TgZ(0, "div", 0, 1),
                    C.NdJ("click", function () {
                      return Ne.toggle();
                    }),
                    C.TgZ(3, "div", 2),
                    C.YNc(4, Kt, 2, 1, "span", 3),
                    C.YNc(5, ie, 3, 2, "span", 4),
                    C.qZA(),
                    C.TgZ(6, "div", 5)(7, "div", 6),
                    C.O4$(),
                    C.TgZ(8, "svg", 7),
                    C._UZ(9, "path", 8),
                    C.qZA()()()(),
                    C.YNc(10, vi, 3, 9, "ng-template", 9),
                    C.NdJ("backdropClick", function () {
                      return Ne.close();
                    })("attach", function () {
                      return Ne._onAttached();
                    })("detach", function () {
                      return Ne.close();
                    })),
                  2 & Be)
                ) {
                  const Ri = C.MAs(1);
                  C.xp6(3),
                    C.Q6J("ngSwitch", Ne.empty),
                    C.uIk("id", Ne._valueId),
                    C.xp6(1),
                    C.Q6J("ngSwitchCase", !0),
                    C.xp6(1),
                    C.Q6J("ngSwitchCase", !1),
                    C.xp6(5),
                    C.Q6J(
                      "cdkConnectedOverlayPanelClass",
                      Ne._overlayPanelClass,
                    )("cdkConnectedOverlayScrollStrategy", Ne._scrollStrategy)(
                      "cdkConnectedOverlayOrigin",
                      Ne._preferredOverlayOrigin || Ri,
                    )("cdkConnectedOverlayOpen", Ne.panelOpen)(
                      "cdkConnectedOverlayPositions",
                      Ne._positions,
                    )("cdkConnectedOverlayWidth", Ne._overlayWidth);
                }
              },
              dependencies: [x.mk, x.RF, x.n9, x.ED, s.pI, s.xu],
              styles: [
                '.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [Si.transformPanel] },
              changeDetection: 0,
            }));
          }
          return fi;
        })(),
        Mi = (() => {
          class fi {
            static #t = (this.ɵfac = function (Be) {
              return new (Be || fi)();
            });
            static #e = (this.ɵmod = C.oAB({ type: fi }));
            static #i = (this.ɵinj = C.cJS({
              providers: [Mt],
              imports: [x.ez, s.U8, p.Ng, p.BQ, lt.ZD, at.lN, p.Ng, p.BQ],
            }));
          }
          return fi;
        })();
    },
    3566: (ui, Zt, D) => {
      D.d(Zt, { JX: () => mi, YE: () => We, nU: () => ze });
      var s = D(5879),
        x = D(7849),
        C = D(2495),
        p = D(6028),
        at = D(3680),
        lt = D(8645),
        bt = D(3019),
        B = D(6825),
        kt = D(6814);
      const $ = ["mat-sort-header", ""];
      function _(ie, vi) {
        if (1 & ie) {
          const Ge = s.EpF();
          s.TgZ(0, "div", 3),
            s.NdJ("@arrowPosition.start", function () {
              s.CHM(Ge);
              const Si = s.oxw();
              return s.KtG((Si._disableViewStateAnimation = !0));
            })("@arrowPosition.done", function () {
              s.CHM(Ge);
              const Si = s.oxw();
              return s.KtG((Si._disableViewStateAnimation = !1));
            }),
            s._UZ(1, "div", 4),
            s.TgZ(2, "div", 5),
            s._UZ(3, "div", 6)(4, "div", 7)(5, "div", 8),
            s.qZA()();
        }
        if (2 & ie) {
          const Ge = s.oxw();
          s.Q6J("@arrowOpacity", Ge._getArrowViewState())(
            "@arrowPosition",
            Ge._getArrowViewState(),
          )("@allowChildren", Ge._getArrowDirectionState()),
            s.xp6(2),
            s.Q6J("@indicator", Ge._getArrowDirectionState()),
            s.xp6(1),
            s.Q6J("@leftPointer", Ge._getArrowDirectionState()),
            s.xp6(1),
            s.Q6J("@rightPointer", Ge._getArrowDirectionState());
        }
      }
      const A = ["*"],
        Ve = new s.OlP("MAT_SORT_DEFAULT_OPTIONS"),
        He = (0, at.dB)((0, at.Id)(class {}));
      let We = (() => {
        class ie extends He {
          get direction() {
            return this._direction;
          }
          set direction(Ge) {
            this._direction = Ge;
          }
          get disableClear() {
            return this._disableClear;
          }
          set disableClear(Ge) {
            this._disableClear = (0, C.Ig)(Ge);
          }
          constructor(Ge) {
            super(),
              (this._defaultOptions = Ge),
              (this.sortables = new Map()),
              (this._stateChanges = new lt.x()),
              (this.start = "asc"),
              (this._direction = ""),
              (this.sortChange = new s.vpe());
          }
          register(Ge) {
            this.sortables.set(Ge.id, Ge);
          }
          deregister(Ge) {
            this.sortables.delete(Ge.id);
          }
          sort(Ge) {
            this.active != Ge.id
              ? ((this.active = Ge.id),
                (this.direction = Ge.start ? Ge.start : this.start))
              : (this.direction = this.getNextSortDirection(Ge)),
              this.sortChange.emit({
                active: this.active,
                direction: this.direction,
              });
          }
          getNextSortDirection(Ge) {
            if (!Ge) return "";
            let Si = (function Re(ie, vi) {
                let Ge = ["asc", "desc"];
                return "desc" == ie && Ge.reverse(), vi || Ge.push(""), Ge;
              })(
                Ge.start || this.start,
                Ge?.disableClear ??
                  this.disableClear ??
                  !!this._defaultOptions?.disableClear,
              ),
              Vi = Si.indexOf(this.direction) + 1;
            return Vi >= Si.length && (Vi = 0), Si[Vi];
          }
          ngOnInit() {
            this._markInitialized();
          }
          ngOnChanges() {
            this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
          static #t = (this.ɵfac = function (hi) {
            return new (hi || ie)(s.Y36(Ve, 8));
          });
          static #e = (this.ɵdir = s.lG2({
            type: ie,
            selectors: [["", "matSort", ""]],
            hostAttrs: [1, "mat-sort"],
            inputs: {
              disabled: ["matSortDisabled", "disabled"],
              active: ["matSortActive", "active"],
              start: ["matSortStart", "start"],
              direction: ["matSortDirection", "direction"],
              disableClear: ["matSortDisableClear", "disableClear"],
            },
            outputs: { sortChange: "matSortChange" },
            exportAs: ["matSort"],
            features: [s.qOj, s.TTD],
          }));
        }
        return ie;
      })();
      const wt = at.mZ.ENTERING + " " + at.yN.STANDARD_CURVE,
        _t = {
          indicator: (0, B.X$)("indicator", [
            (0, B.SB)(
              "active-asc, asc",
              (0, B.oB)({ transform: "translateY(0px)" }),
            ),
            (0, B.SB)(
              "active-desc, desc",
              (0, B.oB)({ transform: "translateY(10px)" }),
            ),
            (0, B.eR)("active-asc <=> active-desc", (0, B.jt)(wt)),
          ]),
          leftPointer: (0, B.X$)("leftPointer", [
            (0, B.SB)(
              "active-asc, asc",
              (0, B.oB)({ transform: "rotate(-45deg)" }),
            ),
            (0, B.SB)(
              "active-desc, desc",
              (0, B.oB)({ transform: "rotate(45deg)" }),
            ),
            (0, B.eR)("active-asc <=> active-desc", (0, B.jt)(wt)),
          ]),
          rightPointer: (0, B.X$)("rightPointer", [
            (0, B.SB)(
              "active-asc, asc",
              (0, B.oB)({ transform: "rotate(45deg)" }),
            ),
            (0, B.SB)(
              "active-desc, desc",
              (0, B.oB)({ transform: "rotate(-45deg)" }),
            ),
            (0, B.eR)("active-asc <=> active-desc", (0, B.jt)(wt)),
          ]),
          arrowOpacity: (0, B.X$)("arrowOpacity", [
            (0, B.SB)(
              "desc-to-active, asc-to-active, active",
              (0, B.oB)({ opacity: 1 }),
            ),
            (0, B.SB)(
              "desc-to-hint, asc-to-hint, hint",
              (0, B.oB)({ opacity: 0.54 }),
            ),
            (0, B.SB)(
              "hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void",
              (0, B.oB)({ opacity: 0 }),
            ),
            (0, B.eR)(
              "* => asc, * => desc, * => active, * => hint, * => void",
              (0, B.jt)("0ms"),
            ),
            (0, B.eR)("* <=> *", (0, B.jt)(wt)),
          ]),
          arrowPosition: (0, B.X$)("arrowPosition", [
            (0, B.eR)(
              "* => desc-to-hint, * => desc-to-active",
              (0, B.jt)(
                wt,
                (0, B.F4)([
                  (0, B.oB)({ transform: "translateY(-25%)" }),
                  (0, B.oB)({ transform: "translateY(0)" }),
                ]),
              ),
            ),
            (0, B.eR)(
              "* => hint-to-desc, * => active-to-desc",
              (0, B.jt)(
                wt,
                (0, B.F4)([
                  (0, B.oB)({ transform: "translateY(0)" }),
                  (0, B.oB)({ transform: "translateY(25%)" }),
                ]),
              ),
            ),
            (0, B.eR)(
              "* => asc-to-hint, * => asc-to-active",
              (0, B.jt)(
                wt,
                (0, B.F4)([
                  (0, B.oB)({ transform: "translateY(25%)" }),
                  (0, B.oB)({ transform: "translateY(0)" }),
                ]),
              ),
            ),
            (0, B.eR)(
              "* => hint-to-asc, * => active-to-asc",
              (0, B.jt)(
                wt,
                (0, B.F4)([
                  (0, B.oB)({ transform: "translateY(0)" }),
                  (0, B.oB)({ transform: "translateY(-25%)" }),
                ]),
              ),
            ),
            (0, B.SB)(
              "desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active",
              (0, B.oB)({ transform: "translateY(0)" }),
            ),
            (0, B.SB)(
              "hint-to-desc, active-to-desc, desc",
              (0, B.oB)({ transform: "translateY(-25%)" }),
            ),
            (0, B.SB)(
              "hint-to-asc, active-to-asc, asc",
              (0, B.oB)({ transform: "translateY(25%)" }),
            ),
          ]),
          allowChildren: (0, B.X$)("allowChildren", [
            (0, B.eR)("* <=> *", [
              (0, B.IO)("@*", (0, B.pV)(), { optional: !0 }),
            ]),
          ]),
        };
      let St = (() => {
        class ie {
          constructor() {
            this.changes = new lt.x();
          }
          static #t = (this.ɵfac = function (hi) {
            return new (hi || ie)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: ie,
            factory: ie.ɵfac,
            providedIn: "root",
          }));
        }
        return ie;
      })();
      const ee = {
          provide: St,
          deps: [[new s.FiY(), new s.tp0(), St]],
          useFactory: function Pt(ie) {
            return ie || new St();
          },
        },
        Kt = (0, at.Id)(class {});
      let ze = (() => {
          class ie extends Kt {
            get sortActionDescription() {
              return this._sortActionDescription;
            }
            set sortActionDescription(Ge) {
              this._updateSortActionDescription(Ge);
            }
            get disableClear() {
              return this._disableClear;
            }
            set disableClear(Ge) {
              this._disableClear = (0, C.Ig)(Ge);
            }
            constructor(Ge, hi, Si, Vi, qi, Ie, Fe, xe) {
              super(),
                (this._intl = Ge),
                (this._changeDetectorRef = hi),
                (this._sort = Si),
                (this._columnDef = Vi),
                (this._focusMonitor = qi),
                (this._elementRef = Ie),
                (this._ariaDescriber = Fe),
                (this._showIndicatorHint = !1),
                (this._viewState = {}),
                (this._arrowDirection = ""),
                (this._disableViewStateAnimation = !1),
                (this.arrowPosition = "after"),
                (this._sortActionDescription = "Sort"),
                xe?.arrowPosition && (this.arrowPosition = xe?.arrowPosition),
                this._handleStateChanges();
            }
            ngOnInit() {
              !this.id && this._columnDef && (this.id = this._columnDef.name),
                this._updateArrowDirection(),
                this._setAnimationTransitionState({
                  toState: this._isSorted() ? "active" : this._arrowDirection,
                }),
                this._sort.register(this),
                (this._sortButton =
                  this._elementRef.nativeElement.querySelector(
                    ".mat-sort-header-container",
                  )),
                this._updateSortActionDescription(this._sortActionDescription);
            }
            ngAfterViewInit() {
              this._focusMonitor
                .monitor(this._elementRef, !0)
                .subscribe((Ge) => {
                  const hi = !!Ge;
                  hi !== this._showIndicatorHint &&
                    (this._setIndicatorHintVisible(hi),
                    this._changeDetectorRef.markForCheck());
                });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._sort.deregister(this),
                this._rerenderSubscription.unsubscribe();
            }
            _setIndicatorHintVisible(Ge) {
              (this._isDisabled() && Ge) ||
                ((this._showIndicatorHint = Ge),
                this._isSorted() ||
                  (this._updateArrowDirection(),
                  this._setAnimationTransitionState(
                    this._showIndicatorHint
                      ? { fromState: this._arrowDirection, toState: "hint" }
                      : { fromState: "hint", toState: this._arrowDirection },
                  )));
            }
            _setAnimationTransitionState(Ge) {
              (this._viewState = Ge || {}),
                this._disableViewStateAnimation &&
                  (this._viewState = { toState: Ge.toState });
            }
            _toggleOnInteraction() {
              this._sort.sort(this),
                ("hint" === this._viewState.toState ||
                  "active" === this._viewState.toState) &&
                  (this._disableViewStateAnimation = !0);
            }
            _handleClick() {
              this._isDisabled() || this._sort.sort(this);
            }
            _handleKeydown(Ge) {
              !this._isDisabled() &&
                (Ge.keyCode === p.L_ || Ge.keyCode === p.K5) &&
                (Ge.preventDefault(), this._toggleOnInteraction());
            }
            _isSorted() {
              return (
                this._sort.active == this.id &&
                ("asc" === this._sort.direction ||
                  "desc" === this._sort.direction)
              );
            }
            _getArrowDirectionState() {
              return `${this._isSorted() ? "active-" : ""}${this._arrowDirection}`;
            }
            _getArrowViewState() {
              const Ge = this._viewState.fromState;
              return (Ge ? `${Ge}-to-` : "") + this._viewState.toState;
            }
            _updateArrowDirection() {
              this._arrowDirection = this._isSorted()
                ? this._sort.direction
                : this.start || this._sort.start;
            }
            _isDisabled() {
              return this._sort.disabled || this.disabled;
            }
            _getAriaSortAttribute() {
              return this._isSorted()
                ? "asc" == this._sort.direction
                  ? "ascending"
                  : "descending"
                : "none";
            }
            _renderArrow() {
              return !this._isDisabled() || this._isSorted();
            }
            _updateSortActionDescription(Ge) {
              this._sortButton &&
                (this._ariaDescriber?.removeDescription(
                  this._sortButton,
                  this._sortActionDescription,
                ),
                this._ariaDescriber?.describe(this._sortButton, Ge)),
                (this._sortActionDescription = Ge);
            }
            _handleStateChanges() {
              this._rerenderSubscription = (0, bt.T)(
                this._sort.sortChange,
                this._sort._stateChanges,
                this._intl.changes,
              ).subscribe(() => {
                this._isSorted() &&
                  (this._updateArrowDirection(),
                  ("hint" === this._viewState.toState ||
                    "active" === this._viewState.toState) &&
                    (this._disableViewStateAnimation = !0),
                  this._setAnimationTransitionState({
                    fromState: this._arrowDirection,
                    toState: "active",
                  }),
                  (this._showIndicatorHint = !1)),
                  !this._isSorted() &&
                    this._viewState &&
                    "active" === this._viewState.toState &&
                    ((this._disableViewStateAnimation = !1),
                    this._setAnimationTransitionState({
                      fromState: "active",
                      toState: this._arrowDirection,
                    })),
                  this._changeDetectorRef.markForCheck();
              });
            }
            static #t = (this.ɵfac = function (hi) {
              return new (hi || ie)(
                s.Y36(St),
                s.Y36(s.sBO),
                s.Y36(We, 8),
                s.Y36("MAT_SORT_HEADER_COLUMN_DEF", 8),
                s.Y36(x.tE),
                s.Y36(s.SBq),
                s.Y36(x.$s, 8),
                s.Y36(Ve, 8),
              );
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: ie,
              selectors: [["", "mat-sort-header", ""]],
              hostAttrs: [1, "mat-sort-header"],
              hostVars: 3,
              hostBindings: function (hi, Si) {
                1 & hi &&
                  s.NdJ("click", function () {
                    return Si._handleClick();
                  })("keydown", function (qi) {
                    return Si._handleKeydown(qi);
                  })("mouseenter", function () {
                    return Si._setIndicatorHintVisible(!0);
                  })("mouseleave", function () {
                    return Si._setIndicatorHintVisible(!1);
                  }),
                  2 & hi &&
                    (s.uIk("aria-sort", Si._getAriaSortAttribute()),
                    s.ekj("mat-sort-header-disabled", Si._isDisabled()));
              },
              inputs: {
                disabled: "disabled",
                id: ["mat-sort-header", "id"],
                arrowPosition: "arrowPosition",
                start: "start",
                sortActionDescription: "sortActionDescription",
                disableClear: "disableClear",
              },
              exportAs: ["matSortHeader"],
              features: [s.qOj],
              attrs: $,
              ngContentSelectors: A,
              decls: 4,
              vars: 7,
              consts: [
                [1, "mat-sort-header-container", "mat-focus-indicator"],
                [1, "mat-sort-header-content"],
                ["class", "mat-sort-header-arrow", 4, "ngIf"],
                [1, "mat-sort-header-arrow"],
                [1, "mat-sort-header-stem"],
                [1, "mat-sort-header-indicator"],
                [1, "mat-sort-header-pointer-left"],
                [1, "mat-sort-header-pointer-right"],
                [1, "mat-sort-header-pointer-middle"],
              ],
              template: function (hi, Si) {
                1 & hi &&
                  (s.F$t(),
                  s.TgZ(0, "div", 0)(1, "div", 1),
                  s.Hsn(2),
                  s.qZA(),
                  s.YNc(3, _, 6, 6, "div", 2),
                  s.qZA()),
                  2 & hi &&
                    (s.ekj("mat-sort-header-sorted", Si._isSorted())(
                      "mat-sort-header-position-before",
                      "before" === Si.arrowPosition,
                    ),
                    s.uIk("tabindex", Si._isDisabled() ? null : 0)(
                      "role",
                      Si._isDisabled() ? null : "button",
                    ),
                    s.xp6(3),
                    s.Q6J("ngIf", Si._renderArrow()));
              },
              dependencies: [kt.O5],
              styles: [
                ".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}",
              ],
              encapsulation: 2,
              data: {
                animation: [
                  _t.indicator,
                  _t.leftPointer,
                  _t.rightPointer,
                  _t.arrowOpacity,
                  _t.arrowPosition,
                  _t.allowChildren,
                ],
              },
              changeDetection: 0,
            }));
          }
          return ie;
        })(),
        mi = (() => {
          class ie {
            static #t = (this.ɵfac = function (hi) {
              return new (hi || ie)();
            });
            static #e = (this.ɵmod = s.oAB({ type: ie }));
            static #i = (this.ɵinj = s.cJS({
              providers: [ee],
              imports: [kt.ez, at.BQ],
            }));
          }
          return ie;
        })();
    },
    5313: (ui, Zt, D) => {
      D.d(Zt, {
        ev: () => ct,
        Dz: () => ke,
        w1: () => vt,
        ge: () => U,
        fO: () => yi,
        XQ: () => Yt,
        as: () => Wt,
        Gk: () => oi,
        nj: () => It,
        BZ: () => fe,
        by: () => Je,
        p0: () => me,
      });
      var s = D(5879),
        x = D(9388),
        C = D(2495),
        p = D(8337),
        at = D(2831),
        lt = D(6702),
        bt = D(6814),
        B = D(8645),
        kt = D(9666),
        $ = D(5619),
        _ = D(2664),
        A = D(2096),
        jt = D(9773),
        gt = D(8180);
      const Jt = [[["caption"]], [["colgroup"], ["col"]]],
        De = ["caption", "colgroup, col"];
      function We(Ot) {
        return class extends Ot {
          get sticky() {
            return this._sticky;
          }
          set sticky(Ze) {
            const ft = this._sticky;
            (this._sticky = (0, C.Ig)(Ze)),
              (this._hasStickyChanged = ft !== this._sticky);
          }
          hasStickyChanged() {
            const Ze = this._hasStickyChanged;
            return (this._hasStickyChanged = !1), Ze;
          }
          resetStickyChanged() {
            this._hasStickyChanged = !1;
          }
          constructor(...Ze) {
            super(...Ze), (this._sticky = !1), (this._hasStickyChanged = !1);
          }
        };
      }
      const Re = new s.OlP("CDK_TABLE");
      let _t = (() => {
          class Ot {
            constructor(ft) {
              this.template = ft;
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "cdkCellDef", ""]],
            }));
          }
          return Ot;
        })(),
        St = (() => {
          class Ot {
            constructor(ft) {
              this.template = ft;
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "cdkHeaderCellDef", ""]],
            }));
          }
          return Ot;
        })(),
        Pt = (() => {
          class Ot {
            constructor(ft) {
              this.template = ft;
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "cdkFooterCellDef", ""]],
            }));
          }
          return Ot;
        })();
      class ee {}
      const Kt = We(ee);
      let ze = (() => {
        class Ot extends Kt {
          get name() {
            return this._name;
          }
          set name(ft) {
            this._setNameInput(ft);
          }
          get stickyEnd() {
            return this._stickyEnd;
          }
          set stickyEnd(ft) {
            const Gt = this._stickyEnd;
            (this._stickyEnd = (0, C.Ig)(ft)),
              (this._hasStickyChanged = Gt !== this._stickyEnd);
          }
          constructor(ft) {
            super(), (this._table = ft), (this._stickyEnd = !1);
          }
          _updateColumnCssClassName() {
            this._columnCssClassName = [
              `cdk-column-${this.cssClassFriendlyName}`,
            ];
          }
          _setNameInput(ft) {
            ft &&
              ((this._name = ft),
              (this.cssClassFriendlyName = ft.replace(/[^a-z0-9_-]/gi, "-")),
              this._updateColumnCssClassName());
          }
          static #t = (this.ɵfac = function (Gt) {
            return new (Gt || Ot)(s.Y36(Re, 8));
          });
          static #e = (this.ɵdir = s.lG2({
            type: Ot,
            selectors: [["", "cdkColumnDef", ""]],
            contentQueries: function (Gt, Me, si) {
              if (
                (1 & Gt &&
                  (s.Suo(si, _t, 5), s.Suo(si, St, 5), s.Suo(si, Pt, 5)),
                2 & Gt)
              ) {
                let Ei;
                s.iGM((Ei = s.CRH())) && (Me.cell = Ei.first),
                  s.iGM((Ei = s.CRH())) && (Me.headerCell = Ei.first),
                  s.iGM((Ei = s.CRH())) && (Me.footerCell = Ei.first);
              }
            },
            inputs: {
              sticky: "sticky",
              name: ["cdkColumnDef", "name"],
              stickyEnd: "stickyEnd",
            },
            features: [
              s._Bn([
                { provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: Ot },
              ]),
              s.qOj,
            ],
          }));
        }
        return Ot;
      })();
      class mi {
        constructor(Ze, ft) {
          ft.nativeElement.classList.add(...Ze._columnCssClassName);
        }
      }
      let ie = (() => {
          class Ot extends mi {
            constructor(ft, Gt) {
              super(ft, Gt);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(ze), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["cdk-header-cell"], ["th", "cdk-header-cell", ""]],
              hostAttrs: ["role", "columnheader", 1, "cdk-header-cell"],
              features: [s.qOj],
            }));
          }
          return Ot;
        })(),
        Ge = (() => {
          class Ot extends mi {
            constructor(ft, Gt) {
              if (
                (super(ft, Gt),
                1 === ft._table?._elementRef.nativeElement.nodeType)
              ) {
                const Me =
                  ft._table._elementRef.nativeElement.getAttribute("role");
                Gt.nativeElement.setAttribute(
                  "role",
                  "grid" === Me || "treegrid" === Me ? "gridcell" : "cell",
                );
              }
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(ze), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["cdk-cell"], ["td", "cdk-cell", ""]],
              hostAttrs: [1, "cdk-cell"],
              features: [s.qOj],
            }));
          }
          return Ot;
        })();
      class hi {
        constructor() {
          (this.tasks = []), (this.endTasks = []);
        }
      }
      const Si = new s.OlP("_COALESCED_STYLE_SCHEDULER");
      let Vi = (() => {
          class Ot {
            constructor(ft) {
              (this._ngZone = ft),
                (this._currentSchedule = null),
                (this._destroyed = new B.x());
            }
            schedule(ft) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.tasks.push(ft);
            }
            scheduleEnd(ft) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.endTasks.push(ft);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _createScheduleIfNeeded() {
              this._currentSchedule ||
                ((this._currentSchedule = new hi()),
                this._getScheduleObservable()
                  .pipe((0, jt.R)(this._destroyed))
                  .subscribe(() => {
                    for (
                      ;
                      this._currentSchedule.tasks.length ||
                      this._currentSchedule.endTasks.length;

                    ) {
                      const ft = this._currentSchedule;
                      this._currentSchedule = new hi();
                      for (const Gt of ft.tasks) Gt();
                      for (const Gt of ft.endTasks) Gt();
                    }
                    this._currentSchedule = null;
                  }));
            }
            _getScheduleObservable() {
              return this._ngZone.isStable
                ? (0, kt.D)(Promise.resolve(void 0))
                : this._ngZone.onStable.pipe((0, gt.q)(1));
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.LFG(s.R0b));
            });
            static #e = (this.ɵprov = s.Yz7({ token: Ot, factory: Ot.ɵfac }));
          }
          return Ot;
        })(),
        Ie = (() => {
          class Ot {
            constructor(ft, Gt) {
              (this.template = ft), (this._differs = Gt);
            }
            ngOnChanges(ft) {
              if (!this._columnsDiffer) {
                const Gt = (ft.columns && ft.columns.currentValue) || [];
                (this._columnsDiffer = this._differs.find(Gt).create()),
                  this._columnsDiffer.diff(Gt);
              }
            }
            getColumnsDiff() {
              return this._columnsDiffer.diff(this.columns);
            }
            extractCellTemplate(ft) {
              return this instanceof Ue
                ? ft.headerCell.template
                : this instanceof we
                  ? ft.footerCell.template
                  : ft.cell.template;
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc), s.Y36(s.ZZ4));
            });
            static #e = (this.ɵdir = s.lG2({ type: Ot, features: [s.TTD] }));
          }
          return Ot;
        })();
      class Fe extends Ie {}
      const xe = We(Fe);
      let Ue = (() => {
        class Ot extends xe {
          constructor(ft, Gt, Me) {
            super(ft, Gt), (this._table = Me);
          }
          ngOnChanges(ft) {
            super.ngOnChanges(ft);
          }
          static #t = (this.ɵfac = function (Gt) {
            return new (Gt || Ot)(s.Y36(s.Rgc), s.Y36(s.ZZ4), s.Y36(Re, 8));
          });
          static #e = (this.ɵdir = s.lG2({
            type: Ot,
            selectors: [["", "cdkHeaderRowDef", ""]],
            inputs: {
              columns: ["cdkHeaderRowDef", "columns"],
              sticky: ["cdkHeaderRowDefSticky", "sticky"],
            },
            features: [s.qOj, s.TTD],
          }));
        }
        return Ot;
      })();
      class Ft extends Ie {}
      const Mt = We(Ft);
      let we = (() => {
          class Ot extends Mt {
            constructor(ft, Gt, Me) {
              super(ft, Gt), (this._table = Me);
            }
            ngOnChanges(ft) {
              super.ngOnChanges(ft);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc), s.Y36(s.ZZ4), s.Y36(Re, 8));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "cdkFooterRowDef", ""]],
              inputs: {
                columns: ["cdkFooterRowDef", "columns"],
                sticky: ["cdkFooterRowDefSticky", "sticky"],
              },
              features: [s.qOj, s.TTD],
            }));
          }
          return Ot;
        })(),
        Vt = (() => {
          class Ot extends Ie {
            constructor(ft, Gt, Me) {
              super(ft, Gt), (this._table = Me);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc), s.Y36(s.ZZ4), s.Y36(Re, 8));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "cdkRowDef", ""]],
              inputs: {
                columns: ["cdkRowDefColumns", "columns"],
                when: ["cdkRowDefWhen", "when"],
              },
              features: [s.qOj],
            }));
          }
          return Ot;
        })(),
        re = (() => {
          class Ot {
            static #t = (this.mostRecentCellOutlet = null);
            constructor(ft) {
              (this._viewContainer = ft), (Ot.mostRecentCellOutlet = this);
            }
            ngOnDestroy() {
              Ot.mostRecentCellOutlet === this &&
                (Ot.mostRecentCellOutlet = null);
            }
            static #e = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.s_b));
            });
            static #i = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "cdkCellOutlet", ""]],
            }));
          }
          return Ot;
        })(),
        Le = (() => {
          class Ot {
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)();
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Ot,
              selectors: [["cdk-header-row"], ["tr", "cdk-header-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-header-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (Gt, Me) {
                1 & Gt && s.GkF(0, 0);
              },
              dependencies: [re],
              encapsulation: 2,
            }));
          }
          return Ot;
        })(),
        ii = (() => {
          class Ot {
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)();
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Ot,
              selectors: [["cdk-row"], ["tr", "cdk-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (Gt, Me) {
                1 & Gt && s.GkF(0, 0);
              },
              dependencies: [re],
              encapsulation: 2,
            }));
          }
          return Ot;
        })(),
        Mi = (() => {
          class Ot {
            constructor(ft) {
              (this.templateRef = ft),
                (this._contentClassName = "cdk-no-data-row");
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.Rgc));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["ng-template", "cdkNoDataRow", ""]],
            }));
          }
          return Ot;
        })();
      const fi = ["top", "bottom", "left", "right"];
      class ri {
        constructor(Ze, ft, Gt, Me, si = !0, Ei = !0, Hi) {
          (this._isNativeHtmlTable = Ze),
            (this._stickCellCss = ft),
            (this.direction = Gt),
            (this._coalescedStyleScheduler = Me),
            (this._isBrowser = si),
            (this._needsPositionStickyOnElement = Ei),
            (this._positionListener = Hi),
            (this._cachedCellWidths = []),
            (this._borderCellCss = {
              top: `${ft}-border-elem-top`,
              bottom: `${ft}-border-elem-bottom`,
              left: `${ft}-border-elem-left`,
              right: `${ft}-border-elem-right`,
            });
        }
        clearStickyPositioning(Ze, ft) {
          const Gt = [];
          for (const Me of Ze)
            if (Me.nodeType === Me.ELEMENT_NODE) {
              Gt.push(Me);
              for (let si = 0; si < Me.children.length; si++)
                Gt.push(Me.children[si]);
            }
          this._coalescedStyleScheduler.schedule(() => {
            for (const Me of Gt) this._removeStickyStyle(Me, ft);
          });
        }
        updateStickyColumns(Ze, ft, Gt, Me = !0) {
          if (
            !Ze.length ||
            !this._isBrowser ||
            (!ft.some((pn) => pn) && !Gt.some((pn) => pn))
          )
            return void (
              this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({ sizes: [] }),
              this._positionListener.stickyEndColumnsUpdated({ sizes: [] }))
            );
          const si = Ze[0],
            Ei = si.children.length,
            Hi = this._getCellWidths(si, Me),
            Yi = this._getStickyStartColumnPositions(Hi, ft),
            ln = this._getStickyEndColumnPositions(Hi, Gt),
            bn = ft.lastIndexOf(!0),
            Un = Gt.indexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            const pn = "rtl" === this.direction,
              An = pn ? "right" : "left",
              yn = pn ? "left" : "right";
            for (const uo of Ze)
              for (let Tn = 0; Tn < Ei; Tn++) {
                const oo = uo.children[Tn];
                ft[Tn] && this._addStickyStyle(oo, An, Yi[Tn], Tn === bn),
                  Gt[Tn] && this._addStickyStyle(oo, yn, ln[Tn], Tn === Un);
              }
            this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({
                sizes:
                  -1 === bn
                    ? []
                    : Hi.slice(0, bn + 1).map((uo, Tn) => (ft[Tn] ? uo : null)),
              }),
              this._positionListener.stickyEndColumnsUpdated({
                sizes:
                  -1 === Un
                    ? []
                    : Hi.slice(Un)
                        .map((uo, Tn) => (Gt[Tn + Un] ? uo : null))
                        .reverse(),
              }));
          });
        }
        stickRows(Ze, ft, Gt) {
          if (!this._isBrowser) return;
          const Me = "bottom" === Gt ? Ze.slice().reverse() : Ze,
            si = "bottom" === Gt ? ft.slice().reverse() : ft,
            Ei = [],
            Hi = [],
            Yi = [];
          for (let bn = 0, Un = 0; bn < Me.length; bn++) {
            if (!si[bn]) continue;
            Ei[bn] = Un;
            const pn = Me[bn];
            Yi[bn] = this._isNativeHtmlTable ? Array.from(pn.children) : [pn];
            const An = pn.getBoundingClientRect().height;
            (Un += An), (Hi[bn] = An);
          }
          const ln = si.lastIndexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            for (let bn = 0; bn < Me.length; bn++) {
              if (!si[bn]) continue;
              const Un = Ei[bn],
                pn = bn === ln;
              for (const An of Yi[bn]) this._addStickyStyle(An, Gt, Un, pn);
            }
            "top" === Gt
              ? this._positionListener?.stickyHeaderRowsUpdated({
                  sizes: Hi,
                  offsets: Ei,
                  elements: Yi,
                })
              : this._positionListener?.stickyFooterRowsUpdated({
                  sizes: Hi,
                  offsets: Ei,
                  elements: Yi,
                });
          });
        }
        updateStickyFooterContainer(Ze, ft) {
          if (!this._isNativeHtmlTable) return;
          const Gt = Ze.querySelector("tfoot");
          this._coalescedStyleScheduler.schedule(() => {
            ft.some((Me) => !Me)
              ? this._removeStickyStyle(Gt, ["bottom"])
              : this._addStickyStyle(Gt, "bottom", 0, !1);
          });
        }
        _removeStickyStyle(Ze, ft) {
          for (const Me of ft)
            (Ze.style[Me] = ""), Ze.classList.remove(this._borderCellCss[Me]);
          fi.some((Me) => -1 === ft.indexOf(Me) && Ze.style[Me])
            ? (Ze.style.zIndex = this._getCalculatedZIndex(Ze))
            : ((Ze.style.zIndex = ""),
              this._needsPositionStickyOnElement && (Ze.style.position = ""),
              Ze.classList.remove(this._stickCellCss));
        }
        _addStickyStyle(Ze, ft, Gt, Me) {
          Ze.classList.add(this._stickCellCss),
            Me && Ze.classList.add(this._borderCellCss[ft]),
            (Ze.style[ft] = `${Gt}px`),
            (Ze.style.zIndex = this._getCalculatedZIndex(Ze)),
            this._needsPositionStickyOnElement &&
              (Ze.style.cssText +=
                "position: -webkit-sticky; position: sticky; ");
        }
        _getCalculatedZIndex(Ze) {
          const ft = { top: 100, bottom: 10, left: 1, right: 1 };
          let Gt = 0;
          for (const Me of fi) Ze.style[Me] && (Gt += ft[Me]);
          return Gt ? `${Gt}` : "";
        }
        _getCellWidths(Ze, ft = !0) {
          if (!ft && this._cachedCellWidths.length)
            return this._cachedCellWidths;
          const Gt = [],
            Me = Ze.children;
          for (let si = 0; si < Me.length; si++)
            Gt.push(Me[si].getBoundingClientRect().width);
          return (this._cachedCellWidths = Gt), Gt;
        }
        _getStickyStartColumnPositions(Ze, ft) {
          const Gt = [];
          let Me = 0;
          for (let si = 0; si < Ze.length; si++)
            ft[si] && ((Gt[si] = Me), (Me += Ze[si]));
          return Gt;
        }
        _getStickyEndColumnPositions(Ze, ft) {
          const Gt = [];
          let Me = 0;
          for (let si = Ze.length; si > 0; si--)
            ft[si] && ((Gt[si] = Me), (Me += Ze[si]));
          return Gt;
        }
      }
      const ot = new s.OlP("CDK_SPL");
      let rt = (() => {
          class Ot {
            constructor(ft, Gt) {
              (this.viewContainer = ft), (this.elementRef = Gt);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.s_b), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "rowOutlet", ""]],
            }));
          }
          return Ot;
        })(),
        yt = (() => {
          class Ot {
            constructor(ft, Gt) {
              (this.viewContainer = ft), (this.elementRef = Gt);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.s_b), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "headerRowOutlet", ""]],
            }));
          }
          return Ot;
        })(),
        Rt = (() => {
          class Ot {
            constructor(ft, Gt) {
              (this.viewContainer = ft), (this.elementRef = Gt);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.s_b), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "footerRowOutlet", ""]],
            }));
          }
          return Ot;
        })(),
        Lt = (() => {
          class Ot {
            constructor(ft, Gt) {
              (this.viewContainer = ft), (this.elementRef = Gt);
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(s.Y36(s.s_b), s.Y36(s.SBq));
            });
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "noDataRowOutlet", ""]],
            }));
          }
          return Ot;
        })(),
        Ct = (() => {
          class Ot {
            get trackBy() {
              return this._trackByFn;
            }
            set trackBy(ft) {
              this._trackByFn = ft;
            }
            get dataSource() {
              return this._dataSource;
            }
            set dataSource(ft) {
              this._dataSource !== ft && this._switchDataSource(ft);
            }
            get multiTemplateDataRows() {
              return this._multiTemplateDataRows;
            }
            set multiTemplateDataRows(ft) {
              (this._multiTemplateDataRows = (0, C.Ig)(ft)),
                this._rowOutlet &&
                  this._rowOutlet.viewContainer.length &&
                  (this._forceRenderDataRows(),
                  this.updateStickyColumnStyles());
            }
            get fixedLayout() {
              return this._fixedLayout;
            }
            set fixedLayout(ft) {
              (this._fixedLayout = (0, C.Ig)(ft)),
                (this._forceRecalculateCellWidths = !0),
                (this._stickyColumnStylesNeedReset = !0);
            }
            constructor(ft, Gt, Me, si, Ei, Hi, Yi, ln, bn, Un, pn, An) {
              (this._differs = ft),
                (this._changeDetectorRef = Gt),
                (this._elementRef = Me),
                (this._dir = Ei),
                (this._platform = Yi),
                (this._viewRepeater = ln),
                (this._coalescedStyleScheduler = bn),
                (this._viewportRuler = Un),
                (this._stickyPositioningListener = pn),
                (this._ngZone = An),
                (this._onDestroy = new B.x()),
                (this._columnDefsByName = new Map()),
                (this._customColumnDefs = new Set()),
                (this._customRowDefs = new Set()),
                (this._customHeaderRowDefs = new Set()),
                (this._customFooterRowDefs = new Set()),
                (this._headerRowDefChanged = !0),
                (this._footerRowDefChanged = !0),
                (this._stickyColumnStylesNeedReset = !0),
                (this._forceRecalculateCellWidths = !0),
                (this._cachedRenderRowsMap = new Map()),
                (this.stickyCssClass = "cdk-table-sticky"),
                (this.needsPositionStickyOnElement = !0),
                (this._isShowingNoDataRow = !1),
                (this._multiTemplateDataRows = !1),
                (this._fixedLayout = !1),
                (this.contentChanged = new s.vpe()),
                (this.viewChange = new $.X({
                  start: 0,
                  end: Number.MAX_VALUE,
                })),
                si ||
                  this._elementRef.nativeElement.setAttribute("role", "table"),
                (this._document = Hi),
                (this._isNativeHtmlTable =
                  "TABLE" === this._elementRef.nativeElement.nodeName);
            }
            ngOnInit() {
              this._setupStickyStyler(),
                this._isNativeHtmlTable && this._applyNativeTableSections(),
                (this._dataDiffer = this._differs
                  .find([])
                  .create((ft, Gt) =>
                    this.trackBy ? this.trackBy(Gt.dataIndex, Gt.data) : Gt,
                  )),
                this._viewportRuler
                  .change()
                  .pipe((0, jt.R)(this._onDestroy))
                  .subscribe(() => {
                    this._forceRecalculateCellWidths = !0;
                  });
            }
            ngAfterContentChecked() {
              this._cacheRowDefs(), this._cacheColumnDefs();
              const Gt =
                this._renderUpdatedColumns() ||
                this._headerRowDefChanged ||
                this._footerRowDefChanged;
              (this._stickyColumnStylesNeedReset =
                this._stickyColumnStylesNeedReset || Gt),
                (this._forceRecalculateCellWidths = Gt),
                this._headerRowDefChanged &&
                  (this._forceRenderHeaderRows(),
                  (this._headerRowDefChanged = !1)),
                this._footerRowDefChanged &&
                  (this._forceRenderFooterRows(),
                  (this._footerRowDefChanged = !1)),
                this.dataSource &&
                this._rowDefs.length > 0 &&
                !this._renderChangeSubscription
                  ? this._observeRenderChanges()
                  : this._stickyColumnStylesNeedReset &&
                    this.updateStickyColumnStyles(),
                this._checkStickyStates();
            }
            ngOnDestroy() {
              [
                this._rowOutlet.viewContainer,
                this._headerRowOutlet.viewContainer,
                this._footerRowOutlet.viewContainer,
                this._cachedRenderRowsMap,
                this._customColumnDefs,
                this._customRowDefs,
                this._customHeaderRowDefs,
                this._customFooterRowDefs,
                this._columnDefsByName,
              ].forEach((ft) => {
                ft.clear();
              }),
                (this._headerRowDefs = []),
                (this._footerRowDefs = []),
                (this._defaultRowDef = null),
                this._onDestroy.next(),
                this._onDestroy.complete(),
                (0, p.Z9)(this.dataSource) && this.dataSource.disconnect(this);
            }
            renderRows() {
              this._renderRows = this._getAllRenderRows();
              const ft = this._dataDiffer.diff(this._renderRows);
              if (!ft)
                return this._updateNoDataRow(), void this.contentChanged.next();
              const Gt = this._rowOutlet.viewContainer;
              this._viewRepeater.applyChanges(
                ft,
                Gt,
                (Me, si, Ei) => this._getEmbeddedViewArgs(Me.item, Ei),
                (Me) => Me.item.data,
                (Me) => {
                  1 === Me.operation &&
                    Me.context &&
                    this._renderCellTemplateForItem(
                      Me.record.item.rowDef,
                      Me.context,
                    );
                },
              ),
                this._updateRowIndexContext(),
                ft.forEachIdentityChange((Me) => {
                  Gt.get(Me.currentIndex).context.$implicit = Me.item.data;
                }),
                this._updateNoDataRow(),
                this._ngZone && s.R0b.isInAngularZone()
                  ? this._ngZone.onStable
                      .pipe((0, gt.q)(1), (0, jt.R)(this._onDestroy))
                      .subscribe(() => {
                        this.updateStickyColumnStyles();
                      })
                  : this.updateStickyColumnStyles(),
                this.contentChanged.next();
            }
            addColumnDef(ft) {
              this._customColumnDefs.add(ft);
            }
            removeColumnDef(ft) {
              this._customColumnDefs.delete(ft);
            }
            addRowDef(ft) {
              this._customRowDefs.add(ft);
            }
            removeRowDef(ft) {
              this._customRowDefs.delete(ft);
            }
            addHeaderRowDef(ft) {
              this._customHeaderRowDefs.add(ft),
                (this._headerRowDefChanged = !0);
            }
            removeHeaderRowDef(ft) {
              this._customHeaderRowDefs.delete(ft),
                (this._headerRowDefChanged = !0);
            }
            addFooterRowDef(ft) {
              this._customFooterRowDefs.add(ft),
                (this._footerRowDefChanged = !0);
            }
            removeFooterRowDef(ft) {
              this._customFooterRowDefs.delete(ft),
                (this._footerRowDefChanged = !0);
            }
            setNoDataRow(ft) {
              this._customNoDataRow = ft;
            }
            updateStickyHeaderRowStyles() {
              const ft = this._getRenderedRows(this._headerRowOutlet),
                Me = this._elementRef.nativeElement.querySelector("thead");
              Me && (Me.style.display = ft.length ? "" : "none");
              const si = this._headerRowDefs.map((Ei) => Ei.sticky);
              this._stickyStyler.clearStickyPositioning(ft, ["top"]),
                this._stickyStyler.stickRows(ft, si, "top"),
                this._headerRowDefs.forEach((Ei) => Ei.resetStickyChanged());
            }
            updateStickyFooterRowStyles() {
              const ft = this._getRenderedRows(this._footerRowOutlet),
                Me = this._elementRef.nativeElement.querySelector("tfoot");
              Me && (Me.style.display = ft.length ? "" : "none");
              const si = this._footerRowDefs.map((Ei) => Ei.sticky);
              this._stickyStyler.clearStickyPositioning(ft, ["bottom"]),
                this._stickyStyler.stickRows(ft, si, "bottom"),
                this._stickyStyler.updateStickyFooterContainer(
                  this._elementRef.nativeElement,
                  si,
                ),
                this._footerRowDefs.forEach((Ei) => Ei.resetStickyChanged());
            }
            updateStickyColumnStyles() {
              const ft = this._getRenderedRows(this._headerRowOutlet),
                Gt = this._getRenderedRows(this._rowOutlet),
                Me = this._getRenderedRows(this._footerRowOutlet);
              ((this._isNativeHtmlTable && !this._fixedLayout) ||
                this._stickyColumnStylesNeedReset) &&
                (this._stickyStyler.clearStickyPositioning(
                  [...ft, ...Gt, ...Me],
                  ["left", "right"],
                ),
                (this._stickyColumnStylesNeedReset = !1)),
                ft.forEach((si, Ei) => {
                  this._addStickyColumnStyles([si], this._headerRowDefs[Ei]);
                }),
                this._rowDefs.forEach((si) => {
                  const Ei = [];
                  for (let Hi = 0; Hi < Gt.length; Hi++)
                    this._renderRows[Hi].rowDef === si && Ei.push(Gt[Hi]);
                  this._addStickyColumnStyles(Ei, si);
                }),
                Me.forEach((si, Ei) => {
                  this._addStickyColumnStyles([si], this._footerRowDefs[Ei]);
                }),
                Array.from(this._columnDefsByName.values()).forEach((si) =>
                  si.resetStickyChanged(),
                );
            }
            _getAllRenderRows() {
              const ft = [],
                Gt = this._cachedRenderRowsMap;
              this._cachedRenderRowsMap = new Map();
              for (let Me = 0; Me < this._data.length; Me++) {
                let si = this._data[Me];
                const Ei = this._getRenderRowsForData(si, Me, Gt.get(si));
                this._cachedRenderRowsMap.has(si) ||
                  this._cachedRenderRowsMap.set(si, new WeakMap());
                for (let Hi = 0; Hi < Ei.length; Hi++) {
                  let Yi = Ei[Hi];
                  const ln = this._cachedRenderRowsMap.get(Yi.data);
                  ln.has(Yi.rowDef)
                    ? ln.get(Yi.rowDef).push(Yi)
                    : ln.set(Yi.rowDef, [Yi]),
                    ft.push(Yi);
                }
              }
              return ft;
            }
            _getRenderRowsForData(ft, Gt, Me) {
              return this._getRowDefs(ft, Gt).map((Ei) => {
                const Hi = Me && Me.has(Ei) ? Me.get(Ei) : [];
                if (Hi.length) {
                  const Yi = Hi.shift();
                  return (Yi.dataIndex = Gt), Yi;
                }
                return { data: ft, rowDef: Ei, dataIndex: Gt };
              });
            }
            _cacheColumnDefs() {
              this._columnDefsByName.clear(),
                H(
                  this._getOwnDefs(this._contentColumnDefs),
                  this._customColumnDefs,
                ).forEach((Gt) => {
                  this._columnDefsByName.has(Gt.name),
                    this._columnDefsByName.set(Gt.name, Gt);
                });
            }
            _cacheRowDefs() {
              (this._headerRowDefs = H(
                this._getOwnDefs(this._contentHeaderRowDefs),
                this._customHeaderRowDefs,
              )),
                (this._footerRowDefs = H(
                  this._getOwnDefs(this._contentFooterRowDefs),
                  this._customFooterRowDefs,
                )),
                (this._rowDefs = H(
                  this._getOwnDefs(this._contentRowDefs),
                  this._customRowDefs,
                ));
              const ft = this._rowDefs.filter((Gt) => !Gt.when);
              this._defaultRowDef = ft[0];
            }
            _renderUpdatedColumns() {
              const ft = (Ei, Hi) => Ei || !!Hi.getColumnsDiff(),
                Gt = this._rowDefs.reduce(ft, !1);
              Gt && this._forceRenderDataRows();
              const Me = this._headerRowDefs.reduce(ft, !1);
              Me && this._forceRenderHeaderRows();
              const si = this._footerRowDefs.reduce(ft, !1);
              return si && this._forceRenderFooterRows(), Gt || Me || si;
            }
            _switchDataSource(ft) {
              (this._data = []),
                (0, p.Z9)(this.dataSource) && this.dataSource.disconnect(this),
                this._renderChangeSubscription &&
                  (this._renderChangeSubscription.unsubscribe(),
                  (this._renderChangeSubscription = null)),
                ft ||
                  (this._dataDiffer && this._dataDiffer.diff([]),
                  this._rowOutlet.viewContainer.clear()),
                (this._dataSource = ft);
            }
            _observeRenderChanges() {
              if (!this.dataSource) return;
              let ft;
              (0, p.Z9)(this.dataSource)
                ? (ft = this.dataSource.connect(this))
                : (0, _.b)(this.dataSource)
                  ? (ft = this.dataSource)
                  : Array.isArray(this.dataSource) &&
                    (ft = (0, A.of)(this.dataSource)),
                (this._renderChangeSubscription = ft
                  .pipe((0, jt.R)(this._onDestroy))
                  .subscribe((Gt) => {
                    (this._data = Gt || []), this.renderRows();
                  }));
            }
            _forceRenderHeaderRows() {
              this._headerRowOutlet.viewContainer.length > 0 &&
                this._headerRowOutlet.viewContainer.clear(),
                this._headerRowDefs.forEach((ft, Gt) =>
                  this._renderRow(this._headerRowOutlet, ft, Gt),
                ),
                this.updateStickyHeaderRowStyles();
            }
            _forceRenderFooterRows() {
              this._footerRowOutlet.viewContainer.length > 0 &&
                this._footerRowOutlet.viewContainer.clear(),
                this._footerRowDefs.forEach((ft, Gt) =>
                  this._renderRow(this._footerRowOutlet, ft, Gt),
                ),
                this.updateStickyFooterRowStyles();
            }
            _addStickyColumnStyles(ft, Gt) {
              const Me = Array.from(Gt.columns || []).map((Hi) =>
                  this._columnDefsByName.get(Hi),
                ),
                si = Me.map((Hi) => Hi.sticky),
                Ei = Me.map((Hi) => Hi.stickyEnd);
              this._stickyStyler.updateStickyColumns(
                ft,
                si,
                Ei,
                !this._fixedLayout || this._forceRecalculateCellWidths,
              );
            }
            _getRenderedRows(ft) {
              const Gt = [];
              for (let Me = 0; Me < ft.viewContainer.length; Me++) {
                const si = ft.viewContainer.get(Me);
                Gt.push(si.rootNodes[0]);
              }
              return Gt;
            }
            _getRowDefs(ft, Gt) {
              if (1 == this._rowDefs.length) return [this._rowDefs[0]];
              let Me = [];
              if (this.multiTemplateDataRows)
                Me = this._rowDefs.filter((si) => !si.when || si.when(Gt, ft));
              else {
                let si =
                  this._rowDefs.find((Ei) => Ei.when && Ei.when(Gt, ft)) ||
                  this._defaultRowDef;
                si && Me.push(si);
              }
              return Me;
            }
            _getEmbeddedViewArgs(ft, Gt) {
              return {
                templateRef: ft.rowDef.template,
                context: { $implicit: ft.data },
                index: Gt,
              };
            }
            _renderRow(ft, Gt, Me, si = {}) {
              const Ei = ft.viewContainer.createEmbeddedView(
                Gt.template,
                si,
                Me,
              );
              return this._renderCellTemplateForItem(Gt, si), Ei;
            }
            _renderCellTemplateForItem(ft, Gt) {
              for (let Me of this._getCellTemplates(ft))
                re.mostRecentCellOutlet &&
                  re.mostRecentCellOutlet._viewContainer.createEmbeddedView(
                    Me,
                    Gt,
                  );
              this._changeDetectorRef.markForCheck();
            }
            _updateRowIndexContext() {
              const ft = this._rowOutlet.viewContainer;
              for (let Gt = 0, Me = ft.length; Gt < Me; Gt++) {
                const Ei = ft.get(Gt).context;
                (Ei.count = Me),
                  (Ei.first = 0 === Gt),
                  (Ei.last = Gt === Me - 1),
                  (Ei.even = Gt % 2 == 0),
                  (Ei.odd = !Ei.even),
                  this.multiTemplateDataRows
                    ? ((Ei.dataIndex = this._renderRows[Gt].dataIndex),
                      (Ei.renderIndex = Gt))
                    : (Ei.index = this._renderRows[Gt].dataIndex);
              }
            }
            _getCellTemplates(ft) {
              return ft && ft.columns
                ? Array.from(ft.columns, (Gt) => {
                    const Me = this._columnDefsByName.get(Gt);
                    return ft.extractCellTemplate(Me);
                  })
                : [];
            }
            _applyNativeTableSections() {
              const ft = this._document.createDocumentFragment(),
                Gt = [
                  { tag: "thead", outlets: [this._headerRowOutlet] },
                  {
                    tag: "tbody",
                    outlets: [this._rowOutlet, this._noDataRowOutlet],
                  },
                  { tag: "tfoot", outlets: [this._footerRowOutlet] },
                ];
              for (const Me of Gt) {
                const si = this._document.createElement(Me.tag);
                si.setAttribute("role", "rowgroup");
                for (const Ei of Me.outlets)
                  si.appendChild(Ei.elementRef.nativeElement);
                ft.appendChild(si);
              }
              this._elementRef.nativeElement.appendChild(ft);
            }
            _forceRenderDataRows() {
              this._dataDiffer.diff([]),
                this._rowOutlet.viewContainer.clear(),
                this.renderRows();
            }
            _checkStickyStates() {
              const ft = (Gt, Me) => Gt || Me.hasStickyChanged();
              this._headerRowDefs.reduce(ft, !1) &&
                this.updateStickyHeaderRowStyles(),
                this._footerRowDefs.reduce(ft, !1) &&
                  this.updateStickyFooterRowStyles(),
                Array.from(this._columnDefsByName.values()).reduce(ft, !1) &&
                  ((this._stickyColumnStylesNeedReset = !0),
                  this.updateStickyColumnStyles());
            }
            _setupStickyStyler() {
              (this._stickyStyler = new ri(
                this._isNativeHtmlTable,
                this.stickyCssClass,
                this._dir ? this._dir.value : "ltr",
                this._coalescedStyleScheduler,
                this._platform.isBrowser,
                this.needsPositionStickyOnElement,
                this._stickyPositioningListener,
              )),
                (this._dir ? this._dir.change : (0, A.of)())
                  .pipe((0, jt.R)(this._onDestroy))
                  .subscribe((Gt) => {
                    (this._stickyStyler.direction = Gt),
                      this.updateStickyColumnStyles();
                  });
            }
            _getOwnDefs(ft) {
              return ft.filter((Gt) => !Gt._table || Gt._table === this);
            }
            _updateNoDataRow() {
              const ft = this._customNoDataRow || this._noDataRow;
              if (!ft) return;
              const Gt = 0 === this._rowOutlet.viewContainer.length;
              if (Gt === this._isShowingNoDataRow) return;
              const Me = this._noDataRowOutlet.viewContainer;
              if (Gt) {
                const si = Me.createEmbeddedView(ft.templateRef),
                  Ei = si.rootNodes[0];
                1 === si.rootNodes.length &&
                  Ei?.nodeType === this._document.ELEMENT_NODE &&
                  (Ei.setAttribute("role", "row"),
                  Ei.classList.add(ft._contentClassName));
              } else Me.clear();
              (this._isShowingNoDataRow = Gt),
                this._changeDetectorRef.markForCheck();
            }
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)(
                s.Y36(s.ZZ4),
                s.Y36(s.sBO),
                s.Y36(s.SBq),
                s.$8M("role"),
                s.Y36(x.Is, 8),
                s.Y36(bt.K0),
                s.Y36(at.t4),
                s.Y36(p.k),
                s.Y36(Si),
                s.Y36(lt.rL),
                s.Y36(ot, 12),
                s.Y36(s.R0b, 8),
              );
            });
            static #e = (this.ɵcmp = s.Xpm({
              type: Ot,
              selectors: [["cdk-table"], ["table", "cdk-table", ""]],
              contentQueries: function (Gt, Me, si) {
                if (
                  (1 & Gt &&
                    (s.Suo(si, Mi, 5),
                    s.Suo(si, ze, 5),
                    s.Suo(si, Vt, 5),
                    s.Suo(si, Ue, 5),
                    s.Suo(si, we, 5)),
                  2 & Gt)
                ) {
                  let Ei;
                  s.iGM((Ei = s.CRH())) && (Me._noDataRow = Ei.first),
                    s.iGM((Ei = s.CRH())) && (Me._contentColumnDefs = Ei),
                    s.iGM((Ei = s.CRH())) && (Me._contentRowDefs = Ei),
                    s.iGM((Ei = s.CRH())) && (Me._contentHeaderRowDefs = Ei),
                    s.iGM((Ei = s.CRH())) && (Me._contentFooterRowDefs = Ei);
                }
              },
              viewQuery: function (Gt, Me) {
                if (
                  (1 & Gt &&
                    (s.Gf(rt, 7), s.Gf(yt, 7), s.Gf(Rt, 7), s.Gf(Lt, 7)),
                  2 & Gt)
                ) {
                  let si;
                  s.iGM((si = s.CRH())) && (Me._rowOutlet = si.first),
                    s.iGM((si = s.CRH())) && (Me._headerRowOutlet = si.first),
                    s.iGM((si = s.CRH())) && (Me._footerRowOutlet = si.first),
                    s.iGM((si = s.CRH())) && (Me._noDataRowOutlet = si.first);
                }
              },
              hostAttrs: ["ngSkipHydration", "", 1, "cdk-table"],
              hostVars: 2,
              hostBindings: function (Gt, Me) {
                2 & Gt && s.ekj("cdk-table-fixed-layout", Me.fixedLayout);
              },
              inputs: {
                trackBy: "trackBy",
                dataSource: "dataSource",
                multiTemplateDataRows: "multiTemplateDataRows",
                fixedLayout: "fixedLayout",
              },
              outputs: { contentChanged: "contentChanged" },
              exportAs: ["cdkTable"],
              features: [
                s._Bn([
                  { provide: Re, useExisting: Ot },
                  { provide: p.k, useClass: p.yy },
                  { provide: Si, useClass: Vi },
                  { provide: ot, useValue: null },
                ]),
              ],
              ngContentSelectors: De,
              decls: 6,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["noDataRowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (Gt, Me) {
                1 & Gt &&
                  (s.F$t(Jt),
                  s.Hsn(0),
                  s.Hsn(1, 1),
                  s.GkF(2, 0)(3, 1)(4, 2)(5, 3));
              },
              dependencies: [rt, yt, Rt, Lt],
              styles: [".cdk-table-fixed-layout{table-layout:fixed}"],
              encapsulation: 2,
            }));
          }
          return Ot;
        })();
      function H(Ot, Ze) {
        return Ot.concat(Array.from(Ze));
      }
      let se = (() => {
        class Ot {
          static #t = (this.ɵfac = function (Gt) {
            return new (Gt || Ot)();
          });
          static #e = (this.ɵmod = s.oAB({ type: Ot }));
          static #i = (this.ɵinj = s.cJS({ imports: [lt.Cl] }));
        }
        return Ot;
      })();
      var it = D(3680),
        Ut = D(3019),
        ve = D(2572),
        qe = D(7398);
      const ki = [[["caption"]], [["colgroup"], ["col"]]],
        Xt = ["caption", "colgroup, col"];
      let fe = (() => {
          class Ot extends Ct {
            constructor() {
              super(...arguments),
                (this.stickyCssClass = "mat-mdc-table-sticky"),
                (this.needsPositionStickyOnElement = !1);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._isNativeHtmlTable &&
                  this._elementRef.nativeElement
                    .querySelector("tbody")
                    .classList.add("mdc-data-table__content");
            }
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵcmp = s.Xpm({
              type: Ot,
              selectors: [["mat-table"], ["table", "mat-table", ""]],
              hostAttrs: [
                "ngSkipHydration",
                "",
                1,
                "mat-mdc-table",
                "mdc-data-table__table",
              ],
              hostVars: 2,
              hostBindings: function (Gt, Me) {
                2 & Gt && s.ekj("mdc-table-fixed-layout", Me.fixedLayout);
              },
              exportAs: ["matTable"],
              features: [
                s._Bn([
                  { provide: Ct, useExisting: Ot },
                  { provide: Re, useExisting: Ot },
                  { provide: Si, useClass: Vi },
                  { provide: p.k, useClass: p.yy },
                  { provide: ot, useValue: null },
                ]),
                s.qOj,
              ],
              ngContentSelectors: Xt,
              decls: 6,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["noDataRowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (Gt, Me) {
                1 & Gt &&
                  (s.F$t(ki),
                  s.Hsn(0),
                  s.Hsn(1, 1),
                  s.GkF(2, 0)(3, 1)(4, 2)(5, 3));
              },
              dependencies: [rt, yt, Rt, Lt],
              styles: [
                ".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{--mat-table-row-item-outline-width:1px;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}",
              ],
              encapsulation: 2,
            }));
          }
          return Ot;
        })(),
        ke = (() => {
          class Ot extends _t {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "matCellDef", ""]],
              features: [s._Bn([{ provide: _t, useExisting: Ot }]), s.qOj],
            }));
          }
          return Ot;
        })(),
        yi = (() => {
          class Ot extends St {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "matHeaderCellDef", ""]],
              features: [s._Bn([{ provide: St, useExisting: Ot }]), s.qOj],
            }));
          }
          return Ot;
        })(),
        vt = (() => {
          class Ot extends ze {
            get name() {
              return this._name;
            }
            set name(ft) {
              this._setNameInput(ft);
            }
            _updateColumnCssClassName() {
              super._updateColumnCssClassName(),
                this._columnCssClassName.push(
                  `mat-column-${this.cssClassFriendlyName}`,
                );
            }
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "matColumnDef", ""]],
              inputs: { sticky: "sticky", name: ["matColumnDef", "name"] },
              features: [
                s._Bn([
                  { provide: ze, useExisting: Ot },
                  { provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: Ot },
                ]),
                s.qOj,
              ],
            }));
          }
          return Ot;
        })(),
        U = (() => {
          class Ot extends ie {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["mat-header-cell"], ["th", "mat-header-cell", ""]],
              hostAttrs: [
                "role",
                "columnheader",
                1,
                "mat-mdc-header-cell",
                "mdc-data-table__header-cell",
              ],
              features: [s.qOj],
            }));
          }
          return Ot;
        })(),
        ct = (() => {
          class Ot extends Ge {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["mat-cell"], ["td", "mat-cell", ""]],
              hostAttrs: [1, "mat-mdc-cell", "mdc-data-table__cell"],
              features: [s.qOj],
            }));
          }
          return Ot;
        })(),
        Wt = (() => {
          class Ot extends Ue {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "matHeaderRowDef", ""]],
              inputs: {
                columns: ["matHeaderRowDef", "columns"],
                sticky: ["matHeaderRowDefSticky", "sticky"],
              },
              features: [s._Bn([{ provide: Ue, useExisting: Ot }]), s.qOj],
            }));
          }
          return Ot;
        })(),
        It = (() => {
          class Ot extends Vt {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵdir = s.lG2({
              type: Ot,
              selectors: [["", "matRowDef", ""]],
              inputs: {
                columns: ["matRowDefColumns", "columns"],
                when: ["matRowDefWhen", "when"],
              },
              features: [s._Bn([{ provide: Vt, useExisting: Ot }]), s.qOj],
            }));
          }
          return Ot;
        })(),
        Yt = (() => {
          class Ot extends Le {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵcmp = s.Xpm({
              type: Ot,
              selectors: [["mat-header-row"], ["tr", "mat-header-row", ""]],
              hostAttrs: [
                "role",
                "row",
                1,
                "mat-mdc-header-row",
                "mdc-data-table__header-row",
              ],
              exportAs: ["matHeaderRow"],
              features: [s._Bn([{ provide: Le, useExisting: Ot }]), s.qOj],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (Gt, Me) {
                1 & Gt && s.GkF(0, 0);
              },
              dependencies: [re],
              encapsulation: 2,
            }));
          }
          return Ot;
        })(),
        oi = (() => {
          class Ot extends ii {
            static #t = (this.ɵfac = (function () {
              let ft;
              return function (Me) {
                return (ft || (ft = s.n5z(Ot)))(Me || Ot);
              };
            })());
            static #e = (this.ɵcmp = s.Xpm({
              type: Ot,
              selectors: [["mat-row"], ["tr", "mat-row", ""]],
              hostAttrs: [
                "role",
                "row",
                1,
                "mat-mdc-row",
                "mdc-data-table__row",
              ],
              exportAs: ["matRow"],
              features: [s._Bn([{ provide: ii, useExisting: Ot }]), s.qOj],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (Gt, Me) {
                1 & Gt && s.GkF(0, 0);
              },
              dependencies: [re],
              encapsulation: 2,
            }));
          }
          return Ot;
        })(),
        me = (() => {
          class Ot {
            static #t = (this.ɵfac = function (Gt) {
              return new (Gt || Ot)();
            });
            static #e = (this.ɵmod = s.oAB({ type: Ot }));
            static #i = (this.ɵinj = s.cJS({ imports: [it.BQ, se, it.BQ] }));
          }
          return Ot;
        })();
      class Te extends p.o2 {
        get data() {
          return this._data.value;
        }
        set data(Ze) {
          (Ze = Array.isArray(Ze) ? Ze : []),
            this._data.next(Ze),
            this._renderChangesSubscription || this._filterData(Ze);
        }
        get filter() {
          return this._filter.value;
        }
        set filter(Ze) {
          this._filter.next(Ze),
            this._renderChangesSubscription || this._filterData(this.data);
        }
        get sort() {
          return this._sort;
        }
        set sort(Ze) {
          (this._sort = Ze), this._updateChangeSubscription();
        }
        get paginator() {
          return this._paginator;
        }
        set paginator(Ze) {
          (this._paginator = Ze), this._updateChangeSubscription();
        }
        constructor(Ze = []) {
          super(),
            (this._renderData = new $.X([])),
            (this._filter = new $.X("")),
            (this._internalPageChanges = new B.x()),
            (this._renderChangesSubscription = null),
            (this.sortingDataAccessor = (ft, Gt) => {
              const Me = ft[Gt];
              if ((0, C.t6)(Me)) {
                const si = Number(Me);
                return si < 9007199254740991 ? si : Me;
              }
              return Me;
            }),
            (this.sortData = (ft, Gt) => {
              const Me = Gt.active,
                si = Gt.direction;
              return Me && "" != si
                ? ft.sort((Ei, Hi) => {
                    let Yi = this.sortingDataAccessor(Ei, Me),
                      ln = this.sortingDataAccessor(Hi, Me);
                    const bn = typeof Yi,
                      Un = typeof ln;
                    bn !== Un &&
                      ("number" === bn && (Yi += ""),
                      "number" === Un && (ln += ""));
                    let pn = 0;
                    return (
                      null != Yi && null != ln
                        ? Yi > ln
                          ? (pn = 1)
                          : Yi < ln && (pn = -1)
                        : null != Yi
                          ? (pn = 1)
                          : null != ln && (pn = -1),
                      pn * ("asc" == si ? 1 : -1)
                    );
                  })
                : ft;
            }),
            (this.filterPredicate = (ft, Gt) => {
              const Me = Object.keys(ft)
                  .reduce((Ei, Hi) => Ei + ft[Hi] + "\u25ec", "")
                  .toLowerCase(),
                si = Gt.trim().toLowerCase();
              return -1 != Me.indexOf(si);
            }),
            (this._data = new $.X(Ze)),
            this._updateChangeSubscription();
        }
        _updateChangeSubscription() {
          const Ze = this._sort
              ? (0, Ut.T)(this._sort.sortChange, this._sort.initialized)
              : (0, A.of)(null),
            ft = this._paginator
              ? (0, Ut.T)(
                  this._paginator.page,
                  this._internalPageChanges,
                  this._paginator.initialized,
                )
              : (0, A.of)(null),
            Me = (0, ve.a)([this._data, this._filter]).pipe(
              (0, qe.U)(([Hi]) => this._filterData(Hi)),
            ),
            si = (0, ve.a)([Me, Ze]).pipe(
              (0, qe.U)(([Hi]) => this._orderData(Hi)),
            ),
            Ei = (0, ve.a)([si, ft]).pipe(
              (0, qe.U)(([Hi]) => this._pageData(Hi)),
            );
          this._renderChangesSubscription?.unsubscribe(),
            (this._renderChangesSubscription = Ei.subscribe((Hi) =>
              this._renderData.next(Hi),
            ));
        }
        _filterData(Ze) {
          return (
            (this.filteredData =
              null == this.filter || "" === this.filter
                ? Ze
                : Ze.filter((ft) => this.filterPredicate(ft, this.filter))),
            this.paginator && this._updatePaginator(this.filteredData.length),
            this.filteredData
          );
        }
        _orderData(Ze) {
          return this.sort ? this.sortData(Ze.slice(), this.sort) : Ze;
        }
        _pageData(Ze) {
          if (!this.paginator) return Ze;
          const ft = this.paginator.pageIndex * this.paginator.pageSize;
          return Ze.slice(ft, ft + this.paginator.pageSize);
        }
        _updatePaginator(Ze) {
          Promise.resolve().then(() => {
            const ft = this.paginator;
            if (ft && ((ft.length = Ze), ft.pageIndex > 0)) {
              const Gt = Math.ceil(ft.length / ft.pageSize) - 1 || 0,
                Me = Math.min(ft.pageIndex, Gt);
              Me !== ft.pageIndex &&
                ((ft.pageIndex = Me), this._internalPageChanges.next());
            }
          });
        }
        connect() {
          return (
            this._renderChangesSubscription || this._updateChangeSubscription(),
            this._renderData
          );
        }
        disconnect() {
          this._renderChangesSubscription?.unsubscribe(),
            (this._renderChangesSubscription = null);
        }
      }
      class Je extends Te {}
    },
    1274: (ui, Zt, D) => {
      D.d(Zt, { g0: () => kt });
      var s = D(5879),
        x = D(3680);
      let kt = (() => {
        class $ {
          static #t = (this.ɵfac = function (jt) {
            return new (jt || $)();
          });
          static #e = (this.ɵmod = s.oAB({ type: $ }));
          static #i = (this.ɵinj = s.cJS({ imports: [x.BQ, x.BQ] }));
        }
        return $;
      })();
    },
    2596: (ui, Zt, D) => {
      D.d(Zt, { AV: () => Fe, gM: () => Si });
      var s = D(9773),
        x = D(8180),
        C = D(2495),
        p = D(6028),
        at = D(5879),
        lt = D(6814),
        bt = D(2831),
        B = D(7849),
        kt = D(9388),
        $ = D(3651),
        _ = D(6702),
        A = D(8484),
        jt = D(8645),
        Jt = (D(6825), D(3680));
      const De = ["tooltip"],
        We = new at.OlP("mat-tooltip-scroll-strategy"),
        wt = {
          provide: We,
          deps: [$.aV],
          useFactory: function Re(xe) {
            return () => xe.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        St = new at.OlP("mat-tooltip-default-options", {
          providedIn: "root",
          factory: function _t() {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        }),
        ee = "tooltip-panel",
        Kt = (0, bt.i$)({ passive: !0 });
      let hi = (() => {
          class xe {
            get position() {
              return this._position;
            }
            set position(Ft) {
              Ft !== this._position &&
                ((this._position = Ft),
                this._overlayRef &&
                  (this._updatePosition(this._overlayRef),
                  this._tooltipInstance?.show(0),
                  this._overlayRef.updatePosition()));
            }
            get positionAtOrigin() {
              return this._positionAtOrigin;
            }
            set positionAtOrigin(Ft) {
              (this._positionAtOrigin = (0, C.Ig)(Ft)),
                this._detach(),
                (this._overlayRef = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(Ft) {
              (this._disabled = (0, C.Ig)(Ft)),
                this._disabled
                  ? this.hide(0)
                  : this._setupPointerEnterEventsIfNeeded();
            }
            get showDelay() {
              return this._showDelay;
            }
            set showDelay(Ft) {
              this._showDelay = (0, C.su)(Ft);
            }
            get hideDelay() {
              return this._hideDelay;
            }
            set hideDelay(Ft) {
              (this._hideDelay = (0, C.su)(Ft)),
                this._tooltipInstance &&
                  (this._tooltipInstance._mouseLeaveHideDelay =
                    this._hideDelay);
            }
            get message() {
              return this._message;
            }
            set message(Ft) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message,
                "tooltip",
              ),
                (this._message = null != Ft ? String(Ft).trim() : ""),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message,
                          "tooltip",
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(Ft) {
              (this._tooltipClass = Ft),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            constructor(Ft, Mt, we, Vt, re, Le, li, ii, Mi, fi, ri, te) {
              (this._overlay = Ft),
                (this._elementRef = Mt),
                (this._scrollDispatcher = we),
                (this._viewContainerRef = Vt),
                (this._ngZone = re),
                (this._platform = Le),
                (this._ariaDescriber = li),
                (this._focusMonitor = ii),
                (this._dir = fi),
                (this._defaultOptions = ri),
                (this._position = "below"),
                (this._positionAtOrigin = !1),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this._viewportMargin = 8),
                (this._cssClassPrefix = "mat"),
                (this.touchGestures = "auto"),
                (this._message = ""),
                (this._passiveListeners = []),
                (this._destroyed = new jt.x()),
                (this._scrollStrategy = Mi),
                (this._document = te),
                ri &&
                  ((this._showDelay = ri.showDelay),
                  (this._hideDelay = ri.hideDelay),
                  ri.position && (this.position = ri.position),
                  ri.positionAtOrigin &&
                    (this.positionAtOrigin = ri.positionAtOrigin),
                  ri.touchGestures && (this.touchGestures = ri.touchGestures)),
                fi.change.pipe((0, s.R)(this._destroyed)).subscribe(() => {
                  this._overlayRef && this._updatePosition(this._overlayRef);
                });
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe((0, s.R)(this._destroyed))
                  .subscribe((Ft) => {
                    Ft
                      ? "keyboard" === Ft && this._ngZone.run(() => this.show())
                      : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const Ft = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                this._passiveListeners.forEach(([Mt, we]) => {
                  Ft.removeEventListener(Mt, we, Kt);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(
                  Ft,
                  this.message,
                  "tooltip",
                ),
                this._focusMonitor.stopMonitoring(Ft);
            }
            show(Ft = this.showDelay, Mt) {
              if (this.disabled || !this.message || this._isTooltipVisible())
                return void this._tooltipInstance?._cancelPendingAnimations();
              const we = this._createOverlay(Mt);
              this._detach(),
                (this._portal =
                  this._portal ||
                  new A.C5(this._tooltipComponent, this._viewContainerRef));
              const Vt = (this._tooltipInstance = we.attach(
                this._portal,
              ).instance);
              (Vt._triggerElement = this._elementRef.nativeElement),
                (Vt._mouseLeaveHideDelay = this._hideDelay),
                Vt.afterHidden()
                  .pipe((0, s.R)(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                Vt.show(Ft);
            }
            hide(Ft = this.hideDelay) {
              const Mt = this._tooltipInstance;
              Mt &&
                (Mt.isVisible()
                  ? Mt.hide(Ft)
                  : (Mt._cancelPendingAnimations(), this._detach()));
            }
            toggle(Ft) {
              this._isTooltipVisible() ? this.hide() : this.show(void 0, Ft);
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay(Ft) {
              if (this._overlayRef) {
                const Vt = this._overlayRef.getConfig().positionStrategy;
                if (
                  (!this.positionAtOrigin || !Ft) &&
                  Vt._origin instanceof at.SBq
                )
                  return this._overlayRef;
                this._detach();
              }
              const Mt = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef,
                ),
                we = this._overlay
                  .position()
                  .flexibleConnectedTo(
                    (this.positionAtOrigin && Ft) || this._elementRef,
                  )
                  .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(this._viewportMargin)
                  .withScrollableContainers(Mt);
              return (
                we.positionChanges
                  .pipe((0, s.R)(this._destroyed))
                  .subscribe((Vt) => {
                    this._updateCurrentPositionClass(Vt.connectionPair),
                      this._tooltipInstance &&
                        Vt.scrollableViewProperties.isOverlayClipped &&
                        this._tooltipInstance.isVisible() &&
                        this._ngZone.run(() => this.hide(0));
                  }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: we,
                  panelClass: `${this._cssClassPrefix}-${ee}`,
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(this._overlayRef),
                this._overlayRef
                  .detachments()
                  .pipe((0, s.R)(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
                  .outsidePointerEvents()
                  .pipe((0, s.R)(this._destroyed))
                  .subscribe(() =>
                    this._tooltipInstance?._handleBodyInteraction(),
                  ),
                this._overlayRef
                  .keydownEvents()
                  .pipe((0, s.R)(this._destroyed))
                  .subscribe((Vt) => {
                    this._isTooltipVisible() &&
                      Vt.keyCode === p.hY &&
                      !(0, p.Vb)(Vt) &&
                      (Vt.preventDefault(),
                      Vt.stopPropagation(),
                      this._ngZone.run(() => this.hide(0)));
                  }),
                this._defaultOptions?.disableTooltipInteractivity &&
                  this._overlayRef.addPanelClass(
                    `${this._cssClassPrefix}-tooltip-panel-non-interactive`,
                  ),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition(Ft) {
              const Mt = Ft.getConfig().positionStrategy,
                we = this._getOrigin(),
                Vt = this._getOverlayPosition();
              Mt.withPositions([
                this._addOffset({ ...we.main, ...Vt.main }),
                this._addOffset({ ...we.fallback, ...Vt.fallback }),
              ]);
            }
            _addOffset(Ft) {
              return Ft;
            }
            _getOrigin() {
              const Ft = !this._dir || "ltr" == this._dir.value,
                Mt = this.position;
              let we;
              "above" == Mt || "below" == Mt
                ? (we = {
                    originX: "center",
                    originY: "above" == Mt ? "top" : "bottom",
                  })
                : "before" == Mt ||
                    ("left" == Mt && Ft) ||
                    ("right" == Mt && !Ft)
                  ? (we = { originX: "start", originY: "center" })
                  : ("after" == Mt ||
                      ("right" == Mt && Ft) ||
                      ("left" == Mt && !Ft)) &&
                    (we = { originX: "end", originY: "center" });
              const { x: Vt, y: re } = this._invertPosition(
                we.originX,
                we.originY,
              );
              return { main: we, fallback: { originX: Vt, originY: re } };
            }
            _getOverlayPosition() {
              const Ft = !this._dir || "ltr" == this._dir.value,
                Mt = this.position;
              let we;
              "above" == Mt
                ? (we = { overlayX: "center", overlayY: "bottom" })
                : "below" == Mt
                  ? (we = { overlayX: "center", overlayY: "top" })
                  : "before" == Mt ||
                      ("left" == Mt && Ft) ||
                      ("right" == Mt && !Ft)
                    ? (we = { overlayX: "end", overlayY: "center" })
                    : ("after" == Mt ||
                        ("right" == Mt && Ft) ||
                        ("left" == Mt && !Ft)) &&
                      (we = { overlayX: "start", overlayY: "center" });
              const { x: Vt, y: re } = this._invertPosition(
                we.overlayX,
                we.overlayY,
              );
              return { main: we, fallback: { overlayX: Vt, overlayY: re } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .pipe((0, x.q)(1), (0, s.R)(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(Ft) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = Ft),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(Ft, Mt) {
              return (
                "above" === this.position || "below" === this.position
                  ? "top" === Mt
                    ? (Mt = "bottom")
                    : "bottom" === Mt && (Mt = "top")
                  : "end" === Ft
                    ? (Ft = "start")
                    : "start" === Ft && (Ft = "end"),
                { x: Ft, y: Mt }
              );
            }
            _updateCurrentPositionClass(Ft) {
              const { overlayY: Mt, originX: we, originY: Vt } = Ft;
              let re;
              if (
                ((re =
                  "center" === Mt
                    ? this._dir && "rtl" === this._dir.value
                      ? "end" === we
                        ? "left"
                        : "right"
                      : "start" === we
                        ? "left"
                        : "right"
                    : "bottom" === Mt && "top" === Vt
                      ? "above"
                      : "below"),
                re !== this._currentPosition)
              ) {
                const Le = this._overlayRef;
                if (Le) {
                  const li = `${this._cssClassPrefix}-${ee}-`;
                  Le.removePanelClass(li + this._currentPosition),
                    Le.addPanelClass(li + re);
                }
                this._currentPosition = re;
              }
            }
            _setupPointerEnterEventsIfNeeded() {
              this._disabled ||
                !this.message ||
                !this._viewInitialized ||
                this._passiveListeners.length ||
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      "mouseenter",
                      (Ft) => {
                        let Mt;
                        this._setupPointerExitEventsIfNeeded(),
                          void 0 !== Ft.x && void 0 !== Ft.y && (Mt = Ft),
                          this.show(void 0, Mt);
                      },
                    ])
                  : "off" !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      "touchstart",
                      (Ft) => {
                        const Mt = Ft.targetTouches?.[0],
                          we = Mt ? { x: Mt.clientX, y: Mt.clientY } : void 0;
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(
                            () => this.show(void 0, we),
                            500,
                          ));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const Ft = [];
              if (this._platformSupportsMouseEvents())
                Ft.push(
                  [
                    "mouseleave",
                    (Mt) => {
                      const we = Mt.relatedTarget;
                      (!we || !this._overlayRef?.overlayElement.contains(we)) &&
                        this.hide();
                    },
                  ],
                  ["wheel", (Mt) => this._wheelListener(Mt)],
                );
              else if ("off" !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const Mt = () => {
                  clearTimeout(this._touchstartTimeout),
                    this.hide(this._defaultOptions.touchendHideDelay);
                };
                Ft.push(["touchend", Mt], ["touchcancel", Mt]);
              }
              this._addListeners(Ft), this._passiveListeners.push(...Ft);
            }
            _addListeners(Ft) {
              Ft.forEach(([Mt, we]) => {
                this._elementRef.nativeElement.addEventListener(Mt, we, Kt);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(Ft) {
              if (this._isTooltipVisible()) {
                const Mt = this._document.elementFromPoint(
                    Ft.clientX,
                    Ft.clientY,
                  ),
                  we = this._elementRef.nativeElement;
                Mt !== we && !we.contains(Mt) && this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const Ft = this.touchGestures;
              if ("off" !== Ft) {
                const Mt = this._elementRef.nativeElement,
                  we = Mt.style;
                ("on" === Ft ||
                  ("INPUT" !== Mt.nodeName && "TEXTAREA" !== Mt.nodeName)) &&
                  (we.userSelect =
                    we.msUserSelect =
                    we.webkitUserSelect =
                    we.MozUserSelect =
                      "none"),
                  ("on" === Ft || !Mt.draggable) &&
                    (we.webkitUserDrag = "none"),
                  (we.touchAction = "none"),
                  (we.webkitTapHighlightColor = "transparent");
              }
            }
            static #t = (this.ɵfac = function (Mt) {
              at.$Z();
            });
            static #e = (this.ɵdir = at.lG2({
              type: xe,
              inputs: {
                position: ["matTooltipPosition", "position"],
                positionAtOrigin: [
                  "matTooltipPositionAtOrigin",
                  "positionAtOrigin",
                ],
                disabled: ["matTooltipDisabled", "disabled"],
                showDelay: ["matTooltipShowDelay", "showDelay"],
                hideDelay: ["matTooltipHideDelay", "hideDelay"],
                touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                message: ["matTooltip", "message"],
                tooltipClass: ["matTooltipClass", "tooltipClass"],
              },
            }));
          }
          return xe;
        })(),
        Si = (() => {
          class xe extends hi {
            constructor(Ft, Mt, we, Vt, re, Le, li, ii, Mi, fi, ri, te) {
              super(Ft, Mt, we, Vt, re, Le, li, ii, Mi, fi, ri, te),
                (this._tooltipComponent = qi),
                (this._cssClassPrefix = "mat-mdc"),
                (this._viewportMargin = 8);
            }
            _addOffset(Ft) {
              const we = !this._dir || "ltr" == this._dir.value;
              return (
                "top" === Ft.originY
                  ? (Ft.offsetY = -8)
                  : "bottom" === Ft.originY
                    ? (Ft.offsetY = 8)
                    : "start" === Ft.originX
                      ? (Ft.offsetX = we ? -8 : 8)
                      : "end" === Ft.originX && (Ft.offsetX = we ? 8 : -8),
                Ft
              );
            }
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)(
                at.Y36($.aV),
                at.Y36(at.SBq),
                at.Y36(_.mF),
                at.Y36(at.s_b),
                at.Y36(at.R0b),
                at.Y36(bt.t4),
                at.Y36(B.$s),
                at.Y36(B.tE),
                at.Y36(We),
                at.Y36(kt.Is, 8),
                at.Y36(St, 8),
                at.Y36(lt.K0),
              );
            });
            static #e = (this.ɵdir = at.lG2({
              type: xe,
              selectors: [["", "matTooltip", ""]],
              hostAttrs: [1, "mat-mdc-tooltip-trigger"],
              hostVars: 2,
              hostBindings: function (Mt, we) {
                2 & Mt && at.ekj("mat-mdc-tooltip-disabled", we.disabled);
              },
              exportAs: ["matTooltip"],
              features: [at.qOj],
            }));
          }
          return xe;
        })(),
        Vi = (() => {
          class xe {
            constructor(Ft, Mt) {
              (this._changeDetectorRef = Ft),
                (this._closeOnInteraction = !1),
                (this._isVisible = !1),
                (this._onHide = new jt.x()),
                (this._animationsDisabled = "NoopAnimations" === Mt);
            }
            show(Ft) {
              null != this._hideTimeoutId && clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!0), (this._showTimeoutId = void 0);
                }, Ft));
            }
            hide(Ft) {
              null != this._showTimeoutId && clearTimeout(this._showTimeoutId),
                (this._hideTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!1), (this._hideTimeoutId = void 0);
                }, Ft));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return this._isVisible;
            }
            ngOnDestroy() {
              this._cancelPendingAnimations(),
                this._onHide.complete(),
                (this._triggerElement = null);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
            _handleMouseLeave({ relatedTarget: Ft }) {
              (!Ft || !this._triggerElement.contains(Ft)) &&
                (this.isVisible()
                  ? this.hide(this._mouseLeaveHideDelay)
                  : this._finalizeAnimation(!1));
            }
            _onShow() {}
            _handleAnimationEnd({ animationName: Ft }) {
              (Ft === this._showAnimation || Ft === this._hideAnimation) &&
                this._finalizeAnimation(Ft === this._showAnimation);
            }
            _cancelPendingAnimations() {
              null != this._showTimeoutId && clearTimeout(this._showTimeoutId),
                null != this._hideTimeoutId &&
                  clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = this._hideTimeoutId = void 0);
            }
            _finalizeAnimation(Ft) {
              Ft
                ? (this._closeOnInteraction = !0)
                : this.isVisible() || this._onHide.next();
            }
            _toggleVisibility(Ft) {
              const Mt = this._tooltip.nativeElement,
                we = this._showAnimation,
                Vt = this._hideAnimation;
              if (
                (Mt.classList.remove(Ft ? Vt : we),
                Mt.classList.add(Ft ? we : Vt),
                (this._isVisible = Ft),
                Ft &&
                  !this._animationsDisabled &&
                  "function" == typeof getComputedStyle)
              ) {
                const re = getComputedStyle(Mt);
                ("0s" === re.getPropertyValue("animation-duration") ||
                  "none" === re.getPropertyValue("animation-name")) &&
                  (this._animationsDisabled = !0);
              }
              Ft && this._onShow(),
                this._animationsDisabled &&
                  (Mt.classList.add("_mat-animation-noopable"),
                  this._finalizeAnimation(Ft));
            }
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)(at.Y36(at.sBO), at.Y36(at.QbO, 8));
            });
            static #e = (this.ɵdir = at.lG2({ type: xe }));
          }
          return xe;
        })(),
        qi = (() => {
          class xe extends Vi {
            constructor(Ft, Mt, we) {
              super(Ft, we),
                (this._elementRef = Mt),
                (this._isMultiline = !1),
                (this._showAnimation = "mat-mdc-tooltip-show"),
                (this._hideAnimation = "mat-mdc-tooltip-hide");
            }
            _onShow() {
              (this._isMultiline = this._isTooltipMultiline()),
                this._markForCheck();
            }
            _isTooltipMultiline() {
              const Ft = this._elementRef.nativeElement.getBoundingClientRect();
              return Ft.height > 24 && Ft.width >= 200;
            }
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)(
                at.Y36(at.sBO),
                at.Y36(at.SBq),
                at.Y36(at.QbO, 8),
              );
            });
            static #e = (this.ɵcmp = at.Xpm({
              type: xe,
              selectors: [["mat-tooltip-component"]],
              viewQuery: function (Mt, we) {
                if ((1 & Mt && at.Gf(De, 7), 2 & Mt)) {
                  let Vt;
                  at.iGM((Vt = at.CRH())) && (we._tooltip = Vt.first);
                }
              },
              hostAttrs: ["aria-hidden", "true"],
              hostVars: 2,
              hostBindings: function (Mt, we) {
                1 & Mt &&
                  at.NdJ("mouseleave", function (re) {
                    return we._handleMouseLeave(re);
                  }),
                  2 & Mt && at.Udp("zoom", we.isVisible() ? 1 : null);
              },
              features: [at.qOj],
              decls: 4,
              vars: 4,
              consts: [
                [
                  1,
                  "mdc-tooltip",
                  "mdc-tooltip--shown",
                  "mat-mdc-tooltip",
                  3,
                  "ngClass",
                  "animationend",
                ],
                ["tooltip", ""],
                [1, "mdc-tooltip__surface", "mdc-tooltip__surface-animation"],
              ],
              template: function (Mt, we) {
                1 & Mt &&
                  (at.TgZ(0, "div", 0, 1),
                  at.NdJ("animationend", function (re) {
                    return we._handleAnimationEnd(re);
                  }),
                  at.TgZ(2, "div", 2),
                  at._uU(3),
                  at.qZA()()),
                  2 & Mt &&
                    (at.ekj("mdc-tooltip--multiline", we._isMultiline),
                    at.Q6J("ngClass", we.tooltipClass),
                    at.xp6(3),
                    at.Oqu(we.message));
              },
              dependencies: [lt.mk],
              styles: [
                '.mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip{--mdc-plain-tooltip-container-shape:4px;--mdc-plain-tooltip-supporting-text-line-height:16px}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:"";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return xe;
        })(),
        Fe = (() => {
          class xe {
            static #t = (this.ɵfac = function (Mt) {
              return new (Mt || xe)();
            });
            static #e = (this.ɵmod = at.oAB({ type: xe }));
            static #i = (this.ɵinj = at.cJS({
              providers: [wt],
              imports: [B.rt, lt.ez, $.U8, Jt.BQ, Jt.BQ, _.ZD],
            }));
          }
          return xe;
        })();
    },
    6593: (ui, Zt, D) => {
      D.d(Zt, {
        Dx: () => Xi,
        H7: () => Ut,
        b2: () => te,
        q6: () => ii,
        se: () => Kt,
      });
      var s = D(5879),
        x = D(6814);
      class C extends x.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class p extends C {
        static makeCurrent() {
          (0, x.HT)(new p());
        }
        onAndCancel(vt, U, j) {
          return (
            vt.addEventListener(U, j),
            () => {
              vt.removeEventListener(U, j);
            }
          );
        }
        dispatchEvent(vt, U) {
          vt.dispatchEvent(U);
        }
        remove(vt) {
          vt.parentNode && vt.parentNode.removeChild(vt);
        }
        createElement(vt, U) {
          return (U = U || this.getDefaultDocument()).createElement(vt);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(vt) {
          return vt.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(vt) {
          return vt instanceof DocumentFragment;
        }
        getGlobalEventTarget(vt, U) {
          return "window" === U
            ? window
            : "document" === U
              ? vt
              : "body" === U
                ? vt.body
                : null;
        }
        getBaseHref(vt) {
          const U = (function lt() {
            return (
              (at = at || document.querySelector("base")),
              at ? at.getAttribute("href") : null
            );
          })();
          return null == U
            ? null
            : (function B(pt) {
                (bt = bt || document.createElement("a")),
                  bt.setAttribute("href", pt);
                const vt = bt.pathname;
                return "/" === vt.charAt(0) ? vt : `/${vt}`;
              })(U);
        }
        resetBaseElement() {
          at = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(vt) {
          return (0, x.Mx)(document.cookie, vt);
        }
      }
      let bt,
        at = null,
        $ = (() => {
          class pt {
            build() {
              return new XMLHttpRequest();
            }
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)();
            });
            static #e = (this.ɵprov = s.Yz7({ token: pt, factory: pt.ɵfac }));
          }
          return pt;
        })();
      const _ = new s.OlP("EventManagerPlugins");
      let A = (() => {
        class pt {
          constructor(U, j) {
            (this._zone = j),
              (this._eventNameToPlugin = new Map()),
              U.forEach((ct) => {
                ct.manager = this;
              }),
              (this._plugins = U.slice().reverse());
          }
          addEventListener(U, j, ct) {
            return this._findPluginFor(j).addEventListener(U, j, ct);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(U) {
            let j = this._eventNameToPlugin.get(U);
            if (j) return j;
            if (((j = this._plugins.find((ue) => ue.supports(U))), !j))
              throw new s.vHH(5101, !1);
            return this._eventNameToPlugin.set(U, j), j;
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(s.LFG(_), s.LFG(s.R0b));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pt, factory: pt.ɵfac }));
        }
        return pt;
      })();
      class jt {
        constructor(vt) {
          this._doc = vt;
        }
      }
      const gt = "ng-app-id";
      let Jt = (() => {
        class pt {
          constructor(U, j, ct, ue = {}) {
            (this.doc = U),
              (this.appId = j),
              (this.nonce = ct),
              (this.platformId = ue),
              (this.styleRef = new Map()),
              (this.hostNodes = new Set()),
              (this.styleNodesInDOM = this.collectServerRenderedStyles()),
              (this.platformIsServer = (0, x.PM)(ue)),
              this.resetHostNodes();
          }
          addStyles(U) {
            for (const j of U)
              1 === this.changeUsageCount(j, 1) && this.onStyleAdded(j);
          }
          removeStyles(U) {
            for (const j of U)
              this.changeUsageCount(j, -1) <= 0 && this.onStyleRemoved(j);
          }
          ngOnDestroy() {
            const U = this.styleNodesInDOM;
            U && (U.forEach((j) => j.remove()), U.clear());
            for (const j of this.getAllStyles()) this.onStyleRemoved(j);
            this.resetHostNodes();
          }
          addHost(U) {
            this.hostNodes.add(U);
            for (const j of this.getAllStyles()) this.addStyleToHost(U, j);
          }
          removeHost(U) {
            this.hostNodes.delete(U);
          }
          getAllStyles() {
            return this.styleRef.keys();
          }
          onStyleAdded(U) {
            for (const j of this.hostNodes) this.addStyleToHost(j, U);
          }
          onStyleRemoved(U) {
            const j = this.styleRef;
            j.get(U)?.elements?.forEach((ct) => ct.remove()), j.delete(U);
          }
          collectServerRenderedStyles() {
            const U = this.doc.head?.querySelectorAll(
              `style[${gt}="${this.appId}"]`,
            );
            if (U?.length) {
              const j = new Map();
              return (
                U.forEach((ct) => {
                  null != ct.textContent && j.set(ct.textContent, ct);
                }),
                j
              );
            }
            return null;
          }
          changeUsageCount(U, j) {
            const ct = this.styleRef;
            if (ct.has(U)) {
              const ue = ct.get(U);
              return (ue.usage += j), ue.usage;
            }
            return ct.set(U, { usage: j, elements: [] }), j;
          }
          getStyleElement(U, j) {
            const ct = this.styleNodesInDOM,
              ue = ct?.get(j);
            if (ue?.parentNode === U)
              return ct.delete(j), ue.removeAttribute(gt), ue;
            {
              const Wt = this.doc.createElement("style");
              return (
                this.nonce && Wt.setAttribute("nonce", this.nonce),
                (Wt.textContent = j),
                this.platformIsServer && Wt.setAttribute(gt, this.appId),
                Wt
              );
            }
          }
          addStyleToHost(U, j) {
            const ct = this.getStyleElement(U, j);
            U.appendChild(ct);
            const ue = this.styleRef,
              Wt = ue.get(j)?.elements;
            Wt ? Wt.push(ct) : ue.set(j, { elements: [ct], usage: 1 });
          }
          resetHostNodes() {
            const U = this.hostNodes;
            U.clear(), U.add(this.doc.head);
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(
              s.LFG(x.K0),
              s.LFG(s.AFp),
              s.LFG(s.Ojb, 8),
              s.LFG(s.Lbi),
            );
          });
          static #e = (this.ɵprov = s.Yz7({ token: pt, factory: pt.ɵfac }));
        }
        return pt;
      })();
      const De = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Ve = /%COMP%/g,
        _t = new s.OlP("RemoveStylesOnCompDestroy", {
          providedIn: "root",
          factory: () => !1,
        });
      function ee(pt, vt) {
        return vt.map((U) => U.replace(Ve, pt));
      }
      let Kt = (() => {
        class pt {
          constructor(U, j, ct, ue, Wt, le, It, Yt = null) {
            (this.eventManager = U),
              (this.sharedStylesHost = j),
              (this.appId = ct),
              (this.removeStylesOnCompDestroy = ue),
              (this.doc = Wt),
              (this.platformId = le),
              (this.ngZone = It),
              (this.nonce = Yt),
              (this.rendererByCompId = new Map()),
              (this.platformIsServer = (0, x.PM)(le)),
              (this.defaultRenderer = new ze(U, Wt, It, this.platformIsServer));
          }
          createRenderer(U, j) {
            if (!U || !j) return this.defaultRenderer;
            this.platformIsServer &&
              j.encapsulation === s.ifc.ShadowDom &&
              (j = { ...j, encapsulation: s.ifc.Emulated });
            const ct = this.getOrCreateRenderer(U, j);
            return (
              ct instanceof Si
                ? ct.applyToHost(U)
                : ct instanceof hi && ct.applyStyles(),
              ct
            );
          }
          getOrCreateRenderer(U, j) {
            const ct = this.rendererByCompId;
            let ue = ct.get(j.id);
            if (!ue) {
              const Wt = this.doc,
                le = this.ngZone,
                It = this.eventManager,
                Yt = this.sharedStylesHost,
                Ae = this.removeStylesOnCompDestroy,
                oi = this.platformIsServer;
              switch (j.encapsulation) {
                case s.ifc.Emulated:
                  ue = new Si(It, Yt, j, this.appId, Ae, Wt, le, oi);
                  break;
                case s.ifc.ShadowDom:
                  return new Ge(It, Yt, U, j, Wt, le, this.nonce, oi);
                default:
                  ue = new hi(It, Yt, j, Ae, Wt, le, oi);
              }
              ct.set(j.id, ue);
            }
            return ue;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(
              s.LFG(A),
              s.LFG(Jt),
              s.LFG(s.AFp),
              s.LFG(_t),
              s.LFG(x.K0),
              s.LFG(s.Lbi),
              s.LFG(s.R0b),
              s.LFG(s.Ojb),
            );
          });
          static #e = (this.ɵprov = s.Yz7({ token: pt, factory: pt.ɵfac }));
        }
        return pt;
      })();
      class ze {
        constructor(vt, U, j, ct) {
          (this.eventManager = vt),
            (this.doc = U),
            (this.ngZone = j),
            (this.platformIsServer = ct),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(vt, U) {
          return U
            ? this.doc.createElementNS(De[U] || U, vt)
            : this.doc.createElement(vt);
        }
        createComment(vt) {
          return this.doc.createComment(vt);
        }
        createText(vt) {
          return this.doc.createTextNode(vt);
        }
        appendChild(vt, U) {
          (vi(vt) ? vt.content : vt).appendChild(U);
        }
        insertBefore(vt, U, j) {
          vt && (vi(vt) ? vt.content : vt).insertBefore(U, j);
        }
        removeChild(vt, U) {
          vt && vt.removeChild(U);
        }
        selectRootElement(vt, U) {
          let j = "string" == typeof vt ? this.doc.querySelector(vt) : vt;
          if (!j) throw new s.vHH(-5104, !1);
          return U || (j.textContent = ""), j;
        }
        parentNode(vt) {
          return vt.parentNode;
        }
        nextSibling(vt) {
          return vt.nextSibling;
        }
        setAttribute(vt, U, j, ct) {
          if (ct) {
            U = ct + ":" + U;
            const ue = De[ct];
            ue ? vt.setAttributeNS(ue, U, j) : vt.setAttribute(U, j);
          } else vt.setAttribute(U, j);
        }
        removeAttribute(vt, U, j) {
          if (j) {
            const ct = De[j];
            ct ? vt.removeAttributeNS(ct, U) : vt.removeAttribute(`${j}:${U}`);
          } else vt.removeAttribute(U);
        }
        addClass(vt, U) {
          vt.classList.add(U);
        }
        removeClass(vt, U) {
          vt.classList.remove(U);
        }
        setStyle(vt, U, j, ct) {
          ct & (s.JOm.DashCase | s.JOm.Important)
            ? vt.style.setProperty(
                U,
                j,
                ct & s.JOm.Important ? "important" : "",
              )
            : (vt.style[U] = j);
        }
        removeStyle(vt, U, j) {
          j & s.JOm.DashCase ? vt.style.removeProperty(U) : (vt.style[U] = "");
        }
        setProperty(vt, U, j) {
          vt[U] = j;
        }
        setValue(vt, U) {
          vt.nodeValue = U;
        }
        listen(vt, U, j) {
          if (
            "string" == typeof vt &&
            !(vt = (0, x.q)().getGlobalEventTarget(this.doc, vt))
          )
            throw new Error(`Unsupported event target ${vt} for event ${U}`);
          return this.eventManager.addEventListener(
            vt,
            U,
            this.decoratePreventDefault(j),
          );
        }
        decoratePreventDefault(vt) {
          return (U) => {
            if ("__ngUnwrap__" === U) return vt;
            !1 ===
              (this.platformIsServer
                ? this.ngZone.runGuarded(() => vt(U))
                : vt(U)) && U.preventDefault();
          };
        }
      }
      function vi(pt) {
        return "TEMPLATE" === pt.tagName && void 0 !== pt.content;
      }
      class Ge extends ze {
        constructor(vt, U, j, ct, ue, Wt, le, It) {
          super(vt, ue, Wt, It),
            (this.sharedStylesHost = U),
            (this.hostEl = j),
            (this.shadowRoot = j.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const Yt = ee(ct.id, ct.styles);
          for (const Ae of Yt) {
            const oi = document.createElement("style");
            le && oi.setAttribute("nonce", le),
              (oi.textContent = Ae),
              this.shadowRoot.appendChild(oi);
          }
        }
        nodeOrShadowRoot(vt) {
          return vt === this.hostEl ? this.shadowRoot : vt;
        }
        appendChild(vt, U) {
          return super.appendChild(this.nodeOrShadowRoot(vt), U);
        }
        insertBefore(vt, U, j) {
          return super.insertBefore(this.nodeOrShadowRoot(vt), U, j);
        }
        removeChild(vt, U) {
          return super.removeChild(this.nodeOrShadowRoot(vt), U);
        }
        parentNode(vt) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(vt)),
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class hi extends ze {
        constructor(vt, U, j, ct, ue, Wt, le, It) {
          super(vt, ue, Wt, le),
            (this.sharedStylesHost = U),
            (this.removeStylesOnCompDestroy = ct),
            (this.styles = It ? ee(It, j.styles) : j.styles);
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles);
        }
        destroy() {
          this.removeStylesOnCompDestroy &&
            this.sharedStylesHost.removeStyles(this.styles);
        }
      }
      class Si extends hi {
        constructor(vt, U, j, ct, ue, Wt, le, It) {
          const Yt = ct + "-" + j.id;
          super(vt, U, j, ue, Wt, le, It, Yt),
            (this.contentAttr = (function St(pt) {
              return "_ngcontent-%COMP%".replace(Ve, pt);
            })(Yt)),
            (this.hostAttr = (function Pt(pt) {
              return "_nghost-%COMP%".replace(Ve, pt);
            })(Yt));
        }
        applyToHost(vt) {
          this.applyStyles(), this.setAttribute(vt, this.hostAttr, "");
        }
        createElement(vt, U) {
          const j = super.createElement(vt, U);
          return super.setAttribute(j, this.contentAttr, ""), j;
        }
      }
      let Vi = (() => {
        class pt extends jt {
          constructor(U) {
            super(U);
          }
          supports(U) {
            return !0;
          }
          addEventListener(U, j, ct) {
            return (
              U.addEventListener(j, ct, !1),
              () => this.removeEventListener(U, j, ct)
            );
          }
          removeEventListener(U, j, ct) {
            return U.removeEventListener(j, ct);
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(s.LFG(x.K0));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pt, factory: pt.ɵfac }));
        }
        return pt;
      })();
      const qi = ["alt", "control", "meta", "shift"],
        Ie = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        Fe = {
          alt: (pt) => pt.altKey,
          control: (pt) => pt.ctrlKey,
          meta: (pt) => pt.metaKey,
          shift: (pt) => pt.shiftKey,
        };
      let xe = (() => {
        class pt extends jt {
          constructor(U) {
            super(U);
          }
          supports(U) {
            return null != pt.parseEventName(U);
          }
          addEventListener(U, j, ct) {
            const ue = pt.parseEventName(j),
              Wt = pt.eventCallback(ue.fullKey, ct, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() =>
                (0, x.q)().onAndCancel(U, ue.domEventName, Wt),
              );
          }
          static parseEventName(U) {
            const j = U.toLowerCase().split("."),
              ct = j.shift();
            if (0 === j.length || ("keydown" !== ct && "keyup" !== ct))
              return null;
            const ue = pt._normalizeKey(j.pop());
            let Wt = "",
              le = j.indexOf("code");
            if (
              (le > -1 && (j.splice(le, 1), (Wt = "code.")),
              qi.forEach((Yt) => {
                const Ae = j.indexOf(Yt);
                Ae > -1 && (j.splice(Ae, 1), (Wt += Yt + "."));
              }),
              (Wt += ue),
              0 != j.length || 0 === ue.length)
            )
              return null;
            const It = {};
            return (It.domEventName = ct), (It.fullKey = Wt), It;
          }
          static matchEventFullKeyCode(U, j) {
            let ct = Ie[U.key] || U.key,
              ue = "";
            return (
              j.indexOf("code.") > -1 && ((ct = U.code), (ue = "code.")),
              !(null == ct || !ct) &&
                ((ct = ct.toLowerCase()),
                " " === ct ? (ct = "space") : "." === ct && (ct = "dot"),
                qi.forEach((Wt) => {
                  Wt !== ct && (0, Fe[Wt])(U) && (ue += Wt + ".");
                }),
                (ue += ct),
                ue === j)
            );
          }
          static eventCallback(U, j, ct) {
            return (ue) => {
              pt.matchEventFullKeyCode(ue, U) && ct.runGuarded(() => j(ue));
            };
          }
          static _normalizeKey(U) {
            return "esc" === U ? "escape" : U;
          }
          static #t = (this.ɵfac = function (j) {
            return new (j || pt)(s.LFG(x.K0));
          });
          static #e = (this.ɵprov = s.Yz7({ token: pt, factory: pt.ɵfac }));
        }
        return pt;
      })();
      const ii = (0, s.eFA)(s._c5, "browser", [
          { provide: s.Lbi, useValue: x.bD },
          {
            provide: s.g9A,
            useValue: function Vt() {
              p.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: x.K0,
            useFactory: function Le() {
              return (0, s.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        Mi = new s.OlP(""),
        fi = [
          {
            provide: s.rWj,
            useClass: class kt {
              addToWindow(vt) {
                (s.dqk.getAngularTestability = (j, ct = !0) => {
                  const ue = vt.findTestabilityInTree(j, ct);
                  if (null == ue) throw new s.vHH(5103, !1);
                  return ue;
                }),
                  (s.dqk.getAllAngularTestabilities = () =>
                    vt.getAllTestabilities()),
                  (s.dqk.getAllAngularRootElements = () =>
                    vt.getAllRootElements()),
                  s.dqk.frameworkStabilizers ||
                    (s.dqk.frameworkStabilizers = []),
                  s.dqk.frameworkStabilizers.push((j) => {
                    const ct = s.dqk.getAllAngularTestabilities();
                    let ue = ct.length,
                      Wt = !1;
                    const le = function (It) {
                      (Wt = Wt || It), ue--, 0 == ue && j(Wt);
                    };
                    ct.forEach((It) => {
                      It.whenStable(le);
                    });
                  });
              }
              findTestabilityInTree(vt, U, j) {
                return null == U
                  ? null
                  : (vt.getTestability(U) ??
                      (j
                        ? (0, x.q)().isShadowRoot(U)
                          ? this.findTestabilityInTree(vt, U.host, !0)
                          : this.findTestabilityInTree(vt, U.parentElement, !0)
                        : null));
              }
            },
            deps: [],
          },
          { provide: s.lri, useClass: s.dDg, deps: [s.R0b, s.eoX, s.rWj] },
          { provide: s.dDg, useClass: s.dDg, deps: [s.R0b, s.eoX, s.rWj] },
        ],
        ri = [
          { provide: s.zSh, useValue: "root" },
          {
            provide: s.qLn,
            useFactory: function re() {
              return new s.qLn();
            },
            deps: [],
          },
          { provide: _, useClass: Vi, multi: !0, deps: [x.K0, s.R0b, s.Lbi] },
          { provide: _, useClass: xe, multi: !0, deps: [x.K0] },
          Kt,
          Jt,
          A,
          { provide: s.FYo, useExisting: Kt },
          { provide: x.JF, useClass: $, deps: [] },
          [],
        ];
      let te = (() => {
          class pt {
            constructor(U) {}
            static withServerTransition(U) {
              return {
                ngModule: pt,
                providers: [{ provide: s.AFp, useValue: U.appId }],
              };
            }
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)(s.LFG(Mi, 12));
            });
            static #e = (this.ɵmod = s.oAB({ type: pt }));
            static #i = (this.ɵinj = s.cJS({
              providers: [...ri, ...fi],
              imports: [x.ez, s.hGG],
            }));
          }
          return pt;
        })(),
        Xi = (() => {
          class pt {
            constructor(U) {
              this._doc = U;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(U) {
              this._doc.title = U || "";
            }
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)(s.LFG(x.K0));
            });
            static #e = (this.ɵprov = s.Yz7({
              token: pt,
              factory: function (j) {
                let ct = null;
                return (
                  (ct = j
                    ? new j()
                    : (function gi() {
                        return new Xi((0, s.LFG)(x.K0));
                      })()),
                  ct
                );
              },
              providedIn: "root",
            }));
          }
          return pt;
        })();
      typeof window < "u" && window;
      let Ut = (() => {
          class pt {
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)();
            });
            static #e = (this.ɵprov = s.Yz7({
              token: pt,
              factory: function (j) {
                let ct = null;
                return (ct = j ? new (j || pt)() : s.LFG(qe)), ct;
              },
              providedIn: "root",
            }));
          }
          return pt;
        })(),
        qe = (() => {
          class pt extends Ut {
            constructor(U) {
              super(), (this._doc = U);
            }
            sanitize(U, j) {
              if (null == j) return null;
              switch (U) {
                case s.q3G.NONE:
                  return j;
                case s.q3G.HTML:
                  return (0, s.qzn)(j, "HTML")
                    ? (0, s.z3N)(j)
                    : (0, s.EiD)(this._doc, String(j)).toString();
                case s.q3G.STYLE:
                  return (0, s.qzn)(j, "Style") ? (0, s.z3N)(j) : j;
                case s.q3G.SCRIPT:
                  if ((0, s.qzn)(j, "Script")) return (0, s.z3N)(j);
                  throw new s.vHH(5200, !1);
                case s.q3G.URL:
                  return (0, s.qzn)(j, "URL")
                    ? (0, s.z3N)(j)
                    : (0, s.mCW)(String(j));
                case s.q3G.RESOURCE_URL:
                  if ((0, s.qzn)(j, "ResourceURL")) return (0, s.z3N)(j);
                  throw new s.vHH(5201, !1);
                default:
                  throw new s.vHH(5202, !1);
              }
            }
            bypassSecurityTrustHtml(U) {
              return (0, s.JVY)(U);
            }
            bypassSecurityTrustStyle(U) {
              return (0, s.L6k)(U);
            }
            bypassSecurityTrustScript(U) {
              return (0, s.eBb)(U);
            }
            bypassSecurityTrustUrl(U) {
              return (0, s.LAX)(U);
            }
            bypassSecurityTrustResourceUrl(U) {
              return (0, s.pB0)(U);
            }
            static #t = (this.ɵfac = function (j) {
              return new (j || pt)(s.LFG(x.K0));
            });
            static #e = (this.ɵprov = s.Yz7({
              token: pt,
              factory: function (j) {
                let ct = null;
                return (
                  (ct = j
                    ? new j()
                    : (function ve(pt) {
                        return new qe(pt.get(x.K0));
                      })(s.LFG(s.zs3))),
                  ct
                );
              },
              providedIn: "root",
            }));
          }
          return pt;
        })();
    },
    1896: (ui, Zt, D) => {
      D.d(Zt, {
        m2: () => Tn,
        F0: () => lr,
        rH: () => Ws,
        Od: () => cr,
        Bz: () => Rc,
        lC: () => vo,
      });
      var s = D(5879),
        x = D(2664),
        C = D(9666),
        p = D(2096),
        at = D(5619),
        lt = D(2572);
      const B = (0, D(2306).d)(
        (I) =>
          function () {
            I(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          },
      );
      var kt = D(5211),
        $ = D(4911),
        _ = D(8407),
        A = D(8504),
        jt = D(6232),
        gt = D(3168),
        Jt = D(8645),
        De = D(7394),
        Ve = D(6814),
        He = D(7398),
        We = D(4664),
        Re = D(8180),
        wt = D(7921),
        _t = D(2181),
        St = D(1631),
        Pt = D(9360),
        ee = D(8251);
      function Kt(I) {
        return (0, Pt.e)((L, k) => {
          let N = !1;
          L.subscribe(
            (0, ee.x)(
              k,
              (K) => {
                (N = !0), k.next(K);
              },
              () => {
                N || k.next(I), k.complete();
              },
            ),
          );
        });
      }
      function ze(I = mi) {
        return (0, Pt.e)((L, k) => {
          let N = !1;
          L.subscribe(
            (0, ee.x)(
              k,
              (K) => {
                (N = !0), k.next(K);
              },
              () => (N ? k.complete() : k.error(I())),
            ),
          );
        });
      }
      function mi() {
        return new B();
      }
      var ie = D(2737);
      function vi(I, L) {
        const k = arguments.length >= 2;
        return (N) =>
          N.pipe(
            I ? (0, _t.h)((K, xt) => I(K, xt, N)) : ie.y,
            (0, Re.q)(1),
            k ? Kt(L) : ze(() => new B()),
          );
      }
      var Ge = D(6328),
        hi = D(9397),
        Si = D(6306);
      function Ie(I) {
        return I <= 0
          ? () => jt.E
          : (0, Pt.e)((L, k) => {
              let N = [];
              L.subscribe(
                (0, ee.x)(
                  k,
                  (K) => {
                    N.push(K), I < N.length && N.shift();
                  },
                  () => {
                    for (const K of N) k.next(K);
                    k.complete();
                  },
                  void 0,
                  () => {
                    N = null;
                  },
                ),
              );
            });
      }
      var xe = D(975),
        Ue = D(4716),
        Ft = D(6196),
        Mt = D(9773),
        we = D(7537),
        Vt = D(6593);
      const re = "primary",
        Le = Symbol("RouteTitle");
      class li {
        constructor(L) {
          this.params = L || {};
        }
        has(L) {
          return Object.prototype.hasOwnProperty.call(this.params, L);
        }
        get(L) {
          if (this.has(L)) {
            const k = this.params[L];
            return Array.isArray(k) ? k[0] : k;
          }
          return null;
        }
        getAll(L) {
          if (this.has(L)) {
            const k = this.params[L];
            return Array.isArray(k) ? k : [k];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ii(I) {
        return new li(I);
      }
      function Mi(I, L, k) {
        const N = k.path.split("/");
        if (
          N.length > I.length ||
          ("full" === k.pathMatch && (L.hasChildren() || N.length < I.length))
        )
          return null;
        const K = {};
        for (let xt = 0; xt < N.length; xt++) {
          const oe = N[xt],
            ei = I[xt];
          if (oe.startsWith(":")) K[oe.substring(1)] = ei;
          else if (oe !== ei.path) return null;
        }
        return { consumed: I.slice(0, N.length), posParams: K };
      }
      function ri(I, L) {
        const k = I ? Object.keys(I) : void 0,
          N = L ? Object.keys(L) : void 0;
        if (!k || !N || k.length != N.length) return !1;
        let K;
        for (let xt = 0; xt < k.length; xt++)
          if (((K = k[xt]), !te(I[K], L[K]))) return !1;
        return !0;
      }
      function te(I, L) {
        if (Array.isArray(I) && Array.isArray(L)) {
          if (I.length !== L.length) return !1;
          const k = [...I].sort(),
            N = [...L].sort();
          return k.every((K, xt) => N[xt] === K);
        }
        return I === L;
      }
      function Be(I) {
        return I.length > 0 ? I[I.length - 1] : null;
      }
      function Ne(I) {
        return (0, x.b)(I)
          ? I
          : (0, s.QGY)(I)
            ? (0, C.D)(Promise.resolve(I))
            : (0, p.of)(I);
      }
      const Ri = {
          exact: function de(I, L, k) {
            if (
              !Ct(I.segments, L.segments) ||
              !yt(I.segments, L.segments, k) ||
              I.numberOfChildren !== L.numberOfChildren
            )
              return !1;
            for (const N in L.children)
              if (!I.children[N] || !de(I.children[N], L.children[N], k))
                return !1;
            return !0;
          },
          subset: Z,
        },
        gi = {
          exact: function _i(I, L) {
            return ri(I, L);
          },
          subset: function ot(I, L) {
            return (
              Object.keys(L).length <= Object.keys(I).length &&
              Object.keys(L).every((k) => te(I[k], L[k]))
            );
          },
          ignored: () => !0,
        };
      function Xi(I, L, k) {
        return (
          Ri[k.paths](I.root, L.root, k.matrixParams) &&
          gi[k.queryParams](I.queryParams, L.queryParams) &&
          !("exact" === k.fragment && I.fragment !== L.fragment)
        );
      }
      function Z(I, L, k) {
        return rt(I, L, L.segments, k);
      }
      function rt(I, L, k, N) {
        if (I.segments.length > k.length) {
          const K = I.segments.slice(0, k.length);
          return !(!Ct(K, k) || L.hasChildren() || !yt(K, k, N));
        }
        if (I.segments.length === k.length) {
          if (!Ct(I.segments, k) || !yt(I.segments, k, N)) return !1;
          for (const K in L.children)
            if (!I.children[K] || !Z(I.children[K], L.children[K], N))
              return !1;
          return !0;
        }
        {
          const K = k.slice(0, I.segments.length),
            xt = k.slice(I.segments.length);
          return (
            !!(Ct(I.segments, K) && yt(I.segments, K, N) && I.children[re]) &&
            rt(I.children[re], L, xt, N)
          );
        }
      }
      function yt(I, L, k) {
        return L.every((N, K) => gi[k](I[K].parameters, N.parameters));
      }
      class Rt {
        constructor(L = new Lt([], {}), k = {}, N = null) {
          (this.root = L), (this.queryParams = k), (this.fragment = N);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ii(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return se.serialize(this);
        }
      }
      class Lt {
        constructor(L, k) {
          (this.segments = L),
            (this.children = k),
            (this.parent = null),
            Object.values(k).forEach((N) => (N.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return it(this);
        }
      }
      class ut {
        constructor(L, k) {
          (this.path = L), (this.parameters = k);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ii(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return $t(this);
        }
      }
      function Ct(I, L) {
        return I.length === L.length && I.every((k, N) => k.path === L[N].path);
      }
      let Nt = (() => {
        class I {
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: function () {
              return new X();
            },
            providedIn: "root",
          }));
        }
        return I;
      })();
      class X {
        parse(L) {
          const k = new le(L);
          return new Rt(
            k.parseRootSegment(),
            k.parseQueryParams(),
            k.parseFragment(),
          );
        }
        serialize(L) {
          const k = `/${Ut(L.root, !0)}`,
            N = (function ke(I) {
              const L = Object.keys(I)
                .map((k) => {
                  const N = I[k];
                  return Array.isArray(N)
                    ? N.map((K) => `${qe(k)}=${qe(K)}`).join("&")
                    : `${qe(k)}=${qe(N)}`;
                })
                .filter((k) => !!k);
              return L.length ? `?${L.join("&")}` : "";
            })(L.queryParams);
          return `${k}${N}${
            "string" == typeof L.fragment
              ? `#${(function ki(I) {
                  return encodeURI(I);
                })(L.fragment)}`
              : ""
          }`;
        }
      }
      const se = new X();
      function it(I) {
        return I.segments.map((L) => $t(L)).join("/");
      }
      function Ut(I, L) {
        if (!I.hasChildren()) return it(I);
        if (L) {
          const k = I.children[re] ? Ut(I.children[re], !1) : "",
            N = [];
          return (
            Object.entries(I.children).forEach(([K, xt]) => {
              K !== re && N.push(`${K}:${Ut(xt, !1)}`);
            }),
            N.length > 0 ? `${k}(${N.join("//")})` : k
          );
        }
        {
          const k = (function H(I, L) {
            let k = [];
            return (
              Object.entries(I.children).forEach(([N, K]) => {
                N === re && (k = k.concat(L(K, N)));
              }),
              Object.entries(I.children).forEach(([N, K]) => {
                N !== re && (k = k.concat(L(K, N)));
              }),
              k
            );
          })(I, (N, K) =>
            K === re ? [Ut(I.children[re], !1)] : [`${K}:${Ut(N, !1)}`],
          );
          return 1 === Object.keys(I.children).length && null != I.children[re]
            ? `${it(I)}/${k[0]}`
            : `${it(I)}/(${k.join("//")})`;
        }
      }
      function ve(I) {
        return encodeURIComponent(I)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function qe(I) {
        return ve(I).replace(/%3B/gi, ";");
      }
      function Xt(I) {
        return ve(I)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function ae(I) {
        return decodeURIComponent(I);
      }
      function ye(I) {
        return ae(I.replace(/\+/g, "%20"));
      }
      function $t(I) {
        return `${Xt(I.path)}${(function fe(I) {
          return Object.keys(I)
            .map((L) => `;${Xt(L)}=${Xt(I[L])}`)
            .join("");
        })(I.parameters)}`;
      }
      const yi = /^[^\/()?;#]+/;
      function pt(I) {
        const L = I.match(yi);
        return L ? L[0] : "";
      }
      const vt = /^[^\/()?;=#]+/,
        j = /^[^=?&#]+/,
        ue = /^[^&#]+/;
      class le {
        constructor(L) {
          (this.url = L), (this.remaining = L);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new Lt([], {})
              : new Lt([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const L = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(L);
            } while (this.consumeOptional("&"));
          return L;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const L = [];
          for (
            this.peekStartsWith("(") || L.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), L.push(this.parseSegment());
          let k = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (k = this.parseParens(!0)));
          let N = {};
          return (
            this.peekStartsWith("(") && (N = this.parseParens(!1)),
            (L.length > 0 || Object.keys(k).length > 0) &&
              (N[re] = new Lt(L, k)),
            N
          );
        }
        parseSegment() {
          const L = pt(this.remaining);
          if ("" === L && this.peekStartsWith(";")) throw new s.vHH(4009, !1);
          return this.capture(L), new ut(ae(L), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const L = {};
          for (; this.consumeOptional(";"); ) this.parseParam(L);
          return L;
        }
        parseParam(L) {
          const k = (function U(I) {
            const L = I.match(vt);
            return L ? L[0] : "";
          })(this.remaining);
          if (!k) return;
          this.capture(k);
          let N = "";
          if (this.consumeOptional("=")) {
            const K = pt(this.remaining);
            K && ((N = K), this.capture(N));
          }
          L[ae(k)] = ae(N);
        }
        parseQueryParam(L) {
          const k = (function ct(I) {
            const L = I.match(j);
            return L ? L[0] : "";
          })(this.remaining);
          if (!k) return;
          this.capture(k);
          let N = "";
          if (this.consumeOptional("=")) {
            const oe = (function Wt(I) {
              const L = I.match(ue);
              return L ? L[0] : "";
            })(this.remaining);
            oe && ((N = oe), this.capture(N));
          }
          const K = ye(k),
            xt = ye(N);
          if (L.hasOwnProperty(K)) {
            let oe = L[K];
            Array.isArray(oe) || ((oe = [oe]), (L[K] = oe)), oe.push(xt);
          } else L[K] = xt;
        }
        parseParens(L) {
          const k = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const N = pt(this.remaining),
              K = this.remaining[N.length];
            if ("/" !== K && ")" !== K && ";" !== K) throw new s.vHH(4010, !1);
            let xt;
            N.indexOf(":") > -1
              ? ((xt = N.slice(0, N.indexOf(":"))),
                this.capture(xt),
                this.capture(":"))
              : L && (xt = re);
            const oe = this.parseChildren();
            (k[xt] = 1 === Object.keys(oe).length ? oe[re] : new Lt([], oe)),
              this.consumeOptional("//");
          }
          return k;
        }
        peekStartsWith(L) {
          return this.remaining.startsWith(L);
        }
        consumeOptional(L) {
          return (
            !!this.peekStartsWith(L) &&
            ((this.remaining = this.remaining.substring(L.length)), !0)
          );
        }
        capture(L) {
          if (!this.consumeOptional(L)) throw new s.vHH(4011, !1);
        }
      }
      function It(I) {
        return I.segments.length > 0 ? new Lt([], { [re]: I }) : I;
      }
      function Yt(I) {
        const L = {};
        for (const N of Object.keys(I.children)) {
          const xt = Yt(I.children[N]);
          if (N === re && 0 === xt.segments.length && xt.hasChildren())
            for (const [oe, ei] of Object.entries(xt.children)) L[oe] = ei;
          else (xt.segments.length > 0 || xt.hasChildren()) && (L[N] = xt);
        }
        return (function Ae(I) {
          if (1 === I.numberOfChildren && I.children[re]) {
            const L = I.children[re];
            return new Lt(I.segments.concat(L.segments), L.children);
          }
          return I;
        })(new Lt(I.segments, L));
      }
      function oi(I) {
        return I instanceof Rt;
      }
      function ne(I) {
        let L;
        const K = It(
          (function k(xt) {
            const oe = {};
            for (const Ke of xt.children) {
              const Bi = k(Ke);
              oe[Ke.outlet] = Bi;
            }
            const ei = new Lt(xt.url, oe);
            return xt === I && (L = ei), ei;
          })(I.root),
        );
        return L ?? K;
      }
      function tt(I, L, k, N) {
        let K = I;
        for (; K.parent; ) K = K.parent;
        if (0 === L.length) return Te(K, K, K, k, N);
        const xt = (function Ze(I) {
          if ("string" == typeof I[0] && 1 === I.length && "/" === I[0])
            return new Ot(!0, 0, I);
          let L = 0,
            k = !1;
          const N = I.reduce((K, xt, oe) => {
            if ("object" == typeof xt && null != xt) {
              if (xt.outlets) {
                const ei = {};
                return (
                  Object.entries(xt.outlets).forEach(([Ke, Bi]) => {
                    ei[Ke] = "string" == typeof Bi ? Bi.split("/") : Bi;
                  }),
                  [...K, { outlets: ei }]
                );
              }
              if (xt.segmentPath) return [...K, xt.segmentPath];
            }
            return "string" != typeof xt
              ? [...K, xt]
              : 0 === oe
                ? (xt.split("/").forEach((ei, Ke) => {
                    (0 == Ke && "." === ei) ||
                      (0 == Ke && "" === ei
                        ? (k = !0)
                        : ".." === ei
                          ? L++
                          : "" != ei && K.push(ei));
                  }),
                  K)
                : [...K, xt];
          }, []);
          return new Ot(k, L, N);
        })(L);
        if (xt.toRoot()) return Te(K, K, new Lt([], {}), k, N);
        const oe = (function Gt(I, L, k) {
            if (I.isAbsolute) return new ft(L, !0, 0);
            if (!k) return new ft(L, !1, NaN);
            if (null === k.parent) return new ft(k, !0, 0);
            const N = me(I.commands[0]) ? 0 : 1;
            return (function Me(I, L, k) {
              let N = I,
                K = L,
                xt = k;
              for (; xt > K; ) {
                if (((xt -= K), (N = N.parent), !N)) throw new s.vHH(4005, !1);
                K = N.segments.length;
              }
              return new ft(N, !1, K - xt);
            })(k, k.segments.length - 1 + N, I.numberOfDoubleDots);
          })(xt, K, I),
          ei = oe.processChildren
            ? Hi(oe.segmentGroup, oe.index, xt.commands)
            : Ei(oe.segmentGroup, oe.index, xt.commands);
        return Te(K, oe.segmentGroup, ei, k, N);
      }
      function me(I) {
        return (
          "object" == typeof I && null != I && !I.outlets && !I.segmentPath
        );
      }
      function Bt(I) {
        return "object" == typeof I && null != I && I.outlets;
      }
      function Te(I, L, k, N, K) {
        let oe,
          xt = {};
        N &&
          Object.entries(N).forEach(([Ke, Bi]) => {
            xt[Ke] = Array.isArray(Bi) ? Bi.map((gn) => `${gn}`) : `${Bi}`;
          }),
          (oe = I === L ? k : Je(I, L, k));
        const ei = It(Yt(oe));
        return new Rt(ei, xt, K);
      }
      function Je(I, L, k) {
        const N = {};
        return (
          Object.entries(I.children).forEach(([K, xt]) => {
            N[K] = xt === L ? k : Je(xt, L, k);
          }),
          new Lt(I.segments, N)
        );
      }
      class Ot {
        constructor(L, k, N) {
          if (
            ((this.isAbsolute = L),
            (this.numberOfDoubleDots = k),
            (this.commands = N),
            L && N.length > 0 && me(N[0]))
          )
            throw new s.vHH(4003, !1);
          const K = N.find(Bt);
          if (K && K !== Be(N)) throw new s.vHH(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class ft {
        constructor(L, k, N) {
          (this.segmentGroup = L), (this.processChildren = k), (this.index = N);
        }
      }
      function Ei(I, L, k) {
        if (
          (I || (I = new Lt([], {})),
          0 === I.segments.length && I.hasChildren())
        )
          return Hi(I, L, k);
        const N = (function Yi(I, L, k) {
            let N = 0,
              K = L;
            const xt = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; K < I.segments.length; ) {
              if (N >= k.length) return xt;
              const oe = I.segments[K],
                ei = k[N];
              if (Bt(ei)) break;
              const Ke = `${ei}`,
                Bi = N < k.length - 1 ? k[N + 1] : null;
              if (K > 0 && void 0 === Ke) break;
              if (Ke && Bi && "object" == typeof Bi && void 0 === Bi.outlets) {
                if (!pn(Ke, Bi, oe)) return xt;
                N += 2;
              } else {
                if (!pn(Ke, {}, oe)) return xt;
                N++;
              }
              K++;
            }
            return { match: !0, pathIndex: K, commandIndex: N };
          })(I, L, k),
          K = k.slice(N.commandIndex);
        if (N.match && N.pathIndex < I.segments.length) {
          const xt = new Lt(I.segments.slice(0, N.pathIndex), {});
          return (
            (xt.children[re] = new Lt(
              I.segments.slice(N.pathIndex),
              I.children,
            )),
            Hi(xt, 0, K)
          );
        }
        return N.match && 0 === K.length
          ? new Lt(I.segments, {})
          : N.match && !I.hasChildren()
            ? ln(I, L, k)
            : N.match
              ? Hi(I, 0, K)
              : ln(I, L, k);
      }
      function Hi(I, L, k) {
        if (0 === k.length) return new Lt(I.segments, {});
        {
          const N = (function si(I) {
              return Bt(I[0]) ? I[0].outlets : { [re]: I };
            })(k),
            K = {};
          if (
            Object.keys(N).some((xt) => xt !== re) &&
            I.children[re] &&
            1 === I.numberOfChildren &&
            0 === I.children[re].segments.length
          ) {
            const xt = Hi(I.children[re], L, k);
            return new Lt(I.segments, xt.children);
          }
          return (
            Object.entries(N).forEach(([xt, oe]) => {
              "string" == typeof oe && (oe = [oe]),
                null !== oe && (K[xt] = Ei(I.children[xt], L, oe));
            }),
            Object.entries(I.children).forEach(([xt, oe]) => {
              void 0 === N[xt] && (K[xt] = oe);
            }),
            new Lt(I.segments, K)
          );
        }
      }
      function ln(I, L, k) {
        const N = I.segments.slice(0, L);
        let K = 0;
        for (; K < k.length; ) {
          const xt = k[K];
          if (Bt(xt)) {
            const Ke = bn(xt.outlets);
            return new Lt(N, Ke);
          }
          if (0 === K && me(k[0])) {
            N.push(new ut(I.segments[L].path, Un(k[0]))), K++;
            continue;
          }
          const oe = Bt(xt) ? xt.outlets[re] : `${xt}`,
            ei = K < k.length - 1 ? k[K + 1] : null;
          oe && ei && me(ei)
            ? (N.push(new ut(oe, Un(ei))), (K += 2))
            : (N.push(new ut(oe, {})), K++);
        }
        return new Lt(N, {});
      }
      function bn(I) {
        const L = {};
        return (
          Object.entries(I).forEach(([k, N]) => {
            "string" == typeof N && (N = [N]),
              null !== N && (L[k] = ln(new Lt([], {}), 0, N));
          }),
          L
        );
      }
      function Un(I) {
        const L = {};
        return Object.entries(I).forEach(([k, N]) => (L[k] = `${N}`)), L;
      }
      function pn(I, L, k) {
        return I == k.path && ri(L, k.parameters);
      }
      const An = "imperative";
      class yn {
        constructor(L, k) {
          (this.id = L), (this.url = k);
        }
      }
      class uo extends yn {
        constructor(L, k, N = "imperative", K = null) {
          super(L, k),
            (this.type = 0),
            (this.navigationTrigger = N),
            (this.restoredState = K);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Tn extends yn {
        constructor(L, k, N) {
          super(L, k), (this.urlAfterRedirects = N), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class oo extends yn {
        constructor(L, k, N, K) {
          super(L, k), (this.reason = N), (this.code = K), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class go extends yn {
        constructor(L, k, N, K) {
          super(L, k), (this.reason = N), (this.code = K), (this.type = 16);
        }
      }
      class qo extends yn {
        constructor(L, k, N, K) {
          super(L, k), (this.error = N), (this.target = K), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class Kn extends yn {
        constructor(L, k, N, K) {
          super(L, k),
            (this.urlAfterRedirects = N),
            (this.state = K),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Ir extends yn {
        constructor(L, k, N, K) {
          super(L, k),
            (this.urlAfterRedirects = N),
            (this.state = K),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Gr extends yn {
        constructor(L, k, N, K, xt) {
          super(L, k),
            (this.urlAfterRedirects = N),
            (this.state = K),
            (this.shouldActivate = xt),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Sa extends yn {
        constructor(L, k, N, K) {
          super(L, k),
            (this.urlAfterRedirects = N),
            (this.state = K),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class rs extends yn {
        constructor(L, k, N, K) {
          super(L, k),
            (this.urlAfterRedirects = N),
            (this.state = K),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Vs {
        constructor(L) {
          (this.route = L), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class ir {
        constructor(L) {
          (this.route = L), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class Zr {
        constructor(L) {
          (this.snapshot = L), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""}')`;
        }
      }
      class _s {
        constructor(L) {
          (this.snapshot = L), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""}')`;
        }
      }
      class ro {
        constructor(L) {
          (this.snapshot = L), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""}')`;
        }
      }
      class ss {
        constructor(L) {
          (this.snapshot = L), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""}')`;
        }
      }
      class Jn {
        constructor(L, k, N) {
          (this.routerEvent = L),
            (this.position = k),
            (this.anchor = N),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${this.position ? `${this.position[0]}, ${this.position[1]}` : null}')`;
        }
      }
      class Dt {}
      class Pe {
        constructor(L) {
          this.url = L;
        }
      }
      class Xe {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.injector = null),
            (this.children = new Li()),
            (this.attachRef = null);
        }
      }
      let Li = (() => {
        class I {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(k, N) {
            const K = this.getOrCreateContext(k);
            (K.outlet = N), this.contexts.set(k, K);
          }
          onChildOutletDestroyed(k) {
            const N = this.getContext(k);
            N && ((N.outlet = null), (N.attachRef = null));
          }
          onOutletDeactivated() {
            const k = this.contexts;
            return (this.contexts = new Map()), k;
          }
          onOutletReAttached(k) {
            this.contexts = k;
          }
          getOrCreateContext(k) {
            let N = this.getContext(k);
            return N || ((N = new Xe()), this.contexts.set(k, N)), N;
          }
          getContext(k) {
            return this.contexts.get(k) || null;
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: I.ɵfac,
            providedIn: "root",
          }));
        }
        return I;
      })();
      class nn {
        constructor(L) {
          this._root = L;
        }
        get root() {
          return this._root.value;
        }
        parent(L) {
          const k = this.pathFromRoot(L);
          return k.length > 1 ? k[k.length - 2] : null;
        }
        children(L) {
          const k = $n(L, this._root);
          return k ? k.children.map((N) => N.value) : [];
        }
        firstChild(L) {
          const k = $n(L, this._root);
          return k && k.children.length > 0 ? k.children[0].value : null;
        }
        siblings(L) {
          const k = ho(L, this._root);
          return k.length < 2
            ? []
            : k[k.length - 2].children
                .map((K) => K.value)
                .filter((K) => K !== L);
        }
        pathFromRoot(L) {
          return ho(L, this._root).map((k) => k.value);
        }
      }
      function $n(I, L) {
        if (I === L.value) return L;
        for (const k of L.children) {
          const N = $n(I, k);
          if (N) return N;
        }
        return null;
      }
      function ho(I, L) {
        if (I === L.value) return [L];
        for (const k of L.children) {
          const N = ho(I, k);
          if (N.length) return N.unshift(L), N;
        }
        return [];
      }
      class on {
        constructor(L, k) {
          (this.value = L), (this.children = k);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function un(I) {
        const L = {};
        return I && I.children.forEach((k) => (L[k.value.outlet] = k)), L;
      }
      class Xn extends nn {
        constructor(L, k) {
          super(L), (this.snapshot = k), On(this, L);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function nr(I, L) {
        const k = (function _o(I, L) {
            const oe = new Mr([], {}, {}, "", {}, re, L, null, {});
            return new Vo("", new on(oe, []));
          })(0, L),
          N = new at.X([new ut("", {})]),
          K = new at.X({}),
          xt = new at.X({}),
          oe = new at.X({}),
          ei = new at.X(""),
          Ke = new Oo(N, K, oe, ei, xt, re, L, k.root);
        return (Ke.snapshot = k.root), new Xn(new on(Ke, []), k);
      }
      class Oo {
        constructor(L, k, N, K, xt, oe, ei, Ke) {
          (this.urlSubject = L),
            (this.paramsSubject = k),
            (this.queryParamsSubject = N),
            (this.fragmentSubject = K),
            (this.dataSubject = xt),
            (this.outlet = oe),
            (this.component = ei),
            (this._futureSnapshot = Ke),
            (this.title =
              this.dataSubject?.pipe((0, He.U)((Bi) => Bi[Le])) ??
              (0, p.of)(void 0)),
            (this.url = L),
            (this.params = k),
            (this.queryParams = N),
            (this.fragment = K),
            (this.data = xt);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, He.U)((L) => ii(L)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, He.U)((L) => ii(L)),
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function Rr(I, L = "emptyOnly") {
        const k = I.pathFromRoot;
        let N = 0;
        if ("always" !== L)
          for (N = k.length - 1; N >= 1; ) {
            const K = k[N],
              xt = k[N - 1];
            if (K.routeConfig && "" === K.routeConfig.path) N--;
            else {
              if (xt.component) break;
              N--;
            }
          }
        return (function Pr(I) {
          return I.reduce(
            (L, k) => ({
              params: { ...L.params, ...k.params },
              data: { ...L.data, ...k.data },
              resolve: {
                ...k.data,
                ...L.resolve,
                ...k.routeConfig?.data,
                ...k._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} },
          );
        })(k.slice(N));
      }
      class Mr {
        get title() {
          return this.data?.[Le];
        }
        constructor(L, k, N, K, xt, oe, ei, Ke, Bi) {
          (this.url = L),
            (this.params = k),
            (this.queryParams = N),
            (this.fragment = K),
            (this.data = xt),
            (this.outlet = oe),
            (this.component = ei),
            (this.routeConfig = Ke),
            (this._resolve = Bi);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ii(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ii(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url.map((N) => N.toString()).join("/")}', path:'${this.routeConfig ? this.routeConfig.path : ""}')`;
        }
      }
      class Vo extends nn {
        constructor(L, k) {
          super(k), (this.url = L), On(this, k);
        }
        toString() {
          return Fi(this._root);
        }
      }
      function On(I, L) {
        (L.value._routerState = I), L.children.forEach((k) => On(I, k));
      }
      function Fi(I) {
        const L =
          I.children.length > 0 ? ` { ${I.children.map(Fi).join(", ")} } ` : "";
        return `${I.value}${L}`;
      }
      function sn(I) {
        if (I.snapshot) {
          const L = I.snapshot,
            k = I._futureSnapshot;
          (I.snapshot = k),
            ri(L.queryParams, k.queryParams) ||
              I.queryParamsSubject.next(k.queryParams),
            L.fragment !== k.fragment && I.fragmentSubject.next(k.fragment),
            ri(L.params, k.params) || I.paramsSubject.next(k.params),
            (function fi(I, L) {
              if (I.length !== L.length) return !1;
              for (let k = 0; k < I.length; ++k) if (!ri(I[k], L[k])) return !1;
              return !0;
            })(L.url, k.url) || I.urlSubject.next(k.url),
            ri(L.data, k.data) || I.dataSubject.next(k.data);
        } else
          (I.snapshot = I._futureSnapshot),
            I.dataSubject.next(I._futureSnapshot.data);
      }
      function In(I, L) {
        const k =
          ri(I.params, L.params) &&
          (function q(I, L) {
            return (
              Ct(I, L) && I.every((k, N) => ri(k.parameters, L[N].parameters))
            );
          })(I.url, L.url);
        return (
          k &&
          !(!I.parent != !L.parent) &&
          (!I.parent || In(I.parent, L.parent))
        );
      }
      let vo = (() => {
        class I {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = re),
              (this.activateEvents = new s.vpe()),
              (this.deactivateEvents = new s.vpe()),
              (this.attachEvents = new s.vpe()),
              (this.detachEvents = new s.vpe()),
              (this.parentContexts = (0, s.f3M)(Li)),
              (this.location = (0, s.f3M)(s.s_b)),
              (this.changeDetector = (0, s.f3M)(s.sBO)),
              (this.environmentInjector = (0, s.f3M)(s.lqb)),
              (this.inputBinder = (0, s.f3M)(eo, { optional: !0 })),
              (this.supportsBindingToComponentInputs = !0);
          }
          get activatedComponentRef() {
            return this.activated;
          }
          ngOnChanges(k) {
            if (k.name) {
              const { firstChange: N, previousValue: K } = k.name;
              if (N) return;
              this.isTrackedInParentContexts(K) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(K)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name),
              this.inputBinder?.unsubscribeFromRouteData(this);
          }
          isTrackedInParentContexts(k) {
            return this.parentContexts.getContext(k)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const k = this.parentContexts.getContext(this.name);
            k?.route &&
              (k.attachRef
                ? this.attach(k.attachRef, k.route)
                : this.activateWith(k.route, k.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new s.vHH(4012, !1);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new s.vHH(4012, !1);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new s.vHH(4012, !1);
            this.location.detach();
            const k = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(k.instance),
              k
            );
          }
          attach(k, N) {
            (this.activated = k),
              (this._activatedRoute = N),
              this.location.insert(k.hostView),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.attachEvents.emit(k.instance);
          }
          deactivate() {
            if (this.activated) {
              const k = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(k);
            }
          }
          activateWith(k, N) {
            if (this.isActivated) throw new s.vHH(4013, !1);
            this._activatedRoute = k;
            const K = this.location,
              oe = k.snapshot.component,
              ei = this.parentContexts.getOrCreateContext(this.name).children,
              Ke = new zo(k, ei, K.injector);
            (this.activated = K.createComponent(oe, {
              index: K.length,
              injector: Ke,
              environmentInjector: N ?? this.environmentInjector,
            })),
              this.changeDetector.markForCheck(),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.activateEvents.emit(this.activated.instance);
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵdir = s.lG2({
            type: I,
            selectors: [["router-outlet"]],
            inputs: { name: "name" },
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
            standalone: !0,
            features: [s.TTD],
          }));
        }
        return I;
      })();
      class zo {
        constructor(L, k, N) {
          (this.route = L), (this.childContexts = k), (this.parent = N);
        }
        get(L, k) {
          return L === Oo
            ? this.route
            : L === Li
              ? this.childContexts
              : this.parent.get(L, k);
        }
      }
      const eo = new s.OlP("");
      let xo = (() => {
        class I {
          constructor() {
            this.outletDataSubscriptions = new Map();
          }
          bindActivatedRouteToOutletComponent(k) {
            this.unsubscribeFromRouteData(k), this.subscribeToRouteData(k);
          }
          unsubscribeFromRouteData(k) {
            this.outletDataSubscriptions.get(k)?.unsubscribe(),
              this.outletDataSubscriptions.delete(k);
          }
          subscribeToRouteData(k) {
            const { activatedRoute: N } = k,
              K = (0, lt.a)([N.queryParams, N.params, N.data])
                .pipe(
                  (0, We.w)(
                    ([xt, oe, ei], Ke) => (
                      (ei = { ...xt, ...oe, ...ei }),
                      0 === Ke ? (0, p.of)(ei) : Promise.resolve(ei)
                    ),
                  ),
                )
                .subscribe((xt) => {
                  if (
                    !k.isActivated ||
                    !k.activatedComponentRef ||
                    k.activatedRoute !== N ||
                    null === N.component
                  )
                    return void this.unsubscribeFromRouteData(k);
                  const oe = (0, s.qFp)(N.component);
                  if (oe)
                    for (const { templateName: ei } of oe.inputs)
                      k.activatedComponentRef.setInput(ei, xt[ei]);
                  else this.unsubscribeFromRouteData(k);
                });
            this.outletDataSubscriptions.set(k, K);
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵprov = s.Yz7({ token: I, factory: I.ɵfac }));
        }
        return I;
      })();
      function wo(I, L, k) {
        if (k && I.shouldReuseRoute(L.value, k.value.snapshot)) {
          const N = k.value;
          N._futureSnapshot = L.value;
          const K = (function Yr(I, L, k) {
            return L.children.map((N) => {
              for (const K of k.children)
                if (I.shouldReuseRoute(N.value, K.value.snapshot))
                  return wo(I, N, K);
              return wo(I, N);
            });
          })(I, L, k);
          return new on(N, K);
        }
        {
          if (I.shouldAttach(L.value)) {
            const xt = I.retrieve(L.value);
            if (null !== xt) {
              const oe = xt.route;
              return (
                (oe.value._futureSnapshot = L.value),
                (oe.children = L.children.map((ei) => wo(I, ei))),
                oe
              );
            }
          }
          const N = (function cn(I) {
              return new Oo(
                new at.X(I.url),
                new at.X(I.params),
                new at.X(I.queryParams),
                new at.X(I.fragment),
                new at.X(I.data),
                I.outlet,
                I.component,
                I,
              );
            })(L.value),
            K = L.children.map((xt) => wo(I, xt));
          return new on(N, K);
        }
      }
      const Er = "ngNavigationCancelingError";
      function Zo(I, L) {
        const { redirectTo: k, navigationBehaviorOptions: N } = oi(L)
            ? { redirectTo: L, navigationBehaviorOptions: void 0 }
            : L,
          K = bo(!1, 0, L);
        return (K.url = k), (K.navigationBehaviorOptions = N), K;
      }
      function bo(I, L, k) {
        const N = new Error("NavigationCancelingError: " + (I || ""));
        return (N[Er] = !0), (N.cancellationCode = L), k && (N.url = k), N;
      }
      function Wn(I) {
        return I && I[Er];
      }
      let jn = (() => {
        class I {
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵcmp = s.Xpm({
            type: I,
            selectors: [["ng-component"]],
            standalone: !0,
            features: [s.jDz],
            decls: 1,
            vars: 0,
            template: function (N, K) {
              1 & N && s._UZ(0, "router-outlet");
            },
            dependencies: [vo],
            encapsulation: 2,
          }));
        }
        return I;
      })();
      function so(I) {
        const L = I.children && I.children.map(so),
          k = L ? { ...I, children: L } : { ...I };
        return (
          !k.component &&
            !k.loadComponent &&
            (L || k.loadChildren) &&
            k.outlet &&
            k.outlet !== re &&
            (k.component = jn),
          k
        );
      }
      function Do(I) {
        return I.outlet || re;
      }
      function Fr(I) {
        if (!I) return null;
        if (I.routeConfig?._injector) return I.routeConfig._injector;
        for (let L = I.parent; L; L = L.parent) {
          const k = L.routeConfig;
          if (k?._loadedInjector) return k._loadedInjector;
          if (k?._injector) return k._injector;
        }
        return null;
      }
      class Mo {
        constructor(L, k, N, K, xt) {
          (this.routeReuseStrategy = L),
            (this.futureState = k),
            (this.currState = N),
            (this.forwardEvent = K),
            (this.inputBindingEnabled = xt);
        }
        activate(L) {
          const k = this.futureState._root,
            N = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(k, N, L),
            sn(this.futureState.root),
            this.activateChildRoutes(k, N, L);
        }
        deactivateChildRoutes(L, k, N) {
          const K = un(k);
          L.children.forEach((xt) => {
            const oe = xt.value.outlet;
            this.deactivateRoutes(xt, K[oe], N), delete K[oe];
          }),
            Object.values(K).forEach((xt) => {
              this.deactivateRouteAndItsChildren(xt, N);
            });
        }
        deactivateRoutes(L, k, N) {
          const K = L.value,
            xt = k ? k.value : null;
          if (K === xt)
            if (K.component) {
              const oe = N.getContext(K.outlet);
              oe && this.deactivateChildRoutes(L, k, oe.children);
            } else this.deactivateChildRoutes(L, k, N);
          else xt && this.deactivateRouteAndItsChildren(k, N);
        }
        deactivateRouteAndItsChildren(L, k) {
          L.value.component &&
          this.routeReuseStrategy.shouldDetach(L.value.snapshot)
            ? this.detachAndStoreRouteSubtree(L, k)
            : this.deactivateRouteAndOutlet(L, k);
        }
        detachAndStoreRouteSubtree(L, k) {
          const N = k.getContext(L.value.outlet),
            K = N && L.value.component ? N.children : k,
            xt = un(L);
          for (const oe of Object.keys(xt))
            this.deactivateRouteAndItsChildren(xt[oe], K);
          if (N && N.outlet) {
            const oe = N.outlet.detach(),
              ei = N.children.onOutletDeactivated();
            this.routeReuseStrategy.store(L.value.snapshot, {
              componentRef: oe,
              route: L,
              contexts: ei,
            });
          }
        }
        deactivateRouteAndOutlet(L, k) {
          const N = k.getContext(L.value.outlet),
            K = N && L.value.component ? N.children : k,
            xt = un(L);
          for (const oe of Object.keys(xt))
            this.deactivateRouteAndItsChildren(xt[oe], K);
          N &&
            (N.outlet &&
              (N.outlet.deactivate(), N.children.onOutletDeactivated()),
            (N.attachRef = null),
            (N.route = null));
        }
        activateChildRoutes(L, k, N) {
          const K = un(k);
          L.children.forEach((xt) => {
            this.activateRoutes(xt, K[xt.value.outlet], N),
              this.forwardEvent(new ss(xt.value.snapshot));
          }),
            L.children.length && this.forwardEvent(new _s(L.value.snapshot));
        }
        activateRoutes(L, k, N) {
          const K = L.value,
            xt = k ? k.value : null;
          if ((sn(K), K === xt))
            if (K.component) {
              const oe = N.getOrCreateContext(K.outlet);
              this.activateChildRoutes(L, k, oe.children);
            } else this.activateChildRoutes(L, k, N);
          else if (K.component) {
            const oe = N.getOrCreateContext(K.outlet);
            if (this.routeReuseStrategy.shouldAttach(K.snapshot)) {
              const ei = this.routeReuseStrategy.retrieve(K.snapshot);
              this.routeReuseStrategy.store(K.snapshot, null),
                oe.children.onOutletReAttached(ei.contexts),
                (oe.attachRef = ei.componentRef),
                (oe.route = ei.route.value),
                oe.outlet && oe.outlet.attach(ei.componentRef, ei.route.value),
                sn(ei.route.value),
                this.activateChildRoutes(L, null, oe.children);
            } else {
              const ei = Fr(K.snapshot);
              (oe.attachRef = null),
                (oe.route = K),
                (oe.injector = ei),
                oe.outlet && oe.outlet.activateWith(K, oe.injector),
                this.activateChildRoutes(L, null, oe.children);
            }
          } else this.activateChildRoutes(L, null, N);
        }
      }
      class zl {
        constructor(L) {
          (this.path = L), (this.route = this.path[this.path.length - 1]);
        }
      }
      class to {
        constructor(L, k) {
          (this.component = L), (this.route = k);
        }
      }
      function Eo(I, L, k) {
        const N = I._root;
        return sr(N, L ? L._root : null, k, [N.value]);
      }
      function rr(I, L) {
        const k = Symbol(),
          N = L.get(I, k);
        return N === k
          ? "function" != typeof I || (0, s.Z0I)(I)
            ? L.get(I)
            : I
          : N;
      }
      function sr(
        I,
        L,
        k,
        N,
        K = { canDeactivateChecks: [], canActivateChecks: [] },
      ) {
        const xt = un(L);
        return (
          I.children.forEach((oe) => {
            (function Ro(
              I,
              L,
              k,
              N,
              K = { canDeactivateChecks: [], canActivateChecks: [] },
            ) {
              const xt = I.value,
                oe = L ? L.value : null,
                ei = k ? k.getContext(I.value.outlet) : null;
              if (oe && xt.routeConfig === oe.routeConfig) {
                const Ke = (function js(I, L, k) {
                  if ("function" == typeof k) return k(I, L);
                  switch (k) {
                    case "pathParamsChange":
                      return !Ct(I.url, L.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !Ct(I.url, L.url) || !ri(I.queryParams, L.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !In(I, L) || !ri(I.queryParams, L.queryParams);
                    default:
                      return !In(I, L);
                  }
                })(oe, xt, xt.routeConfig.runGuardsAndResolvers);
                Ke
                  ? K.canActivateChecks.push(new zl(N))
                  : ((xt.data = oe.data),
                    (xt._resolvedData = oe._resolvedData)),
                  sr(I, L, xt.component ? (ei ? ei.children : null) : k, N, K),
                  Ke &&
                    ei &&
                    ei.outlet &&
                    ei.outlet.isActivated &&
                    K.canDeactivateChecks.push(new to(ei.outlet.component, oe));
              } else
                oe && vr(L, ei, K),
                  K.canActivateChecks.push(new zl(N)),
                  sr(
                    I,
                    null,
                    xt.component ? (ei ? ei.children : null) : k,
                    N,
                    K,
                  );
            })(oe, xt[oe.value.outlet], k, N.concat([oe.value]), K),
              delete xt[oe.value.outlet];
          }),
          Object.entries(xt).forEach(([oe, ei]) => vr(ei, k.getContext(oe), K)),
          K
        );
      }
      function vr(I, L, k) {
        const N = un(I),
          K = I.value;
        Object.entries(N).forEach(([xt, oe]) => {
          vr(oe, K.component ? (L ? L.children.getContext(xt) : null) : L, k);
        }),
          k.canDeactivateChecks.push(
            new to(
              K.component && L && L.outlet && L.outlet.isActivated
                ? L.outlet.component
                : null,
              K,
            ),
          );
      }
      function vs(I) {
        return "function" == typeof I;
      }
      function hn(I) {
        return I instanceof B || "EmptyError" === I?.name;
      }
      const Po = Symbol("INITIAL_VALUE");
      function Jo() {
        return (0, We.w)((I) =>
          (0, lt.a)(I.map((L) => L.pipe((0, Re.q)(1), (0, wt.O)(Po)))).pipe(
            (0, He.U)((L) => {
              for (const k of L)
                if (!0 !== k) {
                  if (k === Po) return Po;
                  if (!1 === k || k instanceof Rt) return k;
                }
              return !0;
            }),
            (0, _t.h)((L) => L !== Po),
            (0, Re.q)(1),
          ),
        );
      }
      function xr(I) {
        return (0, _.z)(
          (0, hi.b)((L) => {
            if (oi(L)) throw Zo(0, L);
          }),
          (0, He.U)((L) => !0 === L),
        );
      }
      class Wr {
        constructor(L) {
          this.segmentGroup = L || null;
        }
      }
      class cs {
        constructor(L) {
          this.urlTree = L;
        }
      }
      function ao(I) {
        return (0, A._)(new Wr(I));
      }
      function Gs(I) {
        return (0, A._)(new cs(I));
      }
      class ys {
        constructor(L, k) {
          (this.urlSerializer = L), (this.urlTree = k);
        }
        noMatchError(L) {
          return new s.vHH(4002, !1);
        }
        lineralizeSegments(L, k) {
          let N = [],
            K = k.root;
          for (;;) {
            if (((N = N.concat(K.segments)), 0 === K.numberOfChildren))
              return (0, p.of)(N);
            if (K.numberOfChildren > 1 || !K.children[re])
              return (0, A._)(new s.vHH(4e3, !1));
            K = K.children[re];
          }
        }
        applyRedirectCommands(L, k, N) {
          return this.applyRedirectCreateUrlTree(
            k,
            this.urlSerializer.parse(k),
            L,
            N,
          );
        }
        applyRedirectCreateUrlTree(L, k, N, K) {
          const xt = this.createSegmentGroup(L, k.root, N, K);
          return new Rt(
            xt,
            this.createQueryParams(k.queryParams, this.urlTree.queryParams),
            k.fragment,
          );
        }
        createQueryParams(L, k) {
          const N = {};
          return (
            Object.entries(L).forEach(([K, xt]) => {
              if ("string" == typeof xt && xt.startsWith(":")) {
                const ei = xt.substring(1);
                N[K] = k[ei];
              } else N[K] = xt;
            }),
            N
          );
        }
        createSegmentGroup(L, k, N, K) {
          const xt = this.createSegments(L, k.segments, N, K);
          let oe = {};
          return (
            Object.entries(k.children).forEach(([ei, Ke]) => {
              oe[ei] = this.createSegmentGroup(L, Ke, N, K);
            }),
            new Lt(xt, oe)
          );
        }
        createSegments(L, k, N, K) {
          return k.map((xt) =>
            xt.path.startsWith(":")
              ? this.findPosParam(L, xt, K)
              : this.findOrReturn(xt, N),
          );
        }
        findPosParam(L, k, N) {
          const K = N[k.path.substring(1)];
          if (!K) throw new s.vHH(4001, !1);
          return K;
        }
        findOrReturn(L, k) {
          let N = 0;
          for (const K of k) {
            if (K.path === L.path) return k.splice(N), K;
            N++;
          }
          return L;
        }
      }
      const Zs = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function Ys(I, L, k, N, K) {
        const xt = ds(I, L, k);
        return xt.matched
          ? ((N = (function Co(I, L) {
              return (
                I.providers &&
                  !I._injector &&
                  (I._injector = (0, s.MMx)(
                    I.providers,
                    L,
                    `Route: ${I.path}`,
                  )),
                I._injector ?? L
              );
            })(L, N)),
            (function ar(I, L, k, N) {
              const K = L.canMatch;
              if (!K || 0 === K.length) return (0, p.of)(!0);
              const xt = K.map((oe) => {
                const ei = rr(oe, I);
                return Ne(
                  (function Et(I) {
                    return I && vs(I.canMatch);
                  })(ei)
                    ? ei.canMatch(L, k)
                    : I.runInContext(() => ei(L, k)),
                );
              });
              return (0, p.of)(xt).pipe(Jo(), xr());
            })(N, L, k).pipe((0, He.U)((oe) => (!0 === oe ? xt : { ...Zs }))))
          : (0, p.of)(xt);
      }
      function ds(I, L, k) {
        if ("" === L.path)
          return "full" === L.pathMatch && (I.hasChildren() || k.length > 0)
            ? { ...Zs }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: k,
                parameters: {},
                positionalParamSegments: {},
              };
        const K = (L.matcher || Mi)(k, I, L);
        if (!K) return { ...Zs };
        const xt = {};
        Object.entries(K.posParams ?? {}).forEach(([ei, Ke]) => {
          xt[ei] = Ke.path;
        });
        const oe =
          K.consumed.length > 0
            ? { ...xt, ...K.consumed[K.consumed.length - 1].parameters }
            : xt;
        return {
          matched: !0,
          consumedSegments: K.consumed,
          remainingSegments: k.slice(K.consumed.length),
          parameters: oe,
          positionalParamSegments: K.posParams ?? {},
        };
      }
      function ha(I, L, k, N) {
        return k.length > 0 &&
          (function ol(I, L, k) {
            return k.some((N) => fa(I, L, N) && Do(N) !== re);
          })(I, k, N)
          ? {
              segmentGroup: new Lt(L, Oa(N, new Lt(k, I.children))),
              slicedSegments: [],
            }
          : 0 === k.length &&
              (function Gl(I, L, k) {
                return k.some((N) => fa(I, L, N));
              })(I, k, N)
            ? {
                segmentGroup: new Lt(I.segments, Hl(I, 0, k, N, I.children)),
                slicedSegments: k,
              }
            : {
                segmentGroup: new Lt(I.segments, I.children),
                slicedSegments: k,
              };
      }
      function Hl(I, L, k, N, K) {
        const xt = {};
        for (const oe of N)
          if (fa(I, k, oe) && !K[Do(oe)]) {
            const ei = new Lt([], {});
            xt[Do(oe)] = ei;
          }
        return { ...K, ...xt };
      }
      function Oa(I, L) {
        const k = {};
        k[re] = L;
        for (const N of I)
          if ("" === N.path && Do(N) !== re) {
            const K = new Lt([], {});
            k[Do(N)] = K;
          }
        return k;
      }
      function fa(I, L, k) {
        return (
          (!(I.hasChildren() || L.length > 0) || "full" !== k.pathMatch) &&
          "" === k.path
        );
      }
      class Ra {
        constructor(L, k, N, K, xt, oe, ei) {
          (this.injector = L),
            (this.configLoader = k),
            (this.rootComponentType = N),
            (this.config = K),
            (this.urlTree = xt),
            (this.paramsInheritanceStrategy = oe),
            (this.urlSerializer = ei),
            (this.allowRedirects = !0),
            (this.applyRedirects = new ys(this.urlSerializer, this.urlTree));
        }
        noMatchError(L) {
          return new s.vHH(4002, !1);
        }
        recognize() {
          const L = ha(this.urlTree.root, [], [], this.config).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            L,
            re,
          ).pipe(
            (0, Si.K)((k) => {
              if (k instanceof cs)
                return (
                  (this.allowRedirects = !1),
                  (this.urlTree = k.urlTree),
                  this.match(k.urlTree)
                );
              throw k instanceof Wr ? this.noMatchError(k) : k;
            }),
            (0, He.U)((k) => {
              const N = new Mr(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  re,
                  this.rootComponentType,
                  null,
                  {},
                ),
                K = new on(N, k),
                xt = new Vo("", K),
                oe = (function pe(I, L, k = null, N = null) {
                  return tt(ne(I), L, k, N);
                })(N, [], this.urlTree.queryParams, this.urlTree.fragment);
              return (
                (oe.queryParams = this.urlTree.queryParams),
                (xt.url = this.urlSerializer.serialize(oe)),
                this.inheritParamsAndData(xt._root),
                { state: xt, tree: oe }
              );
            }),
          );
        }
        match(L) {
          return this.processSegmentGroup(
            this.injector,
            this.config,
            L.root,
            re,
          ).pipe(
            (0, Si.K)((N) => {
              throw N instanceof Wr ? this.noMatchError(N) : N;
            }),
          );
        }
        inheritParamsAndData(L) {
          const k = L.value,
            N = Rr(k, this.paramsInheritanceStrategy);
          (k.params = Object.freeze(N.params)),
            (k.data = Object.freeze(N.data)),
            L.children.forEach((K) => this.inheritParamsAndData(K));
        }
        processSegmentGroup(L, k, N, K) {
          return 0 === N.segments.length && N.hasChildren()
            ? this.processChildren(L, k, N)
            : this.processSegment(L, k, N, N.segments, K, !0);
        }
        processChildren(L, k, N) {
          const K = [];
          for (const xt of Object.keys(N.children))
            "primary" === xt ? K.unshift(xt) : K.push(xt);
          return (0, C.D)(K).pipe(
            (0, Ge.b)((xt) => {
              const oe = N.children[xt],
                ei = (function _r(I, L) {
                  const k = I.filter((N) => Do(N) === L);
                  return k.push(...I.filter((N) => Do(N) !== L)), k;
                })(k, xt);
              return this.processSegmentGroup(L, ei, oe, xt);
            }),
            (function qi(I, L) {
              return (0, Pt.e)(
                (function Vi(I, L, k, N, K) {
                  return (xt, oe) => {
                    let ei = k,
                      Ke = L,
                      Bi = 0;
                    xt.subscribe(
                      (0, ee.x)(
                        oe,
                        (gn) => {
                          const Hn = Bi++;
                          (Ke = ei ? I(Ke, gn, Hn) : ((ei = !0), gn)),
                            N && oe.next(Ke);
                        },
                        K &&
                          (() => {
                            ei && oe.next(Ke), oe.complete();
                          }),
                      ),
                    );
                  };
                })(I, L, arguments.length >= 2, !0),
              );
            })((xt, oe) => (xt.push(...oe), xt)),
            Kt(null),
            (function Fe(I, L) {
              const k = arguments.length >= 2;
              return (N) =>
                N.pipe(
                  I ? (0, _t.h)((K, xt) => I(K, xt, N)) : ie.y,
                  Ie(1),
                  k ? Kt(L) : ze(() => new B()),
                );
            })(),
            (0, St.z)((xt) => {
              if (null === xt) return ao(N);
              const oe = qr(xt);
              return (
                (function Ec(I) {
                  I.sort((L, k) =>
                    L.value.outlet === re
                      ? -1
                      : k.value.outlet === re
                        ? 1
                        : L.value.outlet.localeCompare(k.value.outlet),
                  );
                })(oe),
                (0, p.of)(oe)
              );
            }),
          );
        }
        processSegment(L, k, N, K, xt, oe) {
          return (0, C.D)(k).pipe(
            (0, Ge.b)((ei) =>
              this.processSegmentAgainstRoute(
                ei._injector ?? L,
                k,
                ei,
                N,
                K,
                xt,
                oe,
              ).pipe(
                (0, Si.K)((Ke) => {
                  if (Ke instanceof Wr) return (0, p.of)(null);
                  throw Ke;
                }),
              ),
            ),
            vi((ei) => !!ei),
            (0, Si.K)((ei) => {
              if (hn(ei))
                return (function xs(I, L, k) {
                  return 0 === L.length && !I.children[k];
                })(N, K, xt)
                  ? (0, p.of)([])
                  : ao(N);
              throw ei;
            }),
          );
        }
        processSegmentAgainstRoute(L, k, N, K, xt, oe, ei) {
          return (function Ia(I, L, k, N) {
            return (
              !!(Do(I) === N || (N !== re && fa(L, k, I))) &&
              ("**" === I.path || ds(L, I, k).matched)
            );
          })(N, K, xt, oe)
            ? void 0 === N.redirectTo
              ? this.matchSegmentAgainstRoute(L, K, N, xt, oe, ei)
              : ei && this.allowRedirects
                ? this.expandSegmentAgainstRouteUsingRedirect(
                    L,
                    K,
                    k,
                    N,
                    xt,
                    oe,
                  )
                : ao(K)
            : ao(K);
        }
        expandSegmentAgainstRouteUsingRedirect(L, k, N, K, xt, oe) {
          return "**" === K.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                L,
                N,
                K,
                oe,
              )
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                L,
                k,
                N,
                K,
                xt,
                oe,
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(L, k, N, K) {
          const xt = this.applyRedirects.applyRedirectCommands(
            [],
            N.redirectTo,
            {},
          );
          return N.redirectTo.startsWith("/")
            ? Gs(xt)
            : this.applyRedirects.lineralizeSegments(N, xt).pipe(
                (0, St.z)((oe) => {
                  const ei = new Lt(oe, {});
                  return this.processSegment(L, k, ei, oe, K, !1);
                }),
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(L, k, N, K, xt, oe) {
          const {
            matched: ei,
            consumedSegments: Ke,
            remainingSegments: Bi,
            positionalParamSegments: gn,
          } = ds(k, K, xt);
          if (!ei) return ao(k);
          const Hn = this.applyRedirects.applyRedirectCommands(
            Ke,
            K.redirectTo,
            gn,
          );
          return K.redirectTo.startsWith("/")
            ? Gs(Hn)
            : this.applyRedirects
                .lineralizeSegments(K, Hn)
                .pipe(
                  (0, St.z)((Mn) =>
                    this.processSegment(L, N, k, Mn.concat(Bi), oe, !1),
                  ),
                );
        }
        matchSegmentAgainstRoute(L, k, N, K, xt, oe) {
          let ei;
          if ("**" === N.path) {
            const Ke = K.length > 0 ? Be(K).parameters : {},
              Bi = new Mr(
                K,
                Ke,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                Zl(N),
                Do(N),
                N.component ?? N._loadedComponent ?? null,
                N,
                Ac(N),
              );
            (ei = (0, p.of)({
              snapshot: Bi,
              consumedSegments: [],
              remainingSegments: [],
            })),
              (k.children = {});
          } else
            ei = Ys(k, N, K, L).pipe(
              (0, He.U)(
                ({
                  matched: Ke,
                  consumedSegments: Bi,
                  remainingSegments: gn,
                  parameters: Hn,
                }) =>
                  Ke
                    ? {
                        snapshot: new Mr(
                          Bi,
                          Hn,
                          Object.freeze({ ...this.urlTree.queryParams }),
                          this.urlTree.fragment,
                          Zl(N),
                          Do(N),
                          N.component ?? N._loadedComponent ?? null,
                          N,
                          Ac(N),
                        ),
                        consumedSegments: Bi,
                        remainingSegments: gn,
                      }
                    : null,
              ),
            );
          return ei.pipe(
            (0, We.w)((Ke) =>
              null === Ke
                ? ao(k)
                : this.getChildConfig((L = N._injector ?? L), N, K).pipe(
                    (0, We.w)(({ routes: Bi }) => {
                      const gn = N._loadedInjector ?? L,
                        {
                          snapshot: Hn,
                          consumedSegments: Mn,
                          remainingSegments: br,
                        } = Ke,
                        { segmentGroup: rn, slicedSegments: Ao } = ha(
                          k,
                          Mn,
                          br,
                          Bi,
                        );
                      if (0 === Ao.length && rn.hasChildren())
                        return this.processChildren(gn, Bi, rn).pipe(
                          (0, He.U)((qs) =>
                            null === qs ? null : [new on(Hn, qs)],
                          ),
                        );
                      if (0 === Bi.length && 0 === Ao.length)
                        return (0, p.of)([new on(Hn, [])]);
                      const _a = Do(N) === xt;
                      return this.processSegment(
                        gn,
                        Bi,
                        rn,
                        Ao,
                        _a ? re : xt,
                        !0,
                      ).pipe((0, He.U)((qs) => [new on(Hn, qs)]));
                    }),
                  ),
            ),
          );
        }
        getChildConfig(L, k, N) {
          return k.children
            ? (0, p.of)({ routes: k.children, injector: L })
            : k.loadChildren
              ? void 0 !== k._loadedRoutes
                ? (0, p.of)({
                    routes: k._loadedRoutes,
                    injector: k._loadedInjector,
                  })
                : (function Ta(I, L, k, N) {
                    const K = L.canLoad;
                    if (void 0 === K || 0 === K.length) return (0, p.of)(!0);
                    const xt = K.map((oe) => {
                      const ei = rr(oe, I);
                      return Ne(
                        (function da(I) {
                          return I && vs(I.canLoad);
                        })(ei)
                          ? ei.canLoad(L, k)
                          : I.runInContext(() => ei(L, k)),
                      );
                    });
                    return (0, p.of)(xt).pipe(Jo(), xr());
                  })(L, k, N).pipe(
                    (0, St.z)((K) =>
                      K
                        ? this.configLoader.loadChildren(L, k).pipe(
                            (0, hi.b)((xt) => {
                              (k._loadedRoutes = xt.routes),
                                (k._loadedInjector = xt.injector);
                            }),
                          )
                        : (function Mc(I) {
                            return (0, A._)(bo(!1, 3));
                          })(),
                    ),
                  )
              : (0, p.of)({ routes: [], injector: L });
        }
      }
      function Sc(I) {
        const L = I.value.routeConfig;
        return L && "" === L.path;
      }
      function qr(I) {
        const L = [],
          k = new Set();
        for (const N of I) {
          if (!Sc(N)) {
            L.push(N);
            continue;
          }
          const K = L.find(
            (xt) => N.value.routeConfig === xt.value.routeConfig,
          );
          void 0 !== K ? (K.children.push(...N.children), k.add(K)) : L.push(N);
        }
        for (const N of k) {
          const K = qr(N.children);
          L.push(new on(N.value, K));
        }
        return L.filter((N) => !k.has(N));
      }
      function Zl(I) {
        return I.data || {};
      }
      function Ac(I) {
        return I.resolve || {};
      }
      function Cs(I) {
        return "string" == typeof I.title || null === I.title;
      }
      function R(I) {
        return (0, We.w)((L) => {
          const k = I(L);
          return k ? (0, C.D)(k).pipe((0, He.U)(() => L)) : (0, p.of)(L);
        });
      }
      const ht = new s.OlP("ROUTES");
      let G = (() => {
        class I {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = (0, s.f3M)(s.Sil));
          }
          loadComponent(k) {
            if (this.componentLoaders.get(k))
              return this.componentLoaders.get(k);
            if (k._loadedComponent) return (0, p.of)(k._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(k);
            const N = Ne(k.loadComponent()).pipe(
                (0, He.U)(ni),
                (0, hi.b)((xt) => {
                  this.onLoadEndListener && this.onLoadEndListener(k),
                    (k._loadedComponent = xt);
                }),
                (0, Ue.x)(() => {
                  this.componentLoaders.delete(k);
                }),
              ),
              K = new gt.c(N, () => new Jt.x()).pipe((0, Ft.x)());
            return this.componentLoaders.set(k, K), K;
          }
          loadChildren(k, N) {
            if (this.childrenLoaders.get(N)) return this.childrenLoaders.get(N);
            if (N._loadedRoutes)
              return (0, p.of)({
                routes: N._loadedRoutes,
                injector: N._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(N);
            const xt = (function nt(I, L, k, N) {
                return Ne(I.loadChildren()).pipe(
                  (0, He.U)(ni),
                  (0, St.z)((K) =>
                    K instanceof s.YKP || Array.isArray(K)
                      ? (0, p.of)(K)
                      : (0, C.D)(L.compileModuleAsync(K)),
                  ),
                  (0, He.U)((K) => {
                    N && N(I);
                    let xt,
                      oe,
                      ei = !1;
                    return (
                      Array.isArray(K)
                        ? ((oe = K), !0)
                        : ((xt = K.create(k).injector),
                          (oe = xt
                            .get(ht, [], { optional: !0, self: !0 })
                            .flat())),
                      { routes: oe.map(so), injector: xt }
                    );
                  }),
                );
              })(N, this.compiler, k, this.onLoadEndListener).pipe(
                (0, Ue.x)(() => {
                  this.childrenLoaders.delete(N);
                }),
              ),
              oe = new gt.c(xt, () => new Jt.x()).pipe((0, Ft.x)());
            return this.childrenLoaders.set(N, oe), oe;
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: I.ɵfac,
            providedIn: "root",
          }));
        }
        return I;
      })();
      function ni(I) {
        return (function ce(I) {
          return I && "object" == typeof I && "default" in I;
        })(I)
          ? I.default
          : I;
      }
      let pi = (() => {
        class I {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.currentTransition = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new Jt.x()),
              (this.transitionAbortSubject = new Jt.x()),
              (this.configLoader = (0, s.f3M)(G)),
              (this.environmentInjector = (0, s.f3M)(s.lqb)),
              (this.urlSerializer = (0, s.f3M)(Nt)),
              (this.rootContexts = (0, s.f3M)(Li)),
              (this.inputBindingEnabled =
                null !== (0, s.f3M)(eo, { optional: !0 })),
              (this.navigationId = 0),
              (this.afterPreactivation = () => (0, p.of)(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (K) =>
                this.events.next(new ir(K))),
              (this.configLoader.onLoadStartListener = (K) =>
                this.events.next(new Vs(K)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(k) {
            const N = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...k, id: N });
          }
          setupNavigations(k, N, K) {
            return (
              (this.transitions = new at.X({
                id: 0,
                currentUrlTree: N,
                currentRawUrl: N,
                currentBrowserUrl: N,
                extractedUrl: k.urlHandlingStrategy.extract(N),
                urlAfterRedirects: k.urlHandlingStrategy.extract(N),
                rawUrl: N,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: An,
                restoredState: null,
                currentSnapshot: K.snapshot,
                targetSnapshot: null,
                currentRouterState: K,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                (0, _t.h)((xt) => 0 !== xt.id),
                (0, He.U)((xt) => ({
                  ...xt,
                  extractedUrl: k.urlHandlingStrategy.extract(xt.rawUrl),
                })),
                (0, We.w)((xt) => {
                  this.currentTransition = xt;
                  let oe = !1,
                    ei = !1;
                  return (0, p.of)(xt).pipe(
                    (0, hi.b)((Ke) => {
                      this.currentNavigation = {
                        id: Ke.id,
                        initialUrl: Ke.rawUrl,
                        extractedUrl: Ke.extractedUrl,
                        trigger: Ke.source,
                        extras: Ke.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    (0, We.w)((Ke) => {
                      const Bi = Ke.currentBrowserUrl.toString(),
                        gn =
                          !k.navigated ||
                          Ke.extractedUrl.toString() !== Bi ||
                          Bi !== Ke.currentUrlTree.toString();
                      if (
                        !gn &&
                        "reload" !==
                          (Ke.extras.onSameUrlNavigation ??
                            k.onSameUrlNavigation)
                      ) {
                        const Mn = "";
                        return (
                          this.events.next(
                            new go(
                              Ke.id,
                              this.urlSerializer.serialize(Ke.rawUrl),
                              Mn,
                              0,
                            ),
                          ),
                          Ke.resolve(null),
                          jt.E
                        );
                      }
                      if (k.urlHandlingStrategy.shouldProcessUrl(Ke.rawUrl))
                        return (0, p.of)(Ke).pipe(
                          (0, We.w)((Mn) => {
                            const br = this.transitions?.getValue();
                            return (
                              this.events.next(
                                new uo(
                                  Mn.id,
                                  this.urlSerializer.serialize(Mn.extractedUrl),
                                  Mn.source,
                                  Mn.restoredState,
                                ),
                              ),
                              br !== this.transitions?.getValue()
                                ? jt.E
                                : Promise.resolve(Mn)
                            );
                          }),
                          (function sl(I, L, k, N, K, xt) {
                            return (0, St.z)((oe) =>
                              (function ws(
                                I,
                                L,
                                k,
                                N,
                                K,
                                xt,
                                oe = "emptyOnly",
                              ) {
                                return new Ra(
                                  I,
                                  L,
                                  k,
                                  N,
                                  K,
                                  oe,
                                  xt,
                                ).recognize();
                              })(I, L, k, N, oe.extractedUrl, K, xt).pipe(
                                (0, He.U)(({ state: ei, tree: Ke }) => ({
                                  ...oe,
                                  targetSnapshot: ei,
                                  urlAfterRedirects: Ke,
                                })),
                              ),
                            );
                          })(
                            this.environmentInjector,
                            this.configLoader,
                            this.rootComponentType,
                            k.config,
                            this.urlSerializer,
                            k.paramsInheritanceStrategy,
                          ),
                          (0, hi.b)((Mn) => {
                            (xt.targetSnapshot = Mn.targetSnapshot),
                              (xt.urlAfterRedirects = Mn.urlAfterRedirects),
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: Mn.urlAfterRedirects,
                              });
                            const br = new Kn(
                              Mn.id,
                              this.urlSerializer.serialize(Mn.extractedUrl),
                              this.urlSerializer.serialize(
                                Mn.urlAfterRedirects,
                              ),
                              Mn.targetSnapshot,
                            );
                            this.events.next(br);
                          }),
                        );
                      if (
                        gn &&
                        k.urlHandlingStrategy.shouldProcessUrl(Ke.currentRawUrl)
                      ) {
                        const {
                            id: Mn,
                            extractedUrl: br,
                            source: rn,
                            restoredState: Ao,
                            extras: _a,
                          } = Ke,
                          qs = new uo(
                            Mn,
                            this.urlSerializer.serialize(br),
                            rn,
                            Ao,
                          );
                        this.events.next(qs);
                        const Va = nr(0, this.rootComponentType).snapshot;
                        return (
                          (this.currentTransition = xt =
                            {
                              ...Ke,
                              targetSnapshot: Va,
                              urlAfterRedirects: br,
                              extras: {
                                ..._a,
                                skipLocationChange: !1,
                                replaceUrl: !1,
                              },
                            }),
                          (0, p.of)(xt)
                        );
                      }
                      {
                        const Mn = "";
                        return (
                          this.events.next(
                            new go(
                              Ke.id,
                              this.urlSerializer.serialize(Ke.extractedUrl),
                              Mn,
                              1,
                            ),
                          ),
                          Ke.resolve(null),
                          jt.E
                        );
                      }
                    }),
                    (0, hi.b)((Ke) => {
                      const Bi = new Ir(
                        Ke.id,
                        this.urlSerializer.serialize(Ke.extractedUrl),
                        this.urlSerializer.serialize(Ke.urlAfterRedirects),
                        Ke.targetSnapshot,
                      );
                      this.events.next(Bi);
                    }),
                    (0, He.U)(
                      (Ke) => (
                        (this.currentTransition = xt =
                          {
                            ...Ke,
                            guards: Eo(
                              Ke.targetSnapshot,
                              Ke.currentSnapshot,
                              this.rootContexts,
                            ),
                          }),
                        xt
                      ),
                    ),
                    (function bs(I, L) {
                      return (0, St.z)((k) => {
                        const {
                          targetSnapshot: N,
                          currentSnapshot: K,
                          guards: {
                            canActivateChecks: xt,
                            canDeactivateChecks: oe,
                          },
                        } = k;
                        return 0 === oe.length && 0 === xt.length
                          ? (0, p.of)({ ...k, guardsResult: !0 })
                          : (function gd(I, L, k, N) {
                              return (0, C.D)(I).pipe(
                                (0, St.z)((K) =>
                                  (function ua(I, L, k, N, K) {
                                    const xt =
                                      L && L.routeConfig
                                        ? L.routeConfig.canDeactivate
                                        : null;
                                    if (!xt || 0 === xt.length)
                                      return (0, p.of)(!0);
                                    const oe = xt.map((ei) => {
                                      const Ke = Fr(L) ?? K,
                                        Bi = rr(ei, Ke);
                                      return Ne(
                                        (function z(I) {
                                          return I && vs(I.canDeactivate);
                                        })(Bi)
                                          ? Bi.canDeactivate(I, L, k, N)
                                          : Ke.runInContext(() =>
                                              Bi(I, L, k, N),
                                            ),
                                      ).pipe(vi());
                                    });
                                    return (0, p.of)(oe).pipe(Jo());
                                  })(K.component, K.route, k, L, N),
                                ),
                                vi((K) => !0 !== K, !0),
                              );
                            })(oe, N, K, I).pipe(
                              (0, St.z)((ei) =>
                                ei &&
                                (function ka(I) {
                                  return "boolean" == typeof I;
                                })(ei)
                                  ? (function Hs(I, L, k, N) {
                                      return (0, C.D)(L).pipe(
                                        (0, Ge.b)((K) =>
                                          (0, kt.z)(
                                            (function Ul(I, L) {
                                              return (
                                                null !== I && L && L(new Zr(I)),
                                                (0, p.of)(!0)
                                              );
                                            })(K.route.parent, N),
                                            (function Dc(I, L) {
                                              return (
                                                null !== I && L && L(new ro(I)),
                                                (0, p.of)(!0)
                                              );
                                            })(K.route, N),
                                            (function jl(I, L, k) {
                                              const N = L[L.length - 1],
                                                xt = L.slice(0, L.length - 1)
                                                  .reverse()
                                                  .map((oe) =>
                                                    (function Us(I) {
                                                      const L = I.routeConfig
                                                        ? I.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return L && 0 !== L.length
                                                        ? { node: I, guards: L }
                                                        : null;
                                                    })(oe),
                                                  )
                                                  .filter((oe) => null !== oe)
                                                  .map((oe) =>
                                                    (0, $.P)(() => {
                                                      const ei = oe.guards.map(
                                                        (Ke) => {
                                                          const Bi =
                                                              Fr(oe.node) ?? k,
                                                            gn = rr(Ke, Bi);
                                                          return Ne(
                                                            (function st(I) {
                                                              return (
                                                                I &&
                                                                vs(
                                                                  I.canActivateChild,
                                                                )
                                                              );
                                                            })(gn)
                                                              ? gn.canActivateChild(
                                                                  N,
                                                                  I,
                                                                )
                                                              : Bi.runInContext(
                                                                  () =>
                                                                    gn(N, I),
                                                                ),
                                                          ).pipe(vi());
                                                        },
                                                      );
                                                      return (0, p.of)(ei).pipe(
                                                        Jo(),
                                                      );
                                                    }),
                                                  );
                                              return (0, p.of)(xt).pipe(Jo());
                                            })(I, K.path, k),
                                            (function ls(I, L, k) {
                                              const N = L.routeConfig
                                                ? L.routeConfig.canActivate
                                                : null;
                                              if (!N || 0 === N.length)
                                                return (0, p.of)(!0);
                                              const K = N.map((xt) =>
                                                (0, $.P)(() => {
                                                  const oe = Fr(L) ?? k,
                                                    ei = rr(xt, oe);
                                                  return Ne(
                                                    (function J(I) {
                                                      return (
                                                        I && vs(I.canActivate)
                                                      );
                                                    })(ei)
                                                      ? ei.canActivate(L, I)
                                                      : oe.runInContext(() =>
                                                          ei(L, I),
                                                        ),
                                                  ).pipe(vi());
                                                }),
                                              );
                                              return (0, p.of)(K).pipe(Jo());
                                            })(I, K.route, k),
                                          ),
                                        ),
                                        vi((K) => !0 !== K, !0),
                                      );
                                    })(N, xt, I, L)
                                  : (0, p.of)(ei),
                              ),
                              (0, He.U)((ei) => ({ ...k, guardsResult: ei })),
                            );
                      });
                    })(this.environmentInjector, (Ke) => this.events.next(Ke)),
                    (0, hi.b)((Ke) => {
                      if (
                        ((xt.guardsResult = Ke.guardsResult),
                        oi(Ke.guardsResult))
                      )
                        throw Zo(0, Ke.guardsResult);
                      const Bi = new Gr(
                        Ke.id,
                        this.urlSerializer.serialize(Ke.extractedUrl),
                        this.urlSerializer.serialize(Ke.urlAfterRedirects),
                        Ke.targetSnapshot,
                        !!Ke.guardsResult,
                      );
                      this.events.next(Bi);
                    }),
                    (0, _t.h)(
                      (Ke) =>
                        !!Ke.guardsResult ||
                        (this.cancelNavigationTransition(Ke, "", 3), !1),
                    ),
                    R((Ke) => {
                      if (Ke.guards.canActivateChecks.length)
                        return (0, p.of)(Ke).pipe(
                          (0, hi.b)((Bi) => {
                            const gn = new Sa(
                              Bi.id,
                              this.urlSerializer.serialize(Bi.extractedUrl),
                              this.urlSerializer.serialize(
                                Bi.urlAfterRedirects,
                              ),
                              Bi.targetSnapshot,
                            );
                            this.events.next(gn);
                          }),
                          (0, We.w)((Bi) => {
                            let gn = !1;
                            return (0, p.of)(Bi).pipe(
                              (function al(I, L) {
                                return (0, St.z)((k) => {
                                  const {
                                    targetSnapshot: N,
                                    guards: { canActivateChecks: K },
                                  } = k;
                                  if (!K.length) return (0, p.of)(k);
                                  let xt = 0;
                                  return (0, C.D)(K).pipe(
                                    (0, Ge.b)((oe) =>
                                      (function Yl(I, L, k, N) {
                                        const K = I.routeConfig,
                                          xt = I._resolve;
                                        return (
                                          void 0 !== K?.title &&
                                            !Cs(K) &&
                                            (xt[Le] = K.title),
                                          (function Pa(I, L, k, N) {
                                            const K = (function Lr(I) {
                                              return [
                                                ...Object.keys(I),
                                                ...Object.getOwnPropertySymbols(
                                                  I,
                                                ),
                                              ];
                                            })(I);
                                            if (0 === K.length)
                                              return (0, p.of)({});
                                            const xt = {};
                                            return (0, C.D)(K).pipe(
                                              (0, St.z)((oe) =>
                                                (function $s(I, L, k, N) {
                                                  const K = Fr(L) ?? N,
                                                    xt = rr(I, K);
                                                  return Ne(
                                                    xt.resolve
                                                      ? xt.resolve(L, k)
                                                      : K.runInContext(() =>
                                                          xt(L, k),
                                                        ),
                                                  );
                                                })(I[oe], L, k, N).pipe(
                                                  vi(),
                                                  (0, hi.b)((ei) => {
                                                    xt[oe] = ei;
                                                  }),
                                                ),
                                              ),
                                              Ie(1),
                                              (0, xe.h)(xt),
                                              (0, Si.K)((oe) =>
                                                hn(oe) ? jt.E : (0, A._)(oe),
                                              ),
                                            );
                                          })(xt, I, L, N).pipe(
                                            (0, He.U)(
                                              (oe) => (
                                                (I._resolvedData = oe),
                                                (I.data = Rr(I, k).resolve),
                                                K &&
                                                  Cs(K) &&
                                                  (I.data[Le] = K.title),
                                                null
                                              ),
                                            ),
                                          )
                                        );
                                      })(oe.route, N, I, L),
                                    ),
                                    (0, hi.b)(() => xt++),
                                    Ie(1),
                                    (0, St.z)((oe) =>
                                      xt === K.length ? (0, p.of)(k) : jt.E,
                                    ),
                                  );
                                });
                              })(
                                k.paramsInheritanceStrategy,
                                this.environmentInjector,
                              ),
                              (0, hi.b)({
                                next: () => (gn = !0),
                                complete: () => {
                                  gn ||
                                    this.cancelNavigationTransition(Bi, "", 2);
                                },
                              }),
                            );
                          }),
                          (0, hi.b)((Bi) => {
                            const gn = new rs(
                              Bi.id,
                              this.urlSerializer.serialize(Bi.extractedUrl),
                              this.urlSerializer.serialize(
                                Bi.urlAfterRedirects,
                              ),
                              Bi.targetSnapshot,
                            );
                            this.events.next(gn);
                          }),
                        );
                    }),
                    R((Ke) => {
                      const Bi = (gn) => {
                        const Hn = [];
                        gn.routeConfig?.loadComponent &&
                          !gn.routeConfig._loadedComponent &&
                          Hn.push(
                            this.configLoader
                              .loadComponent(gn.routeConfig)
                              .pipe(
                                (0, hi.b)((Mn) => {
                                  gn.component = Mn;
                                }),
                                (0, He.U)(() => {}),
                              ),
                          );
                        for (const Mn of gn.children) Hn.push(...Bi(Mn));
                        return Hn;
                      };
                      return (0, lt.a)(Bi(Ke.targetSnapshot.root)).pipe(
                        Kt(),
                        (0, Re.q)(1),
                      );
                    }),
                    R(() => this.afterPreactivation()),
                    (0, He.U)((Ke) => {
                      const Bi = (function Vn(I, L, k) {
                        const N = wo(I, L._root, k ? k._root : void 0);
                        return new Xn(N, L);
                      })(
                        k.routeReuseStrategy,
                        Ke.targetSnapshot,
                        Ke.currentRouterState,
                      );
                      return (
                        (this.currentTransition = xt =
                          { ...Ke, targetRouterState: Bi }),
                        xt
                      );
                    }),
                    (0, hi.b)(() => {
                      this.events.next(new Dt());
                    }),
                    ((I, L, k, N) =>
                      (0, He.U)(
                        (K) => (
                          new Mo(
                            L,
                            K.targetRouterState,
                            K.currentRouterState,
                            k,
                            N,
                          ).activate(I),
                          K
                        ),
                      ))(
                      this.rootContexts,
                      k.routeReuseStrategy,
                      (Ke) => this.events.next(Ke),
                      this.inputBindingEnabled,
                    ),
                    (0, Re.q)(1),
                    (0, hi.b)({
                      next: (Ke) => {
                        (oe = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          this.events.next(
                            new Tn(
                              Ke.id,
                              this.urlSerializer.serialize(Ke.extractedUrl),
                              this.urlSerializer.serialize(
                                Ke.urlAfterRedirects,
                              ),
                            ),
                          ),
                          k.titleStrategy?.updateTitle(
                            Ke.targetRouterState.snapshot,
                          ),
                          Ke.resolve(!0);
                      },
                      complete: () => {
                        oe = !0;
                      },
                    }),
                    (0, Mt.R)(
                      this.transitionAbortSubject.pipe(
                        (0, hi.b)((Ke) => {
                          throw Ke;
                        }),
                      ),
                    ),
                    (0, Ue.x)(() => {
                      oe || ei || this.cancelNavigationTransition(xt, "", 1),
                        this.currentNavigation?.id === xt.id &&
                          (this.currentNavigation = null);
                    }),
                    (0, Si.K)((Ke) => {
                      if (((ei = !0), Wn(Ke)))
                        this.events.next(
                          new oo(
                            xt.id,
                            this.urlSerializer.serialize(xt.extractedUrl),
                            Ke.message,
                            Ke.cancellationCode,
                          ),
                        ),
                          (function xn(I) {
                            return Wn(I) && oi(I.url);
                          })(Ke)
                            ? this.events.next(new Pe(Ke.url))
                            : xt.resolve(!1);
                      else {
                        this.events.next(
                          new qo(
                            xt.id,
                            this.urlSerializer.serialize(xt.extractedUrl),
                            Ke,
                            xt.targetSnapshot ?? void 0,
                          ),
                        );
                        try {
                          xt.resolve(k.errorHandler(Ke));
                        } catch (Bi) {
                          xt.reject(Bi);
                        }
                      }
                      return jt.E;
                    }),
                  );
                }),
              )
            );
          }
          cancelNavigationTransition(k, N, K) {
            const xt = new oo(
              k.id,
              this.urlSerializer.serialize(k.extractedUrl),
              N,
              K,
            );
            this.events.next(xt), k.resolve(!1);
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: I.ɵfac,
            providedIn: "root",
          }));
        }
        return I;
      })();
      function $i(I) {
        return I !== An;
      }
      let Pn = (() => {
          class I {
            buildTitle(k) {
              let N,
                K = k.root;
              for (; void 0 !== K; )
                (N = this.getResolvedTitleForRoute(K) ?? N),
                  (K = K.children.find((xt) => xt.outlet === re));
              return N;
            }
            getResolvedTitleForRoute(k) {
              return k.data[Le];
            }
            static #t = (this.ɵfac = function (N) {
              return new (N || I)();
            });
            static #e = (this.ɵprov = s.Yz7({
              token: I,
              factory: function () {
                return (0, s.f3M)(Gn);
              },
              providedIn: "root",
            }));
          }
          return I;
        })(),
        Gn = (() => {
          class I extends Pn {
            constructor(k) {
              super(), (this.title = k);
            }
            updateTitle(k) {
              const N = this.buildTitle(k);
              void 0 !== N && this.title.setTitle(N);
            }
            static #t = (this.ɵfac = function (N) {
              return new (N || I)(s.LFG(Vt.Dx));
            });
            static #e = (this.ɵprov = s.Yz7({
              token: I,
              factory: I.ɵfac,
              providedIn: "root",
            }));
          }
          return I;
        })(),
        Fn = (() => {
          class I {
            static #t = (this.ɵfac = function (N) {
              return new (N || I)();
            });
            static #e = (this.ɵprov = s.Yz7({
              token: I,
              factory: function () {
                return (0, s.f3M)(zn);
              },
              providedIn: "root",
            }));
          }
          return I;
        })();
      class tn {
        shouldDetach(L) {
          return !1;
        }
        store(L, k) {}
        shouldAttach(L) {
          return !1;
        }
        retrieve(L) {
          return null;
        }
        shouldReuseRoute(L, k) {
          return L.routeConfig === k.routeConfig;
        }
      }
      let zn = (() => {
        class I extends tn {
          static #t = (this.ɵfac = (function () {
            let k;
            return function (K) {
              return (k || (k = s.n5z(I)))(K || I);
            };
          })());
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: I.ɵfac,
            providedIn: "root",
          }));
        }
        return I;
      })();
      const Bn = new s.OlP("", { providedIn: "root", factory: () => ({}) });
      let So = (() => {
          class I {
            static #t = (this.ɵfac = function (N) {
              return new (N || I)();
            });
            static #e = (this.ɵprov = s.Yz7({
              token: I,
              factory: function () {
                return (0, s.f3M)(Fo);
              },
              providedIn: "root",
            }));
          }
          return I;
        })(),
        Fo = (() => {
          class I {
            shouldProcessUrl(k) {
              return !0;
            }
            extract(k) {
              return k;
            }
            merge(k, N) {
              return k;
            }
            static #t = (this.ɵfac = function (N) {
              return new (N || I)();
            });
            static #e = (this.ɵprov = s.Yz7({
              token: I,
              factory: I.ɵfac,
              providedIn: "root",
            }));
          }
          return I;
        })();
      var Xo = (function (I) {
        return (
          (I[(I.COMPLETE = 0)] = "COMPLETE"),
          (I[(I.FAILED = 1)] = "FAILED"),
          (I[(I.REDIRECTING = 2)] = "REDIRECTING"),
          I
        );
      })(Xo || {});
      function Qr(I, L) {
        I.events
          .pipe(
            (0, _t.h)(
              (k) =>
                k instanceof Tn ||
                k instanceof oo ||
                k instanceof qo ||
                k instanceof go,
            ),
            (0, He.U)((k) =>
              k instanceof Tn || k instanceof go
                ? Xo.COMPLETE
                : k instanceof oo && (0 === k.code || 1 === k.code)
                  ? Xo.REDIRECTING
                  : Xo.FAILED,
            ),
            (0, _t.h)((k) => k !== Xo.REDIRECTING),
            (0, Re.q)(1),
          )
          .subscribe(() => {
            L();
          });
      }
      function Uo(I) {
        throw I;
      }
      function us(I, L, k) {
        return L.parse("/");
      }
      const jo = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        Sr = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let lr = (() => {
        class I {
          get navigationId() {
            return this.navigationTransitions.navigationId;
          }
          get browserPageId() {
            return "computed" !== this.canceledNavigationResolution
              ? this.currentPageId
              : (this.location.getState()?.ɵrouterPageId ?? this.currentPageId);
          }
          get events() {
            return this._events;
          }
          constructor() {
            (this.disposed = !1),
              (this.currentPageId = 0),
              (this.console = (0, s.f3M)(s.c2e)),
              (this.isNgZoneEnabled = !1),
              (this._events = new Jt.x()),
              (this.options = (0, s.f3M)(Bn, { optional: !0 }) || {}),
              (this.pendingTasks = (0, s.f3M)(s.HDt)),
              (this.errorHandler = this.options.errorHandler || Uo),
              (this.malformedUriErrorHandler =
                this.options.malformedUriErrorHandler || us),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.urlHandlingStrategy = (0, s.f3M)(So)),
              (this.routeReuseStrategy = (0, s.f3M)(Fn)),
              (this.titleStrategy = (0, s.f3M)(Pn)),
              (this.onSameUrlNavigation =
                this.options.onSameUrlNavigation || "ignore"),
              (this.paramsInheritanceStrategy =
                this.options.paramsInheritanceStrategy || "emptyOnly"),
              (this.urlUpdateStrategy =
                this.options.urlUpdateStrategy || "deferred"),
              (this.canceledNavigationResolution =
                this.options.canceledNavigationResolution || "replace"),
              (this.config = (0, s.f3M)(ht, { optional: !0 })?.flat() ?? []),
              (this.navigationTransitions = (0, s.f3M)(pi)),
              (this.urlSerializer = (0, s.f3M)(Nt)),
              (this.location = (0, s.f3M)(Ve.Ye)),
              (this.componentInputBindingEnabled = !!(0, s.f3M)(eo, {
                optional: !0,
              })),
              (this.eventsSubscription = new De.w0()),
              (this.isNgZoneEnabled =
                (0, s.f3M)(s.R0b) instanceof s.R0b && s.R0b.isInAngularZone()),
              this.resetConfig(this.config),
              (this.currentUrlTree = new Rt()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = nr(0, null)),
              this.navigationTransitions
                .setupNavigations(this, this.currentUrlTree, this.routerState)
                .subscribe(
                  (k) => {
                    (this.lastSuccessfulId = k.id),
                      (this.currentPageId = this.browserPageId);
                  },
                  (k) => {
                    this.console.warn(`Unhandled Navigation Error: ${k}`);
                  },
                ),
              this.subscribeToNavigationEvents();
          }
          subscribeToNavigationEvents() {
            const k = this.navigationTransitions.events.subscribe((N) => {
              try {
                const { currentTransition: K } = this.navigationTransitions;
                if (null === K) return void (ll(N) && this._events.next(N));
                if (N instanceof uo)
                  $i(K.source) && (this.browserUrlTree = K.extractedUrl);
                else if (N instanceof go) this.rawUrlTree = K.rawUrl;
                else if (N instanceof Kn) {
                  if ("eager" === this.urlUpdateStrategy) {
                    if (!K.extras.skipLocationChange) {
                      const xt = this.urlHandlingStrategy.merge(
                        K.urlAfterRedirects,
                        K.rawUrl,
                      );
                      this.setBrowserUrl(xt, K);
                    }
                    this.browserUrlTree = K.urlAfterRedirects;
                  }
                } else if (N instanceof Dt)
                  (this.currentUrlTree = K.urlAfterRedirects),
                    (this.rawUrlTree = this.urlHandlingStrategy.merge(
                      K.urlAfterRedirects,
                      K.rawUrl,
                    )),
                    (this.routerState = K.targetRouterState),
                    "deferred" === this.urlUpdateStrategy &&
                      (K.extras.skipLocationChange ||
                        this.setBrowserUrl(this.rawUrlTree, K),
                      (this.browserUrlTree = K.urlAfterRedirects));
                else if (N instanceof oo)
                  0 !== N.code && 1 !== N.code && (this.navigated = !0),
                    (3 === N.code || 2 === N.code) && this.restoreHistory(K);
                else if (N instanceof Pe) {
                  const xt = this.urlHandlingStrategy.merge(
                      N.url,
                      K.currentRawUrl,
                    ),
                    oe = {
                      skipLocationChange: K.extras.skipLocationChange,
                      replaceUrl:
                        "eager" === this.urlUpdateStrategy || $i(K.source),
                    };
                  this.scheduleNavigation(xt, An, null, oe, {
                    resolve: K.resolve,
                    reject: K.reject,
                    promise: K.promise,
                  });
                }
                N instanceof qo && this.restoreHistory(K, !0),
                  N instanceof Tn && (this.navigated = !0),
                  ll(N) && this._events.next(N);
              } catch (K) {
                this.navigationTransitions.transitionAbortSubject.next(K);
              }
            });
            this.eventsSubscription.add(k);
          }
          resetRootComponentType(k) {
            (this.routerState.root.component = k),
              (this.navigationTransitions.rootComponentType = k);
          }
          initialNavigation() {
            if (
              (this.setUpLocationChangeListener(),
              !this.navigationTransitions.hasRequestedNavigation)
            ) {
              const k = this.location.getState();
              this.navigateToSyncWithBrowser(this.location.path(!0), An, k);
            }
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((k) => {
                const N = "popstate" === k.type ? "popstate" : "hashchange";
                "popstate" === N &&
                  setTimeout(() => {
                    this.navigateToSyncWithBrowser(k.url, N, k.state);
                  }, 0);
              }));
          }
          navigateToSyncWithBrowser(k, N, K) {
            const xt = { replaceUrl: !0 },
              oe = K?.navigationId ? K : null;
            if (K) {
              const Ke = { ...K };
              delete Ke.navigationId,
                delete Ke.ɵrouterPageId,
                0 !== Object.keys(Ke).length && (xt.state = Ke);
            }
            const ei = this.parseUrl(k);
            this.scheduleNavigation(ei, N, oe, xt);
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.navigationTransitions.currentNavigation;
          }
          get lastSuccessfulNavigation() {
            return this.navigationTransitions.lastSuccessfulNavigation;
          }
          resetConfig(k) {
            (this.config = k.map(so)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.navigationTransitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0),
              this.eventsSubscription.unsubscribe();
          }
          createUrlTree(k, N = {}) {
            const {
                relativeTo: K,
                queryParams: xt,
                fragment: oe,
                queryParamsHandling: ei,
                preserveFragment: Ke,
              } = N,
              Bi = Ke ? this.currentUrlTree.fragment : oe;
            let Hn,
              gn = null;
            switch (ei) {
              case "merge":
                gn = { ...this.currentUrlTree.queryParams, ...xt };
                break;
              case "preserve":
                gn = this.currentUrlTree.queryParams;
                break;
              default:
                gn = xt || null;
            }
            null !== gn && (gn = this.removeEmptyProps(gn));
            try {
              Hn = ne(K ? K.snapshot : this.routerState.snapshot.root);
            } catch {
              ("string" != typeof k[0] || !k[0].startsWith("/")) && (k = []),
                (Hn = this.currentUrlTree.root);
            }
            return tt(Hn, k, gn, Bi ?? null);
          }
          navigateByUrl(k, N = { skipLocationChange: !1 }) {
            const K = oi(k) ? k : this.parseUrl(k),
              xt = this.urlHandlingStrategy.merge(K, this.rawUrlTree);
            return this.scheduleNavigation(xt, An, null, N);
          }
          navigate(k, N = { skipLocationChange: !1 }) {
            return (
              (function Zn(I) {
                for (let L = 0; L < I.length; L++)
                  if (null == I[L]) throw new s.vHH(4008, !1);
              })(k),
              this.navigateByUrl(this.createUrlTree(k, N), N)
            );
          }
          serializeUrl(k) {
            return this.urlSerializer.serialize(k);
          }
          parseUrl(k) {
            let N;
            try {
              N = this.urlSerializer.parse(k);
            } catch (K) {
              N = this.malformedUriErrorHandler(K, this.urlSerializer, k);
            }
            return N;
          }
          isActive(k, N) {
            let K;
            if (((K = !0 === N ? { ...jo } : !1 === N ? { ...Sr } : N), oi(k)))
              return Xi(this.currentUrlTree, k, K);
            const xt = this.parseUrl(k);
            return Xi(this.currentUrlTree, xt, K);
          }
          removeEmptyProps(k) {
            return Object.keys(k).reduce((N, K) => {
              const xt = k[K];
              return null != xt && (N[K] = xt), N;
            }, {});
          }
          scheduleNavigation(k, N, K, xt, oe) {
            if (this.disposed) return Promise.resolve(!1);
            let ei, Ke, Bi;
            oe
              ? ((ei = oe.resolve), (Ke = oe.reject), (Bi = oe.promise))
              : (Bi = new Promise((Hn, Mn) => {
                  (ei = Hn), (Ke = Mn);
                }));
            const gn = this.pendingTasks.add();
            return (
              Qr(this, () => {
                queueMicrotask(() => this.pendingTasks.remove(gn));
              }),
              this.navigationTransitions.handleNavigationRequest({
                source: N,
                restoredState: K,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                currentBrowserUrl: this.browserUrlTree,
                rawUrl: k,
                extras: xt,
                resolve: ei,
                reject: Ke,
                promise: Bi,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              Bi.catch((Hn) => Promise.reject(Hn))
            );
          }
          setBrowserUrl(k, N) {
            const K = this.urlSerializer.serialize(k);
            if (this.location.isCurrentPathEqualTo(K) || N.extras.replaceUrl) {
              const oe = {
                ...N.extras.state,
                ...this.generateNgRouterState(N.id, this.browserPageId),
              };
              this.location.replaceState(K, "", oe);
            } else {
              const xt = {
                ...N.extras.state,
                ...this.generateNgRouterState(N.id, this.browserPageId + 1),
              };
              this.location.go(K, "", xt);
            }
          }
          restoreHistory(k, N = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const xt = this.currentPageId - this.browserPageId;
              0 !== xt
                ? this.location.historyGo(xt)
                : this.currentUrlTree ===
                    this.getCurrentNavigation()?.finalUrl &&
                  0 === xt &&
                  (this.resetState(k),
                  (this.browserUrlTree = k.currentUrlTree),
                  this.resetUrlToCurrentUrlTree());
            } else
              "replace" === this.canceledNavigationResolution &&
                (N && this.resetState(k), this.resetUrlToCurrentUrlTree());
          }
          resetState(k) {
            (this.routerState = k.currentRouterState),
              (this.currentUrlTree = k.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                k.rawUrl,
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId,
              ),
            );
          }
          generateNgRouterState(k, N) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: k, ɵrouterPageId: N }
              : { navigationId: k };
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)();
          });
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: I.ɵfac,
            providedIn: "root",
          }));
        }
        return I;
      })();
      function ll(I) {
        return !(I instanceof Dt || I instanceof Pe);
      }
      let Ws = (() => {
          class I {
            constructor(k, N, K, xt, oe, ei) {
              (this.router = k),
                (this.route = N),
                (this.tabIndexAttribute = K),
                (this.renderer = xt),
                (this.el = oe),
                (this.locationStrategy = ei),
                (this.href = null),
                (this.commands = null),
                (this.onChanges = new Jt.x()),
                (this.preserveFragment = !1),
                (this.skipLocationChange = !1),
                (this.replaceUrl = !1);
              const Ke = oe.nativeElement.tagName?.toLowerCase();
              (this.isAnchorElement = "a" === Ke || "area" === Ke),
                this.isAnchorElement
                  ? (this.subscription = k.events.subscribe((Bi) => {
                      Bi instanceof Tn && this.updateHref();
                    }))
                  : this.setTabIndexIfNotOnNativeEl("0");
            }
            setTabIndexIfNotOnNativeEl(k) {
              null != this.tabIndexAttribute ||
                this.isAnchorElement ||
                this.applyAttributeValue("tabindex", k);
            }
            ngOnChanges(k) {
              this.isAnchorElement && this.updateHref(),
                this.onChanges.next(this);
            }
            set routerLink(k) {
              null != k
                ? ((this.commands = Array.isArray(k) ? k : [k]),
                  this.setTabIndexIfNotOnNativeEl("0"))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick(k, N, K, xt, oe) {
              return (
                !!(
                  null === this.urlTree ||
                  (this.isAnchorElement &&
                    (0 !== k ||
                      N ||
                      K ||
                      xt ||
                      oe ||
                      ("string" == typeof this.target &&
                        "_self" != this.target)))
                ) ||
                (this.router.navigateByUrl(this.urlTree, {
                  skipLocationChange: this.skipLocationChange,
                  replaceUrl: this.replaceUrl,
                  state: this.state,
                }),
                !this.isAnchorElement)
              );
            }
            ngOnDestroy() {
              this.subscription?.unsubscribe();
            }
            updateHref() {
              this.href =
                null !== this.urlTree && this.locationStrategy
                  ? this.locationStrategy?.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree),
                    )
                  : null;
              const k =
                null === this.href
                  ? null
                  : (0, s.P3R)(
                      this.href,
                      this.el.nativeElement.tagName.toLowerCase(),
                      "href",
                    );
              this.applyAttributeValue("href", k);
            }
            applyAttributeValue(k, N) {
              const K = this.renderer,
                xt = this.el.nativeElement;
              null !== N ? K.setAttribute(xt, k, N) : K.removeAttribute(xt, k);
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: this.preserveFragment,
                  });
            }
            static #t = (this.ɵfac = function (N) {
              return new (N || I)(
                s.Y36(lr),
                s.Y36(Oo),
                s.$8M("tabindex"),
                s.Y36(s.Qsj),
                s.Y36(s.SBq),
                s.Y36(Ve.S$),
              );
            });
            static #e = (this.ɵdir = s.lG2({
              type: I,
              selectors: [["", "routerLink", ""]],
              hostVars: 1,
              hostBindings: function (N, K) {
                1 & N &&
                  s.NdJ("click", function (oe) {
                    return K.onClick(
                      oe.button,
                      oe.ctrlKey,
                      oe.shiftKey,
                      oe.altKey,
                      oe.metaKey,
                    );
                  }),
                  2 & N && s.uIk("target", K.target);
              },
              inputs: {
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                state: "state",
                relativeTo: "relativeTo",
                preserveFragment: [
                  "preserveFragment",
                  "preserveFragment",
                  s.VuI,
                ],
                skipLocationChange: [
                  "skipLocationChange",
                  "skipLocationChange",
                  s.VuI,
                ],
                replaceUrl: ["replaceUrl", "replaceUrl", s.VuI],
                routerLink: "routerLink",
              },
              standalone: !0,
              features: [s.Xq5, s.TTD],
            }));
          }
          return I;
        })(),
        cr = (() => {
          class I {
            get isActive() {
              return this._isActive;
            }
            constructor(k, N, K, xt, oe) {
              (this.router = k),
                (this.element = N),
                (this.renderer = K),
                (this.cdr = xt),
                (this.link = oe),
                (this.classes = []),
                (this._isActive = !1),
                (this.routerLinkActiveOptions = { exact: !1 }),
                (this.isActiveChange = new s.vpe()),
                (this.routerEventsSubscription = k.events.subscribe((ei) => {
                  ei instanceof Tn && this.update();
                }));
            }
            ngAfterContentInit() {
              (0, p.of)(this.links.changes, (0, p.of)(null))
                .pipe((0, we.J)())
                .subscribe((k) => {
                  this.update(), this.subscribeToEachLinkOnChanges();
                });
            }
            subscribeToEachLinkOnChanges() {
              this.linkInputChangesSubscription?.unsubscribe();
              const k = [...this.links.toArray(), this.link]
                .filter((N) => !!N)
                .map((N) => N.onChanges);
              this.linkInputChangesSubscription = (0, C.D)(k)
                .pipe((0, we.J)())
                .subscribe((N) => {
                  this._isActive !== this.isLinkActive(this.router)(N) &&
                    this.update();
                });
            }
            set routerLinkActive(k) {
              const N = Array.isArray(k) ? k : k.split(" ");
              this.classes = N.filter((K) => !!K);
            }
            ngOnChanges(k) {
              this.update();
            }
            ngOnDestroy() {
              this.routerEventsSubscription.unsubscribe(),
                this.linkInputChangesSubscription?.unsubscribe();
            }
            update() {
              !this.links ||
                !this.router.navigated ||
                queueMicrotask(() => {
                  const k = this.hasActiveLinks();
                  this._isActive !== k &&
                    ((this._isActive = k),
                    this.cdr.markForCheck(),
                    this.classes.forEach((N) => {
                      k
                        ? this.renderer.addClass(this.element.nativeElement, N)
                        : this.renderer.removeClass(
                            this.element.nativeElement,
                            N,
                          );
                    }),
                    k && void 0 !== this.ariaCurrentWhenActive
                      ? this.renderer.setAttribute(
                          this.element.nativeElement,
                          "aria-current",
                          this.ariaCurrentWhenActive.toString(),
                        )
                      : this.renderer.removeAttribute(
                          this.element.nativeElement,
                          "aria-current",
                        ),
                    this.isActiveChange.emit(k));
                });
            }
            isLinkActive(k) {
              const N = (function kc(I) {
                return !!I.paths;
              })(this.routerLinkActiveOptions)
                ? this.routerLinkActiveOptions
                : this.routerLinkActiveOptions.exact || !1;
              return (K) => !!K.urlTree && k.isActive(K.urlTree, N);
            }
            hasActiveLinks() {
              const k = this.isLinkActive(this.router);
              return (this.link && k(this.link)) || this.links.some(k);
            }
            static #t = (this.ɵfac = function (N) {
              return new (N || I)(
                s.Y36(lr),
                s.Y36(s.SBq),
                s.Y36(s.Qsj),
                s.Y36(s.sBO),
                s.Y36(Ws, 8),
              );
            });
            static #e = (this.ɵdir = s.lG2({
              type: I,
              selectors: [["", "routerLinkActive", ""]],
              contentQueries: function (N, K, xt) {
                if ((1 & N && s.Suo(xt, Ws, 5), 2 & N)) {
                  let oe;
                  s.iGM((oe = s.CRH())) && (K.links = oe);
                }
              },
              inputs: {
                routerLinkActiveOptions: "routerLinkActiveOptions",
                ariaCurrentWhenActive: "ariaCurrentWhenActive",
                routerLinkActive: "routerLinkActive",
              },
              outputs: { isActiveChange: "isActiveChange" },
              exportAs: ["routerLinkActive"],
              standalone: !0,
              features: [s.TTD],
            }));
          }
          return I;
        })();
      class cl {}
      let _d = (() => {
        class I {
          constructor(k, N, K, xt, oe) {
            (this.router = k),
              (this.injector = K),
              (this.preloadingStrategy = xt),
              (this.loader = oe);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                (0, _t.h)((k) => k instanceof Tn),
                (0, Ge.b)(() => this.preload()),
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(k, N) {
            const K = [];
            for (const xt of N) {
              xt.providers &&
                !xt._injector &&
                (xt._injector = (0, s.MMx)(
                  xt.providers,
                  k,
                  `Route: ${xt.path}`,
                ));
              const oe = xt._injector ?? k,
                ei = xt._loadedInjector ?? oe;
              ((xt.loadChildren &&
                !xt._loadedRoutes &&
                void 0 === xt.canLoad) ||
                (xt.loadComponent && !xt._loadedComponent)) &&
                K.push(this.preloadConfig(oe, xt)),
                (xt.children || xt._loadedRoutes) &&
                  K.push(
                    this.processRoutes(ei, xt.children ?? xt._loadedRoutes),
                  );
            }
            return (0, C.D)(K).pipe((0, we.J)());
          }
          preloadConfig(k, N) {
            return this.preloadingStrategy.preload(N, () => {
              let K;
              K =
                N.loadChildren && void 0 === N.canLoad
                  ? this.loader.loadChildren(k, N)
                  : (0, p.of)(null);
              const xt = K.pipe(
                (0, St.z)((oe) =>
                  null === oe
                    ? (0, p.of)(void 0)
                    : ((N._loadedRoutes = oe.routes),
                      (N._loadedInjector = oe.injector),
                      this.processRoutes(oe.injector ?? k, oe.routes)),
                ),
              );
              if (N.loadComponent && !N._loadedComponent) {
                const oe = this.loader.loadComponent(N);
                return (0, C.D)([xt, oe]).pipe((0, we.J)());
              }
              return xt;
            });
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)(
              s.LFG(lr),
              s.LFG(s.Sil),
              s.LFG(s.lqb),
              s.LFG(cl),
              s.LFG(G),
            );
          });
          static #e = (this.ɵprov = s.Yz7({
            token: I,
            factory: I.ɵfac,
            providedIn: "root",
          }));
        }
        return I;
      })();
      const dl = new s.OlP("");
      let Tc = (() => {
        class I {
          constructor(k, N, K, xt, oe = {}) {
            (this.urlSerializer = k),
              (this.transitions = N),
              (this.viewportScroller = K),
              (this.zone = xt),
              (this.options = oe),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (oe.scrollPositionRestoration =
                oe.scrollPositionRestoration || "disabled"),
              (oe.anchorScrolling = oe.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((k) => {
              k instanceof uo
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = k.navigationTrigger),
                  (this.restoredId = k.restoredState
                    ? k.restoredState.navigationId
                    : 0))
                : k instanceof Tn
                  ? ((this.lastId = k.id),
                    this.scheduleScrollEvent(
                      k,
                      this.urlSerializer.parse(k.urlAfterRedirects).fragment,
                    ))
                  : k instanceof go &&
                    0 === k.code &&
                    ((this.lastSource = void 0),
                    (this.restoredId = 0),
                    this.scheduleScrollEvent(
                      k,
                      this.urlSerializer.parse(k.url).fragment,
                    ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((k) => {
              k instanceof Jn &&
                (k.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(k.position)
                  : k.anchor && "enabled" === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(k.anchor)
                    : "disabled" !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(k, N) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new Jn(
                      k,
                      "popstate" === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      N,
                    ),
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
          static #t = (this.ɵfac = function (N) {
            s.$Z();
          });
          static #e = (this.ɵprov = s.Yz7({ token: I, factory: I.ɵfac }));
        }
        return I;
      })();
      function Kr(I, L) {
        return { ɵkind: I, ɵproviders: L };
      }
      function en() {
        const I = (0, s.f3M)(s.zs3);
        return (L) => {
          const k = I.get(s.z2F);
          if (L !== k.components[0]) return;
          const N = I.get(lr),
            K = I.get(Fa);
          1 === I.get(yd) && N.initialNavigation(),
            I.get(La, null, s.XFs.Optional)?.setUpPreloading(),
            I.get(dl, null, s.XFs.Optional)?.init(),
            N.resetRootComponentType(k.componentTypes[0]),
            K.closed || (K.next(), K.complete(), K.unsubscribe());
        };
      }
      const Fa = new s.OlP("", { factory: () => new Jt.x() }),
        yd = new s.OlP("", { providedIn: "root", factory: () => 1 }),
        La = new s.OlP("");
      function ma(I) {
        return Kr(0, [
          { provide: La, useExisting: _d },
          { provide: cl, useExisting: I },
        ]);
      }
      const xi = new s.OlP("ROUTER_FORROOT_GUARD"),
        Dn = [
          Ve.Ye,
          { provide: Nt, useClass: X },
          lr,
          Li,
          {
            provide: Oo,
            useFactory: function $l(I) {
              return I.routerState.root;
            },
            deps: [lr],
          },
          G,
          [],
        ];
      function pa() {
        return new s.PXZ("Router", lr);
      }
      let Rc = (() => {
        class I {
          constructor(k) {}
          static forRoot(k, N) {
            return {
              ngModule: I,
              providers: [
                Dn,
                [],
                { provide: ht, multi: !0, useValue: k },
                {
                  provide: xi,
                  useFactory: Jr,
                  deps: [[lr, new s.FiY(), new s.tp0()]],
                },
                { provide: Bn, useValue: N || {} },
                N?.useHash
                  ? { provide: Ve.S$, useClass: Ve.Do }
                  : { provide: Ve.S$, useClass: Ve.b0 },
                {
                  provide: dl,
                  useFactory: () => {
                    const I = (0, s.f3M)(Ve.EM),
                      L = (0, s.f3M)(s.R0b),
                      k = (0, s.f3M)(Bn),
                      N = (0, s.f3M)(pi),
                      K = (0, s.f3M)(Nt);
                    return (
                      k.scrollOffset && I.setOffset(k.scrollOffset),
                      new Tc(K, N, I, L, k)
                    );
                  },
                },
                N?.preloadingStrategy
                  ? ma(N.preloadingStrategy).ɵproviders
                  : [],
                { provide: s.PXZ, multi: !0, useFactory: pa },
                N?.initialNavigation ? hl(N) : [],
                N?.bindToComponentInputs
                  ? Kr(8, [xo, { provide: eo, useExisting: xo }]).ɵproviders
                  : [],
                [
                  { provide: Ba, useFactory: en },
                  { provide: s.tb, multi: !0, useExisting: Ba },
                ],
              ],
            };
          }
          static forChild(k) {
            return {
              ngModule: I,
              providers: [{ provide: ht, multi: !0, useValue: k }],
            };
          }
          static #t = (this.ɵfac = function (N) {
            return new (N || I)(s.LFG(xi, 8));
          });
          static #e = (this.ɵmod = s.oAB({ type: I }));
          static #i = (this.ɵinj = s.cJS({}));
        }
        return I;
      })();
      function Jr(I) {
        return "guarded";
      }
      function hl(I) {
        return [
          "disabled" === I.initialNavigation
            ? Kr(3, [
                {
                  provide: s.ip1,
                  multi: !0,
                  useFactory: () => {
                    const L = (0, s.f3M)(lr);
                    return () => {
                      L.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: yd, useValue: 2 },
              ]).ɵproviders
            : [],
          "enabledBlocking" === I.initialNavigation
            ? Kr(2, [
                { provide: yd, useValue: 0 },
                {
                  provide: s.ip1,
                  multi: !0,
                  deps: [s.zs3],
                  useFactory: (L) => {
                    const k = L.get(Ve.V_, Promise.resolve());
                    return () =>
                      k.then(
                        () =>
                          new Promise((N) => {
                            const K = L.get(lr),
                              xt = L.get(Fa);
                            Qr(K, () => {
                              N(!0);
                            }),
                              (L.get(pi).afterPreactivation = () => (
                                N(!0), xt.closed ? (0, p.of)(void 0) : xt
                              )),
                              K.initialNavigation();
                          }),
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const Ba = new s.OlP("");
    },
    703: (ui, Zt, D) => {
      D.d(Zt, { A4: () => x, N0: () => C });
      var s = D(5879);
      const x = new s.OlP("JWT_OPTIONS");
      let C = (() => {
        class bt {
          constructor(kt = null) {
            this.tokenGetter = (kt && kt.tokenGetter) || function () {};
          }
          urlBase64Decode(kt) {
            let $ = kt.replace(/-/g, "+").replace(/_/g, "/");
            switch ($.length % 4) {
              case 0:
                break;
              case 2:
                $ += "==";
                break;
              case 3:
                $ += "=";
                break;
              default:
                throw new Error("Illegal base64url string!");
            }
            return this.b64DecodeUnicode($);
          }
          b64decode(kt) {
            let _ = "";
            if ((kt = String(kt).replace(/=+$/, "")).length % 4 == 1)
              throw new Error(
                "'atob' failed: The string to be decoded is not correctly encoded.",
              );
            for (
              let jt, gt, A = 0, Jt = 0;
              (gt = kt.charAt(Jt++));
              ~gt && ((jt = A % 4 ? 64 * jt + gt : gt), A++ % 4)
                ? (_ += String.fromCharCode(255 & (jt >> ((-2 * A) & 6))))
                : 0
            )
              gt =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(
                  gt,
                );
            return _;
          }
          b64DecodeUnicode(kt) {
            return decodeURIComponent(
              Array.prototype.map
                .call(
                  this.b64decode(kt),
                  ($) => "%" + ("00" + $.charCodeAt(0).toString(16)).slice(-2),
                )
                .join(""),
            );
          }
          decodeToken(kt = this.tokenGetter()) {
            return kt instanceof Promise
              ? kt.then(($) => this._decodeToken($))
              : this._decodeToken(kt);
          }
          _decodeToken(kt) {
            if (!kt || "" === kt) return null;
            const $ = kt.split(".");
            if (3 !== $.length)
              throw new Error(
                "The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.",
              );
            const _ = this.urlBase64Decode($[1]);
            if (!_) throw new Error("Cannot decode the token.");
            return JSON.parse(_);
          }
          getTokenExpirationDate(kt = this.tokenGetter()) {
            return kt instanceof Promise
              ? kt.then(($) => this._getTokenExpirationDate($))
              : this._getTokenExpirationDate(kt);
          }
          _getTokenExpirationDate(kt) {
            let $;
            if ((($ = this.decodeToken(kt)), !$ || !$.hasOwnProperty("exp")))
              return null;
            const _ = new Date(0);
            return _.setUTCSeconds($.exp), _;
          }
          isTokenExpired(kt = this.tokenGetter(), $) {
            return kt instanceof Promise
              ? kt.then((_) => this._isTokenExpired(_, $))
              : this._isTokenExpired(kt, $);
          }
          _isTokenExpired(kt, $) {
            if (!kt || "" === kt) return !0;
            const _ = this.getTokenExpirationDate(kt);
            return (
              ($ = $ || 0),
              null !== _ && !(_.valueOf() > new Date().valueOf() + 1e3 * $)
            );
          }
          getAuthScheme(kt, $) {
            return "function" == typeof kt ? kt($) : kt;
          }
        }
        return (
          (bt.ɵfac = function (kt) {
            return new (kt || bt)(s.LFG(x));
          }),
          (bt.ɵprov = s.Yz7({ token: bt, factory: bt.ɵfac })),
          bt
        );
      })();
    },
    8077: (ui, Zt, D) => {
      function s(l) {
        return (l + 0.5) | 0;
      }
      D.d(Zt, { kL: () => Za, zX: () => hu });
      const x = (l, a, o) => Math.max(Math.min(l, o), a);
      function C(l) {
        return x(s(2.55 * l), 0, 255);
      }
      function at(l) {
        return x(s(255 * l), 0, 255);
      }
      function lt(l) {
        return x(s(l / 2.55) / 100, 0, 1);
      }
      function bt(l) {
        return x(s(100 * l), 0, 100);
      }
      const B = {
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          6: 6,
          7: 7,
          8: 8,
          9: 9,
          A: 10,
          B: 11,
          C: 12,
          D: 13,
          E: 14,
          F: 15,
          a: 10,
          b: 11,
          c: 12,
          d: 13,
          e: 14,
          f: 15,
        },
        kt = [..."0123456789ABCDEF"],
        $ = (l) => kt[15 & l],
        _ = (l) => kt[(240 & l) >> 4] + kt[15 & l],
        A = (l) => (240 & l) >> 4 == (15 & l);
      const Ve =
        /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
      function He(l, a, o) {
        const u = a * Math.min(o, 1 - o),
          f = (g, y = (g + l / 30) % 12) =>
            o - u * Math.max(Math.min(y - 3, 9 - y, 1), -1);
        return [f(0), f(8), f(4)];
      }
      function We(l, a, o) {
        const u = (f, g = (f + l / 60) % 6) =>
          o - o * a * Math.max(Math.min(g, 4 - g, 1), 0);
        return [u(5), u(3), u(1)];
      }
      function Re(l, a, o) {
        const u = He(l, 1, 0.5);
        let f;
        for (
          a + o > 1 && ((f = 1 / (a + o)), (a *= f), (o *= f)), f = 0;
          f < 3;
          f++
        )
          (u[f] *= 1 - a - o), (u[f] += a);
        return u;
      }
      function _t(l) {
        const o = l.r / 255,
          u = l.g / 255,
          f = l.b / 255,
          g = Math.max(o, u, f),
          y = Math.min(o, u, f),
          w = (g + y) / 2;
        let S, P, Y;
        return (
          g !== y &&
            ((Y = g - y),
            (P = w > 0.5 ? Y / (2 - g - y) : Y / (g + y)),
            (S = (function wt(l, a, o, u, f) {
              return l === f
                ? (a - o) / u + (a < o ? 6 : 0)
                : a === f
                  ? (o - l) / u + 2
                  : (l - a) / u + 4;
            })(o, u, f, Y, g)),
            (S = 60 * S + 0.5)),
          [0 | S, P || 0, w]
        );
      }
      function St(l, a, o, u) {
        return (Array.isArray(a) ? l(a[0], a[1], a[2]) : l(a, o, u)).map(at);
      }
      function Pt(l, a, o) {
        return St(He, l, a, o);
      }
      function ze(l) {
        return ((l % 360) + 360) % 360;
      }
      const Ge = {
          x: "dark",
          Z: "light",
          Y: "re",
          X: "blu",
          W: "gr",
          V: "medium",
          U: "slate",
          A: "ee",
          T: "ol",
          S: "or",
          B: "ra",
          C: "lateg",
          D: "ights",
          R: "in",
          Q: "turquois",
          E: "hi",
          P: "ro",
          O: "al",
          N: "le",
          M: "de",
          L: "yello",
          F: "en",
          K: "ch",
          G: "arks",
          H: "ea",
          I: "ightg",
          J: "wh",
        },
        hi = {
          OiceXe: "f0f8ff",
          antiquewEte: "faebd7",
          aqua: "ffff",
          aquamarRe: "7fffd4",
          azuY: "f0ffff",
          beige: "f5f5dc",
          bisque: "ffe4c4",
          black: "0",
          blanKedOmond: "ffebcd",
          Xe: "ff",
          XeviTet: "8a2be2",
          bPwn: "a52a2a",
          burlywood: "deb887",
          caMtXe: "5f9ea0",
          KartYuse: "7fff00",
          KocTate: "d2691e",
          cSO: "ff7f50",
          cSnflowerXe: "6495ed",
          cSnsilk: "fff8dc",
          crimson: "dc143c",
          cyan: "ffff",
          xXe: "8b",
          xcyan: "8b8b",
          xgTMnPd: "b8860b",
          xWay: "a9a9a9",
          xgYF: "6400",
          xgYy: "a9a9a9",
          xkhaki: "bdb76b",
          xmagFta: "8b008b",
          xTivegYF: "556b2f",
          xSange: "ff8c00",
          xScEd: "9932cc",
          xYd: "8b0000",
          xsOmon: "e9967a",
          xsHgYF: "8fbc8f",
          xUXe: "483d8b",
          xUWay: "2f4f4f",
          xUgYy: "2f4f4f",
          xQe: "ced1",
          xviTet: "9400d3",
          dAppRk: "ff1493",
          dApskyXe: "bfff",
          dimWay: "696969",
          dimgYy: "696969",
          dodgerXe: "1e90ff",
          fiYbrick: "b22222",
          flSOwEte: "fffaf0",
          foYstWAn: "228b22",
          fuKsia: "ff00ff",
          gaRsbSo: "dcdcdc",
          ghostwEte: "f8f8ff",
          gTd: "ffd700",
          gTMnPd: "daa520",
          Way: "808080",
          gYF: "8000",
          gYFLw: "adff2f",
          gYy: "808080",
          honeyMw: "f0fff0",
          hotpRk: "ff69b4",
          RdianYd: "cd5c5c",
          Rdigo: "4b0082",
          ivSy: "fffff0",
          khaki: "f0e68c",
          lavFMr: "e6e6fa",
          lavFMrXsh: "fff0f5",
          lawngYF: "7cfc00",
          NmoncEffon: "fffacd",
          ZXe: "add8e6",
          ZcSO: "f08080",
          Zcyan: "e0ffff",
          ZgTMnPdLw: "fafad2",
          ZWay: "d3d3d3",
          ZgYF: "90ee90",
          ZgYy: "d3d3d3",
          ZpRk: "ffb6c1",
          ZsOmon: "ffa07a",
          ZsHgYF: "20b2aa",
          ZskyXe: "87cefa",
          ZUWay: "778899",
          ZUgYy: "778899",
          ZstAlXe: "b0c4de",
          ZLw: "ffffe0",
          lime: "ff00",
          limegYF: "32cd32",
          lRF: "faf0e6",
          magFta: "ff00ff",
          maPon: "800000",
          VaquamarRe: "66cdaa",
          VXe: "cd",
          VScEd: "ba55d3",
          VpurpN: "9370db",
          VsHgYF: "3cb371",
          VUXe: "7b68ee",
          VsprRggYF: "fa9a",
          VQe: "48d1cc",
          VviTetYd: "c71585",
          midnightXe: "191970",
          mRtcYam: "f5fffa",
          mistyPse: "ffe4e1",
          moccasR: "ffe4b5",
          navajowEte: "ffdead",
          navy: "80",
          Tdlace: "fdf5e6",
          Tive: "808000",
          TivedBb: "6b8e23",
          Sange: "ffa500",
          SangeYd: "ff4500",
          ScEd: "da70d6",
          pOegTMnPd: "eee8aa",
          pOegYF: "98fb98",
          pOeQe: "afeeee",
          pOeviTetYd: "db7093",
          papayawEp: "ffefd5",
          pHKpuff: "ffdab9",
          peru: "cd853f",
          pRk: "ffc0cb",
          plum: "dda0dd",
          powMrXe: "b0e0e6",
          purpN: "800080",
          YbeccapurpN: "663399",
          Yd: "ff0000",
          Psybrown: "bc8f8f",
          PyOXe: "4169e1",
          saddNbPwn: "8b4513",
          sOmon: "fa8072",
          sandybPwn: "f4a460",
          sHgYF: "2e8b57",
          sHshell: "fff5ee",
          siFna: "a0522d",
          silver: "c0c0c0",
          skyXe: "87ceeb",
          UXe: "6a5acd",
          UWay: "708090",
          UgYy: "708090",
          snow: "fffafa",
          sprRggYF: "ff7f",
          stAlXe: "4682b4",
          tan: "d2b48c",
          teO: "8080",
          tEstN: "d8bfd8",
          tomato: "ff6347",
          Qe: "40e0d0",
          viTet: "ee82ee",
          JHt: "f5deb3",
          wEte: "ffffff",
          wEtesmoke: "f5f5f5",
          Lw: "ffff00",
          LwgYF: "9acd32",
        };
      let Vi;
      const Ie =
          /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/,
        Ue = (l) =>
          l <= 0.0031308 ? 12.92 * l : 1.055 * Math.pow(l, 1 / 2.4) - 0.055,
        Ft = (l) =>
          l <= 0.04045 ? l / 12.92 : Math.pow((l + 0.055) / 1.055, 2.4);
      function we(l, a, o) {
        if (l) {
          let u = _t(l);
          (u[a] = Math.max(0, Math.min(u[a] + u[a] * o, 0 === a ? 360 : 1))),
            (u = Pt(u)),
            (l.r = u[0]),
            (l.g = u[1]),
            (l.b = u[2]);
        }
      }
      function Vt(l, a) {
        return l && Object.assign(a || {}, l);
      }
      function re(l) {
        var a = { r: 0, g: 0, b: 0, a: 255 };
        return (
          Array.isArray(l)
            ? l.length >= 3 &&
              ((a = { r: l[0], g: l[1], b: l[2], a: 255 }),
              l.length > 3 && (a.a = at(l[3])))
            : ((a = Vt(l, { r: 0, g: 0, b: 0, a: 1 })).a = at(a.a)),
          a
        );
      }
      function Le(l) {
        return "r" === l.charAt(0)
          ? (function Fe(l) {
              const a = Ie.exec(l);
              let u,
                f,
                g,
                o = 255;
              if (a) {
                if (a[7] !== u) {
                  const y = +a[7];
                  o = a[8] ? C(y) : x(255 * y, 0, 255);
                }
                return (
                  (u = +a[1]),
                  (f = +a[3]),
                  (g = +a[5]),
                  (u = 255 & (a[2] ? C(u) : x(u, 0, 255))),
                  (f = 255 & (a[4] ? C(f) : x(f, 0, 255))),
                  (g = 255 & (a[6] ? C(g) : x(g, 0, 255))),
                  { r: u, g: f, b: g, a: o }
                );
              }
            })(l)
          : (function mi(l) {
              const a = Ve.exec(l);
              let u,
                o = 255;
              if (!a) return;
              a[5] !== u && (o = a[6] ? C(+a[5]) : at(+a[5]));
              const f = ze(+a[2]),
                g = +a[3] / 100,
                y = +a[4] / 100;
              return (
                (u =
                  "hwb" === a[1]
                    ? (function ee(l, a, o) {
                        return St(Re, l, a, o);
                      })(f, g, y)
                    : "hsv" === a[1]
                      ? (function Kt(l, a, o) {
                          return St(We, l, a, o);
                        })(f, g, y)
                      : Pt(f, g, y)),
                { r: u[0], g: u[1], b: u[2], a: o }
              );
            })(l);
      }
      class li {
        constructor(a) {
          if (a instanceof li) return a;
          const o = typeof a;
          let u;
          "object" === o
            ? (u = re(a))
            : "string" === o &&
              (u =
                (function gt(l) {
                  var o,
                    a = l.length;
                  return (
                    "#" === l[0] &&
                      (4 === a || 5 === a
                        ? (o = {
                            r: 255 & (17 * B[l[1]]),
                            g: 255 & (17 * B[l[2]]),
                            b: 255 & (17 * B[l[3]]),
                            a: 5 === a ? 17 * B[l[4]] : 255,
                          })
                        : (7 === a || 9 === a) &&
                          (o = {
                            r: (B[l[1]] << 4) | B[l[2]],
                            g: (B[l[3]] << 4) | B[l[4]],
                            b: (B[l[5]] << 4) | B[l[6]],
                            a: 9 === a ? (B[l[7]] << 4) | B[l[8]] : 255,
                          })),
                    o
                  );
                })(a) ||
                (function qi(l) {
                  Vi ||
                    ((Vi = (function Si() {
                      const l = {},
                        a = Object.keys(hi),
                        o = Object.keys(Ge);
                      let u, f, g, y, w;
                      for (u = 0; u < a.length; u++) {
                        for (y = w = a[u], f = 0; f < o.length; f++)
                          (g = o[f]), (w = w.replace(g, Ge[g]));
                        (g = parseInt(hi[y], 16)),
                          (l[w] = [(g >> 16) & 255, (g >> 8) & 255, 255 & g]);
                      }
                      return l;
                    })()),
                    (Vi.transparent = [0, 0, 0, 0]));
                  const a = Vi[l.toLowerCase()];
                  return (
                    a && {
                      r: a[0],
                      g: a[1],
                      b: a[2],
                      a: 4 === a.length ? a[3] : 255,
                    }
                  );
                })(a) ||
                Le(a)),
            (this._rgb = u),
            (this._valid = !!u);
        }
        get valid() {
          return this._valid;
        }
        get rgb() {
          var a = Vt(this._rgb);
          return a && (a.a = lt(a.a)), a;
        }
        set rgb(a) {
          this._rgb = re(a);
        }
        rgbString() {
          return this._valid
            ? (function xe(l) {
                return (
                  l &&
                  (l.a < 255
                    ? `rgba(${l.r}, ${l.g}, ${l.b}, ${lt(l.a)})`
                    : `rgb(${l.r}, ${l.g}, ${l.b})`)
                );
              })(this._rgb)
            : void 0;
        }
        hexString() {
          return this._valid
            ? (function De(l) {
                var a = ((l) => A(l.r) && A(l.g) && A(l.b) && A(l.a))(l)
                  ? $
                  : _;
                return l
                  ? "#" +
                      a(l.r) +
                      a(l.g) +
                      a(l.b) +
                      ((l, a) => (l < 255 ? a(l) : ""))(l.a, a)
                  : void 0;
              })(this._rgb)
            : void 0;
        }
        hslString() {
          return this._valid
            ? (function vi(l) {
                if (!l) return;
                const a = _t(l),
                  o = a[0],
                  u = bt(a[1]),
                  f = bt(a[2]);
                return l.a < 255
                  ? `hsla(${o}, ${u}%, ${f}%, ${lt(l.a)})`
                  : `hsl(${o}, ${u}%, ${f}%)`;
              })(this._rgb)
            : void 0;
        }
        mix(a, o) {
          if (a) {
            const u = this.rgb,
              f = a.rgb;
            let g;
            const y = o === g ? 0.5 : o,
              w = 2 * y - 1,
              S = u.a - f.a,
              P = ((w * S == -1 ? w : (w + S) / (1 + w * S)) + 1) / 2;
            (g = 1 - P),
              (u.r = 255 & (P * u.r + g * f.r + 0.5)),
              (u.g = 255 & (P * u.g + g * f.g + 0.5)),
              (u.b = 255 & (P * u.b + g * f.b + 0.5)),
              (u.a = y * u.a + (1 - y) * f.a),
              (this.rgb = u);
          }
          return this;
        }
        interpolate(a, o) {
          return (
            a &&
              (this._rgb = (function Mt(l, a, o) {
                const u = Ft(lt(l.r)),
                  f = Ft(lt(l.g)),
                  g = Ft(lt(l.b));
                return {
                  r: at(Ue(u + o * (Ft(lt(a.r)) - u))),
                  g: at(Ue(f + o * (Ft(lt(a.g)) - f))),
                  b: at(Ue(g + o * (Ft(lt(a.b)) - g))),
                  a: l.a + o * (a.a - l.a),
                };
              })(this._rgb, a._rgb, o)),
            this
          );
        }
        clone() {
          return new li(this.rgb);
        }
        alpha(a) {
          return (this._rgb.a = at(a)), this;
        }
        clearer(a) {
          return (this._rgb.a *= 1 - a), this;
        }
        greyscale() {
          const a = this._rgb,
            o = s(0.3 * a.r + 0.59 * a.g + 0.11 * a.b);
          return (a.r = a.g = a.b = o), this;
        }
        opaquer(a) {
          return (this._rgb.a *= 1 + a), this;
        }
        negate() {
          const a = this._rgb;
          return (a.r = 255 - a.r), (a.g = 255 - a.g), (a.b = 255 - a.b), this;
        }
        lighten(a) {
          return we(this._rgb, 2, a), this;
        }
        darken(a) {
          return we(this._rgb, 2, -a), this;
        }
        saturate(a) {
          return we(this._rgb, 1, a), this;
        }
        desaturate(a) {
          return we(this._rgb, 1, -a), this;
        }
        rotate(a) {
          return (
            (function ie(l, a) {
              var o = _t(l);
              (o[0] = ze(o[0] + a)),
                (o = Pt(o)),
                (l.r = o[0]),
                (l.g = o[1]),
                (l.b = o[2]);
            })(this._rgb, a),
            this
          );
        }
      }
      function Mi() {}
      const fi = (() => {
        let l = 0;
        return () => l++;
      })();
      function ri(l) {
        return null === l || typeof l > "u";
      }
      function te(l) {
        if (Array.isArray && Array.isArray(l)) return !0;
        const a = Object.prototype.toString.call(l);
        return "[object" === a.slice(0, 7) && "Array]" === a.slice(-6);
      }
      function Be(l) {
        return (
          null !== l && "[object Object]" === Object.prototype.toString.call(l)
        );
      }
      function Ne(l) {
        return ("number" == typeof l || l instanceof Number) && isFinite(+l);
      }
      function Ri(l, a) {
        return Ne(l) ? l : a;
      }
      function gi(l, a) {
        return typeof l > "u" ? a : l;
      }
      const _i = (l, a) =>
        "string" == typeof l && l.endsWith("%")
          ? (parseFloat(l) / 100) * a
          : +l;
      function de(l, a, o) {
        if (l && "function" == typeof l.call) return l.apply(o, a);
      }
      function ot(l, a, o, u) {
        let f, g, y;
        if (te(l))
          if (((g = l.length), u))
            for (f = g - 1; f >= 0; f--) a.call(o, l[f], f);
          else for (f = 0; f < g; f++) a.call(o, l[f], f);
        else if (Be(l))
          for (y = Object.keys(l), g = y.length, f = 0; f < g; f++)
            a.call(o, l[y[f]], y[f]);
      }
      function Z(l, a) {
        let o, u, f, g;
        if (!l || !a || l.length !== a.length) return !1;
        for (o = 0, u = l.length; o < u; ++o)
          if (
            ((f = l[o]),
            (g = a[o]),
            f.datasetIndex !== g.datasetIndex || f.index !== g.index)
          )
            return !1;
        return !0;
      }
      function rt(l) {
        if (te(l)) return l.map(rt);
        if (Be(l)) {
          const a = Object.create(null),
            o = Object.keys(l),
            u = o.length;
          let f = 0;
          for (; f < u; ++f) a[o[f]] = rt(l[o[f]]);
          return a;
        }
        return l;
      }
      function yt(l) {
        return -1 === ["__proto__", "prototype", "constructor"].indexOf(l);
      }
      function Rt(l, a, o, u) {
        if (!yt(l)) return;
        const f = a[l],
          g = o[l];
        Be(f) && Be(g) ? Lt(f, g, u) : (a[l] = rt(g));
      }
      function Lt(l, a, o) {
        const u = te(a) ? a : [a],
          f = u.length;
        if (!Be(l)) return l;
        const g = (o = o || {}).merger || Rt;
        let y;
        for (let w = 0; w < f; ++w) {
          if (((y = u[w]), !Be(y))) continue;
          const S = Object.keys(y);
          for (let P = 0, Y = S.length; P < Y; ++P) g(S[P], l, y, o);
        }
        return l;
      }
      function ut(l, a) {
        return Lt(l, a, { merger: q });
      }
      function q(l, a, o) {
        if (!yt(l)) return;
        const u = a[l],
          f = o[l];
        Be(u) && Be(f)
          ? ut(u, f)
          : Object.prototype.hasOwnProperty.call(a, l) || (a[l] = rt(f));
      }
      const H = { "": (l) => l, x: (l) => l.x, y: (l) => l.y };
      function se(l, a) {
        return (
          H[a] ||
          (H[a] = (function X(l) {
            const a = (function Nt(l) {
              const a = l.split("."),
                o = [];
              let u = "";
              for (const f of a)
                (u += f),
                  u.endsWith("\\")
                    ? (u = u.slice(0, -1) + ".")
                    : (o.push(u), (u = ""));
              return o;
            })(l);
            return (o) => {
              for (const u of a) {
                if ("" === u) break;
                o = o && o[u];
              }
              return o;
            };
          })(a))
        )(l);
      }
      function it(l) {
        return l.charAt(0).toUpperCase() + l.slice(1);
      }
      const Ut = (l) => typeof l < "u",
        ve = (l) => "function" == typeof l,
        qe = (l, a) => {
          if (l.size !== a.size) return !1;
          for (const o of l) if (!a.has(o)) return !1;
          return !0;
        },
        Xt = Math.PI,
        ae = 2 * Xt,
        ye = ae + Xt,
        $t = Number.POSITIVE_INFINITY,
        fe = Xt / 180,
        ke = Xt / 2,
        yi = Xt / 4,
        pt = (2 * Xt) / 3,
        vt = Math.log10,
        U = Math.sign;
      function j(l, a, o) {
        return Math.abs(l - a) < o;
      }
      function ct(l) {
        const a = Math.round(l);
        l = j(l, a, l / 1e3) ? a : l;
        const o = Math.pow(10, Math.floor(vt(l))),
          u = l / o;
        return (u <= 1 ? 1 : u <= 2 ? 2 : u <= 5 ? 5 : 10) * o;
      }
      function Wt(l) {
        return !isNaN(parseFloat(l)) && isFinite(l);
      }
      function It(l, a, o) {
        let u, f, g;
        for (u = 0, f = l.length; u < f; u++)
          (g = l[u][o]),
            isNaN(g) ||
              ((a.min = Math.min(a.min, g)), (a.max = Math.max(a.max, g)));
      }
      function Yt(l) {
        return l * (Xt / 180);
      }
      function Ae(l) {
        return l * (180 / Xt);
      }
      function oi(l) {
        if (!Ne(l)) return;
        let a = 1,
          o = 0;
        for (; Math.round(l * a) / a !== l; ) (a *= 10), o++;
        return o;
      }
      function pe(l, a) {
        const o = a.x - l.x,
          u = a.y - l.y,
          f = Math.sqrt(o * o + u * u);
        let g = Math.atan2(u, o);
        return g < -0.5 * Xt && (g += ae), { angle: g, distance: f };
      }
      function ne(l, a) {
        return Math.sqrt(Math.pow(a.x - l.x, 2) + Math.pow(a.y - l.y, 2));
      }
      function tt(l, a) {
        return ((l - a + ye) % ae) - Xt;
      }
      function me(l) {
        return ((l % ae) + ae) % ae;
      }
      function Bt(l, a, o, u) {
        const f = me(l),
          g = me(a),
          y = me(o),
          w = me(g - f),
          S = me(y - f),
          P = me(f - g),
          Y = me(f - y);
        return f === g || f === y || (u && g === y) || (w > S && P < Y);
      }
      function Te(l, a, o) {
        return Math.max(a, Math.min(o, l));
      }
      function Ot(l, a, o, u = 1e-6) {
        return l >= Math.min(a, o) - u && l <= Math.max(a, o) + u;
      }
      function Ze(l, a, o) {
        o = o || ((y) => l[y] < a);
        let g,
          u = l.length - 1,
          f = 0;
        for (; u - f > 1; ) (g = (f + u) >> 1), o(g) ? (f = g) : (u = g);
        return { lo: f, hi: u };
      }
      const ft = (l, a, o, u) =>
          Ze(
            l,
            o,
            u
              ? (f) => {
                  const g = l[f][a];
                  return g < o || (g === o && l[f + 1][a] === o);
                }
              : (f) => l[f][a] < o,
          ),
        Gt = (l, a, o) => Ze(l, o, (u) => l[u][a] >= o),
        si = ["push", "pop", "shift", "splice", "unshift"];
      function Hi(l, a) {
        const o = l._chartjs;
        if (!o) return;
        const u = o.listeners,
          f = u.indexOf(a);
        -1 !== f && u.splice(f, 1),
          !(u.length > 0) &&
            (si.forEach((g) => {
              delete l[g];
            }),
            delete l._chartjs);
      }
      function Yi(l) {
        const a = new Set(l);
        return a.size === l.length ? l : Array.from(a);
      }
      const bn =
        typeof window > "u"
          ? function (l) {
              return l();
            }
          : window.requestAnimationFrame;
      function Un(l, a) {
        let o = [],
          u = !1;
        return function (...f) {
          (o = f),
            u ||
              ((u = !0),
              bn.call(window, () => {
                (u = !1), l.apply(a, o);
              }));
        };
      }
      const An = (l) =>
          "start" === l ? "left" : "end" === l ? "right" : "center",
        yn = (l, a, o) => ("start" === l ? a : "end" === l ? o : (a + o) / 2);
      function Tn(l, a, o) {
        const u = a.length;
        let f = 0,
          g = u;
        if (l._sorted) {
          const { iScale: y, _parsed: w } = l,
            S = y.axis,
            {
              min: P,
              max: Y,
              minDefined: dt,
              maxDefined: Tt,
            } = y.getUserBounds();
          dt &&
            (f = Te(
              Math.min(
                ft(w, S, P).lo,
                o ? u : ft(a, S, y.getPixelForValue(P)).lo,
              ),
              0,
              u - 1,
            )),
            (g = Tt
              ? Te(
                  Math.max(
                    ft(w, y.axis, Y, !0).hi + 1,
                    o ? 0 : ft(a, S, y.getPixelForValue(Y), !0).hi + 1,
                  ),
                  f,
                  u,
                ) - f
              : u - f);
        }
        return { start: f, count: g };
      }
      function oo(l) {
        const { xScale: a, yScale: o, _scaleRanges: u } = l,
          f = { xmin: a.min, xmax: a.max, ymin: o.min, ymax: o.max };
        if (!u) return (l._scaleRanges = f), !0;
        const g =
          u.xmin !== a.min ||
          u.xmax !== a.max ||
          u.ymin !== o.min ||
          u.ymax !== o.max;
        return Object.assign(u, f), g;
      }
      const go = (l) => 0 === l || 1 === l,
        qo = (l, a, o) =>
          -Math.pow(2, 10 * (l -= 1)) * Math.sin(((l - a) * ae) / o),
        Kn = (l, a, o) =>
          Math.pow(2, -10 * l) * Math.sin(((l - a) * ae) / o) + 1,
        Ir = {
          linear: (l) => l,
          easeInQuad: (l) => l * l,
          easeOutQuad: (l) => -l * (l - 2),
          easeInOutQuad: (l) =>
            (l /= 0.5) < 1 ? 0.5 * l * l : -0.5 * (--l * (l - 2) - 1),
          easeInCubic: (l) => l * l * l,
          easeOutCubic: (l) => (l -= 1) * l * l + 1,
          easeInOutCubic: (l) =>
            (l /= 0.5) < 1 ? 0.5 * l * l * l : 0.5 * ((l -= 2) * l * l + 2),
          easeInQuart: (l) => l * l * l * l,
          easeOutQuart: (l) => -((l -= 1) * l * l * l - 1),
          easeInOutQuart: (l) =>
            (l /= 0.5) < 1
              ? 0.5 * l * l * l * l
              : -0.5 * ((l -= 2) * l * l * l - 2),
          easeInQuint: (l) => l * l * l * l * l,
          easeOutQuint: (l) => (l -= 1) * l * l * l * l + 1,
          easeInOutQuint: (l) =>
            (l /= 0.5) < 1
              ? 0.5 * l * l * l * l * l
              : 0.5 * ((l -= 2) * l * l * l * l + 2),
          easeInSine: (l) => 1 - Math.cos(l * ke),
          easeOutSine: (l) => Math.sin(l * ke),
          easeInOutSine: (l) => -0.5 * (Math.cos(Xt * l) - 1),
          easeInExpo: (l) => (0 === l ? 0 : Math.pow(2, 10 * (l - 1))),
          easeOutExpo: (l) => (1 === l ? 1 : 1 - Math.pow(2, -10 * l)),
          easeInOutExpo: (l) =>
            go(l)
              ? l
              : l < 0.5
                ? 0.5 * Math.pow(2, 10 * (2 * l - 1))
                : 0.5 * (2 - Math.pow(2, -10 * (2 * l - 1))),
          easeInCirc: (l) => (l >= 1 ? l : -(Math.sqrt(1 - l * l) - 1)),
          easeOutCirc: (l) => Math.sqrt(1 - (l -= 1) * l),
          easeInOutCirc: (l) =>
            (l /= 0.5) < 1
              ? -0.5 * (Math.sqrt(1 - l * l) - 1)
              : 0.5 * (Math.sqrt(1 - (l -= 2) * l) + 1),
          easeInElastic: (l) => (go(l) ? l : qo(l, 0.075, 0.3)),
          easeOutElastic: (l) => (go(l) ? l : Kn(l, 0.075, 0.3)),
          easeInOutElastic: (l) =>
            go(l)
              ? l
              : l < 0.5
                ? 0.5 * qo(2 * l, 0.1125, 0.45)
                : 0.5 + 0.5 * Kn(2 * l - 1, 0.1125, 0.45),
          easeInBack: (l) => l * l * (2.70158 * l - 1.70158),
          easeOutBack: (l) => (l -= 1) * l * (2.70158 * l + 1.70158) + 1,
          easeInOutBack(l) {
            let a = 1.70158;
            return (l /= 0.5) < 1
              ? l * l * ((1 + (a *= 1.525)) * l - a) * 0.5
              : 0.5 * ((l -= 2) * l * ((1 + (a *= 1.525)) * l + a) + 2);
          },
          easeInBounce: (l) => 1 - Ir.easeOutBounce(1 - l),
          easeOutBounce: (l) =>
            l < 1 / 2.75
              ? 7.5625 * l * l
              : l < 2 / 2.75
                ? 7.5625 * (l -= 1.5 / 2.75) * l + 0.75
                : l < 2.5 / 2.75
                  ? 7.5625 * (l -= 2.25 / 2.75) * l + 0.9375
                  : 7.5625 * (l -= 2.625 / 2.75) * l + 0.984375,
          easeInOutBounce: (l) =>
            l < 0.5
              ? 0.5 * Ir.easeInBounce(2 * l)
              : 0.5 * Ir.easeOutBounce(2 * l - 1) + 0.5,
        };
      function Gr(l) {
        if (l && "object" == typeof l) {
          const a = l.toString();
          return (
            "[object CanvasPattern]" === a || "[object CanvasGradient]" === a
          );
        }
        return !1;
      }
      function Sa(l) {
        return Gr(l) ? l : new li(l);
      }
      function rs(l) {
        return Gr(l) ? l : new li(l).saturate(0.5).darken(0.1).hexString();
      }
      const Vs = ["x", "y", "borderWidth", "radius", "tension"],
        ir = ["color", "borderColor", "backgroundColor"],
        ro = new Map();
      function Jn(l, a, o) {
        return (function ss(l, a) {
          a = a || {};
          const o = l + JSON.stringify(a);
          let u = ro.get(o);
          return u || ((u = new Intl.NumberFormat(l, a)), ro.set(o, u)), u;
        })(a, o).format(l);
      }
      const Dt = {
        values: (l) => (te(l) ? l : "" + l),
        numeric(l, a, o) {
          if (0 === l) return "0";
          const u = this.chart.options.locale;
          let f,
            g = l;
          if (o.length > 1) {
            const P = Math.max(
              Math.abs(o[0].value),
              Math.abs(o[o.length - 1].value),
            );
            (P < 1e-4 || P > 1e15) && (f = "scientific"),
              (g = (function Pe(l, a) {
                let o =
                  a.length > 3
                    ? a[2].value - a[1].value
                    : a[1].value - a[0].value;
                return (
                  Math.abs(o) >= 1 &&
                    l !== Math.floor(l) &&
                    (o = l - Math.floor(l)),
                  o
                );
              })(l, o));
          }
          const y = vt(Math.abs(g)),
            w = isNaN(y) ? 1 : Math.max(Math.min(-1 * Math.floor(y), 20), 0),
            S = {
              notation: f,
              minimumFractionDigits: w,
              maximumFractionDigits: w,
            };
          return Object.assign(S, this.options.ticks.format), Jn(l, u, S);
        },
        logarithmic(l, a, o) {
          if (0 === l) return "0";
          const u = o[a].significand || l / Math.pow(10, Math.floor(vt(l)));
          return [1, 2, 3, 5, 10, 15].includes(u) || a > 0.8 * o.length
            ? Dt.numeric.call(this, l, a, o)
            : "";
        },
      };
      var he = { formatters: Dt };
      const Li = Object.create(null),
        nn = Object.create(null);
      function $n(l, a) {
        if (!a) return l;
        const o = a.split(".");
        for (let u = 0, f = o.length; u < f; ++u) {
          const g = o[u];
          l = l[g] || (l[g] = Object.create(null));
        }
        return l;
      }
      function ho(l, a, o) {
        return "string" == typeof a ? Lt($n(l, a), o) : Lt($n(l, ""), a);
      }
      class on {
        constructor(a, o) {
          (this.animation = void 0),
            (this.backgroundColor = "rgba(0,0,0,0.1)"),
            (this.borderColor = "rgba(0,0,0,0.1)"),
            (this.color = "#666"),
            (this.datasets = {}),
            (this.devicePixelRatio = (u) =>
              u.chart.platform.getDevicePixelRatio()),
            (this.elements = {}),
            (this.events = [
              "mousemove",
              "mouseout",
              "click",
              "touchstart",
              "touchmove",
            ]),
            (this.font = {
              family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
              size: 12,
              style: "normal",
              lineHeight: 1.2,
              weight: null,
            }),
            (this.hover = {}),
            (this.hoverBackgroundColor = (u, f) => rs(f.backgroundColor)),
            (this.hoverBorderColor = (u, f) => rs(f.borderColor)),
            (this.hoverColor = (u, f) => rs(f.color)),
            (this.indexAxis = "x"),
            (this.interaction = {
              mode: "nearest",
              intersect: !0,
              includeInvisible: !1,
            }),
            (this.maintainAspectRatio = !0),
            (this.onHover = null),
            (this.onClick = null),
            (this.parsing = !0),
            (this.plugins = {}),
            (this.responsive = !0),
            (this.scale = void 0),
            (this.scales = {}),
            (this.showLine = !0),
            (this.drawActiveElementsOnTop = !0),
            this.describe(a),
            this.apply(o);
        }
        set(a, o) {
          return ho(this, a, o);
        }
        get(a) {
          return $n(this, a);
        }
        describe(a, o) {
          return ho(nn, a, o);
        }
        override(a, o) {
          return ho(Li, a, o);
        }
        route(a, o, u, f) {
          const g = $n(this, a),
            y = $n(this, u),
            w = "_" + o;
          Object.defineProperties(g, {
            [w]: { value: g[o], writable: !0 },
            [o]: {
              enumerable: !0,
              get() {
                const S = this[w],
                  P = y[f];
                return Be(S) ? Object.assign({}, P, S) : gi(S, P);
              },
              set(S) {
                this[w] = S;
              },
            },
          });
        }
        apply(a) {
          a.forEach((o) => o(this));
        }
      }
      var un = new on(
        {
          _scriptable: (l) => !l.startsWith("on"),
          _indexable: (l) => "events" !== l,
          hover: { _fallback: "interaction" },
          interaction: { _scriptable: !1, _indexable: !1 },
        },
        [
          function Zr(l) {
            l.set("animation", {
              delay: void 0,
              duration: 1e3,
              easing: "easeOutQuart",
              fn: void 0,
              from: void 0,
              loop: void 0,
              to: void 0,
              type: void 0,
            }),
              l.describe("animation", {
                _fallback: !1,
                _indexable: !1,
                _scriptable: (a) =>
                  "onProgress" !== a && "onComplete" !== a && "fn" !== a,
              }),
              l.set("animations", {
                colors: { type: "color", properties: ir },
                numbers: { type: "number", properties: Vs },
              }),
              l.describe("animations", { _fallback: "animation" }),
              l.set("transitions", {
                active: { animation: { duration: 400 } },
                resize: { animation: { duration: 0 } },
                show: {
                  animations: {
                    colors: { from: "transparent" },
                    visible: { type: "boolean", duration: 0 },
                  },
                },
                hide: {
                  animations: {
                    colors: { to: "transparent" },
                    visible: {
                      type: "boolean",
                      easing: "linear",
                      fn: (a) => 0 | a,
                    },
                  },
                },
              });
          },
          function _s(l) {
            l.set("layout", {
              autoPadding: !0,
              padding: { top: 0, right: 0, bottom: 0, left: 0 },
            });
          },
          function Xe(l) {
            l.set("scale", {
              display: !0,
              offset: !1,
              reverse: !1,
              beginAtZero: !1,
              bounds: "ticks",
              clip: !0,
              grace: 0,
              grid: {
                display: !0,
                lineWidth: 1,
                drawOnChartArea: !0,
                drawTicks: !0,
                tickLength: 8,
                tickWidth: (a, o) => o.lineWidth,
                tickColor: (a, o) => o.color,
                offset: !1,
              },
              border: { display: !0, dash: [], dashOffset: 0, width: 1 },
              title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
              ticks: {
                minRotation: 0,
                maxRotation: 50,
                mirror: !1,
                textStrokeWidth: 0,
                textStrokeColor: "",
                padding: 3,
                display: !0,
                autoSkip: !0,
                autoSkipPadding: 3,
                labelOffset: 0,
                callback: he.formatters.values,
                minor: {},
                major: {},
                align: "center",
                crossAlign: "near",
                showLabelBackdrop: !1,
                backdropColor: "rgba(255, 255, 255, 0.75)",
                backdropPadding: 2,
              },
            }),
              l.route("scale.ticks", "color", "", "color"),
              l.route("scale.grid", "color", "", "borderColor"),
              l.route("scale.border", "color", "", "borderColor"),
              l.route("scale.title", "color", "", "color"),
              l.describe("scale", {
                _fallback: !1,
                _scriptable: (a) =>
                  !a.startsWith("before") &&
                  !a.startsWith("after") &&
                  "callback" !== a &&
                  "parser" !== a,
                _indexable: (a) =>
                  "borderDash" !== a && "tickBorderDash" !== a && "dash" !== a,
              }),
              l.describe("scales", { _fallback: "scale" }),
              l.describe("scale.ticks", {
                _scriptable: (a) => "backdropPadding" !== a && "callback" !== a,
                _indexable: (a) => "backdropPadding" !== a,
              });
          },
        ],
      );
      function nr(l, a, o, u, f) {
        let g = a[f];
        return (
          g || ((g = a[f] = l.measureText(f).width), o.push(f)),
          g > u && (u = g),
          u
        );
      }
      function _o(l, a, o, u) {
        let f = ((u = u || {}).data = u.data || {}),
          g = (u.garbageCollect = u.garbageCollect || []);
        u.font !== a &&
          ((f = u.data = {}), (g = u.garbageCollect = []), (u.font = a)),
          l.save(),
          (l.font = a);
        let y = 0;
        const w = o.length;
        let S, P, Y, dt, Tt;
        for (S = 0; S < w; S++)
          if (((dt = o[S]), null == dt || te(dt))) {
            if (te(dt))
              for (P = 0, Y = dt.length; P < Y; P++)
                (Tt = dt[P]), null != Tt && !te(Tt) && (y = nr(l, f, g, y, Tt));
          } else y = nr(l, f, g, y, dt);
        l.restore();
        const Ht = g.length / 2;
        if (Ht > o.length) {
          for (S = 0; S < Ht; S++) delete f[g[S]];
          g.splice(0, Ht);
        }
        return y;
      }
      function Oo(l, a, o) {
        const u = l.currentDevicePixelRatio,
          f = 0 !== o ? Math.max(o / 2, 0.5) : 0;
        return Math.round((a - f) * u) / u + f;
      }
      function Rr(l, a) {
        (!a && !l) ||
          ((a = a || l.getContext("2d")).save(),
          a.resetTransform(),
          a.clearRect(0, 0, l.width, l.height),
          a.restore());
      }
      function Pr(l, a, o, u) {
        Mr(l, a, o, u, null);
      }
      function Mr(l, a, o, u, f) {
        let g, y, w, S, P, Y, dt, Tt;
        const Ht = a.pointStyle,
          be = a.rotation,
          Ce = a.radius;
        let Se = (be || 0) * fe;
        if (
          Ht &&
          "object" == typeof Ht &&
          ((g = Ht.toString()),
          "[object HTMLImageElement]" === g ||
            "[object HTMLCanvasElement]" === g)
        )
          return (
            l.save(),
            l.translate(o, u),
            l.rotate(Se),
            l.drawImage(Ht, -Ht.width / 2, -Ht.height / 2, Ht.width, Ht.height),
            void l.restore()
          );
        if (!(isNaN(Ce) || Ce <= 0)) {
          switch ((l.beginPath(), Ht)) {
            default:
              f ? l.ellipse(o, u, f / 2, Ce, 0, 0, ae) : l.arc(o, u, Ce, 0, ae),
                l.closePath();
              break;
            case "triangle":
              (Y = f ? f / 2 : Ce),
                l.moveTo(o + Math.sin(Se) * Y, u - Math.cos(Se) * Ce),
                (Se += pt),
                l.lineTo(o + Math.sin(Se) * Y, u - Math.cos(Se) * Ce),
                (Se += pt),
                l.lineTo(o + Math.sin(Se) * Y, u - Math.cos(Se) * Ce),
                l.closePath();
              break;
            case "rectRounded":
              (P = 0.516 * Ce),
                (S = Ce - P),
                (y = Math.cos(Se + yi) * S),
                (dt = Math.cos(Se + yi) * (f ? f / 2 - P : S)),
                (w = Math.sin(Se + yi) * S),
                (Tt = Math.sin(Se + yi) * (f ? f / 2 - P : S)),
                l.arc(o - dt, u - w, P, Se - Xt, Se - ke),
                l.arc(o + Tt, u - y, P, Se - ke, Se),
                l.arc(o + dt, u + w, P, Se, Se + ke),
                l.arc(o - Tt, u + y, P, Se + ke, Se + Xt),
                l.closePath();
              break;
            case "rect":
              if (!be) {
                (S = Math.SQRT1_2 * Ce),
                  (Y = f ? f / 2 : S),
                  l.rect(o - Y, u - S, 2 * Y, 2 * S);
                break;
              }
              Se += yi;
            case "rectRot":
              (dt = Math.cos(Se) * (f ? f / 2 : Ce)),
                (y = Math.cos(Se) * Ce),
                (w = Math.sin(Se) * Ce),
                (Tt = Math.sin(Se) * (f ? f / 2 : Ce)),
                l.moveTo(o - dt, u - w),
                l.lineTo(o + Tt, u - y),
                l.lineTo(o + dt, u + w),
                l.lineTo(o - Tt, u + y),
                l.closePath();
              break;
            case "crossRot":
              Se += yi;
            case "cross":
              (dt = Math.cos(Se) * (f ? f / 2 : Ce)),
                (y = Math.cos(Se) * Ce),
                (w = Math.sin(Se) * Ce),
                (Tt = Math.sin(Se) * (f ? f / 2 : Ce)),
                l.moveTo(o - dt, u - w),
                l.lineTo(o + dt, u + w),
                l.moveTo(o + Tt, u - y),
                l.lineTo(o - Tt, u + y);
              break;
            case "star":
              (dt = Math.cos(Se) * (f ? f / 2 : Ce)),
                (y = Math.cos(Se) * Ce),
                (w = Math.sin(Se) * Ce),
                (Tt = Math.sin(Se) * (f ? f / 2 : Ce)),
                l.moveTo(o - dt, u - w),
                l.lineTo(o + dt, u + w),
                l.moveTo(o + Tt, u - y),
                l.lineTo(o - Tt, u + y),
                (Se += yi),
                (dt = Math.cos(Se) * (f ? f / 2 : Ce)),
                (y = Math.cos(Se) * Ce),
                (w = Math.sin(Se) * Ce),
                (Tt = Math.sin(Se) * (f ? f / 2 : Ce)),
                l.moveTo(o - dt, u - w),
                l.lineTo(o + dt, u + w),
                l.moveTo(o + Tt, u - y),
                l.lineTo(o - Tt, u + y);
              break;
            case "line":
              (y = f ? f / 2 : Math.cos(Se) * Ce),
                (w = Math.sin(Se) * Ce),
                l.moveTo(o - y, u - w),
                l.lineTo(o + y, u + w);
              break;
            case "dash":
              l.moveTo(o, u),
                l.lineTo(
                  o + Math.cos(Se) * (f ? f / 2 : Ce),
                  u + Math.sin(Se) * Ce,
                );
              break;
            case !1:
              l.closePath();
          }
          l.fill(), a.borderWidth > 0 && l.stroke();
        }
      }
      function Vo(l, a, o) {
        return (
          (o = o || 0.5),
          !a ||
            (l &&
              l.x > a.left - o &&
              l.x < a.right + o &&
              l.y > a.top - o &&
              l.y < a.bottom + o)
        );
      }
      function On(l, a) {
        l.save(),
          l.beginPath(),
          l.rect(a.left, a.top, a.right - a.left, a.bottom - a.top),
          l.clip();
      }
      function Fi(l) {
        l.restore();
      }
      function sn(l, a, o, u, f) {
        if (!a) return l.lineTo(o.x, o.y);
        if ("middle" === f) {
          const g = (a.x + o.x) / 2;
          l.lineTo(g, a.y), l.lineTo(g, o.y);
        } else ("after" === f) != !!u ? l.lineTo(a.x, o.y) : l.lineTo(o.x, a.y);
        l.lineTo(o.x, o.y);
      }
      function In(l, a, o, u) {
        if (!a) return l.lineTo(o.x, o.y);
        l.bezierCurveTo(
          u ? a.cp1x : a.cp2x,
          u ? a.cp1y : a.cp2y,
          u ? o.cp2x : o.cp1x,
          u ? o.cp2y : o.cp1y,
          o.x,
          o.y,
        );
      }
      function zo(l, a, o, u, f) {
        if (f.strikethrough || f.underline) {
          const g = l.measureText(u),
            y = a - g.actualBoundingBoxLeft,
            w = a + g.actualBoundingBoxRight,
            P = o + g.actualBoundingBoxDescent,
            Y = f.strikethrough ? (o - g.actualBoundingBoxAscent + P) / 2 : P;
          (l.strokeStyle = l.fillStyle),
            l.beginPath(),
            (l.lineWidth = f.decorationWidth || 2),
            l.moveTo(y, Y),
            l.lineTo(w, Y),
            l.stroke();
        }
      }
      function eo(l, a) {
        const o = l.fillStyle;
        (l.fillStyle = a.color),
          l.fillRect(a.left, a.top, a.width, a.height),
          (l.fillStyle = o);
      }
      function xo(l, a, o, u, f, g = {}) {
        const y = te(a) ? a : [a],
          w = g.strokeWidth > 0 && "" !== g.strokeColor;
        let S, P;
        for (
          l.save(),
            l.font = f.string,
            (function vo(l, a) {
              a.translation && l.translate(a.translation[0], a.translation[1]),
                ri(a.rotation) || l.rotate(a.rotation),
                a.color && (l.fillStyle = a.color),
                a.textAlign && (l.textAlign = a.textAlign),
                a.textBaseline && (l.textBaseline = a.textBaseline);
            })(l, g),
            S = 0;
          S < y.length;
          ++S
        )
          (P = y[S]),
            g.backdrop && eo(l, g.backdrop),
            w &&
              (g.strokeColor && (l.strokeStyle = g.strokeColor),
              ri(g.strokeWidth) || (l.lineWidth = g.strokeWidth),
              l.strokeText(P, o, u, g.maxWidth)),
            l.fillText(P, o, u, g.maxWidth),
            zo(l, o, u, P, g),
            (u += Number(f.lineHeight));
        l.restore();
      }
      function Vn(l, a) {
        const { x: o, y: u, w: f, h: g, radius: y } = a;
        l.arc(o + y.topLeft, u + y.topLeft, y.topLeft, 1.5 * Xt, Xt, !0),
          l.lineTo(o, u + g - y.bottomLeft),
          l.arc(
            o + y.bottomLeft,
            u + g - y.bottomLeft,
            y.bottomLeft,
            Xt,
            ke,
            !0,
          ),
          l.lineTo(o + f - y.bottomRight, u + g),
          l.arc(
            o + f - y.bottomRight,
            u + g - y.bottomRight,
            y.bottomRight,
            ke,
            0,
            !0,
          ),
          l.lineTo(o + f, u + y.topRight),
          l.arc(o + f - y.topRight, u + y.topRight, y.topRight, 0, -ke, !0),
          l.lineTo(o + y.topLeft, u);
      }
      const wo = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
        Yr =
          /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
      function cn(l, a) {
        const o = ("" + l).match(wo);
        if (!o || "normal" === o[1]) return 1.2 * a;
        switch (((l = +o[2]), o[3])) {
          case "px":
            return l;
          case "%":
            l /= 100;
        }
        return a * l;
      }
      const Er = (l) => +l || 0;
      function Zo(l, a) {
        const o = {},
          u = Be(a),
          f = u ? Object.keys(a) : a,
          g = Be(l) ? (u ? (y) => gi(l[y], l[a[y]]) : (y) => l[y]) : () => l;
        for (const y of f) o[y] = Er(g(y));
        return o;
      }
      function bo(l) {
        return Zo(l, { top: "y", right: "x", bottom: "y", left: "x" });
      }
      function xn(l) {
        return Zo(l, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
      }
      function Wn(l) {
        const a = bo(l);
        return (a.width = a.left + a.right), (a.height = a.top + a.bottom), a;
      }
      function jn(l, a) {
        let o = gi((l = l || {}).size, (a = a || un.font).size);
        "string" == typeof o && (o = parseInt(o, 10));
        let u = gi(l.style, a.style);
        u &&
          !("" + u).match(Yr) &&
          (console.warn('Invalid font style specified: "' + u + '"'),
          (u = void 0));
        const f = {
          family: gi(l.family, a.family),
          lineHeight: cn(gi(l.lineHeight, a.lineHeight), o),
          size: o,
          style: u,
          weight: gi(l.weight, a.weight),
          string: "",
        };
        return (
          (f.string = (function Xn(l) {
            return !l || ri(l.size) || ri(l.family)
              ? null
              : (l.style ? l.style + " " : "") +
                  (l.weight ? l.weight + " " : "") +
                  l.size +
                  "px " +
                  l.family;
          })(f)),
          f
        );
      }
      function Co(l, a, o, u) {
        let g,
          y,
          w,
          f = !0;
        for (g = 0, y = l.length; g < y; ++g)
          if (
            ((w = l[g]),
            void 0 !== w &&
              (void 0 !== a && "function" == typeof w && ((w = w(a)), (f = !1)),
              void 0 !== o && te(w) && ((w = w[o % w.length]), (f = !1)),
              void 0 !== w))
          )
            return u && !f && (u.cacheable = !1), w;
      }
      function or(l, a) {
        return Object.assign(Object.create(l), a);
      }
      function Qo(l, a = [""], o, u, f = () => l[0]) {
        const g = o || l;
        typeof u > "u" && (u = Us("_fallback", l));
        const y = {
          [Symbol.toStringTag]: "Object",
          _cacheable: !0,
          _scopes: l,
          _rootScopes: g,
          _fallback: u,
          _getTarget: f,
          override: (w) => Qo([w, ...l], a, g, u),
        };
        return new Proxy(y, {
          deleteProperty: (w, S) => (
            delete w[S], delete w._keys, delete l[0][S], !0
          ),
          get: (w, S) =>
            Aa(w, S, () =>
              (function Eo(l, a, o, u) {
                let f;
                for (const g of a)
                  if (((f = Us(ca(g, l), o)), typeof f < "u"))
                    return _n(l, f) ? Mo(o, u, l, f) : f;
              })(S, a, l, w),
            ),
          getOwnPropertyDescriptor: (w, S) =>
            Reflect.getOwnPropertyDescriptor(w._scopes[0], S),
          getPrototypeOf: () => Reflect.getPrototypeOf(l[0]),
          has: (w, S) => rr(w).includes(S),
          ownKeys: (w) => rr(w),
          set(w, S, P) {
            const Y = w._storage || (w._storage = f());
            return (w[S] = Y[S] = P), delete w._keys, !0;
          },
        });
      }
      function Io(l, a, o, u) {
        const f = {
          _cacheable: !1,
          _proxy: l,
          _context: a,
          _subProxy: o,
          _stack: new Set(),
          _descriptors: Ko(l, u),
          setContext: (g) => Io(l, g, o, u),
          override: (g) => Io(l.override(g), a, o, u),
        };
        return new Proxy(f, {
          deleteProperty: (g, y) => (delete g[y], delete l[y], !0),
          get: (g, y, w) =>
            Aa(g, y, () =>
              (function so(l, a, o) {
                const {
                  _proxy: u,
                  _context: f,
                  _subProxy: g,
                  _descriptors: y,
                } = l;
                let w = u[a];
                return (
                  ve(w) &&
                    y.isScriptable(a) &&
                    (w = (function Do(l, a, o, u) {
                      const {
                        _proxy: f,
                        _context: g,
                        _subProxy: y,
                        _stack: w,
                      } = o;
                      if (w.has(l))
                        throw new Error(
                          "Recursion detected: " +
                            Array.from(w).join("->") +
                            "->" +
                            l,
                        );
                      w.add(l);
                      let S = a(g, y || u);
                      return (
                        w.delete(l), _n(l, S) && (S = Mo(f._scopes, f, l, S)), S
                      );
                    })(a, w, l, o)),
                  te(w) &&
                    w.length &&
                    (w = (function _r(l, a, o, u) {
                      const {
                        _proxy: f,
                        _context: g,
                        _subProxy: y,
                        _descriptors: w,
                      } = o;
                      if (typeof g.index < "u" && u(l))
                        return a[g.index % a.length];
                      if (Be(a[0])) {
                        const S = a,
                          P = f._scopes.filter((Y) => Y !== S);
                        a = [];
                        for (const Y of S) {
                          const dt = Mo(P, f, l, Y);
                          a.push(Io(dt, g, y && y[l], w));
                        }
                      }
                      return a;
                    })(a, w, l, y.isIndexable)),
                  _n(a, w) && (w = Io(w, f, g && g[a], y)),
                  w
                );
              })(g, y, w),
            ),
          getOwnPropertyDescriptor: (g, y) =>
            g._descriptors.allKeys
              ? Reflect.has(l, y)
                ? { enumerable: !0, configurable: !0 }
                : void 0
              : Reflect.getOwnPropertyDescriptor(l, y),
          getPrototypeOf: () => Reflect.getPrototypeOf(l),
          has: (g, y) => Reflect.has(l, y),
          ownKeys: () => Reflect.ownKeys(l),
          set: (g, y, w) => ((l[y] = w), delete g[y], !0),
        });
      }
      function Ko(l, a = { scriptable: !0, indexable: !0 }) {
        const {
          _scriptable: o = a.scriptable,
          _indexable: u = a.indexable,
          _allKeys: f = a.allKeys,
        } = l;
        return {
          allKeys: f,
          scriptable: o,
          indexable: u,
          isScriptable: ve(o) ? o : () => o,
          isIndexable: ve(u) ? u : () => u,
        };
      }
      const ca = (l, a) => (l ? l + it(a) : a),
        _n = (l, a) =>
          Be(a) &&
          "adapters" !== l &&
          (null === Object.getPrototypeOf(a) || a.constructor === Object);
      function Aa(l, a, o) {
        if (Object.prototype.hasOwnProperty.call(l, a) || "constructor" === a)
          return l[a];
        const u = o();
        return (l[a] = u), u;
      }
      function Fr(l, a, o) {
        return ve(l) ? l(a, o) : l;
      }
      const as = (l, a) =>
        !0 === l ? a : "string" == typeof l ? se(a, l) : void 0;
      function zs(l, a, o, u, f) {
        for (const g of a) {
          const y = as(o, g);
          if (y) {
            l.add(y);
            const w = Fr(y._fallback, o, f);
            if (typeof w < "u" && w !== o && w !== u) return w;
          } else if (!1 === y && typeof u < "u" && o !== u) return null;
        }
        return !1;
      }
      function Mo(l, a, o, u) {
        const f = a._rootScopes,
          g = Fr(a._fallback, o, u),
          y = [...l, ...f],
          w = new Set();
        w.add(u);
        let S = zl(w, y, o, g || o, u);
        return (
          !(
            null === S ||
            (typeof g < "u" && g !== o && ((S = zl(w, y, g, S, u)), null === S))
          ) &&
          Qo(Array.from(w), [""], f, g, () =>
            (function to(l, a, o) {
              const u = l._getTarget();
              a in u || (u[a] = {});
              const f = u[a];
              return te(f) && Be(o) ? o : f || {};
            })(a, o, u),
          )
        );
      }
      function zl(l, a, o, u, f) {
        for (; o; ) o = zs(l, a, o, u, f);
        return o;
      }
      function Us(l, a) {
        for (const o of a) {
          if (!o) continue;
          const u = o[l];
          if (typeof u < "u") return u;
        }
      }
      function rr(l) {
        let a = l._keys;
        return (
          a ||
            (a = l._keys =
              (function sr(l) {
                const a = new Set();
                for (const o of l)
                  for (const u of Object.keys(o).filter(
                    (f) => !f.startsWith("_"),
                  ))
                    a.add(u);
                return Array.from(a);
              })(l._scopes)),
          a
        );
      }
      function Ro(l, a, o, u) {
        const { iScale: f } = l,
          { key: g = "r" } = this._parsing,
          y = new Array(u);
        let w, S, P, Y;
        for (w = 0, S = u; w < S; ++w)
          (P = w + o), (Y = a[P]), (y[w] = { r: f.parse(se(Y, g), P) });
        return y;
      }
      const js = Number.EPSILON || 1e-14,
        vr = (l, a) => a < l.length && !l[a].skip && l[a],
        vs = (l) => ("x" === l ? "y" : "x");
      function ka(l, a, o, u) {
        const f = l.skip ? a : l,
          g = a,
          y = o.skip ? a : o,
          w = ne(g, f),
          S = ne(y, g);
        let P = w / (w + S),
          Y = S / (w + S);
        (P = isNaN(P) ? 0 : P), (Y = isNaN(Y) ? 0 : Y);
        const dt = u * P,
          Tt = u * Y;
        return {
          previous: { x: g.x - dt * (y.x - f.x), y: g.y - dt * (y.y - f.y) },
          next: { x: g.x + Tt * (y.x - f.x), y: g.y + Tt * (y.y - f.y) },
        };
      }
      function z(l, a, o) {
        return Math.max(Math.min(l, o), a);
      }
      function _e(l, a, o, u, f) {
        let g, y, w, S;
        if (
          (a.spanGaps && (l = l.filter((P) => !P.skip)),
          "monotone" === a.cubicInterpolationMode)
        )
          !(function st(l, a = "x") {
            const o = vs(a),
              u = l.length,
              f = Array(u).fill(0),
              g = Array(u);
            let y,
              w,
              S,
              P = vr(l, 0);
            for (y = 0; y < u; ++y)
              if (((w = S), (S = P), (P = vr(l, y + 1)), S)) {
                if (P) {
                  const Y = P[a] - S[a];
                  f[y] = 0 !== Y ? (P[o] - S[o]) / Y : 0;
                }
                g[y] = w
                  ? P
                    ? U(f[y - 1]) !== U(f[y])
                      ? 0
                      : (f[y - 1] + f[y]) / 2
                    : f[y - 1]
                  : f[y];
              }
            (function da(l, a, o) {
              const u = l.length;
              let f,
                g,
                y,
                w,
                S,
                P = vr(l, 0);
              for (let Y = 0; Y < u - 1; ++Y)
                if (((S = P), (P = vr(l, Y + 1)), S && P)) {
                  if (j(a[Y], 0, js)) {
                    o[Y] = o[Y + 1] = 0;
                    continue;
                  }
                  (f = o[Y] / a[Y]),
                    (g = o[Y + 1] / a[Y]),
                    (w = Math.pow(f, 2) + Math.pow(g, 2)),
                    !(w <= 9) &&
                      ((y = 3 / Math.sqrt(w)),
                      (o[Y] = f * y * a[Y]),
                      (o[Y + 1] = g * y * a[Y]));
                }
            })(l, f, g),
              (function J(l, a, o = "x") {
                const u = vs(o),
                  f = l.length;
                let g,
                  y,
                  w,
                  S = vr(l, 0);
                for (let P = 0; P < f; ++P) {
                  if (((y = w), (w = S), (S = vr(l, P + 1)), !w)) continue;
                  const Y = w[o],
                    dt = w[u];
                  y &&
                    ((g = (Y - y[o]) / 3),
                    (w[`cp1${o}`] = Y - g),
                    (w[`cp1${u}`] = dt - g * a[P])),
                    S &&
                      ((g = (S[o] - Y) / 3),
                      (w[`cp2${o}`] = Y + g),
                      (w[`cp2${u}`] = dt + g * a[P]));
                }
              })(l, g, a);
          })(l, f);
        else {
          let P = u ? l[l.length - 1] : l[0];
          for (g = 0, y = l.length; g < y; ++g)
            (w = l[g]),
              (S = ka(
                P,
                w,
                l[Math.min(g + 1, y - (u ? 0 : 1)) % y],
                a.tension,
              )),
              (w.cp1x = S.previous.x),
              (w.cp1y = S.previous.y),
              (w.cp2x = S.next.x),
              (w.cp2y = S.next.y),
              (P = w);
        }
        a.capBezierPoints &&
          (function Et(l, a) {
            let o,
              u,
              f,
              g,
              y,
              w = Vo(l[0], a);
            for (o = 0, u = l.length; o < u; ++o)
              (y = g),
                (g = w),
                (w = o < u - 1 && Vo(l[o + 1], a)),
                g &&
                  ((f = l[o]),
                  y &&
                    ((f.cp1x = z(f.cp1x, a.left, a.right)),
                    (f.cp1y = z(f.cp1y, a.top, a.bottom))),
                  w &&
                    ((f.cp2x = z(f.cp2x, a.left, a.right)),
                    (f.cp2y = z(f.cp2y, a.top, a.bottom))));
          })(l, o);
      }
      function Zi() {
        return typeof window < "u" && typeof document < "u";
      }
      function hn(l) {
        let a = l.parentNode;
        return a && "[object ShadowRoot]" === a.toString() && (a = a.host), a;
      }
      function Po(l, a, o) {
        let u;
        return (
          "string" == typeof l
            ? ((u = parseInt(l, 10)),
              -1 !== l.indexOf("%") && (u = (u / 100) * a.parentNode[o]))
            : (u = l),
          u
        );
      }
      const Jo = (l) => l.ownerDocument.defaultView.getComputedStyle(l, null),
        gd = ["top", "right", "bottom", "left"];
      function Hs(l, a, o) {
        const u = {};
        o = o ? "-" + o : "";
        for (let f = 0; f < 4; f++) {
          const g = gd[f];
          u[g] = parseFloat(l[a + "-" + g + o]) || 0;
        }
        return (u.width = u.left + u.right), (u.height = u.top + u.bottom), u;
      }
      const Dc = (l, a, o) => (l > 0 || a > 0) && (!o || !o.shadowRoot);
      function ls(l, a) {
        if ("native" in l) return l;
        const { canvas: o, currentDevicePixelRatio: u } = a,
          f = Jo(o),
          g = "border-box" === f.boxSizing,
          y = Hs(f, "padding"),
          w = Hs(f, "border", "width"),
          {
            x: S,
            y: P,
            box: Y,
          } = (function Ul(l, a) {
            const o = l.touches,
              u = o && o.length ? o[0] : l,
              { offsetX: f, offsetY: g } = u;
            let w,
              S,
              y = !1;
            if (Dc(f, g, l.target)) (w = f), (S = g);
            else {
              const P = a.getBoundingClientRect();
              (w = u.clientX - P.left), (S = u.clientY - P.top), (y = !0);
            }
            return { x: w, y: S, box: y };
          })(l, o),
          dt = y.left + (Y && w.left),
          Tt = y.top + (Y && w.top);
        let { width: Ht, height: be } = a;
        return (
          g && ((Ht -= y.width + w.width), (be -= y.height + w.height)),
          {
            x: Math.round((((S - dt) / Ht) * o.width) / u),
            y: Math.round((((P - Tt) / be) * o.height) / u),
          }
        );
      }
      const ua = (l) => Math.round(10 * l) / 10;
      function xr(l, a, o) {
        const u = a || 1,
          f = Math.floor(l.height * u),
          g = Math.floor(l.width * u);
        (l.height = Math.floor(l.height)), (l.width = Math.floor(l.width));
        const y = l.canvas;
        return (
          y.style &&
            (o || (!y.style.height && !y.style.width)) &&
            ((y.style.height = `${l.height}px`),
            (y.style.width = `${l.width}px`)),
          (l.currentDevicePixelRatio !== u ||
            y.height !== f ||
            y.width !== g) &&
            ((l.currentDevicePixelRatio = u),
            (y.height = f),
            (y.width = g),
            l.ctx.setTransform(u, 0, 0, u, 0, 0),
            !0)
        );
      }
      const ar = (function () {
        let l = !1;
        try {
          const a = {
            get passive() {
              return (l = !0), !1;
            },
          };
          Zi() &&
            (window.addEventListener("test", null, a),
            window.removeEventListener("test", null, a));
        } catch {}
        return l;
      })();
      function Wr(l, a) {
        const o = (function bs(l, a) {
            return Jo(l).getPropertyValue(a);
          })(l, a),
          u = o && o.match(/^(\d+)(\.\d+)?px$/);
        return u ? +u[1] : void 0;
      }
      function cs(l, a, o, u) {
        return { x: l.x + o * (a.x - l.x), y: l.y + o * (a.y - l.y) };
      }
      function ao(l, a, o, u) {
        return {
          x: l.x + o * (a.x - l.x),
          y:
            "middle" === u
              ? o < 0.5
                ? l.y
                : a.y
              : "after" === u
                ? o < 1
                  ? l.y
                  : a.y
                : o > 0
                  ? a.y
                  : l.y,
        };
      }
      function Gs(l, a, o, u) {
        const f = { x: l.cp2x, y: l.cp2y },
          g = { x: a.cp1x, y: a.cp1y },
          y = cs(l, f, o),
          w = cs(f, g, o),
          S = cs(g, a, o),
          P = cs(y, w, o),
          Y = cs(w, S, o);
        return cs(P, Y, o);
      }
      function ys(l, a, o) {
        return l
          ? (function (l, a) {
              return {
                x: (o) => l + l + a - o,
                setWidth(o) {
                  a = o;
                },
                textAlign: (o) =>
                  "center" === o ? o : "right" === o ? "left" : "right",
                xPlus: (o, u) => o - u,
                leftForLtr: (o, u) => o - u,
              };
            })(a, o)
          : {
              x: (l) => l,
              setWidth(l) {},
              textAlign: (l) => l,
              xPlus: (l, a) => l + a,
              leftForLtr: (l, a) => l,
            };
      }
      function Zs(l, a) {
        let o, u;
        ("ltr" === a || "rtl" === a) &&
          ((o = l.canvas.style),
          (u = [
            o.getPropertyValue("direction"),
            o.getPropertyPriority("direction"),
          ]),
          o.setProperty("direction", a, "important"),
          (l.prevTextDirection = u));
      }
      function Ys(l, a) {
        void 0 !== a &&
          (delete l.prevTextDirection,
          l.canvas.style.setProperty("direction", a[0], a[1]));
      }
      function ds(l) {
        return "angle" === l
          ? { between: Bt, compare: tt, normalize: me }
          : { between: Ot, compare: (a, o) => a - o, normalize: (a) => a };
      }
      function ha({ start: l, end: a, count: o, loop: u, style: f }) {
        return {
          start: l % o,
          end: a % o,
          loop: u && (a - l + 1) % o == 0,
          style: f,
        };
      }
      function Oa(l, a, o) {
        if (!o) return [l];
        const { property: u, start: f, end: g } = o,
          y = a.length,
          { compare: w, between: S, normalize: P } = ds(u),
          {
            start: Y,
            end: dt,
            loop: Tt,
            style: Ht,
          } = (function Hl(l, a, o) {
            const { property: u, start: f, end: g } = o,
              { between: y, normalize: w } = ds(u),
              S = a.length;
            let Tt,
              Ht,
              { start: P, end: Y, loop: dt } = l;
            if (dt) {
              for (
                P += S, Y += S, Tt = 0, Ht = S;
                Tt < Ht && y(w(a[P % S][u]), f, g);
                ++Tt
              )
                P--, Y--;
              (P %= S), (Y %= S);
            }
            return (
              Y < P && (Y += S), { start: P, end: Y, loop: dt, style: l.style }
            );
          })(l, a, o),
          be = [];
        let ci,
          ai,
          Ti,
          Ce = !1,
          Se = null;
        for (let Ni = Y, Ji = Y; Ni <= dt; ++Ni)
          (ai = a[Ni % y]),
            !ai.skip &&
              ((ci = P(ai[u])),
              ci !== Ti &&
                ((Ce = S(ci, f, g)),
                null === Se &&
                  (Ce || (S(f, Ti, ci) && 0 !== w(f, Ti))) &&
                  (Se = 0 === w(ci, f) ? Ni : Ji),
                null !== Se &&
                  (!Ce || 0 === w(g, ci) || S(g, Ti, ci)) &&
                  (be.push(
                    ha({ start: Se, end: Ni, loop: Tt, count: y, style: Ht }),
                  ),
                  (Se = null)),
                (Ji = Ni),
                (Ti = ci)));
        return (
          null !== Se &&
            be.push(ha({ start: Se, end: dt, loop: Tt, count: y, style: Ht })),
          be
        );
      }
      function ol(l, a) {
        const o = [],
          u = l.segments;
        for (let f = 0; f < u.length; f++) {
          const g = Oa(u[f], l.points, a);
          g.length && o.push(...g);
        }
        return o;
      }
      function Ra(l) {
        return {
          backgroundColor: l.backgroundColor,
          borderCapStyle: l.borderCapStyle,
          borderDash: l.borderDash,
          borderDashOffset: l.borderDashOffset,
          borderJoinStyle: l.borderJoinStyle,
          borderWidth: l.borderWidth,
          borderColor: l.borderColor,
        };
      }
      function Ec(l, a) {
        if (!a) return !1;
        const o = [],
          u = function (f, g) {
            return Gr(g) ? (o.includes(g) || o.push(g), o.indexOf(g)) : g;
          };
        return JSON.stringify(l, u) !== JSON.stringify(a, u);
      }
      class Sc {
        constructor() {
          (this._request = null),
            (this._charts = new Map()),
            (this._running = !1),
            (this._lastDate = void 0);
        }
        _notify(a, o, u, f) {
          const y = o.duration;
          o.listeners[f].forEach((w) =>
            w({
              chart: a,
              initial: o.initial,
              numSteps: y,
              currentStep: Math.min(u - o.start, y),
            }),
          );
        }
        _refresh() {
          this._request ||
            ((this._running = !0),
            (this._request = bn.call(window, () => {
              this._update(),
                (this._request = null),
                this._running && this._refresh();
            })));
        }
        _update(a = Date.now()) {
          let o = 0;
          this._charts.forEach((u, f) => {
            if (!u.running || !u.items.length) return;
            const g = u.items;
            let S,
              y = g.length - 1,
              w = !1;
            for (; y >= 0; --y)
              (S = g[y]),
                S._active
                  ? (S._total > u.duration && (u.duration = S._total),
                    S.tick(a),
                    (w = !0))
                  : ((g[y] = g[g.length - 1]), g.pop());
            w && (f.draw(), this._notify(f, u, a, "progress")),
              g.length ||
                ((u.running = !1),
                this._notify(f, u, a, "complete"),
                (u.initial = !1)),
              (o += g.length);
          }),
            (this._lastDate = a),
            0 === o && (this._running = !1);
        }
        _getAnims(a) {
          const o = this._charts;
          let u = o.get(a);
          return (
            u ||
              ((u = {
                running: !1,
                initial: !0,
                items: [],
                listeners: { complete: [], progress: [] },
              }),
              o.set(a, u)),
            u
          );
        }
        listen(a, o, u) {
          this._getAnims(a).listeners[o].push(u);
        }
        add(a, o) {
          !o || !o.length || this._getAnims(a).items.push(...o);
        }
        has(a) {
          return this._getAnims(a).items.length > 0;
        }
        start(a) {
          const o = this._charts.get(a);
          o &&
            ((o.running = !0),
            (o.start = Date.now()),
            (o.duration = o.items.reduce(
              (u, f) => Math.max(u, f._duration),
              0,
            )),
            this._refresh());
        }
        running(a) {
          if (!this._running) return !1;
          const o = this._charts.get(a);
          return !(!o || !o.running || !o.items.length);
        }
        stop(a) {
          const o = this._charts.get(a);
          if (!o || !o.items.length) return;
          const u = o.items;
          let f = u.length - 1;
          for (; f >= 0; --f) u[f].cancel();
          (o.items = []), this._notify(a, o, Date.now(), "complete");
        }
        remove(a) {
          return this._charts.delete(a);
        }
      }
      var qr = new Sc();
      const rl = "transparent",
        Zl = {
          boolean: (l, a, o) => (o > 0.5 ? a : l),
          color(l, a, o) {
            const u = Sa(l || rl),
              f = u.valid && Sa(a || rl);
            return f && f.valid ? f.mix(u, o).hexString() : a;
          },
          number: (l, a, o) => l + (a - l) * o,
        };
      class Ac {
        constructor(a, o, u, f) {
          const g = o[u];
          f = Co([a.to, f, g, a.from]);
          const y = Co([a.from, g, f]);
          (this._active = !0),
            (this._fn = a.fn || Zl[a.type || typeof y]),
            (this._easing = Ir[a.easing] || Ir.linear),
            (this._start = Math.floor(Date.now() + (a.delay || 0))),
            (this._duration = this._total = Math.floor(a.duration)),
            (this._loop = !!a.loop),
            (this._target = o),
            (this._prop = u),
            (this._from = y),
            (this._to = f),
            (this._promises = void 0);
        }
        active() {
          return this._active;
        }
        update(a, o, u) {
          if (this._active) {
            this._notify(!1);
            const f = this._target[this._prop],
              g = u - this._start,
              y = this._duration - g;
            (this._start = u),
              (this._duration = Math.floor(Math.max(y, a.duration))),
              (this._total += g),
              (this._loop = !!a.loop),
              (this._to = Co([a.to, o, f, a.from])),
              (this._from = Co([a.from, f, o]));
          }
        }
        cancel() {
          this._active &&
            (this.tick(Date.now()), (this._active = !1), this._notify(!1));
        }
        tick(a) {
          const o = a - this._start,
            u = this._duration,
            f = this._prop,
            g = this._from,
            y = this._loop,
            w = this._to;
          let S;
          if (((this._active = g !== w && (y || o < u)), !this._active))
            return (this._target[f] = w), void this._notify(!0);
          o < 0
            ? (this._target[f] = g)
            : ((S = (o / u) % 2),
              (S = y && S > 1 ? 2 - S : S),
              (S = this._easing(Math.min(1, Math.max(0, S)))),
              (this._target[f] = this._fn(g, w, S)));
        }
        wait() {
          const a = this._promises || (this._promises = []);
          return new Promise((o, u) => {
            a.push({ res: o, rej: u });
          });
        }
        _notify(a) {
          const o = a ? "res" : "rej",
            u = this._promises || [];
          for (let f = 0; f < u.length; f++) u[f][o]();
        }
      }
      class sl {
        constructor(a, o) {
          (this._chart = a), (this._properties = new Map()), this.configure(o);
        }
        configure(a) {
          if (!Be(a)) return;
          const o = Object.keys(un.animation),
            u = this._properties;
          Object.getOwnPropertyNames(a).forEach((f) => {
            const g = a[f];
            if (!Be(g)) return;
            const y = {};
            for (const w of o) y[w] = g[w];
            ((te(g.properties) && g.properties) || [f]).forEach((w) => {
              (w === f || !u.has(w)) && u.set(w, y);
            });
          });
        }
        _animateOptions(a, o) {
          const u = o.options,
            f = (function Yl(l, a) {
              if (!a) return;
              let o = l.options;
              if (o)
                return (
                  o.$shared &&
                    (l.options = o =
                      Object.assign({}, o, { $shared: !1, $animations: {} })),
                  o
                );
              l.options = a;
            })(a, u);
          if (!f) return [];
          const g = this._createAnimations(f, u);
          return (
            u.$shared &&
              (function al(l, a) {
                const o = [],
                  u = Object.keys(a);
                for (let f = 0; f < u.length; f++) {
                  const g = l[u[f]];
                  g && g.active() && o.push(g.wait());
                }
                return Promise.all(o);
              })(a.options.$animations, u).then(
                () => {
                  a.options = u;
                },
                () => {},
              ),
            g
          );
        }
        _createAnimations(a, o) {
          const u = this._properties,
            f = [],
            g = a.$animations || (a.$animations = {}),
            y = Object.keys(o),
            w = Date.now();
          let S;
          for (S = y.length - 1; S >= 0; --S) {
            const P = y[S];
            if ("$" === P.charAt(0)) continue;
            if ("options" === P) {
              f.push(...this._animateOptions(a, o));
              continue;
            }
            const Y = o[P];
            let dt = g[P];
            const Tt = u.get(P);
            if (dt) {
              if (Tt && dt.active()) {
                dt.update(Tt, Y, w);
                continue;
              }
              dt.cancel();
            }
            Tt && Tt.duration
              ? ((g[P] = dt = new Ac(Tt, a, P, Y)), f.push(dt))
              : (a[P] = Y);
          }
          return f;
        }
        update(a, o) {
          if (0 === this._properties.size) return void Object.assign(a, o);
          const u = this._createAnimations(a, o);
          return u.length ? (qr.add(this._chart, u), !0) : void 0;
        }
      }
      function Pa(l, a) {
        const o = (l && l.options) || {},
          u = o.reverse,
          f = void 0 === o.min ? a : 0,
          g = void 0 === o.max ? a : 0;
        return { start: u ? g : f, end: u ? f : g };
      }
      function Cs(l, a) {
        const o = [],
          u = l._getSortedDatasetMetas(a);
        let f, g;
        for (f = 0, g = u.length; f < g; ++f) o.push(u[f].index);
        return o;
      }
      function R(l, a, o, u = {}) {
        const f = l.keys,
          g = "single" === u.mode;
        let y, w, S, P;
        if (null !== a) {
          for (y = 0, w = f.length; y < w; ++y) {
            if (((S = +f[y]), S === o)) {
              if (u.all) continue;
              break;
            }
            (P = l.values[S]),
              Ne(P) && (g || 0 === a || U(a) === U(P)) && (a += P);
          }
          return a;
        }
      }
      function G(l, a) {
        const o = l && l.options.stacked;
        return o || (void 0 === o && void 0 !== a.stack);
      }
      function ni(l, a, o) {
        const u = l[a] || (l[a] = {});
        return u[o] || (u[o] = {});
      }
      function pi(l, a, o, u) {
        for (const f of a.getMatchingVisibleMetas(u).reverse()) {
          const g = l[f.index];
          if ((o && g > 0) || (!o && g < 0)) return f.index;
        }
        return null;
      }
      function $i(l, a) {
        const { chart: o, _cachedMeta: u } = l,
          f = o._stacks || (o._stacks = {}),
          { iScale: g, vScale: y, index: w } = u,
          S = g.axis,
          P = y.axis,
          Y = (function nt(l, a, o) {
            return `${l.id}.${a.id}.${o.stack || o.type}`;
          })(g, y, u),
          dt = a.length;
        let Tt;
        for (let Ht = 0; Ht < dt; ++Ht) {
          const be = a[Ht],
            { [S]: Ce, [P]: Se } = be;
          (Tt = (be._stacks || (be._stacks = {}))[P] = ni(f, Y, Ce)),
            (Tt[w] = Se),
            (Tt._top = pi(Tt, y, !0, u.type)),
            (Tt._bottom = pi(Tt, y, !1, u.type)),
            ((Tt._visualValues || (Tt._visualValues = {}))[w] = Se);
        }
      }
      function Pn(l, a) {
        const o = l.scales;
        return Object.keys(o)
          .filter((u) => o[u].axis === a)
          .shift();
      }
      function tn(l, a) {
        const o = l.controller.index,
          u = l.vScale && l.vScale.axis;
        if (u) {
          a = a || l._parsed;
          for (const f of a) {
            const g = f._stacks;
            if (!g || void 0 === g[u] || void 0 === g[u][o]) return;
            delete g[u][o],
              void 0 !== g[u]._visualValues &&
                void 0 !== g[u]._visualValues[o] &&
                delete g[u]._visualValues[o];
          }
        }
      }
      const zn = (l) => "reset" === l || "none" === l,
        Bn = (l, a) => (a ? l : Object.assign({}, l));
      let Fo = (() =>
        class l {
          static defaults = {};
          static datasetElementType = null;
          static dataElementType = null;
          constructor(o, u) {
            (this.chart = o),
              (this._ctx = o.ctx),
              (this.index = u),
              (this._cachedDataOpts = {}),
              (this._cachedMeta = this.getMeta()),
              (this._type = this._cachedMeta.type),
              (this.options = void 0),
              (this._parsing = !1),
              (this._data = void 0),
              (this._objectData = void 0),
              (this._sharedOptions = void 0),
              (this._drawStart = void 0),
              (this._drawCount = void 0),
              (this.enableOptionSharing = !1),
              (this.supportsDecimation = !1),
              (this.$context = void 0),
              (this._syncList = []),
              (this.datasetElementType = new.target.datasetElementType),
              (this.dataElementType = new.target.dataElementType),
              this.initialize();
          }
          initialize() {
            const o = this._cachedMeta;
            this.configure(),
              this.linkScales(),
              (o._stacked = G(o.vScale, o)),
              this.addElements(),
              this.options.fill &&
                !this.chart.isPluginEnabled("filler") &&
                console.warn(
                  "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options",
                );
          }
          updateIndex(o) {
            this.index !== o && tn(this._cachedMeta), (this.index = o);
          }
          linkScales() {
            const o = this.chart,
              u = this._cachedMeta,
              f = this.getDataset(),
              g = (Tt, Ht, be, Ce) => ("x" === Tt ? Ht : "r" === Tt ? Ce : be),
              y = (u.xAxisID = gi(f.xAxisID, Pn(o, "x"))),
              w = (u.yAxisID = gi(f.yAxisID, Pn(o, "y"))),
              S = (u.rAxisID = gi(f.rAxisID, Pn(o, "r"))),
              P = u.indexAxis,
              Y = (u.iAxisID = g(P, y, w, S)),
              dt = (u.vAxisID = g(P, w, y, S));
            (u.xScale = this.getScaleForId(y)),
              (u.yScale = this.getScaleForId(w)),
              (u.rScale = this.getScaleForId(S)),
              (u.iScale = this.getScaleForId(Y)),
              (u.vScale = this.getScaleForId(dt));
          }
          getDataset() {
            return this.chart.data.datasets[this.index];
          }
          getMeta() {
            return this.chart.getDatasetMeta(this.index);
          }
          getScaleForId(o) {
            return this.chart.scales[o];
          }
          _getOtherScale(o) {
            const u = this._cachedMeta;
            return o === u.iScale ? u.vScale : u.iScale;
          }
          reset() {
            this._update("reset");
          }
          _destroy() {
            const o = this._cachedMeta;
            this._data && Hi(this._data, this), o._stacked && tn(o);
          }
          _dataCheck() {
            const o = this.getDataset(),
              u = o.data || (o.data = []),
              f = this._data;
            if (Be(u))
              this._data = (function ht(l, a) {
                const { iScale: o, vScale: u } = a,
                  f = "x" === o.axis ? "x" : "y",
                  g = "x" === u.axis ? "x" : "y",
                  y = Object.keys(l),
                  w = new Array(y.length);
                let S, P, Y;
                for (S = 0, P = y.length; S < P; ++S)
                  (Y = y[S]), (w[S] = { [f]: Y, [g]: l[Y] });
                return w;
              })(u, this._cachedMeta);
            else if (f !== u) {
              if (f) {
                Hi(f, this);
                const g = this._cachedMeta;
                tn(g), (g._parsed = []);
              }
              u &&
                Object.isExtensible(u) &&
                (function Ei(l, a) {
                  l._chartjs
                    ? l._chartjs.listeners.push(a)
                    : (Object.defineProperty(l, "_chartjs", {
                        configurable: !0,
                        enumerable: !1,
                        value: { listeners: [a] },
                      }),
                      si.forEach((o) => {
                        const u = "_onData" + it(o),
                          f = l[o];
                        Object.defineProperty(l, o, {
                          configurable: !0,
                          enumerable: !1,
                          value(...g) {
                            const y = f.apply(this, g);
                            return (
                              l._chartjs.listeners.forEach((w) => {
                                "function" == typeof w[u] && w[u](...g);
                              }),
                              y
                            );
                          },
                        });
                      }));
                })(u, this),
                (this._syncList = []),
                (this._data = u);
            }
          }
          addElements() {
            const o = this._cachedMeta;
            this._dataCheck(),
              this.datasetElementType &&
                (o.dataset = new this.datasetElementType());
          }
          buildOrUpdateElements(o) {
            const u = this._cachedMeta,
              f = this.getDataset();
            let g = !1;
            this._dataCheck();
            const y = u._stacked;
            (u._stacked = G(u.vScale, u)),
              u.stack !== f.stack && ((g = !0), tn(u), (u.stack = f.stack)),
              this._resyncElements(o),
              (g || y !== u._stacked) && $i(this, u._parsed);
          }
          configure() {
            const o = this.chart.config,
              u = o.datasetScopeKeys(this._type),
              f = o.getOptionScopes(this.getDataset(), u, !0);
            (this.options = o.createResolver(f, this.getContext())),
              (this._parsing = this.options.parsing),
              (this._cachedDataOpts = {});
          }
          parse(o, u) {
            const { _cachedMeta: f, _data: g } = this,
              { iScale: y, _stacked: w } = f,
              S = y.axis;
            let dt,
              Tt,
              Ht,
              P = (0 === o && u === g.length) || f._sorted,
              Y = o > 0 && f._parsed[o - 1];
            if (!1 === this._parsing)
              (f._parsed = g), (f._sorted = !0), (Ht = g);
            else {
              Ht = te(g[o])
                ? this.parseArrayData(f, g, o, u)
                : Be(g[o])
                  ? this.parseObjectData(f, g, o, u)
                  : this.parsePrimitiveData(f, g, o, u);
              const be = () => null === Tt[S] || (Y && Tt[S] < Y[S]);
              for (dt = 0; dt < u; ++dt)
                (f._parsed[dt + o] = Tt = Ht[dt]),
                  P && (be() && (P = !1), (Y = Tt));
              f._sorted = P;
            }
            w && $i(this, Ht);
          }
          parsePrimitiveData(o, u, f, g) {
            const { iScale: y, vScale: w } = o,
              S = y.axis,
              P = w.axis,
              Y = y.getLabels(),
              dt = y === w,
              Tt = new Array(g);
            let Ht, be, Ce;
            for (Ht = 0, be = g; Ht < be; ++Ht)
              (Ce = Ht + f),
                (Tt[Ht] = {
                  [S]: dt || y.parse(Y[Ce], Ce),
                  [P]: w.parse(u[Ce], Ce),
                });
            return Tt;
          }
          parseArrayData(o, u, f, g) {
            const { xScale: y, yScale: w } = o,
              S = new Array(g);
            let P, Y, dt, Tt;
            for (P = 0, Y = g; P < Y; ++P)
              (dt = P + f),
                (Tt = u[dt]),
                (S[P] = { x: y.parse(Tt[0], dt), y: w.parse(Tt[1], dt) });
            return S;
          }
          parseObjectData(o, u, f, g) {
            const { xScale: y, yScale: w } = o,
              { xAxisKey: S = "x", yAxisKey: P = "y" } = this._parsing,
              Y = new Array(g);
            let dt, Tt, Ht, be;
            for (dt = 0, Tt = g; dt < Tt; ++dt)
              (Ht = dt + f),
                (be = u[Ht]),
                (Y[dt] = {
                  x: y.parse(se(be, S), Ht),
                  y: w.parse(se(be, P), Ht),
                });
            return Y;
          }
          getParsed(o) {
            return this._cachedMeta._parsed[o];
          }
          getDataElement(o) {
            return this._cachedMeta.data[o];
          }
          applyStack(o, u, f) {
            const y = this._cachedMeta,
              w = u[o.axis];
            return R(
              {
                keys: Cs(this.chart, !0),
                values: u._stacks[o.axis]._visualValues,
              },
              w,
              y.index,
              { mode: f },
            );
          }
          updateRangeFromParsed(o, u, f, g) {
            const y = f[u.axis];
            let w = null === y ? NaN : y;
            const S = g && f._stacks[u.axis];
            g && S && ((g.values = S), (w = R(g, y, this._cachedMeta.index))),
              (o.min = Math.min(o.min, w)),
              (o.max = Math.max(o.max, w));
          }
          getMinMax(o, u) {
            const f = this._cachedMeta,
              g = f._parsed,
              y = f._sorted && o === f.iScale,
              w = g.length,
              S = this._getOtherScale(o),
              P = ((l, a, o) =>
                l &&
                !a.hidden &&
                a._stacked && { keys: Cs(this.chart, !0), values: null })(u, f),
              Y = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
              },
              { min: dt, max: Tt } = (function ce(l) {
                const {
                  min: a,
                  max: o,
                  minDefined: u,
                  maxDefined: f,
                } = l.getUserBounds();
                return {
                  min: u ? a : Number.NEGATIVE_INFINITY,
                  max: f ? o : Number.POSITIVE_INFINITY,
                };
              })(S);
            let Ht, be;
            function Ce() {
              be = g[Ht];
              const Se = be[S.axis];
              return !Ne(be[o.axis]) || dt > Se || Tt < Se;
            }
            for (
              Ht = 0;
              Ht < w && (Ce() || (this.updateRangeFromParsed(Y, o, be, P), !y));
              ++Ht
            );
            if (y)
              for (Ht = w - 1; Ht >= 0; --Ht)
                if (!Ce()) {
                  this.updateRangeFromParsed(Y, o, be, P);
                  break;
                }
            return Y;
          }
          getAllParsedValues(o) {
            const u = this._cachedMeta._parsed,
              f = [];
            let g, y, w;
            for (g = 0, y = u.length; g < y; ++g)
              (w = u[g][o.axis]), Ne(w) && f.push(w);
            return f;
          }
          getMaxOverflow() {
            return !1;
          }
          getLabelAndValue(o) {
            const u = this._cachedMeta,
              f = u.iScale,
              g = u.vScale,
              y = this.getParsed(o);
            return {
              label: f ? "" + f.getLabelForValue(y[f.axis]) : "",
              value: g ? "" + g.getLabelForValue(y[g.axis]) : "",
            };
          }
          _update(o) {
            const u = this._cachedMeta;
            this.update(o || "default"),
              (u._clip = (function $s(l) {
                let a, o, u, f;
                return (
                  Be(l)
                    ? ((a = l.top), (o = l.right), (u = l.bottom), (f = l.left))
                    : (a = o = u = f = l),
                  { top: a, right: o, bottom: u, left: f, disabled: !1 === l }
                );
              })(
                gi(
                  this.options.clip,
                  (function Lr(l, a, o) {
                    if (!1 === o) return !1;
                    const u = Pa(l, o),
                      f = Pa(a, o);
                    return {
                      top: f.end,
                      right: u.end,
                      bottom: f.start,
                      left: u.start,
                    };
                  })(u.xScale, u.yScale, this.getMaxOverflow()),
                ),
              ));
          }
          update(o) {}
          draw() {
            const o = this._ctx,
              f = this._cachedMeta,
              g = f.data || [],
              y = this.chart.chartArea,
              w = [],
              S = this._drawStart || 0,
              P = this._drawCount || g.length - S,
              Y = this.options.drawActiveElementsOnTop;
            let dt;
            for (
              f.dataset && f.dataset.draw(o, y, S, P), dt = S;
              dt < S + P;
              ++dt
            ) {
              const Tt = g[dt];
              Tt.hidden || (Tt.active && Y ? w.push(Tt) : Tt.draw(o, y));
            }
            for (dt = 0; dt < w.length; ++dt) w[dt].draw(o, y);
          }
          getStyle(o, u) {
            const f = u ? "active" : "default";
            return void 0 === o && this._cachedMeta.dataset
              ? this.resolveDatasetElementOptions(f)
              : this.resolveDataElementOptions(o || 0, f);
          }
          getContext(o, u, f) {
            const g = this.getDataset();
            let y;
            if (o >= 0 && o < this._cachedMeta.data.length) {
              const w = this._cachedMeta.data[o];
              (y =
                w.$context ||
                (w.$context = (function Fn(l, a, o) {
                  return or(l, {
                    active: !1,
                    dataIndex: a,
                    parsed: void 0,
                    raw: void 0,
                    element: o,
                    index: a,
                    mode: "default",
                    type: "data",
                  });
                })(this.getContext(), o, w))),
                (y.parsed = this.getParsed(o)),
                (y.raw = g.data[o]),
                (y.index = y.dataIndex = o);
            } else
              (y =
                this.$context ||
                (this.$context = (function Gn(l, a) {
                  return or(l, {
                    active: !1,
                    dataset: void 0,
                    datasetIndex: a,
                    index: a,
                    mode: "default",
                    type: "dataset",
                  });
                })(this.chart.getContext(), this.index))),
                (y.dataset = g),
                (y.index = y.datasetIndex = this.index);
            return (y.active = !!u), (y.mode = f), y;
          }
          resolveDatasetElementOptions(o) {
            return this._resolveElementOptions(this.datasetElementType.id, o);
          }
          resolveDataElementOptions(o, u) {
            return this._resolveElementOptions(this.dataElementType.id, u, o);
          }
          _resolveElementOptions(o, u = "default", f) {
            const g = "active" === u,
              y = this._cachedDataOpts,
              w = o + "-" + u,
              S = y[w],
              P = this.enableOptionSharing && Ut(f);
            if (S) return Bn(S, P);
            const Y = this.chart.config,
              dt = Y.datasetElementScopeKeys(this._type, o),
              Tt = g ? [`${o}Hover`, "hover", o, ""] : [o, ""],
              Ht = Y.getOptionScopes(this.getDataset(), dt),
              be = Object.keys(un.elements[o]),
              Se = Y.resolveNamedOptions(
                Ht,
                be,
                () => this.getContext(f, g, u),
                Tt,
              );
            return (
              Se.$shared &&
                ((Se.$shared = P), (y[w] = Object.freeze(Bn(Se, P)))),
              Se
            );
          }
          _resolveAnimations(o, u, f) {
            const g = this.chart,
              y = this._cachedDataOpts,
              w = `animation-${u}`,
              S = y[w];
            if (S) return S;
            let P;
            if (!1 !== g.options.animation) {
              const dt = this.chart.config,
                Tt = dt.datasetAnimationScopeKeys(this._type, u),
                Ht = dt.getOptionScopes(this.getDataset(), Tt);
              P = dt.createResolver(Ht, this.getContext(o, f, u));
            }
            const Y = new sl(g, P && P.animations);
            return P && P._cacheable && (y[w] = Object.freeze(Y)), Y;
          }
          getSharedOptions(o) {
            if (o.$shared)
              return (
                this._sharedOptions ||
                (this._sharedOptions = Object.assign({}, o))
              );
          }
          includeOptions(o, u) {
            return !u || zn(o) || this.chart._animationsDisabled;
          }
          _getSharedOptions(o, u) {
            const f = this.resolveDataElementOptions(o, u),
              g = this._sharedOptions,
              y = this.getSharedOptions(f),
              w = this.includeOptions(u, y) || y !== g;
            return (
              this.updateSharedOptions(y, u, f),
              { sharedOptions: y, includeOptions: w }
            );
          }
          updateElement(o, u, f, g) {
            zn(g)
              ? Object.assign(o, f)
              : this._resolveAnimations(u, g).update(o, f);
          }
          updateSharedOptions(o, u, f) {
            o && !zn(u) && this._resolveAnimations(void 0, u).update(o, f);
          }
          _setStyle(o, u, f, g) {
            o.active = g;
            const y = this.getStyle(u, g);
            this._resolveAnimations(u, f, g).update(o, {
              options: (!g && this.getSharedOptions(y)) || y,
            });
          }
          removeHoverStyle(o, u, f) {
            this._setStyle(o, f, "active", !1);
          }
          setHoverStyle(o, u, f) {
            this._setStyle(o, f, "active", !0);
          }
          _removeDatasetHoverStyle() {
            const o = this._cachedMeta.dataset;
            o && this._setStyle(o, void 0, "active", !1);
          }
          _setDatasetHoverStyle() {
            const o = this._cachedMeta.dataset;
            o && this._setStyle(o, void 0, "active", !0);
          }
          _resyncElements(o) {
            const u = this._data,
              f = this._cachedMeta.data;
            for (const [S, P, Y] of this._syncList) this[S](P, Y);
            this._syncList = [];
            const g = f.length,
              y = u.length,
              w = Math.min(y, g);
            w && this.parse(0, w),
              y > g
                ? this._insertElements(g, y - g, o)
                : y < g && this._removeElements(y, g - y);
          }
          _insertElements(o, u, f = !0) {
            const g = this._cachedMeta,
              y = g.data,
              w = o + u;
            let S;
            const P = (Y) => {
              for (Y.length += u, S = Y.length - 1; S >= w; S--)
                Y[S] = Y[S - u];
            };
            for (P(y), S = o; S < w; ++S) y[S] = new this.dataElementType();
            this._parsing && P(g._parsed),
              this.parse(o, u),
              f && this.updateElements(y, o, u, "reset");
          }
          updateElements(o, u, f, g) {}
          _removeElements(o, u) {
            const f = this._cachedMeta;
            if (this._parsing) {
              const g = f._parsed.splice(o, u);
              f._stacked && tn(f, g);
            }
            f.data.splice(o, u);
          }
          _sync(o) {
            if (this._parsing) this._syncList.push(o);
            else {
              const [u, f, g] = o;
              this[u](f, g);
            }
            this.chart._dataChanges.push([this.index, ...o]);
          }
          _onDataPush() {
            const o = arguments.length;
            this._sync([
              "_insertElements",
              this.getDataset().data.length - o,
              o,
            ]);
          }
          _onDataPop() {
            this._sync([
              "_removeElements",
              this._cachedMeta.data.length - 1,
              1,
            ]);
          }
          _onDataShift() {
            this._sync(["_removeElements", 0, 1]);
          }
          _onDataSplice(o, u) {
            u && this._sync(["_removeElements", o, u]);
            const f = arguments.length - 2;
            f && this._sync(["_insertElements", o, f]);
          }
          _onDataUnshift() {
            this._sync(["_insertElements", 0, arguments.length]);
          }
        })();
      function Qr(l) {
        const a = l.iScale,
          o = (function Xo(l, a) {
            if (!l._cache.$bar) {
              const o = l.getMatchingVisibleMetas(a);
              let u = [];
              for (let f = 0, g = o.length; f < g; f++)
                u = u.concat(o[f].controller.getAllParsedValues(l));
              l._cache.$bar = Yi(u.sort((f, g) => f - g));
            }
            return l._cache.$bar;
          })(a, l.type);
        let f,
          g,
          y,
          w,
          u = a._length;
        const S = () => {
          32767 === y ||
            -32768 === y ||
            (Ut(w) && (u = Math.min(u, Math.abs(y - w) || u)), (w = y));
        };
        for (f = 0, g = o.length; f < g; ++f)
          (y = a.getPixelForValue(o[f])), S();
        for (w = void 0, f = 0, g = a.ticks.length; f < g; ++f)
          (y = a.getPixelForTick(f)), S();
        return u;
      }
      function Sr(l, a, o, u) {
        return (
          te(l)
            ? (function jo(l, a, o, u) {
                const f = o.parse(l[0], u),
                  g = o.parse(l[1], u),
                  y = Math.min(f, g),
                  w = Math.max(f, g);
                let S = y,
                  P = w;
                Math.abs(y) > Math.abs(w) && ((S = w), (P = y)),
                  (a[o.axis] = P),
                  (a._custom = {
                    barStart: S,
                    barEnd: P,
                    start: f,
                    end: g,
                    min: y,
                    max: w,
                  });
              })(l, a, o, u)
            : (a[o.axis] = o.parse(l, u)),
          a
        );
      }
      function lr(l, a, o, u) {
        const f = l.iScale,
          g = l.vScale,
          y = f.getLabels(),
          w = f === g,
          S = [];
        let P, Y, dt, Tt;
        for (P = o, Y = o + u; P < Y; ++P)
          (Tt = a[P]),
            (dt = {}),
            (dt[f.axis] = w || f.parse(y[P], P)),
            S.push(Sr(Tt, dt, g, P));
        return S;
      }
      function Zn(l) {
        return l && void 0 !== l.barStart && void 0 !== l.barEnd;
      }
      function cr(l, a, o, u) {
        let f = a.borderSkipped;
        const g = {};
        if (!f) return void (l.borderSkipped = g);
        if (!0 === f)
          return void (l.borderSkipped = {
            top: !0,
            right: !0,
            bottom: !0,
            left: !0,
          });
        const {
          start: y,
          end: w,
          reverse: S,
          top: P,
          bottom: Y,
        } = (function Ws(l) {
          let a, o, u, f, g;
          return (
            l.horizontal
              ? ((a = l.base > l.x), (o = "left"), (u = "right"))
              : ((a = l.base < l.y), (o = "bottom"), (u = "top")),
            a ? ((f = "end"), (g = "start")) : ((f = "start"), (g = "end")),
            { start: o, end: u, reverse: a, top: f, bottom: g }
          );
        })(l);
        "middle" === f &&
          o &&
          ((l.enableBorderRadius = !0),
          (o._top || 0) === u
            ? (f = P)
            : (o._bottom || 0) === u
              ? (f = Y)
              : ((g[kc(Y, y, w, S)] = !0), (f = P))),
          (g[kc(f, y, w, S)] = !0),
          (l.borderSkipped = g);
      }
      function kc(l, a, o, u) {
        return (
          u
            ? ((l = (function cl(l, a, o) {
                return l === a ? o : l === o ? a : l;
              })(l, a, o)),
              (l = hs(l, o, a)))
            : (l = hs(l, a, o)),
          l
        );
      }
      function hs(l, a, o) {
        return "start" === l ? a : "end" === l ? o : l;
      }
      function wr(l, { inflateAmount: a }, o) {
        l.inflateAmount = "auto" === a ? (1 === o ? 0.33 : 0) : a;
      }
      let _d = (() =>
          class l extends Fo {
            static id = "bar";
            static defaults = {
              datasetElementType: !1,
              dataElementType: "bar",
              categoryPercentage: 0.8,
              barPercentage: 0.9,
              grouped: !0,
              animations: {
                numbers: {
                  type: "number",
                  properties: ["x", "y", "base", "width", "height"],
                },
              },
            };
            static overrides = {
              scales: {
                _index_: { type: "category", offset: !0, grid: { offset: !0 } },
                _value_: { type: "linear", beginAtZero: !0 },
              },
            };
            parsePrimitiveData(o, u, f, g) {
              return lr(o, u, f, g);
            }
            parseArrayData(o, u, f, g) {
              return lr(o, u, f, g);
            }
            parseObjectData(o, u, f, g) {
              const { iScale: y, vScale: w } = o,
                { xAxisKey: S = "x", yAxisKey: P = "y" } = this._parsing,
                Y = "x" === y.axis ? S : P,
                dt = "x" === w.axis ? S : P,
                Tt = [];
              let Ht, be, Ce, Se;
              for (Ht = f, be = f + g; Ht < be; ++Ht)
                (Se = u[Ht]),
                  (Ce = {}),
                  (Ce[y.axis] = y.parse(se(Se, Y), Ht)),
                  Tt.push(Sr(se(Se, dt), Ce, w, Ht));
              return Tt;
            }
            updateRangeFromParsed(o, u, f, g) {
              super.updateRangeFromParsed(o, u, f, g);
              const y = f._custom;
              y &&
                u === this._cachedMeta.vScale &&
                ((o.min = Math.min(o.min, y.min)),
                (o.max = Math.max(o.max, y.max)));
            }
            getMaxOverflow() {
              return 0;
            }
            getLabelAndValue(o) {
              const u = this._cachedMeta,
                { iScale: f, vScale: g } = u,
                y = this.getParsed(o),
                w = y._custom,
                S = Zn(w)
                  ? "[" + w.start + ", " + w.end + "]"
                  : "" + g.getLabelForValue(y[g.axis]);
              return { label: "" + f.getLabelForValue(y[f.axis]), value: S };
            }
            initialize() {
              (this.enableOptionSharing = !0),
                super.initialize(),
                (this._cachedMeta.stack = this.getDataset().stack);
            }
            update(o) {
              const u = this._cachedMeta;
              this.updateElements(u.data, 0, u.data.length, o);
            }
            updateElements(o, u, f, g) {
              const y = "reset" === g,
                {
                  index: w,
                  _cachedMeta: { vScale: S },
                } = this,
                P = S.getBasePixel(),
                Y = S.isHorizontal(),
                dt = this._getRuler(),
                { sharedOptions: Tt, includeOptions: Ht } =
                  this._getSharedOptions(u, g);
              for (let be = u; be < u + f; be++) {
                const Ce = this.getParsed(be),
                  Se =
                    y || ri(Ce[S.axis])
                      ? { base: P, head: P }
                      : this._calculateBarValuePixels(be),
                  ci = this._calculateBarIndexPixels(be, dt),
                  ai = (Ce._stacks || {})[S.axis],
                  Ti = {
                    horizontal: Y,
                    base: Se.base,
                    enableBorderRadius:
                      !ai ||
                      Zn(Ce._custom) ||
                      w === ai._top ||
                      w === ai._bottom,
                    x: Y ? Se.head : ci.center,
                    y: Y ? ci.center : Se.head,
                    height: Y ? ci.size : Math.abs(Se.size),
                    width: Y ? Math.abs(Se.size) : ci.size,
                  };
                Ht &&
                  (Ti.options =
                    Tt ||
                    this.resolveDataElementOptions(
                      be,
                      o[be].active ? "active" : g,
                    ));
                const Oi = Ti.options || o[be].options;
                cr(Ti, Oi, ai, w),
                  wr(Ti, Oi, dt.ratio),
                  this.updateElement(o[be], be, Ti, g);
              }
            }
            _getStacks(o, u) {
              const { iScale: f } = this._cachedMeta,
                g = f
                  .getMatchingVisibleMetas(this._type)
                  .filter((P) => P.controller.options.grouped),
                y = f.options.stacked,
                w = [],
                S = (P) => {
                  const Y = P.controller.getParsed(u),
                    dt = Y && Y[P.vScale.axis];
                  if (ri(dt) || isNaN(dt)) return !0;
                };
              for (const P of g)
                if (
                  (void 0 === u || !S(P)) &&
                  ((!1 === y ||
                    -1 === w.indexOf(P.stack) ||
                    (void 0 === y && void 0 === P.stack)) &&
                    w.push(P.stack),
                  P.index === o)
                )
                  break;
              return w.length || w.push(void 0), w;
            }
            _getStackCount(o) {
              return this._getStacks(void 0, o).length;
            }
            _getStackIndex(o, u, f) {
              const g = this._getStacks(o, f),
                y = void 0 !== u ? g.indexOf(u) : -1;
              return -1 === y ? g.length - 1 : y;
            }
            _getRuler() {
              const o = this.options,
                u = this._cachedMeta,
                f = u.iScale,
                g = [];
              let y, w;
              for (y = 0, w = u.data.length; y < w; ++y)
                g.push(f.getPixelForValue(this.getParsed(y)[f.axis], y));
              const S = o.barThickness;
              return {
                min: S || Qr(u),
                pixels: g,
                start: f._startPixel,
                end: f._endPixel,
                stackCount: this._getStackCount(),
                scale: f,
                grouped: o.grouped,
                ratio: S ? 1 : o.categoryPercentage * o.barPercentage,
              };
            }
            _calculateBarValuePixels(o) {
              const {
                  _cachedMeta: { vScale: u, _stacked: f, index: g },
                  options: { base: y, minBarLength: w },
                } = this,
                S = y || 0,
                P = this.getParsed(o),
                Y = P._custom,
                dt = Zn(Y);
              let Ce,
                Se,
                Tt = P[u.axis],
                Ht = 0,
                be = f ? this.applyStack(u, P, f) : Tt;
              be !== Tt && ((Ht = be - Tt), (be = Tt)),
                dt &&
                  ((Tt = Y.barStart),
                  (be = Y.barEnd - Y.barStart),
                  0 !== Tt && U(Tt) !== U(Y.barEnd) && (Ht = 0),
                  (Ht += Tt));
              const ci = ri(y) || dt ? Ht : y;
              let ai = u.getPixelForValue(ci);
              if (
                ((Ce = this.chart.getDataVisibility(o)
                  ? u.getPixelForValue(Ht + be)
                  : ai),
                (Se = Ce - ai),
                Math.abs(Se) < w)
              ) {
                (Se =
                  (function ll(l, a, o) {
                    return 0 !== l
                      ? U(l)
                      : (a.isHorizontal() ? 1 : -1) * (a.min >= o ? 1 : -1);
                  })(Se, u, S) * w),
                  Tt === S && (ai -= Se / 2);
                const Ti = u.getPixelForDecimal(0),
                  Oi = u.getPixelForDecimal(1),
                  wi = Math.min(Ti, Oi),
                  Di = Math.max(Ti, Oi);
                (ai = Math.max(Math.min(ai, Di), wi)),
                  (Ce = ai + Se),
                  f &&
                    !dt &&
                    (P._stacks[u.axis]._visualValues[g] =
                      u.getValueForPixel(Ce) - u.getValueForPixel(ai));
              }
              if (ai === u.getPixelForValue(S)) {
                const Ti = (U(Se) * u.getLineWidthForValue(S)) / 2;
                (ai += Ti), (Se -= Ti);
              }
              return { size: Se, base: ai, head: Ce, center: Ce + Se / 2 };
            }
            _calculateBarIndexPixels(o, u) {
              const f = u.scale,
                g = this.options,
                y = g.skipNull,
                w = gi(g.maxBarThickness, 1 / 0);
              let S, P;
              if (u.grouped) {
                const Y = y ? this._getStackCount(o) : u.stackCount,
                  dt =
                    "flex" === g.barThickness
                      ? (function us(l, a, o, u) {
                          const f = a.pixels,
                            g = f[l];
                          let y = l > 0 ? f[l - 1] : null,
                            w = l < f.length - 1 ? f[l + 1] : null;
                          const S = o.categoryPercentage;
                          null === y &&
                            (y = g - (null === w ? a.end - a.start : w - g)),
                            null === w && (w = g + g - y);
                          const P = g - ((g - Math.min(y, w)) / 2) * S;
                          return {
                            chunk: ((Math.abs(w - y) / 2) * S) / u,
                            ratio: o.barPercentage,
                            start: P,
                          };
                        })(o, u, g, Y)
                      : (function Uo(l, a, o, u) {
                          const f = o.barThickness;
                          let g, y;
                          return (
                            ri(f)
                              ? ((g = a.min * o.categoryPercentage),
                                (y = o.barPercentage))
                              : ((g = f * u), (y = 1)),
                            {
                              chunk: g / u,
                              ratio: y,
                              start: a.pixels[l] - g / 2,
                            }
                          );
                        })(o, u, g, Y),
                  Tt = this._getStackIndex(
                    this.index,
                    this._cachedMeta.stack,
                    y ? o : void 0,
                  );
                (S = dt.start + dt.chunk * Tt + dt.chunk / 2),
                  (P = Math.min(w, dt.chunk * dt.ratio));
              } else
                (S = f.getPixelForValue(this.getParsed(o)[f.axis], o)),
                  (P = Math.min(w, u.min * u.ratio));
              return { base: S - P / 2, head: S + P / 2, center: S, size: P };
            }
            draw() {
              const o = this._cachedMeta,
                u = o.vScale,
                f = o.data,
                g = f.length;
              let y = 0;
              for (; y < g; ++y)
                null !== this.getParsed(y)[u.axis] &&
                  !f[y].hidden &&
                  f[y].draw(this._ctx);
            }
          })(),
        dl = (() =>
          class l extends Fo {
            static id = "bubble";
            static defaults = {
              datasetElementType: !1,
              dataElementType: "point",
              animations: {
                numbers: {
                  type: "number",
                  properties: ["x", "y", "borderWidth", "radius"],
                },
              },
            };
            static overrides = {
              scales: { x: { type: "linear" }, y: { type: "linear" } },
            };
            initialize() {
              (this.enableOptionSharing = !0), super.initialize();
            }
            parsePrimitiveData(o, u, f, g) {
              const y = super.parsePrimitiveData(o, u, f, g);
              for (let w = 0; w < y.length; w++)
                y[w]._custom = this.resolveDataElementOptions(w + f).radius;
              return y;
            }
            parseArrayData(o, u, f, g) {
              const y = super.parseArrayData(o, u, f, g);
              for (let w = 0; w < y.length; w++)
                y[w]._custom = gi(
                  u[f + w][2],
                  this.resolveDataElementOptions(w + f).radius,
                );
              return y;
            }
            parseObjectData(o, u, f, g) {
              const y = super.parseObjectData(o, u, f, g);
              for (let w = 0; w < y.length; w++) {
                const S = u[f + w];
                y[w]._custom = gi(
                  S && S.r && +S.r,
                  this.resolveDataElementOptions(w + f).radius,
                );
              }
              return y;
            }
            getMaxOverflow() {
              const o = this._cachedMeta.data;
              let u = 0;
              for (let f = o.length - 1; f >= 0; --f)
                u = Math.max(
                  u,
                  o[f].size(this.resolveDataElementOptions(f)) / 2,
                );
              return u > 0 && u;
            }
            getLabelAndValue(o) {
              const u = this._cachedMeta,
                f = this.chart.data.labels || [],
                { xScale: g, yScale: y } = u,
                w = this.getParsed(o),
                S = g.getLabelForValue(w.x),
                P = y.getLabelForValue(w.y),
                Y = w._custom;
              return {
                label: f[o] || "",
                value: "(" + S + ", " + P + (Y ? ", " + Y : "") + ")",
              };
            }
            update(o) {
              const u = this._cachedMeta.data;
              this.updateElements(u, 0, u.length, o);
            }
            updateElements(o, u, f, g) {
              const y = "reset" === g,
                { iScale: w, vScale: S } = this._cachedMeta,
                { sharedOptions: P, includeOptions: Y } =
                  this._getSharedOptions(u, g),
                dt = w.axis,
                Tt = S.axis;
              for (let Ht = u; Ht < u + f; Ht++) {
                const be = o[Ht],
                  Ce = !y && this.getParsed(Ht),
                  Se = {},
                  ci = (Se[dt] = y
                    ? w.getPixelForDecimal(0.5)
                    : w.getPixelForValue(Ce[dt])),
                  ai = (Se[Tt] = y
                    ? S.getBasePixel()
                    : S.getPixelForValue(Ce[Tt]));
                (Se.skip = isNaN(ci) || isNaN(ai)),
                  Y &&
                    ((Se.options =
                      P ||
                      this.resolveDataElementOptions(
                        Ht,
                        be.active ? "active" : g,
                      )),
                    y && (Se.options.radius = 0)),
                  this.updateElement(be, Ht, Se, g);
              }
            }
            resolveDataElementOptions(o, u) {
              const f = this.getParsed(o);
              let g = super.resolveDataElementOptions(o, u);
              g.$shared && (g = Object.assign({}, g, { $shared: !1 }));
              const y = g.radius;
              return (
                "active" !== u && (g.radius = 0),
                (g.radius += gi(f && f._custom, y)),
                g
              );
            }
          })(),
        fs = (() =>
          class l extends Fo {
            static id = "doughnut";
            static defaults = {
              datasetElementType: !1,
              dataElementType: "arc",
              animation: { animateRotate: !0, animateScale: !1 },
              animations: {
                numbers: {
                  type: "number",
                  properties: [
                    "circumference",
                    "endAngle",
                    "innerRadius",
                    "outerRadius",
                    "startAngle",
                    "x",
                    "y",
                    "offset",
                    "borderWidth",
                    "spacing",
                  ],
                },
              },
              cutout: "50%",
              rotation: 0,
              circumference: 360,
              radius: "100%",
              spacing: 0,
              indexAxis: "r",
            };
            static descriptors = {
              _scriptable: (o) => "spacing" !== o,
              _indexable: (o) =>
                "spacing" !== o &&
                !o.startsWith("borderDash") &&
                !o.startsWith("hoverBorderDash"),
            };
            static overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(o) {
                      const u = o.data;
                      if (u.labels.length && u.datasets.length) {
                        const {
                          labels: { pointStyle: f, color: g },
                        } = o.legend.options;
                        return u.labels.map((y, w) => {
                          const P = o.getDatasetMeta(0).controller.getStyle(w);
                          return {
                            text: y,
                            fillStyle: P.backgroundColor,
                            strokeStyle: P.borderColor,
                            fontColor: g,
                            lineWidth: P.borderWidth,
                            pointStyle: f,
                            hidden: !o.getDataVisibility(w),
                            index: w,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(o, u, f) {
                    f.chart.toggleDataVisibility(u.index), f.chart.update();
                  },
                },
              },
            };
            constructor(o, u) {
              super(o, u),
                (this.enableOptionSharing = !0),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0),
                (this.offsetX = void 0),
                (this.offsetY = void 0);
            }
            linkScales() {}
            parse(o, u) {
              const f = this.getDataset().data,
                g = this._cachedMeta;
              if (!1 === this._parsing) g._parsed = f;
              else {
                let w,
                  S,
                  y = (P) => +f[P];
                if (Be(f[o])) {
                  const { key: P = "value" } = this._parsing;
                  y = (Y) => +se(f[Y], P);
                }
                for (w = o, S = o + u; w < S; ++w) g._parsed[w] = y(w);
              }
            }
            _getRotation() {
              return Yt(this.options.rotation - 90);
            }
            _getCircumference() {
              return Yt(this.options.circumference);
            }
            _getRotationExtents() {
              let o = ae,
                u = -ae;
              for (let f = 0; f < this.chart.data.datasets.length; ++f)
                if (
                  this.chart.isDatasetVisible(f) &&
                  this.chart.getDatasetMeta(f).type === this._type
                ) {
                  const g = this.chart.getDatasetMeta(f).controller,
                    y = g._getRotation(),
                    w = g._getCircumference();
                  (o = Math.min(o, y)), (u = Math.max(u, y + w));
                }
              return { rotation: o, circumference: u - o };
            }
            update(o) {
              const u = this.chart,
                { chartArea: f } = u,
                g = this._cachedMeta,
                y = g.data,
                w =
                  this.getMaxBorderWidth() +
                  this.getMaxOffset(y) +
                  this.options.spacing,
                S = Math.max((Math.min(f.width, f.height) - w) / 2, 0),
                P = Math.min(
                  ((l, a) =>
                    "string" == typeof l && l.endsWith("%")
                      ? parseFloat(l) / 100
                      : +l / a)(this.options.cutout, S),
                  1,
                ),
                Y = this._getRingWeight(this.index),
                { circumference: dt, rotation: Tt } =
                  this._getRotationExtents(),
                {
                  ratioX: Ht,
                  ratioY: be,
                  offsetX: Ce,
                  offsetY: Se,
                } = (function Tc(l, a, o) {
                  let u = 1,
                    f = 1,
                    g = 0,
                    y = 0;
                  if (a < ae) {
                    const w = l,
                      S = w + a,
                      P = Math.cos(w),
                      Y = Math.sin(w),
                      dt = Math.cos(S),
                      Tt = Math.sin(S),
                      Ht = (Ti, Oi, wi) =>
                        Bt(Ti, w, S, !0) ? 1 : Math.max(Oi, Oi * o, wi, wi * o),
                      be = (Ti, Oi, wi) =>
                        Bt(Ti, w, S, !0)
                          ? -1
                          : Math.min(Oi, Oi * o, wi, wi * o),
                      Ce = Ht(0, P, dt),
                      Se = Ht(ke, Y, Tt),
                      ci = be(Xt, P, dt),
                      ai = be(Xt + ke, Y, Tt);
                    (u = (Ce - ci) / 2),
                      (f = (Se - ai) / 2),
                      (g = -(Ce + ci) / 2),
                      (y = -(Se + ai) / 2);
                  }
                  return { ratioX: u, ratioY: f, offsetX: g, offsetY: y };
                })(Tt, dt, P),
                Ti = Math.max(
                  Math.min((f.width - w) / Ht, (f.height - w) / be) / 2,
                  0,
                ),
                Oi = _i(this.options.radius, Ti),
                Di =
                  (Oi - Math.max(Oi * P, 0)) /
                  this._getVisibleDatasetWeightTotal();
              (this.offsetX = Ce * Oi),
                (this.offsetY = Se * Oi),
                (g.total = this.calculateTotal()),
                (this.outerRadius =
                  Oi - Di * this._getRingWeightOffset(this.index)),
                (this.innerRadius = Math.max(this.outerRadius - Di * Y, 0)),
                this.updateElements(y, 0, y.length, o);
            }
            _circumference(o, u) {
              const f = this.options,
                g = this._cachedMeta,
                y = this._getCircumference();
              return (u && f.animation.animateRotate) ||
                !this.chart.getDataVisibility(o) ||
                null === g._parsed[o] ||
                g.data[o].hidden
                ? 0
                : this.calculateCircumference((g._parsed[o] * y) / ae);
            }
            updateElements(o, u, f, g) {
              const y = "reset" === g,
                w = this.chart,
                S = w.chartArea,
                dt = (S.left + S.right) / 2,
                Tt = (S.top + S.bottom) / 2,
                Ht = y && w.options.animation.animateScale,
                be = Ht ? 0 : this.innerRadius,
                Ce = Ht ? 0 : this.outerRadius,
                { sharedOptions: Se, includeOptions: ci } =
                  this._getSharedOptions(u, g);
              let Ti,
                ai = this._getRotation();
              for (Ti = 0; Ti < u; ++Ti) ai += this._circumference(Ti, y);
              for (Ti = u; Ti < u + f; ++Ti) {
                const Oi = this._circumference(Ti, y),
                  wi = o[Ti],
                  Di = {
                    x: dt + this.offsetX,
                    y: Tt + this.offsetY,
                    startAngle: ai,
                    endAngle: ai + Oi,
                    circumference: Oi,
                    outerRadius: Ce,
                    innerRadius: be,
                  };
                ci &&
                  (Di.options =
                    Se ||
                    this.resolveDataElementOptions(
                      Ti,
                      wi.active ? "active" : g,
                    )),
                  (ai += Oi),
                  this.updateElement(wi, Ti, Di, g);
              }
            }
            calculateTotal() {
              const o = this._cachedMeta,
                u = o.data;
              let g,
                f = 0;
              for (g = 0; g < u.length; g++) {
                const y = o._parsed[g];
                null !== y &&
                  !isNaN(y) &&
                  this.chart.getDataVisibility(g) &&
                  !u[g].hidden &&
                  (f += Math.abs(y));
              }
              return f;
            }
            calculateCircumference(o) {
              const u = this._cachedMeta.total;
              return u > 0 && !isNaN(o) ? ae * (Math.abs(o) / u) : 0;
            }
            getLabelAndValue(o) {
              const f = this.chart,
                g = f.data.labels || [],
                y = Jn(this._cachedMeta._parsed[o], f.options.locale);
              return { label: g[o] || "", value: y };
            }
            getMaxBorderWidth(o) {
              let u = 0;
              const f = this.chart;
              let g, y, w, S, P;
              if (!o)
                for (g = 0, y = f.data.datasets.length; g < y; ++g)
                  if (f.isDatasetVisible(g)) {
                    (w = f.getDatasetMeta(g)), (o = w.data), (S = w.controller);
                    break;
                  }
              if (!o) return 0;
              for (g = 0, y = o.length; g < y; ++g)
                (P = S.resolveDataElementOptions(g)),
                  "inner" !== P.borderAlign &&
                    (u = Math.max(
                      u,
                      P.borderWidth || 0,
                      P.hoverBorderWidth || 0,
                    ));
              return u;
            }
            getMaxOffset(o) {
              let u = 0;
              for (let f = 0, g = o.length; f < g; ++f) {
                const y = this.resolveDataElementOptions(f);
                u = Math.max(u, y.offset || 0, y.hoverOffset || 0);
              }
              return u;
            }
            _getRingWeightOffset(o) {
              let u = 0;
              for (let f = 0; f < o; ++f)
                this.chart.isDatasetVisible(f) && (u += this._getRingWeight(f));
              return u;
            }
            _getRingWeight(o) {
              return Math.max(gi(this.chart.data.datasets[o].weight, 1), 0);
            }
            _getVisibleDatasetWeightTotal() {
              return (
                this._getRingWeightOffset(this.chart.data.datasets.length) || 1
              );
            }
          })(),
        $l = (() =>
          class l extends Fo {
            static id = "line";
            static defaults = {
              datasetElementType: "line",
              dataElementType: "point",
              showLine: !0,
              spanGaps: !1,
            };
            static overrides = {
              scales: {
                _index_: { type: "category" },
                _value_: { type: "linear" },
              },
            };
            initialize() {
              (this.enableOptionSharing = !0),
                (this.supportsDecimation = !0),
                super.initialize();
            }
            update(o) {
              const u = this._cachedMeta,
                { dataset: f, data: g = [], _dataset: y } = u,
                w = this.chart._animationsDisabled;
              let { start: S, count: P } = Tn(u, g, w);
              (this._drawStart = S),
                (this._drawCount = P),
                oo(u) && ((S = 0), (P = g.length)),
                (f._chart = this.chart),
                (f._datasetIndex = this.index),
                (f._decimated = !!y._decimated),
                (f.points = g);
              const Y = this.resolveDatasetElementOptions(o);
              this.options.showLine || (Y.borderWidth = 0),
                (Y.segment = this.options.segment),
                this.updateElement(f, void 0, { animated: !w, options: Y }, o),
                this.updateElements(g, S, P, o);
            }
            updateElements(o, u, f, g) {
              const y = "reset" === g,
                {
                  iScale: w,
                  vScale: S,
                  _stacked: P,
                  _dataset: Y,
                } = this._cachedMeta,
                { sharedOptions: dt, includeOptions: Tt } =
                  this._getSharedOptions(u, g),
                Ht = w.axis,
                be = S.axis,
                { spanGaps: Ce, segment: Se } = this.options,
                ci = Wt(Ce) ? Ce : Number.POSITIVE_INFINITY,
                ai = this.chart._animationsDisabled || y || "none" === g,
                Ti = u + f,
                Oi = o.length;
              let wi = u > 0 && this.getParsed(u - 1);
              for (let Di = 0; Di < Oi; ++Di) {
                const Ui = o[Di],
                  Ni = ai ? Ui : {};
                if (Di < u || Di >= Ti) {
                  Ni.skip = !0;
                  continue;
                }
                const Ji = this.getParsed(Di),
                  En = ri(Ji[be]),
                  wn = (Ni[Ht] = w.getPixelForValue(Ji[Ht], Di)),
                  Nn = (Ni[be] =
                    y || En
                      ? S.getBasePixel()
                      : S.getPixelForValue(
                          P ? this.applyStack(S, Ji, P) : Ji[be],
                          Di,
                        ));
                (Ni.skip = isNaN(wn) || isNaN(Nn) || En),
                  (Ni.stop = Di > 0 && Math.abs(Ji[Ht] - wi[Ht]) > ci),
                  Se && ((Ni.parsed = Ji), (Ni.raw = Y.data[Di])),
                  Tt &&
                    (Ni.options =
                      dt ||
                      this.resolveDataElementOptions(
                        Di,
                        Ui.active ? "active" : g,
                      )),
                  ai || this.updateElement(Ui, Di, Ni, g),
                  (wi = Ji);
              }
            }
            getMaxOverflow() {
              const o = this._cachedMeta,
                u = o.dataset,
                f = (u.options && u.options.borderWidth) || 0,
                g = o.data || [];
              if (!g.length) return f;
              const y = g[0].size(this.resolveDataElementOptions(0)),
                w = g[g.length - 1].size(
                  this.resolveDataElementOptions(g.length - 1),
                );
              return Math.max(f, y, w) / 2;
            }
            draw() {
              const o = this._cachedMeta;
              o.dataset.updateControlPoints(
                this.chart.chartArea,
                o.iScale.axis,
              ),
                super.draw();
            }
          })(),
        Kr = (() =>
          class l extends Fo {
            static id = "polarArea";
            static defaults = {
              dataElementType: "arc",
              animation: { animateRotate: !0, animateScale: !0 },
              animations: {
                numbers: {
                  type: "number",
                  properties: [
                    "x",
                    "y",
                    "startAngle",
                    "endAngle",
                    "innerRadius",
                    "outerRadius",
                  ],
                },
              },
              indexAxis: "r",
              startAngle: 0,
            };
            static overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(o) {
                      const u = o.data;
                      if (u.labels.length && u.datasets.length) {
                        const {
                          labels: { pointStyle: f, color: g },
                        } = o.legend.options;
                        return u.labels.map((y, w) => {
                          const P = o.getDatasetMeta(0).controller.getStyle(w);
                          return {
                            text: y,
                            fillStyle: P.backgroundColor,
                            strokeStyle: P.borderColor,
                            fontColor: g,
                            lineWidth: P.borderWidth,
                            pointStyle: f,
                            hidden: !o.getDataVisibility(w),
                            index: w,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(o, u, f) {
                    f.chart.toggleDataVisibility(u.index), f.chart.update();
                  },
                },
              },
              scales: {
                r: {
                  type: "radialLinear",
                  angleLines: { display: !1 },
                  beginAtZero: !0,
                  grid: { circular: !0 },
                  pointLabels: { display: !1 },
                  startAngle: 0,
                },
              },
            };
            constructor(o, u) {
              super(o, u),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0);
            }
            getLabelAndValue(o) {
              const f = this.chart,
                g = f.data.labels || [],
                y = Jn(this._cachedMeta._parsed[o].r, f.options.locale);
              return { label: g[o] || "", value: y };
            }
            parseObjectData(o, u, f, g) {
              return Ro.bind(this)(o, u, f, g);
            }
            update(o) {
              const u = this._cachedMeta.data;
              this._updateRadius(), this.updateElements(u, 0, u.length, o);
            }
            getMinMax() {
              const u = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
              };
              return (
                this._cachedMeta.data.forEach((f, g) => {
                  const y = this.getParsed(g).r;
                  !isNaN(y) &&
                    this.chart.getDataVisibility(g) &&
                    (y < u.min && (u.min = y), y > u.max && (u.max = y));
                }),
                u
              );
            }
            _updateRadius() {
              const o = this.chart,
                u = o.chartArea,
                f = o.options,
                g = Math.min(u.right - u.left, u.bottom - u.top),
                y = Math.max(g / 2, 0),
                S =
                  (y -
                    Math.max(
                      f.cutoutPercentage ? (y / 100) * f.cutoutPercentage : 1,
                      0,
                    )) /
                  o.getVisibleDatasetCount();
              (this.outerRadius = y - S * this.index),
                (this.innerRadius = this.outerRadius - S);
            }
            updateElements(o, u, f, g) {
              const y = "reset" === g,
                w = this.chart,
                P = w.options.animation,
                Y = this._cachedMeta.rScale,
                dt = Y.xCenter,
                Tt = Y.yCenter,
                Ht = Y.getIndexAngle(0) - 0.5 * Xt;
              let Ce,
                be = Ht;
              const Se = 360 / this.countVisibleElements();
              for (Ce = 0; Ce < u; ++Ce) be += this._computeAngle(Ce, g, Se);
              for (Ce = u; Ce < u + f; Ce++) {
                const ci = o[Ce];
                let ai = be,
                  Ti = be + this._computeAngle(Ce, g, Se),
                  Oi = w.getDataVisibility(Ce)
                    ? Y.getDistanceFromCenterForValue(this.getParsed(Ce).r)
                    : 0;
                (be = Ti),
                  y &&
                    (P.animateScale && (Oi = 0),
                    P.animateRotate && (ai = Ti = Ht));
                const wi = {
                  x: dt,
                  y: Tt,
                  innerRadius: 0,
                  outerRadius: Oi,
                  startAngle: ai,
                  endAngle: Ti,
                  options: this.resolveDataElementOptions(
                    Ce,
                    ci.active ? "active" : g,
                  ),
                };
                this.updateElement(ci, Ce, wi, g);
              }
            }
            countVisibleElements() {
              let u = 0;
              return (
                this._cachedMeta.data.forEach((f, g) => {
                  !isNaN(this.getParsed(g).r) &&
                    this.chart.getDataVisibility(g) &&
                    u++;
                }),
                u
              );
            }
            _computeAngle(o, u, f) {
              return this.chart.getDataVisibility(o)
                ? Yt(this.resolveDataElementOptions(o, u).angle || f)
                : 0;
            }
          })();
      var Oc = Object.freeze({
        __proto__: null,
        BarController: _d,
        BubbleController: dl,
        DoughnutController: fs,
        LineController: $l,
        PieController: (() =>
          class l extends fs {
            static id = "pie";
            static defaults = {
              cutout: 0,
              rotation: 0,
              circumference: 360,
              radius: "100%",
            };
          })(),
        PolarAreaController: Kr,
        RadarController: (() =>
          class l extends Fo {
            static id = "radar";
            static defaults = {
              datasetElementType: "line",
              dataElementType: "point",
              indexAxis: "r",
              showLine: !0,
              elements: { line: { fill: "start" } },
            };
            static overrides = {
              aspectRatio: 1,
              scales: { r: { type: "radialLinear" } },
            };
            getLabelAndValue(o) {
              const u = this._cachedMeta.vScale,
                f = this.getParsed(o);
              return {
                label: u.getLabels()[o],
                value: "" + u.getLabelForValue(f[u.axis]),
              };
            }
            parseObjectData(o, u, f, g) {
              return Ro.bind(this)(o, u, f, g);
            }
            update(o) {
              const u = this._cachedMeta,
                f = u.dataset,
                g = u.data || [],
                y = u.iScale.getLabels();
              if (((f.points = g), "resize" !== o)) {
                const w = this.resolveDatasetElementOptions(o);
                this.options.showLine || (w.borderWidth = 0),
                  this.updateElement(
                    f,
                    void 0,
                    { _loop: !0, _fullLoop: y.length === g.length, options: w },
                    o,
                  );
              }
              this.updateElements(g, 0, g.length, o);
            }
            updateElements(o, u, f, g) {
              const y = this._cachedMeta.rScale,
                w = "reset" === g;
              for (let S = u; S < u + f; S++) {
                const P = o[S],
                  Y = this.resolveDataElementOptions(
                    S,
                    P.active ? "active" : g,
                  ),
                  dt = y.getPointPositionForValue(S, this.getParsed(S).r),
                  Tt = w ? y.xCenter : dt.x,
                  Ht = w ? y.yCenter : dt.y,
                  be = {
                    x: Tt,
                    y: Ht,
                    angle: dt.angle,
                    skip: isNaN(Tt) || isNaN(Ht),
                    options: Y,
                  };
                this.updateElement(P, S, be, g);
              }
            }
          })(),
        ScatterController: (() =>
          class l extends Fo {
            static id = "scatter";
            static defaults = {
              datasetElementType: !1,
              dataElementType: "point",
              showLine: !1,
              fill: !1,
            };
            static overrides = {
              interaction: { mode: "point" },
              scales: { x: { type: "linear" }, y: { type: "linear" } },
            };
            getLabelAndValue(o) {
              const u = this._cachedMeta,
                f = this.chart.data.labels || [],
                { xScale: g, yScale: y } = u,
                w = this.getParsed(o),
                S = g.getLabelForValue(w.x),
                P = y.getLabelForValue(w.y);
              return { label: f[o] || "", value: "(" + S + ", " + P + ")" };
            }
            update(o) {
              const u = this._cachedMeta,
                { data: f = [] } = u,
                g = this.chart._animationsDisabled;
              let { start: y, count: w } = Tn(u, f, g);
              if (
                ((this._drawStart = y),
                (this._drawCount = w),
                oo(u) && ((y = 0), (w = f.length)),
                this.options.showLine)
              ) {
                this.datasetElementType || this.addElements();
                const { dataset: S, _dataset: P } = u;
                (S._chart = this.chart),
                  (S._datasetIndex = this.index),
                  (S._decimated = !!P._decimated),
                  (S.points = f);
                const Y = this.resolveDatasetElementOptions(o);
                (Y.segment = this.options.segment),
                  this.updateElement(
                    S,
                    void 0,
                    { animated: !g, options: Y },
                    o,
                  );
              } else
                this.datasetElementType &&
                  (delete u.dataset, (this.datasetElementType = !1));
              this.updateElements(f, y, w, o);
            }
            addElements() {
              const { showLine: o } = this.options;
              !this.datasetElementType &&
                o &&
                (this.datasetElementType =
                  this.chart.registry.getElement("line")),
                super.addElements();
            }
            updateElements(o, u, f, g) {
              const y = "reset" === g,
                {
                  iScale: w,
                  vScale: S,
                  _stacked: P,
                  _dataset: Y,
                } = this._cachedMeta,
                dt = this.resolveDataElementOptions(u, g),
                Tt = this.getSharedOptions(dt),
                Ht = this.includeOptions(g, Tt),
                be = w.axis,
                Ce = S.axis,
                { spanGaps: Se, segment: ci } = this.options,
                ai = Wt(Se) ? Se : Number.POSITIVE_INFINITY,
                Ti = this.chart._animationsDisabled || y || "none" === g;
              let Oi = u > 0 && this.getParsed(u - 1);
              for (let wi = u; wi < u + f; ++wi) {
                const Di = o[wi],
                  Ui = this.getParsed(wi),
                  Ni = Ti ? Di : {},
                  Ji = ri(Ui[Ce]),
                  En = (Ni[be] = w.getPixelForValue(Ui[be], wi)),
                  wn = (Ni[Ce] =
                    y || Ji
                      ? S.getBasePixel()
                      : S.getPixelForValue(
                          P ? this.applyStack(S, Ui, P) : Ui[Ce],
                          wi,
                        ));
                (Ni.skip = isNaN(En) || isNaN(wn) || Ji),
                  (Ni.stop = wi > 0 && Math.abs(Ui[be] - Oi[be]) > ai),
                  ci && ((Ni.parsed = Ui), (Ni.raw = Y.data[wi])),
                  Ht &&
                    (Ni.options =
                      Tt ||
                      this.resolveDataElementOptions(
                        wi,
                        Di.active ? "active" : g,
                      )),
                  Ti || this.updateElement(Di, wi, Ni, g),
                  (Oi = Ui);
              }
              this.updateSharedOptions(Tt, g, dt);
            }
            getMaxOverflow() {
              const o = this._cachedMeta,
                u = o.data || [];
              if (!this.options.showLine) {
                let S = 0;
                for (let P = u.length - 1; P >= 0; --P)
                  S = Math.max(
                    S,
                    u[P].size(this.resolveDataElementOptions(P)) / 2,
                  );
                return S > 0 && S;
              }
              const f = o.dataset,
                g = (f.options && f.options.borderWidth) || 0;
              if (!u.length) return g;
              const y = u[0].size(this.resolveDataElementOptions(0)),
                w = u[u.length - 1].size(
                  this.resolveDataElementOptions(u.length - 1),
                );
              return Math.max(g, y, w) / 2;
            }
          })(),
      });
      function en() {
        throw new Error(
          "This method is not implemented: Check that a complete date adapter is provided.",
        );
      }
      class Fa {
        static override(a) {
          Object.assign(Fa.prototype, a);
        }
        options;
        constructor(a) {
          this.options = a || {};
        }
        init() {}
        formats() {
          return en();
        }
        parse() {
          return en();
        }
        format() {
          return en();
        }
        add() {
          return en();
        }
        diff() {
          return en();
        }
        startOf() {
          return en();
        }
        endOf() {
          return en();
        }
      }
      var yd__date = Fa;
      function Bu(l, a, o, u) {
        const { controller: f, data: g, _sorted: y } = l,
          w = f._cachedMeta.iScale;
        if (w && a === w.axis && "r" !== a && y && g.length) {
          const S = w._reversePixels ? Gt : ft;
          if (!u) return S(g, a, o);
          if (f._sharedOptions) {
            const P = g[0],
              Y = "function" == typeof P.getRange && P.getRange(a);
            if (Y) {
              const dt = S(g, a, o - Y),
                Tt = S(g, a, o + Y);
              return { lo: dt.lo, hi: Tt.hi };
            }
          }
        }
        return { lo: 0, hi: g.length - 1 };
      }
      function ul(l, a, o, u, f) {
        const g = l.getSortedVisibleDatasetMetas(),
          y = o[a];
        for (let w = 0, S = g.length; w < S; ++w) {
          const { index: P, data: Y } = g[w],
            { lo: dt, hi: Tt } = Bu(g[w], a, y, f);
          for (let Ht = dt; Ht <= Tt; ++Ht) {
            const be = Y[Ht];
            be.skip || u(be, P, Ht);
          }
        }
      }
      function La(l, a, o, u, f) {
        const g = [];
        return (
          (!f && !l.isPointInArea(a)) ||
            ul(
              l,
              o,
              a,
              function (w, S, P) {
                (!f && !Vo(w, l.chartArea, 0)) ||
                  (w.inRange(a.x, a.y, u) &&
                    g.push({ element: w, datasetIndex: S, index: P }));
              },
              !0,
            ),
          g
        );
      }
      function Ic(l, a, o, u, f, g) {
        return g || l.isPointInArea(a)
          ? "r" !== o || u
            ? (function zu(l, a, o, u, f, g) {
                let y = [];
                const w = (function Vu(l) {
                  const a = -1 !== l.indexOf("x"),
                    o = -1 !== l.indexOf("y");
                  return function (u, f) {
                    const g = a ? Math.abs(u.x - f.x) : 0,
                      y = o ? Math.abs(u.y - f.y) : 0;
                    return Math.sqrt(Math.pow(g, 2) + Math.pow(y, 2));
                  };
                })(o);
                let S = Number.POSITIVE_INFINITY;
                return (
                  ul(l, o, a, function P(Y, dt, Tt) {
                    const Ht = Y.inRange(a.x, a.y, f);
                    if (u && !Ht) return;
                    const be = Y.getCenterPoint(f);
                    if (!g && !l.isPointInArea(be) && !Ht) return;
                    const Se = w(a, be);
                    Se < S
                      ? ((y = [{ element: Y, datasetIndex: dt, index: Tt }]),
                        (S = Se))
                      : Se === S &&
                        y.push({ element: Y, datasetIndex: dt, index: Tt });
                  }),
                  y
                );
              })(l, a, o, u, f, g)
            : (function ma(l, a, o, u) {
                let f = [];
                return (
                  ul(l, o, a, function g(y, w, S) {
                    const { startAngle: P, endAngle: Y } = y.getProps(
                        ["startAngle", "endAngle"],
                        u,
                      ),
                      { angle: dt } = pe(y, { x: a.x, y: a.y });
                    Bt(dt, P, Y) &&
                      f.push({ element: y, datasetIndex: w, index: S });
                  }),
                  f
                );
              })(l, a, o, f)
          : [];
      }
      function xd(l, a, o, u, f) {
        const g = [],
          y = "x" === o ? "inXRange" : "inYRange";
        let w = !1;
        return (
          ul(l, o, a, (S, P, Y) => {
            S[y](a[o], f) &&
              (g.push({ element: S, datasetIndex: P, index: Y }),
              (w = w || S.inRange(a.x, a.y, f)));
          }),
          u && !w ? [] : g
        );
      }
      var wd = {
        evaluateInteractionItems: ul,
        modes: {
          index(l, a, o, u) {
            const f = ls(a, l),
              g = o.axis || "x",
              y = o.includeInvisible || !1,
              w = o.intersect ? La(l, f, g, u, y) : Ic(l, f, g, !1, u, y),
              S = [];
            return w.length
              ? (l.getSortedVisibleDatasetMetas().forEach((P) => {
                  const Y = w[0].index,
                    dt = P.data[Y];
                  dt &&
                    !dt.skip &&
                    S.push({ element: dt, datasetIndex: P.index, index: Y });
                }),
                S)
              : [];
          },
          dataset(l, a, o, u) {
            const f = ls(a, l),
              g = o.axis || "xy",
              y = o.includeInvisible || !1;
            let w = o.intersect ? La(l, f, g, u, y) : Ic(l, f, g, !1, u, y);
            if (w.length > 0) {
              const S = w[0].datasetIndex,
                P = l.getDatasetMeta(S).data;
              w = [];
              for (let Y = 0; Y < P.length; ++Y)
                w.push({ element: P[Y], datasetIndex: S, index: Y });
            }
            return w;
          },
          point: (l, a, o, u) =>
            La(l, ls(a, l), o.axis || "xy", u, o.includeInvisible || !1),
          nearest: (l, a, o, u) =>
            Ic(
              l,
              ls(a, l),
              o.axis || "xy",
              o.intersect,
              u,
              o.includeInvisible || !1,
            ),
          x: (l, a, o, u) => xd(l, ls(a, l), "x", o.intersect, u),
          y: (l, a, o, u) => xd(l, ls(a, l), "y", o.intersect, u),
        },
      };
      const Cd = ["left", "top", "right", "bottom"];
      function xi(l, a) {
        return l.filter((o) => o.pos === a);
      }
      function Dn(l, a) {
        return l.filter((o) => -1 === Cd.indexOf(o.pos) && o.box.axis === a);
      }
      function pa(l, a) {
        return l.sort((o, u) => {
          const f = a ? u : o,
            g = a ? o : u;
          return f.weight === g.weight
            ? f.index - g.index
            : f.weight - g.weight;
        });
      }
      function Jr(l, a, o, u) {
        return Math.max(l[o], a[o]) + Math.max(l[u], a[u]);
      }
      function hl(l, a) {
        (l.top = Math.max(l.top, a.top)),
          (l.left = Math.max(l.left, a.left)),
          (l.bottom = Math.max(l.bottom, a.bottom)),
          (l.right = Math.max(l.right, a.right));
      }
      function Ba(l, a, o, u) {
        const { pos: f, box: g } = o,
          y = l.maxPadding;
        if (!Be(f)) {
          o.size && (l[f] -= o.size);
          const dt = u[o.stack] || { size: 0, count: 1 };
          (dt.size = Math.max(dt.size, o.horizontal ? g.height : g.width)),
            (o.size = dt.size / dt.count),
            (l[f] += o.size);
        }
        g.getPadding && hl(y, g.getPadding());
        const w = Math.max(0, a.outerWidth - Jr(y, l, "left", "right")),
          S = Math.max(0, a.outerHeight - Jr(y, l, "top", "bottom")),
          P = w !== l.w,
          Y = S !== l.h;
        return (
          (l.w = w),
          (l.h = S),
          o.horizontal ? { same: P, other: Y } : { same: Y, other: P }
        );
      }
      function Wl(l, a) {
        const o = a.maxPadding;
        return (function u(f) {
          const g = { left: 0, top: 0, right: 0, bottom: 0 };
          return (
            f.forEach((y) => {
              g[y] = Math.max(a[y], o[y]);
            }),
            g
          );
        })(l ? ["left", "right"] : ["top", "bottom"]);
      }
      function fl(l, a, o, u) {
        const f = [];
        let g, y, w, S, P, Y;
        for (g = 0, y = l.length, P = 0; g < y; ++g) {
          (w = l[g]),
            (S = w.box),
            S.update(w.width || a.w, w.height || a.h, Wl(w.horizontal, a));
          const { same: dt, other: Tt } = Ba(a, o, w, u);
          (P |= dt && f.length), (Y = Y || Tt), S.fullSize || f.push(w);
        }
        return (P && fl(f, a, o, u)) || Y;
      }
      function Ee(l, a, o, u, f) {
        (l.top = o),
          (l.left = a),
          (l.right = a + u),
          (l.bottom = o + f),
          (l.width = u),
          (l.height = f);
      }
      function Nr(l, a, o, u) {
        const f = o.padding;
        let { x: g, y } = a;
        for (const w of l) {
          const S = w.box,
            P = u[w.stack] || { count: 1, placed: 0, weight: 1 },
            Y = w.stackWeight / P.weight || 1;
          if (w.horizontal) {
            const dt = a.w * Y,
              Tt = P.size || S.height;
            Ut(P.start) && (y = P.start),
              S.fullSize
                ? Ee(S, f.left, y, o.outerWidth - f.right - f.left, Tt)
                : Ee(S, a.left + P.placed, y, dt, Tt),
              (P.start = y),
              (P.placed += dt),
              (y = S.bottom);
          } else {
            const dt = a.h * Y,
              Tt = P.size || S.width;
            Ut(P.start) && (g = P.start),
              S.fullSize
                ? Ee(S, g, f.top, Tt, o.outerHeight - f.bottom - f.top)
                : Ee(S, g, a.top + P.placed, Tt, dt),
              (P.start = g),
              (P.placed += dt),
              (g = S.right);
          }
        }
        (a.x = g), (a.y = y);
      }
      var Wo = {
        addBox(l, a) {
          l.boxes || (l.boxes = []),
            (a.fullSize = a.fullSize || !1),
            (a.position = a.position || "top"),
            (a.weight = a.weight || 0),
            (a._layers =
              a._layers ||
              function () {
                return [
                  {
                    z: 0,
                    draw(o) {
                      a.draw(o);
                    },
                  },
                ];
              }),
            l.boxes.push(a);
        },
        removeBox(l, a) {
          const o = l.boxes ? l.boxes.indexOf(a) : -1;
          -1 !== o && l.boxes.splice(o, 1);
        },
        configure(l, a, o) {
          (a.fullSize = o.fullSize),
            (a.position = o.position),
            (a.weight = o.weight);
        },
        update(l, a, o, u) {
          if (!l) return;
          const f = Wn(l.options.layout.padding),
            g = Math.max(a - f.width, 0),
            y = Math.max(o - f.height, 0),
            w = (function Na(l) {
              const a = (function Rc(l) {
                  const a = [];
                  let o, u, f, g, y, w;
                  for (o = 0, u = (l || []).length; o < u; ++o)
                    (f = l[o]),
                      ({
                        position: g,
                        options: { stack: y, stackWeight: w = 1 },
                      } = f),
                      a.push({
                        index: o,
                        box: f,
                        pos: g,
                        horizontal: f.isHorizontal(),
                        weight: f.weight,
                        stack: y && g + y,
                        stackWeight: w,
                      });
                  return a;
                })(l),
                o = pa(
                  a.filter((P) => P.box.fullSize),
                  !0,
                ),
                u = pa(xi(a, "left"), !0),
                f = pa(xi(a, "right")),
                g = pa(xi(a, "top"), !0),
                y = pa(xi(a, "bottom")),
                w = Dn(a, "x"),
                S = Dn(a, "y");
              return {
                fullSize: o,
                leftAndTop: u.concat(g),
                rightAndBottom: f.concat(S).concat(y).concat(w),
                chartArea: xi(a, "chartArea"),
                vertical: u.concat(f).concat(S),
                horizontal: g.concat(y).concat(w),
              };
            })(l.boxes),
            S = w.vertical,
            P = w.horizontal;
          ot(l.boxes, (Ce) => {
            "function" == typeof Ce.beforeLayout && Ce.beforeLayout();
          });
          const Y =
              S.reduce(
                (Ce, Se) =>
                  Se.box.options && !1 === Se.box.options.display ? Ce : Ce + 1,
                0,
              ) || 1,
            dt = Object.freeze({
              outerWidth: a,
              outerHeight: o,
              padding: f,
              availableWidth: g,
              availableHeight: y,
              vBoxMaxWidth: g / 2 / Y,
              hBoxMaxHeight: y / 2,
            }),
            Tt = Object.assign({}, f);
          hl(Tt, Wn(u));
          const Ht = Object.assign(
              { maxPadding: Tt, w: g, h: y, x: f.left, y: f.top },
              f,
            ),
            be = (function Pc(l, a) {
              const o = (function $o(l) {
                  const a = {};
                  for (const o of l) {
                    const { stack: u, pos: f, stackWeight: g } = o;
                    if (!u || !Cd.includes(f)) continue;
                    const y =
                      a[u] ||
                      (a[u] = { count: 0, placed: 0, weight: 0, size: 0 });
                    y.count++, (y.weight += g);
                  }
                  return a;
                })(l),
                { vBoxMaxWidth: u, hBoxMaxHeight: f } = a;
              let g, y, w;
              for (g = 0, y = l.length; g < y; ++g) {
                w = l[g];
                const { fullSize: S } = w.box,
                  P = o[w.stack],
                  Y = P && w.stackWeight / P.weight;
                w.horizontal
                  ? ((w.width = Y ? Y * u : S && a.availableWidth),
                    (w.height = f))
                  : ((w.width = u),
                    (w.height = Y ? Y * f : S && a.availableHeight));
              }
              return o;
            })(S.concat(P), dt);
          fl(w.fullSize, Ht, dt, be),
            fl(S, Ht, dt, be),
            fl(P, Ht, dt, be) && fl(S, Ht, dt, be),
            (function qn(l) {
              const a = l.maxPadding;
              function o(u) {
                const f = Math.max(a[u] - l[u], 0);
                return (l[u] += f), f;
              }
              (l.y += o("top")), (l.x += o("left")), o("right"), o("bottom");
            })(Ht),
            Nr(w.leftAndTop, Ht, dt, be),
            (Ht.x += Ht.w),
            (Ht.y += Ht.h),
            Nr(w.rightAndBottom, Ht, dt, be),
            (l.chartArea = {
              left: Ht.left,
              top: Ht.top,
              right: Ht.left + Ht.w,
              bottom: Ht.top + Ht.h,
              height: Ht.h,
              width: Ht.w,
            }),
            ot(w.chartArea, (Ce) => {
              const Se = Ce.box;
              Object.assign(Se, l.chartArea),
                Se.update(Ht.w, Ht.h, { left: 0, top: 0, right: 0, bottom: 0 });
            });
        },
      };
      class ga {
        acquireContext(a, o) {}
        releaseContext(a) {
          return !1;
        }
        addEventListener(a, o, u) {}
        removeEventListener(a, o, u) {}
        getDevicePixelRatio() {
          return 1;
        }
        getMaximumSize(a, o, u, f) {
          return (
            (o = Math.max(0, o || a.width)),
            (u = u || a.height),
            { width: o, height: Math.max(0, f ? Math.floor(o / f) : u) }
          );
        }
        isAttached(a) {
          return !0;
        }
        updateConfig(a) {}
      }
      class I extends ga {
        acquireContext(a) {
          return (a && a.getContext && a.getContext("2d")) || null;
        }
        updateConfig(a) {
          a.options.animation = !1;
        }
      }
      const L = "$chartjs",
        k = {
          touchstart: "mousedown",
          touchmove: "mousemove",
          touchend: "mouseup",
          pointerenter: "mouseenter",
          pointerdown: "mousedown",
          pointermove: "mousemove",
          pointerup: "mouseup",
          pointerleave: "mouseout",
          pointerout: "mouseout",
        },
        N = (l) => null === l || "" === l,
        xt = !!ar && { passive: !0 };
      function ei(l, a, o) {
        l && l.canvas && l.canvas.removeEventListener(a, o, xt);
      }
      function Bi(l, a) {
        for (const o of l) if (o === a || o.contains(a)) return !0;
      }
      function gn(l, a, o) {
        const u = l.canvas,
          f = new MutationObserver((g) => {
            let y = !1;
            for (const w of g)
              (y = y || Bi(w.addedNodes, u)), (y = y && !Bi(w.removedNodes, u));
            y && o();
          });
        return f.observe(document, { childList: !0, subtree: !0 }), f;
      }
      function Hn(l, a, o) {
        const u = l.canvas,
          f = new MutationObserver((g) => {
            let y = !1;
            for (const w of g)
              (y = y || Bi(w.removedNodes, u)), (y = y && !Bi(w.addedNodes, u));
            y && o();
          });
        return f.observe(document, { childList: !0, subtree: !0 }), f;
      }
      const Mn = new Map();
      let br = 0;
      function rn() {
        const l = window.devicePixelRatio;
        l !== br &&
          ((br = l),
          Mn.forEach((a, o) => {
            o.currentDevicePixelRatio !== l && a();
          }));
      }
      function qs(l, a, o) {
        const u = l.canvas,
          f = u && hn(u);
        if (!f) return;
        const g = Un((w, S) => {
            const P = f.clientWidth;
            o(w, S), P < f.clientWidth && o();
          }, window),
          y = new ResizeObserver((w) => {
            const S = w[0],
              P = S.contentRect.width,
              Y = S.contentRect.height;
            (0 === P && 0 === Y) || g(P, Y);
          });
        return (
          y.observe(f),
          (function Ao(l, a) {
            Mn.size || window.addEventListener("resize", rn), Mn.set(l, a);
          })(l, g),
          y
        );
      }
      function Va(l, a, o) {
        o && o.disconnect(),
          "resize" === a &&
            (function _a(l) {
              Mn.delete(l), Mn.size || window.removeEventListener("resize", rn);
            })(l);
      }
      function dr(l, a, o) {
        const u = l.canvas,
          f = Un((g) => {
            null !== l.ctx &&
              o(
                (function Ke(l, a) {
                  const o = k[l.type] || l.type,
                    { x: u, y: f } = ls(l, a);
                  return {
                    type: o,
                    chart: a,
                    native: l,
                    x: void 0 !== u ? u : null,
                    y: void 0 !== f ? f : null,
                  };
                })(g, l),
              );
          }, l);
        return (
          (function oe(l, a, o) {
            l && l.addEventListener(a, o, xt);
          })(u, a, f),
          f
        );
      }
      class ml extends ga {
        acquireContext(a, o) {
          const u = a && a.getContext && a.getContext("2d");
          return u && u.canvas === a
            ? ((function K(l, a) {
                const o = l.style,
                  u = l.getAttribute("height"),
                  f = l.getAttribute("width");
                if (
                  ((l[L] = {
                    initial: {
                      height: u,
                      width: f,
                      style: {
                        display: o.display,
                        height: o.height,
                        width: o.width,
                      },
                    },
                  }),
                  (o.display = o.display || "block"),
                  (o.boxSizing = o.boxSizing || "border-box"),
                  N(f))
                ) {
                  const g = Wr(l, "width");
                  void 0 !== g && (l.width = g);
                }
                if (N(u))
                  if ("" === l.style.height) l.height = l.width / (a || 2);
                  else {
                    const g = Wr(l, "height");
                    void 0 !== g && (l.height = g);
                  }
              })(a, o),
              u)
            : null;
        }
        releaseContext(a) {
          const o = a.canvas;
          if (!o[L]) return !1;
          const u = o[L].initial;
          ["height", "width"].forEach((g) => {
            const y = u[g];
            ri(y) ? o.removeAttribute(g) : o.setAttribute(g, y);
          });
          const f = u.style || {};
          return (
            Object.keys(f).forEach((g) => {
              o.style[g] = f[g];
            }),
            (o.width = o.width),
            delete o[L],
            !0
          );
        }
        addEventListener(a, o, u) {
          this.removeEventListener(a, o),
            ((a.$proxies || (a.$proxies = {}))[o] = (
              { attach: gn, detach: Hn, resize: qs }[o] || dr
            )(a, o, u));
        }
        removeEventListener(a, o) {
          const u = a.$proxies || (a.$proxies = {}),
            f = u[o];
          f &&
            (({ attach: Va, detach: Va, resize: Va }[o] || ei)(a, o, f),
            (u[o] = void 0));
        }
        getDevicePixelRatio() {
          return window.devicePixelRatio;
        }
        getMaximumSize(a, o, u, f) {
          return (function Ta(l, a, o, u) {
            const f = Jo(l),
              g = Hs(f, "margin"),
              y = Po(f.maxWidth, l, "clientWidth") || $t,
              w = Po(f.maxHeight, l, "clientHeight") || $t,
              S = (function jl(l, a, o) {
                let u, f;
                if (void 0 === a || void 0 === o) {
                  const g = l && hn(l);
                  if (g) {
                    const y = g.getBoundingClientRect(),
                      w = Jo(g),
                      S = Hs(w, "border", "width"),
                      P = Hs(w, "padding");
                    (a = y.width - P.width - S.width),
                      (o = y.height - P.height - S.height),
                      (u = Po(w.maxWidth, g, "clientWidth")),
                      (f = Po(w.maxHeight, g, "clientHeight"));
                  } else (a = l.clientWidth), (o = l.clientHeight);
                }
                return {
                  width: a,
                  height: o,
                  maxWidth: u || $t,
                  maxHeight: f || $t,
                };
              })(l, a, o);
            let { width: P, height: Y } = S;
            if ("content-box" === f.boxSizing) {
              const Tt = Hs(f, "border", "width"),
                Ht = Hs(f, "padding");
              (P -= Ht.width + Tt.width), (Y -= Ht.height + Tt.height);
            }
            return (
              (P = Math.max(0, P - g.width)),
              (Y = Math.max(0, u ? P / u : Y - g.height)),
              (P = ua(Math.min(P, y, S.maxWidth))),
              (Y = ua(Math.min(Y, w, S.maxHeight))),
              P && !Y && (Y = ua(P / 2)),
              (void 0 !== a || void 0 !== o) &&
                u &&
                S.height &&
                Y > S.height &&
                ((Y = S.height), (P = ua(Math.floor(Y * u)))),
              { width: P, height: Y }
            );
          })(a, o, u, f);
        }
        isAttached(a) {
          const o = a && hn(a);
          return !(!o || !o.isConnected);
        }
      }
      class Ds {
        static defaults = {};
        static defaultRoutes = void 0;
        x;
        y;
        active = !1;
        options;
        $animations;
        tooltipPosition(a) {
          const { x: o, y: u } = this.getProps(["x", "y"], a);
          return { x: o, y: u };
        }
        hasValue() {
          return Wt(this.x) && Wt(this.y);
        }
        getProps(a, o) {
          const u = this.$animations;
          if (!o || !u) return this;
          const f = {};
          return (
            a.forEach((g) => {
              f[g] = u[g] && u[g].active() ? u[g]._to : this[g];
            }),
            f
          );
        }
      }
      function Qs(l, a, o, u, f) {
        const g = gi(u, 0),
          y = Math.min(gi(f, l.length), l.length);
        let S,
          P,
          Y,
          w = 0;
        for (
          o = Math.ceil(o),
            f && ((S = f - u), (o = S / Math.floor(S / o))),
            Y = g;
          Y < 0;

        )
          w++, (Y = Math.round(g + w * o));
        for (P = Math.max(g, 0); P < y; P++)
          P === Y && (a.push(l[P]), w++, (Y = Math.round(g + w * o)));
      }
      const pl = (l, a, o) =>
          "top" === a || "left" === a ? l[a] + o : l[a] - o,
        ba = (l, a) => Math.min(a || l, l);
      function Ks(l, a) {
        const o = [],
          u = l.length / a,
          f = l.length;
        let g = 0;
        for (; g < f; g += u) o.push(l[Math.floor(g)]);
        return o;
      }
      function Sd(l, a, o) {
        const u = l.ticks.length,
          f = Math.min(a, u - 1),
          g = l._startPixel,
          y = l._endPixel,
          w = 1e-6;
        let P,
          S = l.getPixelForTick(f);
        if (
          !(
            o &&
            ((P =
              1 === u
                ? Math.max(S - g, y - S)
                : 0 === a
                  ? (l.getPixelForTick(1) - S) / 2
                  : (S - l.getPixelForTick(f - 1)) / 2),
            (S += f < a ? P : -P),
            S < g - w || S > y + w)
          )
        )
          return S;
      }
      function Js(l) {
        return l.drawTicks ? l.tickLength : 0;
      }
      function Ad(l, a) {
        if (!l.display) return 0;
        const o = jn(l.font, a),
          u = Wn(l.padding);
        return (te(l.text) ? l.text.length : 1) * o.lineHeight + u.height;
      }
      function ju(l, a, o) {
        let u = An(l);
        return (
          ((o && "right" !== a) || (!o && "right" === a)) &&
            (u = ((l) => ("left" === l ? "right" : "right" === l ? "left" : l))(
              u,
            )),
          u
        );
      }
      class Xs extends Ds {
        constructor(a) {
          super(),
            (this.id = a.id),
            (this.type = a.type),
            (this.options = void 0),
            (this.ctx = a.ctx),
            (this.chart = a.chart),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
            (this.maxWidth = void 0),
            (this.maxHeight = void 0),
            (this.paddingTop = void 0),
            (this.paddingBottom = void 0),
            (this.paddingLeft = void 0),
            (this.paddingRight = void 0),
            (this.axis = void 0),
            (this.labelRotation = void 0),
            (this.min = void 0),
            (this.max = void 0),
            (this._range = void 0),
            (this.ticks = []),
            (this._gridLineItems = null),
            (this._labelItems = null),
            (this._labelSizes = null),
            (this._length = 0),
            (this._maxLength = 0),
            (this._longestTextCache = {}),
            (this._startPixel = void 0),
            (this._endPixel = void 0),
            (this._reversePixels = !1),
            (this._userMax = void 0),
            (this._userMin = void 0),
            (this._suggestedMax = void 0),
            (this._suggestedMin = void 0),
            (this._ticksLength = 0),
            (this._borderValue = 0),
            (this._cache = {}),
            (this._dataLimitsCached = !1),
            (this.$context = void 0);
        }
        init(a) {
          (this.options = a.setContext(this.getContext())),
            (this.axis = a.axis),
            (this._userMin = this.parse(a.min)),
            (this._userMax = this.parse(a.max)),
            (this._suggestedMin = this.parse(a.suggestedMin)),
            (this._suggestedMax = this.parse(a.suggestedMax));
        }
        parse(a, o) {
          return a;
        }
        getUserBounds() {
          let {
            _userMin: a,
            _userMax: o,
            _suggestedMin: u,
            _suggestedMax: f,
          } = this;
          return (
            (a = Ri(a, Number.POSITIVE_INFINITY)),
            (o = Ri(o, Number.NEGATIVE_INFINITY)),
            (u = Ri(u, Number.POSITIVE_INFINITY)),
            (f = Ri(f, Number.NEGATIVE_INFINITY)),
            {
              min: Ri(a, u),
              max: Ri(o, f),
              minDefined: Ne(a),
              maxDefined: Ne(o),
            }
          );
        }
        getMinMax(a) {
          let y,
            {
              min: o,
              max: u,
              minDefined: f,
              maxDefined: g,
            } = this.getUserBounds();
          if (f && g) return { min: o, max: u };
          const w = this.getMatchingVisibleMetas();
          for (let S = 0, P = w.length; S < P; ++S)
            (y = w[S].controller.getMinMax(this, a)),
              f || (o = Math.min(o, y.min)),
              g || (u = Math.max(u, y.max));
          return (
            (o = g && o > u ? u : o),
            (u = f && o > u ? o : u),
            { min: Ri(o, Ri(u, o)), max: Ri(u, Ri(o, u)) }
          );
        }
        getPadding() {
          return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0,
          };
        }
        getTicks() {
          return this.ticks;
        }
        getLabels() {
          const a = this.chart.data;
          return (
            this.options.labels ||
            (this.isHorizontal() ? a.xLabels : a.yLabels) ||
            a.labels ||
            []
          );
        }
        getLabelItems(a = this.chart.chartArea) {
          return (
            this._labelItems || (this._labelItems = this._computeLabelItems(a))
          );
        }
        beforeLayout() {
          (this._cache = {}), (this._dataLimitsCached = !1);
        }
        beforeUpdate() {
          de(this.options.beforeUpdate, [this]);
        }
        update(a, o, u) {
          const { beginAtZero: f, grace: g, ticks: y } = this.options,
            w = y.sampleSize;
          this.beforeUpdate(),
            (this.maxWidth = a),
            (this.maxHeight = o),
            (this._margins = u =
              Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, u)),
            (this.ticks = null),
            (this._labelSizes = null),
            (this._gridLineItems = null),
            (this._labelItems = null),
            this.beforeSetDimensions(),
            this.setDimensions(),
            this.afterSetDimensions(),
            (this._maxLength = this.isHorizontal()
              ? this.width + u.left + u.right
              : this.height + u.top + u.bottom),
            this._dataLimitsCached ||
              (this.beforeDataLimits(),
              this.determineDataLimits(),
              this.afterDataLimits(),
              (this._range = (function $r(l, a, o) {
                const { min: u, max: f } = l,
                  g = _i(a, (f - u) / 2),
                  y = (w, S) => (o && 0 === w ? 0 : w + S);
                return { min: y(u, -Math.abs(g)), max: y(f, g) };
              })(this, g, f)),
              (this._dataLimitsCached = !0)),
            this.beforeBuildTicks(),
            (this.ticks = this.buildTicks() || []),
            this.afterBuildTicks();
          const S = w < this.ticks.length;
          this._convertTicksToLabels(S ? Ks(this.ticks, w) : this.ticks),
            this.configure(),
            this.beforeCalculateLabelRotation(),
            this.calculateLabelRotation(),
            this.afterCalculateLabelRotation(),
            y.display &&
              (y.autoSkip || "auto" === y.source) &&
              ((this.ticks = (function Uu(l, a) {
                const o = l.options.ticks,
                  u = (function Dd(l) {
                    const a = l.options.offset,
                      o = l._tickSize();
                    return Math.floor(
                      Math.min(l._length / o + (a ? 0 : 1), l._maxLength / o),
                    );
                  })(l),
                  f = Math.min(o.maxTicksLimit || u, u),
                  g = o.major.enabled
                    ? (function Fc(l) {
                        const a = [];
                        let o, u;
                        for (o = 0, u = l.length; o < u; o++)
                          l[o].major && a.push(o);
                        return a;
                      })(a)
                    : [],
                  y = g.length,
                  w = g[0],
                  S = g[y - 1],
                  P = [];
                if (y > f)
                  return (
                    (function Lc(l, a, o, u) {
                      let y,
                        f = 0,
                        g = o[0];
                      for (u = Math.ceil(u), y = 0; y < l.length; y++)
                        y === g && (a.push(l[y]), f++, (g = o[f * u]));
                    })(a, P, g, y / f),
                    P
                  );
                const Y = (function Md(l, a, o) {
                  const u = (function va(l) {
                      const a = l.length;
                      let o, u;
                      if (a < 2) return !1;
                      for (u = l[0], o = 1; o < a; ++o)
                        if (l[o] - l[o - 1] !== u) return !1;
                      return u;
                    })(l),
                    f = a.length / o;
                  if (!u) return Math.max(f, 1);
                  const g = (function ue(l) {
                    const a = [],
                      o = Math.sqrt(l);
                    let u;
                    for (u = 1; u < o; u++)
                      l % u == 0 && (a.push(u), a.push(l / u));
                    return (
                      o === (0 | o) && a.push(o),
                      a.sort((f, g) => f - g).pop(),
                      a
                    );
                  })(u);
                  for (let y = 0, w = g.length - 1; y < w; y++) {
                    const S = g[y];
                    if (S > f) return S;
                  }
                  return Math.max(f, 1);
                })(g, a, f);
                if (y > 0) {
                  let dt, Tt;
                  const Ht = y > 1 ? Math.round((S - w) / (y - 1)) : null;
                  for (
                    Qs(a, P, Y, ri(Ht) ? 0 : w - Ht, w), dt = 0, Tt = y - 1;
                    dt < Tt;
                    dt++
                  )
                    Qs(a, P, Y, g[dt], g[dt + 1]);
                  return Qs(a, P, Y, S, ri(Ht) ? a.length : S + Ht), P;
                }
                return Qs(a, P, Y), P;
              })(this, this.ticks)),
              (this._labelSizes = null),
              this.afterAutoSkip()),
            S && this._convertTicksToLabels(this.ticks),
            this.beforeFit(),
            this.fit(),
            this.afterFit(),
            this.afterUpdate();
        }
        configure() {
          let o,
            u,
            a = this.options.reverse;
          this.isHorizontal()
            ? ((o = this.left), (u = this.right))
            : ((o = this.top), (u = this.bottom), (a = !a)),
            (this._startPixel = o),
            (this._endPixel = u),
            (this._reversePixels = a),
            (this._length = u - o),
            (this._alignToPixels = this.options.alignToPixels);
        }
        afterUpdate() {
          de(this.options.afterUpdate, [this]);
        }
        beforeSetDimensions() {
          de(this.options.beforeSetDimensions, [this]);
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = 0),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = 0),
              (this.bottom = this.height)),
            (this.paddingLeft = 0),
            (this.paddingTop = 0),
            (this.paddingRight = 0),
            (this.paddingBottom = 0);
        }
        afterSetDimensions() {
          de(this.options.afterSetDimensions, [this]);
        }
        _callHooks(a) {
          this.chart.notifyPlugins(a, this.getContext()),
            de(this.options[a], [this]);
        }
        beforeDataLimits() {
          this._callHooks("beforeDataLimits");
        }
        determineDataLimits() {}
        afterDataLimits() {
          this._callHooks("afterDataLimits");
        }
        beforeBuildTicks() {
          this._callHooks("beforeBuildTicks");
        }
        buildTicks() {
          return [];
        }
        afterBuildTicks() {
          this._callHooks("afterBuildTicks");
        }
        beforeTickToLabelConversion() {
          de(this.options.beforeTickToLabelConversion, [this]);
        }
        generateTickLabels(a) {
          const o = this.options.ticks;
          let u, f, g;
          for (u = 0, f = a.length; u < f; u++)
            (g = a[u]), (g.label = de(o.callback, [g.value, u, a], this));
        }
        afterTickToLabelConversion() {
          de(this.options.afterTickToLabelConversion, [this]);
        }
        beforeCalculateLabelRotation() {
          de(this.options.beforeCalculateLabelRotation, [this]);
        }
        calculateLabelRotation() {
          const a = this.options,
            o = a.ticks,
            u = ba(this.ticks.length, a.ticks.maxTicksLimit),
            f = o.minRotation || 0,
            g = o.maxRotation;
          let w,
            S,
            P,
            y = f;
          if (
            !this._isVisible() ||
            !o.display ||
            f >= g ||
            u <= 1 ||
            !this.isHorizontal()
          )
            return void (this.labelRotation = f);
          const Y = this._getLabelSizes(),
            dt = Y.widest.width,
            Tt = Y.highest.height,
            Ht = Te(this.chart.width - dt, 0, this.maxWidth);
          (w = a.offset ? this.maxWidth / u : Ht / (u - 1)),
            dt + 6 > w &&
              ((w = Ht / (u - (a.offset ? 0.5 : 1))),
              (S =
                this.maxHeight -
                Js(a.grid) -
                o.padding -
                Ad(a.title, this.chart.options.font)),
              (P = Math.sqrt(dt * dt + Tt * Tt)),
              (y = Ae(
                Math.min(
                  Math.asin(Te((Y.highest.height + 6) / w, -1, 1)),
                  Math.asin(Te(S / P, -1, 1)) - Math.asin(Te(Tt / P, -1, 1)),
                ),
              )),
              (y = Math.max(f, Math.min(g, y)))),
            (this.labelRotation = y);
        }
        afterCalculateLabelRotation() {
          de(this.options.afterCalculateLabelRotation, [this]);
        }
        afterAutoSkip() {}
        beforeFit() {
          de(this.options.beforeFit, [this]);
        }
        fit() {
          const a = { width: 0, height: 0 },
            {
              chart: o,
              options: { ticks: u, title: f, grid: g },
            } = this,
            y = this._isVisible(),
            w = this.isHorizontal();
          if (y) {
            const S = Ad(f, o.options.font);
            if (
              (w
                ? ((a.width = this.maxWidth), (a.height = Js(g) + S))
                : ((a.height = this.maxHeight), (a.width = Js(g) + S)),
              u.display && this.ticks.length)
            ) {
              const {
                  first: P,
                  last: Y,
                  widest: dt,
                  highest: Tt,
                } = this._getLabelSizes(),
                Ht = 2 * u.padding,
                be = Yt(this.labelRotation),
                Ce = Math.cos(be),
                Se = Math.sin(be);
              w
                ? (a.height = Math.min(
                    this.maxHeight,
                    a.height +
                      (u.mirror ? 0 : Se * dt.width + Ce * Tt.height) +
                      Ht,
                  ))
                : (a.width = Math.min(
                    this.maxWidth,
                    a.width +
                      (u.mirror ? 0 : Ce * dt.width + Se * Tt.height) +
                      Ht,
                  )),
                this._calculatePadding(P, Y, Se, Ce);
            }
          }
          this._handleMargins(),
            w
              ? ((this.width = this._length =
                  o.width - this._margins.left - this._margins.right),
                (this.height = a.height))
              : ((this.width = a.width),
                (this.height = this._length =
                  o.height - this._margins.top - this._margins.bottom));
        }
        _calculatePadding(a, o, u, f) {
          const {
              ticks: { align: g, padding: y },
              position: w,
            } = this.options,
            S = 0 !== this.labelRotation,
            P = "top" !== w && "x" === this.axis;
          if (this.isHorizontal()) {
            const Y = this.getPixelForTick(0) - this.left,
              dt = this.right - this.getPixelForTick(this.ticks.length - 1);
            let Tt = 0,
              Ht = 0;
            S
              ? P
                ? ((Tt = f * a.width), (Ht = u * o.height))
                : ((Tt = u * a.height), (Ht = f * o.width))
              : "start" === g
                ? (Ht = o.width)
                : "end" === g
                  ? (Tt = a.width)
                  : "inner" !== g && ((Tt = a.width / 2), (Ht = o.width / 2)),
              (this.paddingLeft = Math.max(
                ((Tt - Y + y) * this.width) / (this.width - Y),
                0,
              )),
              (this.paddingRight = Math.max(
                ((Ht - dt + y) * this.width) / (this.width - dt),
                0,
              ));
          } else {
            let Y = o.height / 2,
              dt = a.height / 2;
            "start" === g
              ? ((Y = 0), (dt = a.height))
              : "end" === g && ((Y = o.height), (dt = 0)),
              (this.paddingTop = Y + y),
              (this.paddingBottom = dt + y);
          }
        }
        _handleMargins() {
          this._margins &&
            ((this._margins.left = Math.max(
              this.paddingLeft,
              this._margins.left,
            )),
            (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
            (this._margins.right = Math.max(
              this.paddingRight,
              this._margins.right,
            )),
            (this._margins.bottom = Math.max(
              this.paddingBottom,
              this._margins.bottom,
            )));
        }
        afterFit() {
          de(this.options.afterFit, [this]);
        }
        isHorizontal() {
          const { axis: a, position: o } = this.options;
          return "top" === o || "bottom" === o || "x" === a;
        }
        isFullSize() {
          return this.options.fullSize;
        }
        _convertTicksToLabels(a) {
          let o, u;
          for (
            this.beforeTickToLabelConversion(),
              this.generateTickLabels(a),
              o = 0,
              u = a.length;
            o < u;
            o++
          )
            ri(a[o].label) && (a.splice(o, 1), u--, o--);
          this.afterTickToLabelConversion();
        }
        _getLabelSizes() {
          let a = this._labelSizes;
          if (!a) {
            const o = this.options.ticks.sampleSize;
            let u = this.ticks;
            o < u.length && (u = Ks(u, o)),
              (this._labelSizes = a =
                this._computeLabelSizes(
                  u,
                  u.length,
                  this.options.ticks.maxTicksLimit,
                ));
          }
          return a;
        }
        _computeLabelSizes(a, o, u) {
          const { ctx: f, _longestTextCache: g } = this,
            y = [],
            w = [],
            S = Math.floor(o / ba(o, u));
          let dt,
            Tt,
            Ht,
            be,
            Ce,
            Se,
            ci,
            ai,
            Ti,
            Oi,
            wi,
            P = 0,
            Y = 0;
          for (dt = 0; dt < o; dt += S) {
            if (
              ((be = a[dt].label),
              (Ce = this._resolveTickFontOptions(dt)),
              (f.font = Se = Ce.string),
              (ci = g[Se] = g[Se] || { data: {}, gc: [] }),
              (ai = Ce.lineHeight),
              (Ti = Oi = 0),
              ri(be) || te(be))
            ) {
              if (te(be))
                for (Tt = 0, Ht = be.length; Tt < Ht; ++Tt)
                  (wi = be[Tt]),
                    !ri(wi) &&
                      !te(wi) &&
                      ((Ti = nr(f, ci.data, ci.gc, Ti, wi)), (Oi += ai));
            } else (Ti = nr(f, ci.data, ci.gc, Ti, be)), (Oi = ai);
            y.push(Ti),
              w.push(Oi),
              (P = Math.max(Ti, P)),
              (Y = Math.max(Oi, Y));
          }
          !(function za(l, a) {
            ot(l, (o) => {
              const u = o.gc,
                f = u.length / 2;
              let g;
              if (f > a) {
                for (g = 0; g < f; ++g) delete o.data[u[g]];
                u.splice(0, f);
              }
            });
          })(g, o);
          const Di = y.indexOf(P),
            Ui = w.indexOf(Y),
            Ni = (Ji) => ({ width: y[Ji] || 0, height: w[Ji] || 0 });
          return {
            first: Ni(0),
            last: Ni(o - 1),
            widest: Ni(Di),
            highest: Ni(Ui),
            widths: y,
            heights: w,
          };
        }
        getLabelForValue(a) {
          return a;
        }
        getPixelForValue(a, o) {
          return NaN;
        }
        getValueForPixel(a) {}
        getPixelForTick(a) {
          const o = this.ticks;
          return a < 0 || a > o.length - 1
            ? null
            : this.getPixelForValue(o[a].value);
        }
        getPixelForDecimal(a) {
          this._reversePixels && (a = 1 - a);
          const o = this._startPixel + a * this._length;
          return (function Je(l) {
            return Te(l, -32768, 32767);
          })(this._alignToPixels ? Oo(this.chart, o, 0) : o);
        }
        getDecimalForPixel(a) {
          const o = (a - this._startPixel) / this._length;
          return this._reversePixels ? 1 - o : o;
        }
        getBasePixel() {
          return this.getPixelForValue(this.getBaseValue());
        }
        getBaseValue() {
          const { min: a, max: o } = this;
          return a < 0 && o < 0 ? o : a > 0 && o > 0 ? a : 0;
        }
        getContext(a) {
          const o = this.ticks || [];
          if (a >= 0 && a < o.length) {
            const u = o[a];
            return (
              u.$context ||
              (u.$context = (function ql(l, a, o) {
                return or(l, { tick: o, index: a, type: "tick" });
              })(this.getContext(), a, u))
            );
          }
          return (
            this.$context ||
            (this.$context = (function ya(l, a) {
              return or(l, { scale: a, type: "scale" });
            })(this.chart.getContext(), this))
          );
        }
        _tickSize() {
          const a = this.options.ticks,
            o = Yt(this.labelRotation),
            u = Math.abs(Math.cos(o)),
            f = Math.abs(Math.sin(o)),
            g = this._getLabelSizes(),
            y = a.autoSkipPadding || 0,
            w = g ? g.widest.width + y : 0,
            S = g ? g.highest.height + y : 0;
          return this.isHorizontal()
            ? S * u > w * f
              ? w / u
              : S / f
            : S * f < w * u
              ? S / u
              : w / f;
        }
        _isVisible() {
          const a = this.options.display;
          return "auto" !== a ? !!a : this.getMatchingVisibleMetas().length > 0;
        }
        _computeGridLineItems(a) {
          const o = this.axis,
            u = this.chart,
            f = this.options,
            { grid: g, position: y, border: w } = f,
            S = g.offset,
            P = this.isHorizontal(),
            dt = this.ticks.length + (S ? 1 : 0),
            Tt = Js(g),
            Ht = [],
            be = w.setContext(this.getContext()),
            Ce = be.display ? be.width : 0,
            Se = Ce / 2,
            ci = function (mo) {
              return Oo(u, mo, Ce);
            };
          let ai, Ti, Oi, wi, Di, Ui, Ni, Ji, En, wn, Nn, no;
          if ("top" === y)
            (ai = ci(this.bottom)),
              (Ui = this.bottom - Tt),
              (Ji = ai - Se),
              (wn = ci(a.top) + Se),
              (no = a.bottom);
          else if ("bottom" === y)
            (ai = ci(this.top)),
              (wn = a.top),
              (no = ci(a.bottom) - Se),
              (Ui = ai + Se),
              (Ji = this.top + Tt);
          else if ("left" === y)
            (ai = ci(this.right)),
              (Di = this.right - Tt),
              (Ni = ai - Se),
              (En = ci(a.left) + Se),
              (Nn = a.right);
          else if ("right" === y)
            (ai = ci(this.left)),
              (En = a.left),
              (Nn = ci(a.right) - Se),
              (Di = ai + Se),
              (Ni = this.left + Tt);
          else if ("x" === o) {
            if ("center" === y) ai = ci((a.top + a.bottom) / 2 + 0.5);
            else if (Be(y)) {
              const mo = Object.keys(y)[0];
              ai = ci(this.chart.scales[mo].getPixelForValue(y[mo]));
            }
            (wn = a.top), (no = a.bottom), (Ui = ai + Se), (Ji = Ui + Tt);
          } else if ("y" === o) {
            if ("center" === y) ai = ci((a.left + a.right) / 2);
            else if (Be(y)) {
              const mo = Object.keys(y)[0];
              ai = ci(this.chart.scales[mo].getPixelForValue(y[mo]));
            }
            (Di = ai - Se), (Ni = Di - Tt), (En = a.left), (Nn = a.right);
          }
          const Ho = gi(f.ticks.maxTicksLimit, dt),
            Qn = Math.max(1, Math.ceil(dt / Ho));
          for (Ti = 0; Ti < dt; Ti += Qn) {
            const mo = this.getContext(Ti),
              Go = g.setContext(mo),
              Ts = w.setContext(mo),
              yr = Go.lineWidth,
              Ka = Go.color,
              rd = Ts.dash || [],
              Os = Ts.dashOffset,
              sd = Go.tickWidth,
              Ja = Go.tickColor,
              Xa = Go.tickBorderDash || [],
              jr = Go.tickBorderDashOffset;
            (Oi = Sd(this, Ti, S)),
              void 0 !== Oi &&
                ((wi = Oo(u, Oi, yr)),
                P ? (Di = Ni = En = Nn = wi) : (Ui = Ji = wn = no = wi),
                Ht.push({
                  tx1: Di,
                  ty1: Ui,
                  tx2: Ni,
                  ty2: Ji,
                  x1: En,
                  y1: wn,
                  x2: Nn,
                  y2: no,
                  width: yr,
                  color: Ka,
                  borderDash: rd,
                  borderDashOffset: Os,
                  tickWidth: sd,
                  tickColor: Ja,
                  tickBorderDash: Xa,
                  tickBorderDashOffset: jr,
                }));
          }
          return (this._ticksLength = dt), (this._borderValue = ai), Ht;
        }
        _computeLabelItems(a) {
          const o = this.axis,
            u = this.options,
            { position: f, ticks: g } = u,
            y = this.isHorizontal(),
            w = this.ticks,
            { align: S, crossAlign: P, padding: Y, mirror: dt } = g,
            Tt = Js(u.grid),
            Ht = Tt + Y,
            be = dt ? -Y : Ht,
            Ce = -Yt(this.labelRotation),
            Se = [];
          let ci,
            ai,
            Ti,
            Oi,
            wi,
            Di,
            Ui,
            Ni,
            Ji,
            En,
            wn,
            Nn,
            no = "middle";
          if ("top" === f)
            (Di = this.bottom - be), (Ui = this._getXAxisLabelAlignment());
          else if ("bottom" === f)
            (Di = this.top + be), (Ui = this._getXAxisLabelAlignment());
          else if ("left" === f) {
            const Qn = this._getYAxisLabelAlignment(Tt);
            (Ui = Qn.textAlign), (wi = Qn.x);
          } else if ("right" === f) {
            const Qn = this._getYAxisLabelAlignment(Tt);
            (Ui = Qn.textAlign), (wi = Qn.x);
          } else if ("x" === o) {
            if ("center" === f) Di = (a.top + a.bottom) / 2 + Ht;
            else if (Be(f)) {
              const Qn = Object.keys(f)[0];
              Di = this.chart.scales[Qn].getPixelForValue(f[Qn]) + Ht;
            }
            Ui = this._getXAxisLabelAlignment();
          } else if ("y" === o) {
            if ("center" === f) wi = (a.left + a.right) / 2 - Ht;
            else if (Be(f)) {
              const Qn = Object.keys(f)[0];
              wi = this.chart.scales[Qn].getPixelForValue(f[Qn]);
            }
            Ui = this._getYAxisLabelAlignment(Tt).textAlign;
          }
          "y" === o &&
            ("start" === S ? (no = "top") : "end" === S && (no = "bottom"));
          const Ho = this._getLabelSizes();
          for (ci = 0, ai = w.length; ci < ai; ++ci) {
            (Ti = w[ci]), (Oi = Ti.label);
            const Qn = g.setContext(this.getContext(ci));
            (Ni = this.getPixelForTick(ci) + g.labelOffset),
              (Ji = this._resolveTickFontOptions(ci)),
              (En = Ji.lineHeight),
              (wn = te(Oi) ? Oi.length : 1);
            const mo = wn / 2,
              Go = Qn.color,
              Ts = Qn.textStrokeColor,
              yr = Qn.textStrokeWidth;
            let rd,
              Ka = Ui;
            if (
              (y
                ? ((wi = Ni),
                  "inner" === Ui &&
                    (Ka =
                      ci === ai - 1
                        ? this.options.reverse
                          ? "left"
                          : "right"
                        : 0 === ci
                          ? this.options.reverse
                            ? "right"
                            : "left"
                          : "center"),
                  (Nn =
                    "top" === f
                      ? "near" === P || 0 !== Ce
                        ? -wn * En + En / 2
                        : "center" === P
                          ? -Ho.highest.height / 2 - mo * En + En
                          : En / 2 - Ho.highest.height
                      : "near" === P || 0 !== Ce
                        ? En / 2
                        : "center" === P
                          ? Ho.highest.height / 2 - mo * En
                          : Ho.highest.height - wn * En),
                  dt && (Nn *= -1),
                  0 !== Ce &&
                    !Qn.showLabelBackdrop &&
                    (wi += (En / 2) * Math.sin(Ce)))
                : ((Di = Ni), (Nn = ((1 - wn) * En) / 2)),
              Qn.showLabelBackdrop)
            ) {
              const Os = Wn(Qn.backdropPadding),
                sd = Ho.heights[ci],
                Ja = Ho.widths[ci];
              let Xa = Nn - Os.top,
                jr = 0 - Os.left;
              switch (no) {
                case "middle":
                  Xa -= sd / 2;
                  break;
                case "bottom":
                  Xa -= sd;
              }
              switch (Ui) {
                case "center":
                  jr -= Ja / 2;
                  break;
                case "right":
                  jr -= Ja;
                  break;
                case "inner":
                  ci === ai - 1 ? (jr -= Ja) : ci > 0 && (jr -= Ja / 2);
              }
              rd = {
                left: jr,
                top: Xa,
                width: Ja + Os.width,
                height: sd + Os.height,
                color: Qn.backdropColor,
              };
            }
            Se.push({
              label: Oi,
              font: Ji,
              textOffset: Nn,
              options: {
                rotation: Ce,
                color: Go,
                strokeColor: Ts,
                strokeWidth: yr,
                textAlign: Ka,
                textBaseline: no,
                translation: [wi, Di],
                backdrop: rd,
              },
            });
          }
          return Se;
        }
        _getXAxisLabelAlignment() {
          const { position: a, ticks: o } = this.options;
          if (-Yt(this.labelRotation)) return "top" === a ? "left" : "right";
          let f = "center";
          return (
            "start" === o.align
              ? (f = "left")
              : "end" === o.align
                ? (f = "right")
                : "inner" === o.align && (f = "inner"),
            f
          );
        }
        _getYAxisLabelAlignment(a) {
          const {
              position: o,
              ticks: { crossAlign: u, mirror: f, padding: g },
            } = this.options,
            w = a + g,
            S = this._getLabelSizes().widest.width;
          let P, Y;
          return (
            "left" === o
              ? f
                ? ((Y = this.right + g),
                  "near" === u
                    ? (P = "left")
                    : "center" === u
                      ? ((P = "center"), (Y += S / 2))
                      : ((P = "right"), (Y += S)))
                : ((Y = this.right - w),
                  "near" === u
                    ? (P = "right")
                    : "center" === u
                      ? ((P = "center"), (Y -= S / 2))
                      : ((P = "left"), (Y = this.left)))
              : "right" === o
                ? f
                  ? ((Y = this.left + g),
                    "near" === u
                      ? (P = "right")
                      : "center" === u
                        ? ((P = "center"), (Y -= S / 2))
                        : ((P = "left"), (Y -= S)))
                  : ((Y = this.left + w),
                    "near" === u
                      ? (P = "left")
                      : "center" === u
                        ? ((P = "center"), (Y += S / 2))
                        : ((P = "right"), (Y = this.right)))
                : (P = "right"),
            { textAlign: P, x: Y }
          );
        }
        _computeLabelArea() {
          if (this.options.ticks.mirror) return;
          const a = this.chart,
            o = this.options.position;
          return "left" === o || "right" === o
            ? { top: 0, left: this.left, bottom: a.height, right: this.right }
            : "top" === o || "bottom" === o
              ? { top: this.top, left: 0, bottom: this.bottom, right: a.width }
              : void 0;
        }
        drawBackground() {
          const {
            ctx: a,
            options: { backgroundColor: o },
            left: u,
            top: f,
            width: g,
            height: y,
          } = this;
          o &&
            (a.save(), (a.fillStyle = o), a.fillRect(u, f, g, y), a.restore());
        }
        getLineWidthForValue(a) {
          const o = this.options.grid;
          if (!this._isVisible() || !o.display) return 0;
          const f = this.ticks.findIndex((g) => g.value === a);
          return f >= 0 ? o.setContext(this.getContext(f)).lineWidth : 0;
        }
        drawGrid(a) {
          const o = this.options.grid,
            u = this.ctx,
            f =
              this._gridLineItems ||
              (this._gridLineItems = this._computeGridLineItems(a));
          let g, y;
          const w = (S, P, Y) => {
            !Y.width ||
              !Y.color ||
              (u.save(),
              (u.lineWidth = Y.width),
              (u.strokeStyle = Y.color),
              u.setLineDash(Y.borderDash || []),
              (u.lineDashOffset = Y.borderDashOffset),
              u.beginPath(),
              u.moveTo(S.x, S.y),
              u.lineTo(P.x, P.y),
              u.stroke(),
              u.restore());
          };
          if (o.display)
            for (g = 0, y = f.length; g < y; ++g) {
              const S = f[g];
              o.drawOnChartArea &&
                w({ x: S.x1, y: S.y1 }, { x: S.x2, y: S.y2 }, S),
                o.drawTicks &&
                  w(
                    { x: S.tx1, y: S.ty1 },
                    { x: S.tx2, y: S.ty2 },
                    {
                      color: S.tickColor,
                      width: S.tickWidth,
                      borderDash: S.tickBorderDash,
                      borderDashOffset: S.tickBorderDashOffset,
                    },
                  );
            }
        }
        drawBorder() {
          const {
              chart: a,
              ctx: o,
              options: { border: u, grid: f },
            } = this,
            g = u.setContext(this.getContext()),
            y = u.display ? g.width : 0;
          if (!y) return;
          const w = f.setContext(this.getContext(0)).lineWidth,
            S = this._borderValue;
          let P, Y, dt, Tt;
          this.isHorizontal()
            ? ((P = Oo(a, this.left, y) - y / 2),
              (Y = Oo(a, this.right, w) + w / 2),
              (dt = Tt = S))
            : ((dt = Oo(a, this.top, y) - y / 2),
              (Tt = Oo(a, this.bottom, w) + w / 2),
              (P = Y = S)),
            o.save(),
            (o.lineWidth = g.width),
            (o.strokeStyle = g.color),
            o.beginPath(),
            o.moveTo(P, dt),
            o.lineTo(Y, Tt),
            o.stroke(),
            o.restore();
        }
        drawLabels(a) {
          if (!this.options.ticks.display) return;
          const u = this.ctx,
            f = this._computeLabelArea();
          f && On(u, f);
          const g = this.getLabelItems(a);
          for (const y of g) xo(u, y.label, 0, y.textOffset, y.font, y.options);
          f && Fi(u);
        }
        drawTitle() {
          const {
            ctx: a,
            options: { position: o, title: u, reverse: f },
          } = this;
          if (!u.display) return;
          const g = jn(u.font),
            y = Wn(u.padding),
            w = u.align;
          let S = g.lineHeight / 2;
          "bottom" === o || "center" === o || Be(o)
            ? ((S += y.bottom),
              te(u.text) && (S += g.lineHeight * (u.text.length - 1)))
            : (S += y.top);
          const {
            titleX: P,
            titleY: Y,
            maxWidth: dt,
            rotation: Tt,
          } = (function Hu(l, a, o, u) {
            const { top: f, left: g, bottom: y, right: w, chart: S } = l,
              { chartArea: P, scales: Y } = S;
            let Tt,
              Ht,
              be,
              dt = 0;
            const Ce = y - f,
              Se = w - g;
            if (l.isHorizontal()) {
              if (((Ht = yn(u, g, w)), Be(o))) {
                const ci = Object.keys(o)[0];
                be = Y[ci].getPixelForValue(o[ci]) + Ce - a;
              } else
                be =
                  "center" === o
                    ? (P.bottom + P.top) / 2 + Ce - a
                    : pl(l, o, a);
              Tt = w - g;
            } else {
              if (Be(o)) {
                const ci = Object.keys(o)[0];
                Ht = Y[ci].getPixelForValue(o[ci]) - Se + a;
              } else
                Ht =
                  "center" === o
                    ? (P.left + P.right) / 2 - Se + a
                    : pl(l, o, a);
              (be = yn(u, y, f)), (dt = "left" === o ? -ke : ke);
            }
            return { titleX: Ht, titleY: be, maxWidth: Tt, rotation: dt };
          })(this, S, o, w);
          xo(a, u.text, 0, 0, g, {
            color: u.color,
            maxWidth: dt,
            rotation: Tt,
            textAlign: ju(w, o, f),
            textBaseline: "middle",
            translation: [P, Y],
          });
        }
        draw(a) {
          this._isVisible() &&
            (this.drawBackground(),
            this.drawGrid(a),
            this.drawBorder(),
            this.drawTitle(),
            this.drawLabels(a));
        }
        _layers() {
          const a = this.options,
            o = (a.ticks && a.ticks.z) || 0,
            u = gi(a.grid && a.grid.z, -1),
            f = gi(a.border && a.border.z, 0);
          return this._isVisible() && this.draw === Xs.prototype.draw
            ? [
                {
                  z: u,
                  draw: (g) => {
                    this.drawBackground(), this.drawGrid(g), this.drawTitle();
                  },
                },
                {
                  z: f,
                  draw: () => {
                    this.drawBorder();
                  },
                },
                {
                  z: o,
                  draw: (g) => {
                    this.drawLabels(g);
                  },
                },
              ]
            : [
                {
                  z: o,
                  draw: (g) => {
                    this.draw(g);
                  },
                },
              ];
        }
        getMatchingVisibleMetas(a) {
          const o = this.chart.getSortedVisibleDatasetMetas(),
            u = this.axis + "AxisID",
            f = [];
          let g, y;
          for (g = 0, y = o.length; g < y; ++g) {
            const w = o[g];
            w[u] === this.id && (!a || w.type === a) && f.push(w);
          }
          return f;
        }
        _resolveTickFontOptions(a) {
          return jn(this.options.ticks.setContext(this.getContext(a)).font);
        }
        _maxDigits() {
          const a = this._resolveTickFontOptions(0).lineHeight;
          return (this.isHorizontal() ? this.width : this.height) / a;
        }
      }
      class kd {
        constructor(a, o, u) {
          (this.type = a),
            (this.scope = o),
            (this.override = u),
            (this.items = Object.create(null));
        }
        isForType(a) {
          return Object.prototype.isPrototypeOf.call(
            this.type.prototype,
            a.prototype,
          );
        }
        register(a) {
          const o = Object.getPrototypeOf(a);
          let u;
          (function Lo(l) {
            return "id" in l && "defaults" in l;
          })(o) && (u = this.register(o));
          const f = this.items,
            g = a.id,
            y = this.scope + "." + g;
          if (!g) throw new Error("class does not have id: " + a);
          return (
            g in f ||
              ((f[g] = a),
              (function io(l, a, o) {
                const u = Lt(Object.create(null), [
                  o ? un.get(o) : {},
                  un.get(a),
                  l.defaults,
                ]);
                un.set(a, u),
                  l.defaultRoutes &&
                    (function af(l, a) {
                      Object.keys(a).forEach((o) => {
                        const u = o.split("."),
                          f = u.pop(),
                          g = [l].concat(u).join("."),
                          y = a[o].split("."),
                          w = y.pop(),
                          S = y.join(".");
                        un.route(g, f, S, w);
                      });
                    })(a, l.defaultRoutes),
                  l.descriptors && un.describe(a, l.descriptors);
              })(a, y, u),
              this.override && un.override(a.id, a.overrides)),
            y
          );
        }
        get(a) {
          return this.items[a];
        }
        unregister(a) {
          const o = this.items,
            u = a.id,
            f = this.scope;
          u in o && delete o[u],
            f && u in un[f] && (delete un[f][u], this.override && delete Li[u]);
        }
      }
      class lg {
        constructor() {
          (this.controllers = new kd(Fo, "datasets", !0)),
            (this.elements = new kd(Ds, "elements")),
            (this.plugins = new kd(Object, "plugins")),
            (this.scales = new kd(Xs, "scales")),
            (this._typedRegistries = [
              this.controllers,
              this.scales,
              this.elements,
            ]);
        }
        add(...a) {
          this._each("register", a);
        }
        remove(...a) {
          this._each("unregister", a);
        }
        addControllers(...a) {
          this._each("register", a, this.controllers);
        }
        addElements(...a) {
          this._each("register", a, this.elements);
        }
        addPlugins(...a) {
          this._each("register", a, this.plugins);
        }
        addScales(...a) {
          this._each("register", a, this.scales);
        }
        getController(a) {
          return this._get(a, this.controllers, "controller");
        }
        getElement(a) {
          return this._get(a, this.elements, "element");
        }
        getPlugin(a) {
          return this._get(a, this.plugins, "plugin");
        }
        getScale(a) {
          return this._get(a, this.scales, "scale");
        }
        removeControllers(...a) {
          this._each("unregister", a, this.controllers);
        }
        removeElements(...a) {
          this._each("unregister", a, this.elements);
        }
        removePlugins(...a) {
          this._each("unregister", a, this.plugins);
        }
        removeScales(...a) {
          this._each("unregister", a, this.scales);
        }
        _each(a, o, u) {
          [...o].forEach((f) => {
            const g = u || this._getRegistryForType(f);
            u || g.isForType(f) || (g === this.plugins && f.id)
              ? this._exec(a, g, f)
              : ot(f, (y) => {
                  const w = u || this._getRegistryForType(y);
                  this._exec(a, w, y);
                });
          });
        }
        _exec(a, o, u) {
          const f = it(a);
          de(u["before" + f], [], u), o[a](u), de(u["after" + f], [], u);
        }
        _getRegistryForType(a) {
          for (let o = 0; o < this._typedRegistries.length; o++) {
            const u = this._typedRegistries[o];
            if (u.isForType(a)) return u;
          }
          return this.plugins;
        }
        _get(a, o, u) {
          const f = o.get(a);
          if (void 0 === f)
            throw new Error('"' + a + '" is not a registered ' + u + ".");
          return f;
        }
      }
      var Xr = new lg();
      class xa {
        constructor() {
          this._init = [];
        }
        notify(a, o, u, f) {
          "beforeInit" === o &&
            ((this._init = this._createDescriptors(a, !0)),
            this._notify(this._init, a, "install"));
          const g = f ? this._descriptors(a).filter(f) : this._descriptors(a),
            y = this._notify(g, a, o, u);
          return (
            "afterDestroy" === o &&
              (this._notify(g, a, "stop"),
              this._notify(this._init, a, "uninstall")),
            y
          );
        }
        _notify(a, o, u, f) {
          f = f || {};
          for (const g of a) {
            const y = g.plugin;
            if (!1 === de(y[u], [o, f, g.options], y) && f.cancelable)
              return !1;
          }
          return !0;
        }
        invalidate() {
          ri(this._cache) ||
            ((this._oldCache = this._cache), (this._cache = void 0));
        }
        _descriptors(a) {
          if (this._cache) return this._cache;
          const o = (this._cache = this._createDescriptors(a));
          return this._notifyStateChanges(a), o;
        }
        _createDescriptors(a, o) {
          const u = a && a.config,
            f = gi(u.options && u.options.plugins, {}),
            g = (function Nc(l) {
              const a = {},
                o = [],
                u = Object.keys(Xr.plugins.items);
              for (let g = 0; g < u.length; g++) o.push(Xr.getPlugin(u[g]));
              const f = l.plugins || [];
              for (let g = 0; g < f.length; g++) {
                const y = f[g];
                -1 === o.indexOf(y) && (o.push(y), (a[y.id] = !0));
              }
              return { plugins: o, localIds: a };
            })(u);
          return !1 !== f || o
            ? (function Td(l, { plugins: a, localIds: o }, u, f) {
                const g = [],
                  y = l.getContext();
                for (const w of a) {
                  const S = w.id,
                    P = Ua(u[S], f);
                  null !== P &&
                    g.push({
                      plugin: w,
                      options: Bc(l.config, { plugin: w, local: o[S] }, P, y),
                    });
                }
                return g;
              })(a, g, f, o)
            : [];
        }
        _notifyStateChanges(a) {
          const o = this._oldCache || [],
            u = this._cache,
            f = (g, y) =>
              g.filter((w) => !y.some((S) => w.plugin.id === S.plugin.id));
          this._notify(f(o, u), a, "stop"), this._notify(f(u, o), a, "start");
        }
      }
      function Ua(l, a) {
        return a || !1 !== l ? (!0 === l ? {} : l) : null;
      }
      function Bc(l, { plugin: a, local: o }, u, f) {
        const g = l.pluginScopeKeys(a),
          y = l.getOptionScopes(u, g);
        return (
          o && a.defaults && y.push(a.defaults),
          l.createResolver(y, f, [""], {
            scriptable: !1,
            indexable: !1,
            allKeys: !0,
          })
        );
      }
      function Gu(l, a) {
        return (
          ((a.datasets || {})[l] || {}).indexAxis ||
          a.indexAxis ||
          (un.datasets[l] || {}).indexAxis ||
          "x"
        );
      }
      function Ql(l) {
        if ("x" === l || "y" === l || "r" === l) return l;
      }
      function Ms(l) {
        return "top" === l || "bottom" === l
          ? "x"
          : "left" === l || "right" === l
            ? "y"
            : void 0;
      }
      function Kl(l, ...a) {
        if (Ql(l)) return l;
        for (const o of a) {
          const u =
            o.axis ||
            Ms(o.position) ||
            (l.length > 1 && Ql(l[0].toLowerCase()));
          if (u) return u;
        }
        throw new Error(
          `Cannot determine type of '${l}' axis. Please provide 'axis' or 'position' option.`,
        );
      }
      function ja(l, a, o) {
        if (o[a + "AxisID"] === l) return { axis: a };
      }
      function Jl(l) {
        const a = l.options || (l.options = {});
        (a.plugins = gi(a.plugins, {})),
          (a.scales = (function Od(l, a) {
            const o = Li[l.type] || { scales: {} },
              u = a.scales || {},
              f = Gu(l.type, a),
              g = Object.create(null);
            return (
              Object.keys(u).forEach((y) => {
                const w = u[y];
                if (!Be(w))
                  return console.error(
                    `Invalid scale configuration for scale: ${y}`,
                  );
                if (w._proxy)
                  return console.warn(
                    `Ignoring resolver passed as options for scale: ${y}`,
                  );
                const S = Kl(
                    y,
                    w,
                    (function Vc(l, a) {
                      if (a.data && a.data.datasets) {
                        const o = a.data.datasets.filter(
                          (u) => u.xAxisID === l || u.yAxisID === l,
                        );
                        if (o.length)
                          return ja(l, "x", o[0]) || ja(l, "y", o[0]);
                      }
                      return {};
                    })(y, l),
                    un.scales[w.type],
                  ),
                  P = (function Yu(l, a) {
                    return l === a ? "_index_" : "_value_";
                  })(S, f),
                  Y = o.scales || {};
                g[y] = ut(Object.create(null), [{ axis: S }, w, Y[S], Y[P]]);
              }),
              l.data.datasets.forEach((y) => {
                const w = y.type || l.type,
                  S = y.indexAxis || Gu(w, a),
                  Y = (Li[w] || {}).scales || {};
                Object.keys(Y).forEach((dt) => {
                  const Tt = (function Zu(l, a) {
                      let o = l;
                      return (
                        "_index_" === l
                          ? (o = a)
                          : "_value_" === l && (o = "x" === a ? "y" : "x"),
                        o
                      );
                    })(dt, S),
                    Ht = y[Tt + "AxisID"] || Tt;
                  (g[Ht] = g[Ht] || Object.create(null)),
                    ut(g[Ht], [{ axis: Tt }, u[Ht], Y[dt]]);
                });
              }),
              Object.keys(g).forEach((y) => {
                const w = g[y];
                ut(w, [un.scales[w.type], un.scale]);
              }),
              g
            );
          })(l, a));
      }
      function zc(l) {
        return (
          ((l = l || {}).datasets = l.datasets || []),
          (l.labels = l.labels || []),
          l
        );
      }
      const ea = new Map(),
        Uc = new Set();
      function Xl(l, a) {
        let o = ea.get(l);
        return o || ((o = a()), ea.set(l, o), Uc.add(o)), o;
      }
      const gl = (l, a, o) => {
        const u = se(a, o);
        void 0 !== u && l.add(u);
      };
      class lf {
        constructor(a) {
          (this._config = (function ta(l) {
            return ((l = l || {}).data = zc(l.data)), Jl(l), l;
          })(a)),
            (this._scopeCache = new Map()),
            (this._resolverCache = new Map());
        }
        get platform() {
          return this._config.platform;
        }
        get type() {
          return this._config.type;
        }
        set type(a) {
          this._config.type = a;
        }
        get data() {
          return this._config.data;
        }
        set data(a) {
          this._config.data = zc(a);
        }
        get options() {
          return this._config.options;
        }
        set options(a) {
          this._config.options = a;
        }
        get plugins() {
          return this._config.plugins;
        }
        update() {
          const a = this._config;
          this.clearCache(), Jl(a);
        }
        clearCache() {
          this._scopeCache.clear(), this._resolverCache.clear();
        }
        datasetScopeKeys(a) {
          return Xl(a, () => [[`datasets.${a}`, ""]]);
        }
        datasetAnimationScopeKeys(a, o) {
          return Xl(`${a}.transition.${o}`, () => [
            [`datasets.${a}.transitions.${o}`, `transitions.${o}`],
            [`datasets.${a}`, ""],
          ]);
        }
        datasetElementScopeKeys(a, o) {
          return Xl(`${a}-${o}`, () => [
            [
              `datasets.${a}.elements.${o}`,
              `datasets.${a}`,
              `elements.${o}`,
              "",
            ],
          ]);
        }
        pluginScopeKeys(a) {
          const o = a.id;
          return Xl(`${this.type}-plugin-${o}`, () => [
            [`plugins.${o}`, ...(a.additionalOptionScopes || [])],
          ]);
        }
        _cachedScopes(a, o) {
          const u = this._scopeCache;
          let f = u.get(a);
          return (!f || o) && ((f = new Map()), u.set(a, f)), f;
        }
        getOptionScopes(a, o, u) {
          const { options: f, type: g } = this,
            y = this._cachedScopes(a, u),
            w = y.get(o);
          if (w) return w;
          const S = new Set();
          o.forEach((Y) => {
            a && (S.add(a), Y.forEach((dt) => gl(S, a, dt))),
              Y.forEach((dt) => gl(S, f, dt)),
              Y.forEach((dt) => gl(S, Li[g] || {}, dt)),
              Y.forEach((dt) => gl(S, un, dt)),
              Y.forEach((dt) => gl(S, nn, dt));
          });
          const P = Array.from(S);
          return (
            0 === P.length && P.push(Object.create(null)),
            Uc.has(o) && y.set(o, P),
            P
          );
        }
        chartOptionScopes() {
          const { options: a, type: o } = this;
          return [a, Li[o] || {}, un.datasets[o] || {}, { type: o }, un, nn];
        }
        resolveNamedOptions(a, o, u, f = [""]) {
          const g = { $shared: !0 },
            { resolver: y, subPrefixes: w } = tc(this._resolverCache, a, f);
          let S = y;
          (function $u(l, a) {
            const { isScriptable: o, isIndexable: u } = Ko(l);
            for (const f of a) {
              const g = o(f),
                y = u(f),
                w = (y || g) && l[f];
              if ((g && (ve(w) || Ha(w))) || (y && te(w))) return !0;
            }
            return !1;
          })(y, o) &&
            ((g.$shared = !1),
            (S = Io(y, (u = ve(u) ? u() : u), this.createResolver(a, u, w))));
          for (const P of o) g[P] = S[P];
          return g;
        }
        createResolver(a, o, u = [""], f) {
          const { resolver: g } = tc(this._resolverCache, a, u);
          return Be(o) ? Io(g, o, void 0, f) : g;
        }
      }
      function tc(l, a, o) {
        let u = l.get(a);
        u || ((u = new Map()), l.set(a, u));
        const f = o.join();
        let g = u.get(f);
        return (
          g ||
            ((g = {
              resolver: Qo(a, o),
              subPrefixes: o.filter((w) => !w.toLowerCase().includes("hover")),
            }),
            u.set(f, g)),
          g
        );
      }
      const Ha = (l) =>
          Be(l) && Object.getOwnPropertyNames(l).some((a) => ve(l[a])),
        qu = ["top", "bottom", "left", "right", "chartArea"];
      function Br(l, a) {
        return (
          "top" === l || "bottom" === l || (-1 === qu.indexOf(l) && "x" === a)
        );
      }
      function Id(l, a) {
        return function (o, u) {
          return o[l] === u[l] ? o[a] - u[a] : o[l] - u[l];
        };
      }
      function ur(l) {
        const a = l.chart,
          o = a.options.animation;
        a.notifyPlugins("afterRender"), de(o && o.onComplete, [l], a);
      }
      function Rd(l) {
        const a = l.chart,
          o = a.options.animation;
        de(o && o.onProgress, [l], a);
      }
      function ec(l) {
        return (
          Zi() && "string" == typeof l
            ? (l = document.getElementById(l))
            : l && l.length && (l = l[0]),
          l && l.canvas && (l = l.canvas),
          l
        );
      }
      const Vr = {},
        Ga = (l) => {
          const a = ec(l);
          return Object.values(Vr)
            .filter((o) => o.canvas === a)
            .pop();
        };
      function Qu(l, a, o) {
        const u = Object.keys(l);
        for (const f of u) {
          const g = +f;
          if (g >= a) {
            const y = l[f];
            delete l[f], (o > 0 || g > a) && (l[g + o] = y);
          }
        }
      }
      function Ar(l, a, o) {
        return l.options.clip ? l[o] : a[o];
      }
      let Za = (() =>
        class l {
          static defaults = un;
          static instances = Vr;
          static overrides = Li;
          static registry = Xr;
          static version = "4.4.3";
          static getChart = Ga;
          static register(...o) {
            Xr.add(...o), Fd();
          }
          static unregister(...o) {
            Xr.remove(...o), Fd();
          }
          constructor(o, u) {
            const f = (this.config = new lf(u)),
              g = ec(o),
              y = Ga(g);
            if (y)
              throw new Error(
                "Canvas is already in use. Chart with ID '" +
                  y.id +
                  "' must be destroyed before the canvas with ID '" +
                  y.canvas.id +
                  "' can be reused.",
              );
            const w = f.createResolver(
              f.chartOptionScopes(),
              this.getContext(),
            );
            (this.platform = new (f.platform ||
              (function yo(l) {
                return !Zi() ||
                  (typeof OffscreenCanvas < "u" && l instanceof OffscreenCanvas)
                  ? I
                  : ml;
              })(g))()),
              this.platform.updateConfig(f);
            const S = this.platform.acquireContext(g, w.aspectRatio),
              P = S && S.canvas,
              Y = P && P.height,
              dt = P && P.width;
            (this.id = fi()),
              (this.ctx = S),
              (this.canvas = P),
              (this.width = dt),
              (this.height = Y),
              (this._options = w),
              (this._aspectRatio = this.aspectRatio),
              (this._layers = []),
              (this._metasets = []),
              (this._stacks = void 0),
              (this.boxes = []),
              (this.currentDevicePixelRatio = void 0),
              (this.chartArea = void 0),
              (this._active = []),
              (this._lastEvent = void 0),
              (this._listeners = {}),
              (this._responsiveListeners = void 0),
              (this._sortedMetasets = []),
              (this.scales = {}),
              (this._plugins = new xa()),
              (this.$proxies = {}),
              (this._hiddenIndices = {}),
              (this.attached = !1),
              (this._animationsDisabled = void 0),
              (this.$context = void 0),
              (this._doResize = (function pn(l, a) {
                let o;
                return function (...u) {
                  return (
                    a
                      ? (clearTimeout(o), (o = setTimeout(l, a, u)))
                      : l.apply(this, u),
                    a
                  );
                };
              })((Tt) => this.update(Tt), w.resizeDelay || 0)),
              (this._dataChanges = []),
              (Vr[this.id] = this),
              S && P
                ? (qr.listen(this, "complete", ur),
                  qr.listen(this, "progress", Rd),
                  this._initialize(),
                  this.attached && this.update())
                : console.error(
                    "Failed to create chart: can't acquire context from the given item",
                  );
          }
          get aspectRatio() {
            const {
              options: { aspectRatio: o, maintainAspectRatio: u },
              width: f,
              height: g,
              _aspectRatio: y,
            } = this;
            return ri(o) ? (u && y ? y : g ? f / g : null) : o;
          }
          get data() {
            return this.config.data;
          }
          set data(o) {
            this.config.data = o;
          }
          get options() {
            return this._options;
          }
          set options(o) {
            this.config.options = o;
          }
          get registry() {
            return Xr;
          }
          _initialize() {
            return (
              this.notifyPlugins("beforeInit"),
              this.options.responsive
                ? this.resize()
                : xr(this, this.options.devicePixelRatio),
              this.bindEvents(),
              this.notifyPlugins("afterInit"),
              this
            );
          }
          clear() {
            return Rr(this.canvas, this.ctx), this;
          }
          stop() {
            return qr.stop(this), this;
          }
          resize(o, u) {
            qr.running(this)
              ? (this._resizeBeforeDraw = { width: o, height: u })
              : this._resize(o, u);
          }
          _resize(o, u) {
            const f = this.options,
              w = this.platform.getMaximumSize(
                this.canvas,
                o,
                u,
                f.maintainAspectRatio && this.aspectRatio,
              ),
              S = f.devicePixelRatio || this.platform.getDevicePixelRatio(),
              P = this.width ? "resize" : "attach";
            (this.width = w.width),
              (this.height = w.height),
              (this._aspectRatio = this.aspectRatio),
              xr(this, S, !0) &&
                (this.notifyPlugins("resize", { size: w }),
                de(f.onResize, [this, w], this),
                this.attached && this._doResize(P) && this.render());
          }
          ensureScalesHaveIDs() {
            ot(this.options.scales || {}, (f, g) => {
              f.id = g;
            });
          }
          buildOrUpdateScales() {
            const o = this.options,
              u = o.scales,
              f = this.scales,
              g = Object.keys(f).reduce((w, S) => ((w[S] = !1), w), {});
            let y = [];
            u &&
              (y = y.concat(
                Object.keys(u).map((w) => {
                  const S = u[w],
                    P = Kl(w, S),
                    Y = "r" === P,
                    dt = "x" === P;
                  return {
                    options: S,
                    dposition: Y ? "chartArea" : dt ? "bottom" : "left",
                    dtype: Y ? "radialLinear" : dt ? "category" : "linear",
                  };
                }),
              )),
              ot(y, (w) => {
                const S = w.options,
                  P = S.id,
                  Y = Kl(P, S),
                  dt = gi(S.type, w.dtype);
                (void 0 === S.position ||
                  Br(S.position, Y) !== Br(w.dposition)) &&
                  (S.position = w.dposition),
                  (g[P] = !0);
                let Tt = null;
                P in f && f[P].type === dt
                  ? (Tt = f[P])
                  : ((Tt = new (Xr.getScale(dt))({
                      id: P,
                      type: dt,
                      ctx: this.ctx,
                      chart: this,
                    })),
                    (f[Tt.id] = Tt)),
                  Tt.init(S, o);
              }),
              ot(g, (w, S) => {
                w || delete f[S];
              }),
              ot(f, (w) => {
                Wo.configure(this, w, w.options), Wo.addBox(this, w);
              });
          }
          _updateMetasets() {
            const o = this._metasets,
              u = this.data.datasets.length,
              f = o.length;
            if ((o.sort((g, y) => g.index - y.index), f > u)) {
              for (let g = u; g < f; ++g) this._destroyDatasetMeta(g);
              o.splice(u, f - u);
            }
            this._sortedMetasets = o.slice(0).sort(Id("order", "index"));
          }
          _removeUnreferencedMetasets() {
            const {
              _metasets: o,
              data: { datasets: u },
            } = this;
            o.length > u.length && delete this._stacks,
              o.forEach((f, g) => {
                0 === u.filter((y) => y === f._dataset).length &&
                  this._destroyDatasetMeta(g);
              });
          }
          buildOrUpdateControllers() {
            const o = [],
              u = this.data.datasets;
            let f, g;
            for (
              this._removeUnreferencedMetasets(), f = 0, g = u.length;
              f < g;
              f++
            ) {
              const y = u[f];
              let w = this.getDatasetMeta(f);
              const S = y.type || this.config.type;
              if (
                (w.type &&
                  w.type !== S &&
                  (this._destroyDatasetMeta(f), (w = this.getDatasetMeta(f))),
                (w.type = S),
                (w.indexAxis = y.indexAxis || Gu(S, this.options)),
                (w.order = y.order || 0),
                (w.index = f),
                (w.label = "" + y.label),
                (w.visible = this.isDatasetVisible(f)),
                w.controller)
              )
                w.controller.updateIndex(f), w.controller.linkScales();
              else {
                const P = Xr.getController(S),
                  { datasetElementType: Y, dataElementType: dt } =
                    un.datasets[S];
                Object.assign(P, {
                  dataElementType: Xr.getElement(dt),
                  datasetElementType: Y && Xr.getElement(Y),
                }),
                  (w.controller = new P(this, f)),
                  o.push(w.controller);
              }
            }
            return this._updateMetasets(), o;
          }
          _resetElements() {
            ot(
              this.data.datasets,
              (o, u) => {
                this.getDatasetMeta(u).controller.reset();
              },
              this,
            );
          }
          reset() {
            this._resetElements(), this.notifyPlugins("reset");
          }
          update(o) {
            const u = this.config;
            u.update();
            const f = (this._options = u.createResolver(
                u.chartOptionScopes(),
                this.getContext(),
              )),
              g = (this._animationsDisabled = !f.animation);
            if (
              (this._updateScales(),
              this._checkEventBindings(),
              this._updateHiddenIndices(),
              this._plugins.invalidate(),
              !1 ===
                this.notifyPlugins("beforeUpdate", { mode: o, cancelable: !0 }))
            )
              return;
            const y = this.buildOrUpdateControllers();
            this.notifyPlugins("beforeElementsUpdate");
            let w = 0;
            for (let Y = 0, dt = this.data.datasets.length; Y < dt; Y++) {
              const { controller: Tt } = this.getDatasetMeta(Y),
                Ht = !g && -1 === y.indexOf(Tt);
              Tt.buildOrUpdateElements(Ht),
                (w = Math.max(+Tt.getMaxOverflow(), w));
            }
            (w = this._minPadding = f.layout.autoPadding ? w : 0),
              this._updateLayout(w),
              g ||
                ot(y, (Y) => {
                  Y.reset();
                }),
              this._updateDatasets(o),
              this.notifyPlugins("afterUpdate", { mode: o }),
              this._layers.sort(Id("z", "_idx"));
            const { _active: S, _lastEvent: P } = this;
            P
              ? this._eventHandler(P, !0)
              : S.length && this._updateHoverStyles(S, S, !0),
              this.render();
          }
          _updateScales() {
            ot(this.scales, (o) => {
              Wo.removeBox(this, o);
            }),
              this.ensureScalesHaveIDs(),
              this.buildOrUpdateScales();
          }
          _checkEventBindings() {
            const o = this.options,
              u = new Set(Object.keys(this._listeners)),
              f = new Set(o.events);
            (!qe(u, f) || !!this._responsiveListeners !== o.responsive) &&
              (this.unbindEvents(), this.bindEvents());
          }
          _updateHiddenIndices() {
            const { _hiddenIndices: o } = this,
              u = this._getUniformDataChanges() || [];
            for (const { method: f, start: g, count: y } of u)
              Qu(o, g, "_removeElements" === f ? -y : y);
          }
          _getUniformDataChanges() {
            const o = this._dataChanges;
            if (!o || !o.length) return;
            this._dataChanges = [];
            const u = this.data.datasets.length,
              f = (y) =>
                new Set(
                  o
                    .filter((w) => w[0] === y)
                    .map((w, S) => S + "," + w.splice(1).join(",")),
                ),
              g = f(0);
            for (let y = 1; y < u; y++) if (!qe(g, f(y))) return;
            return Array.from(g)
              .map((y) => y.split(","))
              .map((y) => ({ method: y[1], start: +y[2], count: +y[3] }));
          }
          _updateLayout(o) {
            if (!1 === this.notifyPlugins("beforeLayout", { cancelable: !0 }))
              return;
            Wo.update(this, this.width, this.height, o);
            const u = this.chartArea,
              f = u.width <= 0 || u.height <= 0;
            (this._layers = []),
              ot(
                this.boxes,
                (g) => {
                  (f && "chartArea" === g.position) ||
                    (g.configure && g.configure(),
                    this._layers.push(...g._layers()));
                },
                this,
              ),
              this._layers.forEach((g, y) => {
                g._idx = y;
              }),
              this.notifyPlugins("afterLayout");
          }
          _updateDatasets(o) {
            if (
              !1 !==
              this.notifyPlugins("beforeDatasetsUpdate", {
                mode: o,
                cancelable: !0,
              })
            ) {
              for (let u = 0, f = this.data.datasets.length; u < f; ++u)
                this.getDatasetMeta(u).controller.configure();
              for (let u = 0, f = this.data.datasets.length; u < f; ++u)
                this._updateDataset(u, ve(o) ? o({ datasetIndex: u }) : o);
              this.notifyPlugins("afterDatasetsUpdate", { mode: o });
            }
          }
          _updateDataset(o, u) {
            const f = this.getDatasetMeta(o),
              g = { meta: f, index: o, mode: u, cancelable: !0 };
            !1 !== this.notifyPlugins("beforeDatasetUpdate", g) &&
              (f.controller._update(u),
              (g.cancelable = !1),
              this.notifyPlugins("afterDatasetUpdate", g));
          }
          render() {
            !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) &&
              (qr.has(this)
                ? this.attached && !qr.running(this) && qr.start(this)
                : (this.draw(), ur({ chart: this })));
          }
          draw() {
            let o;
            if (this._resizeBeforeDraw) {
              const { width: f, height: g } = this._resizeBeforeDraw;
              this._resize(f, g), (this._resizeBeforeDraw = null);
            }
            if (
              (this.clear(),
              this.width <= 0 ||
                this.height <= 0 ||
                !1 === this.notifyPlugins("beforeDraw", { cancelable: !0 }))
            )
              return;
            const u = this._layers;
            for (o = 0; o < u.length && u[o].z <= 0; ++o)
              u[o].draw(this.chartArea);
            for (this._drawDatasets(); o < u.length; ++o)
              u[o].draw(this.chartArea);
            this.notifyPlugins("afterDraw");
          }
          _getSortedDatasetMetas(o) {
            const u = this._sortedMetasets,
              f = [];
            let g, y;
            for (g = 0, y = u.length; g < y; ++g) {
              const w = u[g];
              (!o || w.visible) && f.push(w);
            }
            return f;
          }
          getSortedVisibleDatasetMetas() {
            return this._getSortedDatasetMetas(!0);
          }
          _drawDatasets() {
            if (
              !1 ===
              this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })
            )
              return;
            const o = this.getSortedVisibleDatasetMetas();
            for (let u = o.length - 1; u >= 0; --u) this._drawDataset(o[u]);
            this.notifyPlugins("afterDatasetsDraw");
          }
          _drawDataset(o) {
            const u = this.ctx,
              f = o._clip,
              g = !f.disabled,
              y = (function Ln(l, a) {
                const { xScale: o, yScale: u } = l;
                return o && u
                  ? {
                      left: Ar(o, a, "left"),
                      right: Ar(o, a, "right"),
                      top: Ar(u, a, "top"),
                      bottom: Ar(u, a, "bottom"),
                    }
                  : a;
              })(o, this.chartArea),
              w = { meta: o, index: o.index, cancelable: !0 };
            !1 !== this.notifyPlugins("beforeDatasetDraw", w) &&
              (g &&
                On(u, {
                  left: !1 === f.left ? 0 : y.left - f.left,
                  right: !1 === f.right ? this.width : y.right + f.right,
                  top: !1 === f.top ? 0 : y.top - f.top,
                  bottom: !1 === f.bottom ? this.height : y.bottom + f.bottom,
                }),
              o.controller.draw(),
              g && Fi(u),
              (w.cancelable = !1),
              this.notifyPlugins("afterDatasetDraw", w));
          }
          isPointInArea(o) {
            return Vo(o, this.chartArea, this._minPadding);
          }
          getElementsAtEventForMode(o, u, f, g) {
            const y = wd.modes[u];
            return "function" == typeof y ? y(this, o, f, g) : [];
          }
          getDatasetMeta(o) {
            const u = this.data.datasets[o],
              f = this._metasets;
            let g = f.filter((y) => y && y._dataset === u).pop();
            return (
              g ||
                ((g = {
                  type: null,
                  data: [],
                  dataset: null,
                  controller: null,
                  hidden: null,
                  xAxisID: null,
                  yAxisID: null,
                  order: (u && u.order) || 0,
                  index: o,
                  _dataset: u,
                  _parsed: [],
                  _sorted: !1,
                }),
                f.push(g)),
              g
            );
          }
          getContext() {
            return (
              this.$context ||
              (this.$context = or(null, { chart: this, type: "chart" }))
            );
          }
          getVisibleDatasetCount() {
            return this.getSortedVisibleDatasetMetas().length;
          }
          isDatasetVisible(o) {
            const u = this.data.datasets[o];
            if (!u) return !1;
            const f = this.getDatasetMeta(o);
            return "boolean" == typeof f.hidden ? !f.hidden : !u.hidden;
          }
          setDatasetVisibility(o, u) {
            this.getDatasetMeta(o).hidden = !u;
          }
          toggleDataVisibility(o) {
            this._hiddenIndices[o] = !this._hiddenIndices[o];
          }
          getDataVisibility(o) {
            return !this._hiddenIndices[o];
          }
          _updateVisibility(o, u, f) {
            const g = f ? "show" : "hide",
              y = this.getDatasetMeta(o),
              w = y.controller._resolveAnimations(void 0, g);
            Ut(u)
              ? ((y.data[u].hidden = !f), this.update())
              : (this.setDatasetVisibility(o, f),
                w.update(y, { visible: f }),
                this.update((S) => (S.datasetIndex === o ? g : void 0)));
          }
          hide(o, u) {
            this._updateVisibility(o, u, !1);
          }
          show(o, u) {
            this._updateVisibility(o, u, !0);
          }
          _destroyDatasetMeta(o) {
            const u = this._metasets[o];
            u && u.controller && u.controller._destroy(),
              delete this._metasets[o];
          }
          _stop() {
            let o, u;
            for (
              this.stop(),
                qr.remove(this),
                o = 0,
                u = this.data.datasets.length;
              o < u;
              ++o
            )
              this._destroyDatasetMeta(o);
          }
          destroy() {
            this.notifyPlugins("beforeDestroy");
            const { canvas: o, ctx: u } = this;
            this._stop(),
              this.config.clearCache(),
              o &&
                (this.unbindEvents(),
                Rr(o, u),
                this.platform.releaseContext(u),
                (this.canvas = null),
                (this.ctx = null)),
              delete Vr[this.id],
              this.notifyPlugins("afterDestroy");
          }
          toBase64Image(...o) {
            return this.canvas.toDataURL(...o);
          }
          bindEvents() {
            this.bindUserEvents(),
              this.options.responsive
                ? this.bindResponsiveEvents()
                : (this.attached = !0);
          }
          bindUserEvents() {
            const o = this._listeners,
              u = this.platform,
              f = (y, w) => {
                u.addEventListener(this, y, w), (o[y] = w);
              },
              g = (y, w, S) => {
                (y.offsetX = w), (y.offsetY = S), this._eventHandler(y);
              };
            ot(this.options.events, (y) => f(y, g));
          }
          bindResponsiveEvents() {
            this._responsiveListeners || (this._responsiveListeners = {});
            const o = this._responsiveListeners,
              u = this.platform,
              f = (P, Y) => {
                u.addEventListener(this, P, Y), (o[P] = Y);
              },
              g = (P, Y) => {
                o[P] && (u.removeEventListener(this, P, Y), delete o[P]);
              },
              y = (P, Y) => {
                this.canvas && this.resize(P, Y);
              };
            let w;
            const S = () => {
              g("attach", S),
                (this.attached = !0),
                this.resize(),
                f("resize", y),
                f("detach", w);
            };
            (w = () => {
              (this.attached = !1),
                g("resize", y),
                this._stop(),
                this._resize(0, 0),
                f("attach", S);
            }),
              u.isAttached(this.canvas) ? S() : w();
          }
          unbindEvents() {
            ot(this._listeners, (o, u) => {
              this.platform.removeEventListener(this, u, o);
            }),
              (this._listeners = {}),
              ot(this._responsiveListeners, (o, u) => {
                this.platform.removeEventListener(this, u, o);
              }),
              (this._responsiveListeners = void 0);
          }
          updateHoverStyle(o, u, f) {
            const g = f ? "set" : "remove";
            let y, w, S, P;
            for (
              "dataset" === u &&
                ((y = this.getDatasetMeta(o[0].datasetIndex)),
                y.controller["_" + g + "DatasetHoverStyle"]()),
                S = 0,
                P = o.length;
              S < P;
              ++S
            ) {
              w = o[S];
              const Y = w && this.getDatasetMeta(w.datasetIndex).controller;
              Y && Y[g + "HoverStyle"](w.element, w.datasetIndex, w.index);
            }
          }
          getActiveElements() {
            return this._active || [];
          }
          setActiveElements(o) {
            const u = this._active || [],
              f = o.map(({ datasetIndex: y, index: w }) => {
                const S = this.getDatasetMeta(y);
                if (!S) throw new Error("No dataset found at index " + y);
                return { datasetIndex: y, element: S.data[w], index: w };
              });
            !Z(f, u) &&
              ((this._active = f),
              (this._lastEvent = null),
              this._updateHoverStyles(f, u));
          }
          notifyPlugins(o, u, f) {
            return this._plugins.notify(this, o, u, f);
          }
          isPluginEnabled(o) {
            return (
              1 === this._plugins._cache.filter((u) => u.plugin.id === o).length
            );
          }
          _updateHoverStyles(o, u, f) {
            const g = this.options.hover,
              y = (P, Y) =>
                P.filter(
                  (dt) =>
                    !Y.some(
                      (Tt) =>
                        dt.datasetIndex === Tt.datasetIndex &&
                        dt.index === Tt.index,
                    ),
                ),
              w = y(u, o),
              S = f ? o : y(o, u);
            w.length && this.updateHoverStyle(w, g.mode, !1),
              S.length && g.mode && this.updateHoverStyle(S, g.mode, !0);
          }
          _eventHandler(o, u) {
            const f = {
                event: o,
                replay: u,
                cancelable: !0,
                inChartArea: this.isPointInArea(o),
              },
              g = (w) =>
                (w.options.events || this.options.events).includes(
                  o.native.type,
                );
            if (!1 === this.notifyPlugins("beforeEvent", f, g)) return;
            const y = this._handleEvent(o, u, f.inChartArea);
            return (
              (f.cancelable = !1),
              this.notifyPlugins("afterEvent", f, g),
              (y || f.changed) && this.render(),
              this
            );
          }
          _handleEvent(o, u, f) {
            const { _active: g = [], options: y } = this,
              S = this._getActiveElements(o, g, f, u),
              P = (function ki(l) {
                return (
                  "mouseup" === l.type ||
                  "click" === l.type ||
                  "contextmenu" === l.type
                );
              })(o),
              Y = (function Pd(l, a, o, u) {
                return o && "mouseout" !== l.type ? (u ? a : l) : null;
              })(o, this._lastEvent, f, P);
            f &&
              ((this._lastEvent = null),
              de(y.onHover, [o, S, this], this),
              P && de(y.onClick, [o, S, this], this));
            const dt = !Z(S, g);
            return (
              (dt || u) &&
                ((this._active = S), this._updateHoverStyles(S, g, u)),
              (this._lastEvent = Y),
              dt
            );
          }
          _getActiveElements(o, u, f, g) {
            if ("mouseout" === o.type) return [];
            if (!f) return u;
            const y = this.options.hover;
            return this.getElementsAtEventForMode(o, y.mode, y, g);
          }
        })();
      function Fd() {
        return ot(Za.instances, (l) => l._plugins.invalidate());
      }
      function vl(l, a, o, u) {
        return { x: o + l * Math.cos(a), y: u + l * Math.sin(a) };
      }
      function Nd(l, a, o, u, f, g) {
        const { x: y, y: w, startAngle: S, pixelMargin: P, innerRadius: Y } = a,
          dt = Math.max(a.outerRadius + u + o - P, 0),
          Tt = Y > 0 ? Y + u + o + P : 0;
        let Ht = 0;
        const be = f - S;
        if (u) {
          const Go = ((Y > 0 ? Y - u : 0) + (dt > 0 ? dt - u : 0)) / 2;
          Ht = (be - (0 !== Go ? (be * Go) / (Go + u) : be)) / 2;
        }
        const Se = (be - Math.max(0.001, be * dt - o / Xt) / dt) / 2,
          ci = S + Se + Ht,
          ai = f - Se - Ht,
          {
            outerStart: Ti,
            outerEnd: Oi,
            innerStart: wi,
            innerEnd: Di,
          } = (function Bm(l, a, o, u) {
            const f = (function _l(l) {
                return Zo(l, [
                  "outerStart",
                  "outerEnd",
                  "innerStart",
                  "innerEnd",
                ]);
              })(l.options.borderRadius),
              g = (o - a) / 2,
              y = Math.min(g, (u * a) / 2),
              w = (S) => {
                const P = ((o - Math.min(g, S)) * u) / 2;
                return Te(S, 0, Math.min(g, P));
              };
            return {
              outerStart: w(f.outerStart),
              outerEnd: w(f.outerEnd),
              innerStart: Te(f.innerStart, 0, y),
              innerEnd: Te(f.innerEnd, 0, y),
            };
          })(a, Tt, dt, ai - ci),
          Ui = dt - Ti,
          Ni = dt - Oi,
          Ji = ci + Ti / Ui,
          En = ai - Oi / Ni,
          wn = Tt + wi,
          Nn = Tt + Di,
          no = ci + wi / wn,
          Ho = ai - Di / Nn;
        if ((l.beginPath(), g)) {
          const Qn = (Ji + En) / 2;
          if ((l.arc(y, w, dt, Ji, Qn), l.arc(y, w, dt, Qn, En), Oi > 0)) {
            const yr = vl(Ni, En, y, w);
            l.arc(yr.x, yr.y, Oi, En, ai + ke);
          }
          const mo = vl(Nn, ai, y, w);
          if ((l.lineTo(mo.x, mo.y), Di > 0)) {
            const yr = vl(Nn, Ho, y, w);
            l.arc(yr.x, yr.y, Di, ai + ke, Ho + Math.PI);
          }
          const Go = (ai - Di / Tt + (ci + wi / Tt)) / 2;
          if (
            (l.arc(y, w, Tt, ai - Di / Tt, Go, !0),
            l.arc(y, w, Tt, Go, ci + wi / Tt, !0),
            wi > 0)
          ) {
            const yr = vl(wn, no, y, w);
            l.arc(yr.x, yr.y, wi, no + Math.PI, ci - ke);
          }
          const Ts = vl(Ui, ci, y, w);
          if ((l.lineTo(Ts.x, Ts.y), Ti > 0)) {
            const yr = vl(Ui, Ji, y, w);
            l.arc(yr.x, yr.y, Ti, ci - ke, Ji);
          }
        } else {
          l.moveTo(y, w);
          const Qn = Math.cos(Ji) * dt + y,
            mo = Math.sin(Ji) * dt + w;
          l.lineTo(Qn, mo);
          const Go = Math.cos(En) * dt + y,
            Ts = Math.sin(En) * dt + w;
          l.lineTo(Go, Ts);
        }
        l.closePath();
      }
      function bl(l, a, o = a) {
        (l.lineCap = gi(o.borderCapStyle, a.borderCapStyle)),
          l.setLineDash(gi(o.borderDash, a.borderDash)),
          (l.lineDashOffset = gi(o.borderDashOffset, a.borderDashOffset)),
          (l.lineJoin = gi(o.borderJoinStyle, a.borderJoinStyle)),
          (l.lineWidth = gi(o.borderWidth, a.borderWidth)),
          (l.strokeStyle = gi(o.borderColor, a.borderColor));
      }
      function jm(l, a, o) {
        l.lineTo(o.x, o.y);
      }
      function xl(l, a, o = {}) {
        const u = l.length,
          { start: f = 0, end: g = u - 1 } = o,
          { start: y, end: w } = a,
          S = Math.max(f, y),
          P = Math.min(g, w);
        return {
          count: u,
          start: S,
          loop: a.loop,
          ilen:
            P < S && !((f < y && g < y) || (f > w && g > w))
              ? u + P - S
              : P - S,
        };
      }
      function Ku(l, a, o, u) {
        const { points: f, options: g } = a,
          { count: y, start: w, loop: S, ilen: P } = xl(f, o, u),
          Y = (function yl(l) {
            return l.stepped
              ? sn
              : l.tension || "monotone" === l.cubicInterpolationMode
                ? In
                : jm;
          })(g);
        let Ht,
          be,
          Ce,
          { move: dt = !0, reverse: Tt } = u || {};
        for (Ht = 0; Ht <= P; ++Ht)
          (be = f[(w + (Tt ? P - Ht : Ht)) % y]),
            !be.skip &&
              (dt
                ? (l.moveTo(be.x, be.y), (dt = !1))
                : Y(l, Ce, be, Tt, g.stepped),
              (Ce = be));
        return (
          S && ((be = f[(w + (Tt ? P : 0)) % y]), Y(l, Ce, be, Tt, g.stepped)),
          !!S
        );
      }
      function ko(l, a, o, u) {
        const f = a.points,
          { count: g, start: y, ilen: w } = xl(f, o, u),
          { move: S = !0, reverse: P } = u || {};
        let Tt,
          Ht,
          be,
          Ce,
          Se,
          ci,
          Y = 0,
          dt = 0;
        const ai = (Oi) => (y + (P ? w - Oi : Oi)) % g,
          Ti = () => {
            Ce !== Se && (l.lineTo(Y, Se), l.lineTo(Y, Ce), l.lineTo(Y, ci));
          };
        for (
          S && ((Ht = f[ai(0)]), l.moveTo(Ht.x, Ht.y)), Tt = 0;
          Tt <= w;
          ++Tt
        ) {
          if (((Ht = f[ai(Tt)]), Ht.skip)) continue;
          const Oi = Ht.x,
            wi = Ht.y,
            Di = 0 | Oi;
          Di === be
            ? (wi < Ce ? (Ce = wi) : wi > Se && (Se = wi),
              (Y = (dt * Y + Oi) / ++dt))
            : (Ti(), l.lineTo(Oi, wi), (be = Di), (dt = 0), (Ce = Se = wi)),
            (ci = wi);
        }
        Ti();
      }
      function Es(l) {
        const a = l.options;
        return l._decimated ||
          l._loop ||
          a.tension ||
          "monotone" === a.cubicInterpolationMode ||
          a.stepped ||
          (a.borderDash && a.borderDash.length)
          ? Ku
          : ko;
      }
      const Ss = "function" == typeof Path2D;
      let ia = (() =>
        class l extends Ds {
          static id = "line";
          static defaults = {
            borderCapStyle: "butt",
            borderDash: [],
            borderDashOffset: 0,
            borderJoinStyle: "miter",
            borderWidth: 3,
            capBezierPoints: !0,
            cubicInterpolationMode: "default",
            fill: !1,
            spanGaps: !1,
            stepped: !1,
            tension: 0,
          };
          static defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          };
          static descriptors = {
            _scriptable: !0,
            _indexable: (o) => "borderDash" !== o && "fill" !== o,
          };
          constructor(o) {
            super(),
              (this.animated = !0),
              (this.options = void 0),
              (this._chart = void 0),
              (this._loop = void 0),
              (this._fullLoop = void 0),
              (this._path = void 0),
              (this._points = void 0),
              (this._segments = void 0),
              (this._decimated = !1),
              (this._pointsUpdated = !1),
              (this._datasetIndex = void 0),
              o && Object.assign(this, o);
          }
          updateControlPoints(o, u) {
            const f = this.options;
            (!f.tension && "monotone" !== f.cubicInterpolationMode) ||
              f.stepped ||
              this._pointsUpdated ||
              (_e(
                this._points,
                f,
                o,
                f.spanGaps ? this._loop : this._fullLoop,
                u,
              ),
              (this._pointsUpdated = !0));
          }
          set points(o) {
            (this._points = o),
              delete this._segments,
              delete this._path,
              (this._pointsUpdated = !1);
          }
          get points() {
            return this._points;
          }
          get segments() {
            return (
              this._segments ||
              (this._segments = (function Ia(l, a) {
                const o = l.points,
                  u = l.options.spanGaps,
                  f = o.length;
                if (!f) return [];
                const g = !!l._loop,
                  { start: y, end: w } = (function Gl(l, a, o, u) {
                    let f = 0,
                      g = a - 1;
                    if (o && !u) for (; f < a && !l[f].skip; ) f++;
                    for (; f < a && l[f].skip; ) f++;
                    for (f %= a, o && (g += f); g > f && l[g % a].skip; ) g--;
                    return (g %= a), { start: f, end: g };
                  })(o, f, g, u);
                return (function xs(l, a, o, u) {
                  return u && u.setContext && o
                    ? (function ws(l, a, o, u) {
                        const f = l._chart.getContext(),
                          g = Ra(l.options),
                          {
                            _datasetIndex: y,
                            options: { spanGaps: w },
                          } = l,
                          S = o.length,
                          P = [];
                        let Y = g,
                          dt = a[0].start,
                          Tt = dt;
                        function Ht(be, Ce, Se, ci) {
                          const ai = w ? -1 : 1;
                          if (be !== Ce) {
                            for (be += S; o[be % S].skip; ) be -= ai;
                            for (; o[Ce % S].skip; ) Ce += ai;
                            be % S != Ce % S &&
                              (P.push({
                                start: be % S,
                                end: Ce % S,
                                loop: Se,
                                style: ci,
                              }),
                              (Y = ci),
                              (dt = Ce % S));
                          }
                        }
                        for (const be of a) {
                          dt = w ? dt : be.start;
                          let Se,
                            Ce = o[dt % S];
                          for (Tt = dt + 1; Tt <= be.end; Tt++) {
                            const ci = o[Tt % S];
                            (Se = Ra(
                              u.setContext(
                                or(f, {
                                  type: "segment",
                                  p0: Ce,
                                  p1: ci,
                                  p0DataIndex: (Tt - 1) % S,
                                  p1DataIndex: Tt % S,
                                  datasetIndex: y,
                                }),
                              ),
                            )),
                              Ec(Se, Y) && Ht(dt, Tt - 1, be.loop, Y),
                              (Ce = ci),
                              (Y = Se);
                          }
                          dt < Tt - 1 && Ht(dt, Tt - 1, be.loop, Y);
                        }
                        return P;
                      })(l, a, o, u)
                    : a;
                })(
                  l,
                  !0 === u
                    ? [{ start: y, end: w, loop: g }]
                    : (function fa(l, a, o, u) {
                        const f = l.length,
                          g = [];
                        let S,
                          y = a,
                          w = l[a];
                        for (S = a + 1; S <= o; ++S) {
                          const P = l[S % f];
                          P.skip || P.stop
                            ? w.skip ||
                              (g.push({
                                start: a % f,
                                end: (S - 1) % f,
                                loop: (u = !1),
                              }),
                              (a = y = P.stop ? S : null))
                            : ((y = S), w.skip && (a = S)),
                            (w = P);
                        }
                        return (
                          null !== y &&
                            g.push({ start: a % f, end: y % f, loop: u }),
                          g
                        );
                      })(
                        o,
                        y,
                        w < y ? w + f : w,
                        !!l._fullLoop && 0 === y && w === f - 1,
                      ),
                  o,
                  a,
                );
              })(this, this.options.segment))
            );
          }
          first() {
            const o = this.segments;
            return o.length && this.points[o[0].start];
          }
          last() {
            const o = this.segments,
              f = o.length;
            return f && this.points[o[f - 1].end];
          }
          interpolate(o, u) {
            const f = this.options,
              g = o[u],
              y = this.points,
              w = ol(this, { property: u, start: g, end: g });
            if (!w.length) return;
            const S = [],
              P = (function Ya(l) {
                return l.stepped
                  ? ao
                  : l.tension || "monotone" === l.cubicInterpolationMode
                    ? Gs
                    : cs;
              })(f);
            let Y, dt;
            for (Y = 0, dt = w.length; Y < dt; ++Y) {
              const { start: Tt, end: Ht } = w[Y],
                be = y[Tt],
                Ce = y[Ht];
              if (be === Ce) {
                S.push(be);
                continue;
              }
              const ci = P(
                be,
                Ce,
                Math.abs((g - be[u]) / (Ce[u] - be[u])),
                f.stepped,
              );
              (ci[u] = o[u]), S.push(ci);
            }
            return 1 === S.length ? S[0] : S;
          }
          pathSegment(o, u, f) {
            return Es(this)(o, this, u, f);
          }
          path(o, u, f) {
            const g = this.segments,
              y = Es(this);
            let w = this._loop;
            (u = u || 0), (f = f || this.points.length - u);
            for (const S of g) w &= y(o, this, S, { start: u, end: u + f - 1 });
            return !!w;
          }
          draw(o, u, f, g) {
            (this.points || []).length &&
              (this.options || {}).borderWidth &&
              (o.save(),
              (function wl(l, a, o, u) {
                Ss && !a.options.segment
                  ? (function wa(l, a, o, u) {
                      let f = a._path;
                      f ||
                        ((f = a._path = new Path2D()),
                        a.path(f, o, u) && f.closePath()),
                        bl(l, a.options),
                        l.stroke(f);
                    })(l, a, o, u)
                  : (function ts(l, a, o, u) {
                      const { segments: f, options: g } = a,
                        y = Es(a);
                      for (const w of f)
                        bl(l, g, w.style),
                          l.beginPath(),
                          y(l, a, w, { start: o, end: o + u - 1 }) &&
                            l.closePath(),
                          l.stroke();
                    })(l, a, o, u);
              })(o, this, f, g),
              o.restore()),
              this.animated &&
                ((this._pointsUpdated = !1), (this._path = void 0));
          }
        })();
      function na(l, a, o, u) {
        const f = l.options,
          { [o]: g } = l.getProps([o], u);
        return Math.abs(a - g) < f.radius + f.hitRadius;
      }
      let Ju = (() =>
        class l extends Ds {
          static id = "point";
          parsed;
          skip;
          stop;
          static defaults = {
            borderWidth: 1,
            hitRadius: 1,
            hoverBorderWidth: 1,
            hoverRadius: 4,
            pointStyle: "circle",
            radius: 3,
            rotation: 0,
          };
          static defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          };
          constructor(o) {
            super(),
              (this.options = void 0),
              (this.parsed = void 0),
              (this.skip = void 0),
              (this.stop = void 0),
              o && Object.assign(this, o);
          }
          inRange(o, u, f) {
            const g = this.options,
              { x: y, y: w } = this.getProps(["x", "y"], f);
            return (
              Math.pow(o - y, 2) + Math.pow(u - w, 2) <
              Math.pow(g.hitRadius + g.radius, 2)
            );
          }
          inXRange(o, u) {
            return na(this, o, "x", u);
          }
          inYRange(o, u) {
            return na(this, o, "y", u);
          }
          getCenterPoint(o) {
            const { x: u, y: f } = this.getProps(["x", "y"], o);
            return { x: u, y: f };
          }
          size(o) {
            let u = (o = o || this.options || {}).radius || 0;
            return (
              (u = Math.max(u, (u && o.hoverRadius) || 0)),
              2 * (u + ((u && o.borderWidth) || 0))
            );
          }
          draw(o, u) {
            const f = this.options;
            this.skip ||
              f.radius < 0.1 ||
              !Vo(this, u, this.size(f) / 2) ||
              ((o.strokeStyle = f.borderColor),
              (o.lineWidth = f.borderWidth),
              (o.fillStyle = f.backgroundColor),
              Pr(o, f, this.x, this.y));
          }
          getRange() {
            const o = this.options || {};
            return o.radius + o.hitRadius;
          }
        })();
      function cf(l, a) {
        const {
          x: o,
          y: u,
          base: f,
          width: g,
          height: y,
        } = l.getProps(["x", "y", "base", "width", "height"], a);
        let w, S, P, Y, dt;
        return (
          l.horizontal
            ? ((dt = y / 2),
              (w = Math.min(o, f)),
              (S = Math.max(o, f)),
              (P = u - dt),
              (Y = u + dt))
            : ((dt = g / 2),
              (w = o - dt),
              (S = o + dt),
              (P = Math.min(u, f)),
              (Y = Math.max(u, f))),
          { left: w, top: P, right: S, bottom: Y }
        );
      }
      function es(l, a, o, u) {
        return l ? 0 : Te(a, o, u);
      }
      function oa(l, a, o, u) {
        const f = null === a,
          g = null === o,
          w = l && !(f && g) && cf(l, u);
        return (
          w && (f || Ot(a, w.left, w.right)) && (g || Ot(o, w.top, w.bottom))
        );
      }
      function ic(l, a) {
        l.rect(a.x, a.y, a.w, a.h);
      }
      function Ca(l, a, o = {}) {
        const u = l.x !== o.x ? -a : 0,
          f = l.y !== o.y ? -a : 0;
        return {
          x: l.x + u,
          y: l.y + f,
          w: l.w + ((l.x + l.w !== o.x + o.w ? a : 0) - u),
          h: l.h + ((l.y + l.h !== o.y + o.h ? a : 0) - f),
          radius: l.radius,
        };
      }
      var df = Object.freeze({
        __proto__: null,
        ArcElement: class Um extends Ds {
          static id = "arc";
          static defaults = {
            borderAlign: "center",
            borderColor: "#fff",
            borderDash: [],
            borderDashOffset: 0,
            borderJoinStyle: void 0,
            borderRadius: 0,
            borderWidth: 2,
            offset: 0,
            spacing: 0,
            angle: void 0,
            circular: !0,
          };
          static defaultRoutes = { backgroundColor: "backgroundColor" };
          static descriptors = {
            _scriptable: !0,
            _indexable: (a) => "borderDash" !== a,
          };
          circumference;
          endAngle;
          fullCircles;
          innerRadius;
          outerRadius;
          pixelMargin;
          startAngle;
          constructor(a) {
            super(),
              (this.options = void 0),
              (this.circumference = void 0),
              (this.startAngle = void 0),
              (this.endAngle = void 0),
              (this.innerRadius = void 0),
              (this.outerRadius = void 0),
              (this.pixelMargin = 0),
              (this.fullCircles = 0),
              a && Object.assign(this, a);
          }
          inRange(a, o, u) {
            const f = this.getProps(["x", "y"], u),
              { angle: g, distance: y } = pe(f, { x: a, y: o }),
              {
                startAngle: w,
                endAngle: S,
                innerRadius: P,
                outerRadius: Y,
                circumference: dt,
              } = this.getProps(
                [
                  "startAngle",
                  "endAngle",
                  "innerRadius",
                  "outerRadius",
                  "circumference",
                ],
                u,
              ),
              Tt = (this.options.spacing + this.options.borderWidth) / 2,
              be = gi(dt, S - w) >= ae || Bt(g, w, S),
              Ce = Ot(y, P + Tt, Y + Tt);
            return be && Ce;
          }
          getCenterPoint(a) {
            const {
                x: o,
                y: u,
                startAngle: f,
                endAngle: g,
                innerRadius: y,
                outerRadius: w,
              } = this.getProps(
                [
                  "x",
                  "y",
                  "startAngle",
                  "endAngle",
                  "innerRadius",
                  "outerRadius",
                ],
                a,
              ),
              { offset: S, spacing: P } = this.options,
              Y = (f + g) / 2,
              dt = (y + w + P + S) / 2;
            return { x: o + Math.cos(Y) * dt, y: u + Math.sin(Y) * dt };
          }
          tooltipPosition(a) {
            return this.getCenterPoint(a);
          }
          draw(a) {
            const { options: o, circumference: u } = this,
              f = (o.offset || 0) / 4,
              g = (o.spacing || 0) / 2,
              y = o.circular;
            if (
              ((this.pixelMargin = "inner" === o.borderAlign ? 0.33 : 0),
              (this.fullCircles = u > ae ? Math.floor(u / ae) : 0),
              0 === u || this.innerRadius < 0 || this.outerRadius < 0)
            )
              return;
            a.save();
            const w = (this.startAngle + this.endAngle) / 2;
            a.translate(Math.cos(w) * f, Math.sin(w) * f);
            const P = f * (1 - Math.sin(Math.min(Xt, u || 0)));
            (a.fillStyle = o.backgroundColor),
              (a.strokeStyle = o.borderColor),
              (function Vm(l, a, o, u, f) {
                const { fullCircles: g, startAngle: y, circumference: w } = a;
                let S = a.endAngle;
                if (g) {
                  Nd(l, a, o, u, S, f);
                  for (let P = 0; P < g; ++P) l.fill();
                  isNaN(w) || (S = y + (w % ae || ae));
                }
                Nd(l, a, o, u, S, f), l.fill();
              })(a, this, P, g, y),
              (function zm(l, a, o, u, f) {
                const {
                    fullCircles: g,
                    startAngle: y,
                    circumference: w,
                    options: S,
                  } = a,
                  {
                    borderWidth: P,
                    borderJoinStyle: Y,
                    borderDash: dt,
                    borderDashOffset: Tt,
                  } = S,
                  Ht = "inner" === S.borderAlign;
                if (!P) return;
                l.setLineDash(dt || []),
                  (l.lineDashOffset = Tt),
                  Ht
                    ? ((l.lineWidth = 2 * P), (l.lineJoin = Y || "round"))
                    : ((l.lineWidth = P), (l.lineJoin = Y || "bevel"));
                let be = a.endAngle;
                if (g) {
                  Nd(l, a, o, u, be, f);
                  for (let Ce = 0; Ce < g; ++Ce) l.stroke();
                  isNaN(w) || (be = y + (w % ae || ae));
                }
                Ht &&
                  (function Ld(l, a, o) {
                    const {
                      startAngle: u,
                      pixelMargin: f,
                      x: g,
                      y,
                      outerRadius: w,
                      innerRadius: S,
                    } = a;
                    let P = f / w;
                    l.beginPath(),
                      l.arc(g, y, w, u - P, o + P),
                      S > f
                        ? ((P = f / S), l.arc(g, y, S, o + P, u - P, !0))
                        : l.arc(g, y, f, o + ke, u - ke),
                      l.closePath(),
                      l.clip();
                  })(l, a, be),
                  g || (Nd(l, a, o, u, be, f), l.stroke());
              })(a, this, P, g, y),
              a.restore();
          }
        },
        BarElement: class Vd extends Ds {
          static id = "bar";
          static defaults = {
            borderSkipped: "start",
            borderWidth: 0,
            borderRadius: 0,
            inflateAmount: "auto",
            pointStyle: void 0,
          };
          static defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          };
          constructor(a) {
            super(),
              (this.options = void 0),
              (this.horizontal = void 0),
              (this.base = void 0),
              (this.width = void 0),
              (this.height = void 0),
              (this.inflateAmount = void 0),
              a && Object.assign(this, a);
          }
          draw(a) {
            const {
                inflateAmount: o,
                options: { borderColor: u, backgroundColor: f },
              } = this,
              { inner: g, outer: y } = (function Bd(l) {
                const a = cf(l),
                  o = a.right - a.left,
                  u = a.bottom - a.top,
                  f = (function Xu(l, a, o) {
                    const f = l.borderSkipped,
                      g = bo(l.options.borderWidth);
                    return {
                      t: es(f.top, g.top, 0, o),
                      r: es(f.right, g.right, 0, a),
                      b: es(f.bottom, g.bottom, 0, o),
                      l: es(f.left, g.left, 0, a),
                    };
                  })(l, o / 2, u / 2),
                  g = (function zr(l, a, o) {
                    const { enableBorderRadius: u } = l.getProps([
                        "enableBorderRadius",
                      ]),
                      f = l.options.borderRadius,
                      g = xn(f),
                      y = Math.min(a, o),
                      w = l.borderSkipped,
                      S = u || Be(f);
                    return {
                      topLeft: es(!S || w.top || w.left, g.topLeft, 0, y),
                      topRight: es(!S || w.top || w.right, g.topRight, 0, y),
                      bottomLeft: es(
                        !S || w.bottom || w.left,
                        g.bottomLeft,
                        0,
                        y,
                      ),
                      bottomRight: es(
                        !S || w.bottom || w.right,
                        g.bottomRight,
                        0,
                        y,
                      ),
                    };
                  })(l, o / 2, u / 2);
                return {
                  outer: { x: a.left, y: a.top, w: o, h: u, radius: g },
                  inner: {
                    x: a.left + f.l,
                    y: a.top + f.t,
                    w: o - f.l - f.r,
                    h: u - f.t - f.b,
                    radius: {
                      topLeft: Math.max(0, g.topLeft - Math.max(f.t, f.l)),
                      topRight: Math.max(0, g.topRight - Math.max(f.t, f.r)),
                      bottomLeft: Math.max(
                        0,
                        g.bottomLeft - Math.max(f.b, f.l),
                      ),
                      bottomRight: Math.max(
                        0,
                        g.bottomRight - Math.max(f.b, f.r),
                      ),
                    },
                  },
                };
              })(this),
              w = (function jc(l) {
                return l.topLeft || l.topRight || l.bottomLeft || l.bottomRight;
              })(y.radius)
                ? Vn
                : ic;
            a.save(),
              (y.w !== g.w || y.h !== g.h) &&
                (a.beginPath(),
                w(a, Ca(y, o, g)),
                a.clip(),
                w(a, Ca(g, -o, y)),
                (a.fillStyle = u),
                a.fill("evenodd")),
              a.beginPath(),
              w(a, Ca(g, o)),
              (a.fillStyle = f),
              a.fill(),
              a.restore();
          }
          inRange(a, o, u) {
            return oa(this, a, o, u);
          }
          inXRange(a, o) {
            return oa(this, a, null, o);
          }
          inYRange(a, o) {
            return oa(this, null, a, o);
          }
          getCenterPoint(a) {
            const {
              x: o,
              y: u,
              base: f,
              horizontal: g,
            } = this.getProps(["x", "y", "base", "horizontal"], a);
            return { x: g ? (o + f) / 2 : o, y: g ? u : (u + f) / 2 };
          }
          getRange(a) {
            return "x" === a ? this.width / 2 : this.height / 2;
          }
        },
        LineElement: ia,
        PointElement: Ju,
      });
      const zd = [
          "rgb(54, 162, 235)",
          "rgb(255, 99, 132)",
          "rgb(255, 159, 64)",
          "rgb(255, 205, 86)",
          "rgb(75, 192, 192)",
          "rgb(153, 102, 255)",
          "rgb(201, 203, 207)",
        ],
        Ud = zd.map((l) => l.replace("rgb(", "rgba(").replace(")", ", 0.5)"));
      function th(l) {
        return zd[l % zd.length];
      }
      function $a(l) {
        return Ud[l % Ud.length];
      }
      function nc(l) {
        let a;
        for (a in l) if (l[a].borderColor || l[a].backgroundColor) return !0;
        return !1;
      }
      var ff = {
        id: "colors",
        defaults: { enabled: !0, forceOverride: !1 },
        beforeLayout(l, a, o) {
          if (!o.enabled) return;
          const {
              data: { datasets: u },
              options: f,
            } = l.config,
            { elements: g } = f;
          if (
            !o.forceOverride &&
            (nc(u) ||
              (function Hm(l) {
                return l && (l.borderColor || l.backgroundColor);
              })(f) ||
              (g && nc(g)))
          )
            return;
          const y = (function hf(l) {
            let a = 0;
            return (o, u) => {
              const f = l.getDatasetMeta(u).controller;
              f instanceof fs
                ? (a = (function uf(l, a) {
                    return (l.backgroundColor = l.data.map(() => th(a++))), a;
                  })(o, a))
                : f instanceof Kr
                  ? (a = (function Gc(l, a) {
                      return (l.backgroundColor = l.data.map(() => $a(a++))), a;
                    })(o, a))
                  : f &&
                    (a = (function Hc(l, a) {
                      return (
                        (l.borderColor = th(a)),
                        (l.backgroundColor = $a(a)),
                        ++a
                      );
                    })(o, a));
            };
          })(l);
          u.forEach(y);
        },
      };
      function $c(l) {
        if (l._decimated) {
          const a = l._data;
          delete l._decimated,
            delete l._data,
            Object.defineProperty(l, "data", {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              value: a,
            });
        }
      }
      function eh(l) {
        l.data.datasets.forEach((a) => {
          $c(a);
        });
      }
      var is = {
        id: "decimation",
        defaults: { algorithm: "min-max", enabled: !1 },
        beforeElementsUpdate: (l, a, o) => {
          if (!o.enabled) return void eh(l);
          const u = l.width;
          l.data.datasets.forEach((f, g) => {
            const { _data: y, indexAxis: w } = f,
              S = l.getDatasetMeta(g),
              P = y || f.data;
            if (
              "y" === Co([w, l.options.indexAxis]) ||
              !S.controller.supportsDecimation
            )
              return;
            const Y = l.scales[S.xAxisID];
            if (("linear" !== Y.type && "time" !== Y.type) || l.options.parsing)
              return;
            let be,
              { start: dt, count: Tt } = (function hr(l, a) {
                const o = a.length;
                let f,
                  u = 0;
                const { iScale: g } = l,
                  {
                    min: y,
                    max: w,
                    minDefined: S,
                    maxDefined: P,
                  } = g.getUserBounds();
                return (
                  S && (u = Te(ft(a, g.axis, y).lo, 0, o - 1)),
                  (f = P ? Te(ft(a, g.axis, w).hi + 1, u, o) - u : o - u),
                  { start: u, count: f }
                );
              })(S, P);
            if (Tt <= (o.threshold || 4 * u)) $c(f);
            else {
              switch (
                (ri(y) &&
                  ((f._data = P),
                  delete f.data,
                  Object.defineProperty(f, "data", {
                    configurable: !0,
                    enumerable: !0,
                    get: function () {
                      return this._decimated;
                    },
                    set: function (Ce) {
                      this._data = Ce;
                    },
                  })),
                o.algorithm)
              ) {
                case "lttb":
                  be = (function Zc(l, a, o, u, f) {
                    const g = f.samples || u;
                    if (g >= o) return l.slice(a, a + o);
                    const y = [],
                      w = (o - 2) / (g - 2);
                    let S = 0;
                    const P = a + o - 1;
                    let dt,
                      Tt,
                      Ht,
                      be,
                      Ce,
                      Y = a;
                    for (y[S++] = l[Y], dt = 0; dt < g - 2; dt++) {
                      let ai,
                        Se = 0,
                        ci = 0;
                      const Ti = Math.floor((dt + 1) * w) + 1 + a,
                        Oi = Math.min(Math.floor((dt + 2) * w) + 1, o) + a,
                        wi = Oi - Ti;
                      for (ai = Ti; ai < Oi; ai++)
                        (Se += l[ai].x), (ci += l[ai].y);
                      (Se /= wi), (ci /= wi);
                      const Di = Math.floor(dt * w) + 1 + a,
                        Ui = Math.min(Math.floor((dt + 1) * w) + 1, o) + a,
                        { x: Ni, y: Ji } = l[Y];
                      for (Ht = be = -1, ai = Di; ai < Ui; ai++)
                        (be =
                          0.5 *
                          Math.abs(
                            (Ni - Se) * (l[ai].y - Ji) -
                              (Ni - l[ai].x) * (ci - Ji),
                          )),
                          be > Ht && ((Ht = be), (Tt = l[ai]), (Ce = ai));
                      (y[S++] = Tt), (Y = Ce);
                    }
                    return (y[S++] = l[P]), y;
                  })(P, dt, Tt, u, o);
                  break;
                case "min-max":
                  be = (function Yc(l, a, o, u) {
                    let y,
                      w,
                      S,
                      P,
                      Y,
                      dt,
                      Tt,
                      Ht,
                      be,
                      Ce,
                      f = 0,
                      g = 0;
                    const Se = [],
                      ai = l[a].x,
                      Oi = l[a + o - 1].x - ai;
                    for (y = a; y < a + o; ++y) {
                      (w = l[y]), (S = ((w.x - ai) / Oi) * u), (P = w.y);
                      const wi = 0 | S;
                      if (wi === Y)
                        P < be
                          ? ((be = P), (dt = y))
                          : P > Ce && ((Ce = P), (Tt = y)),
                          (f = (g * f + w.x) / ++g);
                      else {
                        const Di = y - 1;
                        if (!ri(dt) && !ri(Tt)) {
                          const Ui = Math.min(dt, Tt),
                            Ni = Math.max(dt, Tt);
                          Ui !== Ht && Ui !== Di && Se.push({ ...l[Ui], x: f }),
                            Ni !== Ht &&
                              Ni !== Di &&
                              Se.push({ ...l[Ni], x: f });
                        }
                        y > 0 && Di !== Ht && Se.push(l[Di]),
                          Se.push(w),
                          (Y = wi),
                          (g = 0),
                          (be = Ce = P),
                          (dt = Tt = Ht = y);
                      }
                    }
                    return Se;
                  })(P, dt, Tt, u);
                  break;
                default:
                  throw new Error(
                    `Unsupported decimation algorithm '${o.algorithm}'`,
                  );
              }
              f._decimated = be;
            }
          });
        },
        destroy(l) {
          eh(l);
        },
      };
      function ih(l, a, o, u) {
        if (u) return;
        let f = a[l],
          g = o[l];
        return (
          "angle" === l && ((f = me(f)), (g = me(g))),
          { property: l, start: f, end: g }
        );
      }
      function jd(l, a, o) {
        for (; a > l; a--) {
          const u = o[a];
          if (!isNaN(u.x) && !isNaN(u.y)) break;
        }
        return a;
      }
      function Cl(l, a, o, u) {
        return l && a ? u(l[o], a[o]) : l ? l[o] : a ? a[o] : 0;
      }
      function Gm(l, a) {
        let o = [],
          u = !1;
        return (
          te(l)
            ? ((u = !0), (o = l))
            : (o = (function nh(l, a) {
                const { x: o = null, y: u = null } = l || {},
                  f = a.points,
                  g = [];
                return (
                  a.segments.forEach(({ start: y, end: w }) => {
                    w = jd(y, w, f);
                    const S = f[y],
                      P = f[w];
                    null !== u
                      ? (g.push({ x: S.x, y: u }), g.push({ x: P.x, y: u }))
                      : null !== o &&
                        (g.push({ x: o, y: S.y }), g.push({ x: o, y: P.y }));
                  }),
                  g
                );
              })(l, a)),
          o.length
            ? new ia({
                points: o,
                options: { tension: 0 },
                _loop: u,
                _fullLoop: u,
              })
            : null
        );
      }
      function mf(l) {
        return l && !1 !== l.fill;
      }
      function Zm(l, a, o) {
        let f = l[a].fill;
        const g = [a];
        let y;
        if (!o) return f;
        for (; !1 !== f && -1 === g.indexOf(f); ) {
          if (!Ne(f)) return f;
          if (((y = l[f]), !y)) return !1;
          if (y.visible) return f;
          g.push(f), (f = y.fill);
        }
        return !1;
      }
      function Wa(l, a, o) {
        const u = (function qc(l) {
          const a = l.options,
            o = a.fill;
          let u = gi(o && o.target, o);
          return (
            void 0 === u && (u = !!a.backgroundColor),
            !1 !== u && null !== u && (!0 === u ? "origin" : u)
          );
        })(l);
        if (Be(u)) return !isNaN(u.value) && u;
        let f = parseFloat(u);
        return Ne(f) && Math.floor(f) === f
          ? (function Wc(l, a, o, u) {
              return (
                ("-" === l || "+" === l) && (o = a + o),
                !(o === a || o < 0 || o >= u) && o
              );
            })(u[0], a, f, o)
          : ["origin", "start", "end", "stack", "shape"].indexOf(u) >= 0 && u;
      }
      function oc(l, a, o) {
        const u = [];
        for (let f = 0; f < o.length; f++) {
          const g = o[f],
            { first: y, last: w, point: S } = rh(g, a, "x");
          if (!(!S || (y && w)))
            if (y) u.unshift(S);
            else if ((l.push(S), !w)) break;
        }
        l.push(...u);
      }
      function rh(l, a, o) {
        const u = l.interpolate(a, o);
        if (!u) return {};
        const f = u[o],
          g = l.segments,
          y = l.points;
        let w = !1,
          S = !1;
        for (let P = 0; P < g.length; P++) {
          const Y = g[P],
            dt = y[Y.start][o],
            Tt = y[Y.end][o];
          if (Ot(f, dt, Tt)) {
            (w = f === dt), (S = f === Tt);
            break;
          }
        }
        return { first: w, last: S, point: u };
      }
      class Gd {
        constructor(a) {
          (this.x = a.x), (this.y = a.y), (this.radius = a.radius);
        }
        pathSegment(a, o, u) {
          const { x: f, y: g, radius: y } = this;
          return (
            a.arc(f, g, y, (o = o || { start: 0, end: ae }).end, o.start, !0),
            !u.bounds
          );
        }
        interpolate(a) {
          const { x: o, y: u, radius: f } = this,
            g = a.angle;
          return { x: o + Math.cos(g) * f, y: u + Math.sin(g) * f, angle: g };
        }
      }
      function ah(l, a, o) {
        const u = (function Dl(l) {
            const { chart: a, fill: o, line: u } = l;
            if (Ne(o))
              return (function $m(l, a) {
                const o = l.getDatasetMeta(a);
                return o && l.isDatasetVisible(a) ? o.dataset : null;
              })(a, o);
            if ("stack" === o)
              return (function Ym(l) {
                const { scale: a, index: o, line: u } = l,
                  f = [],
                  g = u.segments,
                  y = u.points,
                  w = (function Hd(l, a) {
                    const o = [],
                      u = l.getMatchingVisibleMetas("line");
                    for (let f = 0; f < u.length; f++) {
                      const g = u[f];
                      if (g.index === a) break;
                      g.hidden || o.unshift(g.dataset);
                    }
                    return o;
                  })(a, o);
                w.push(Gm({ x: null, y: a.bottom }, u));
                for (let S = 0; S < g.length; S++) {
                  const P = g[S];
                  for (let Y = P.start; Y <= P.end; Y++) oc(f, y[Y], w);
                }
                return new ia({ points: f, options: {} });
              })(l);
            if ("shape" === o) return !0;
            const f = (function Wm(l) {
              return (l.scale || {}).getPointPositionForValue
                ? (function qm(l) {
                    const { scale: a, fill: o } = l,
                      u = a.options,
                      f = a.getLabels().length,
                      g = u.reverse ? a.max : a.min,
                      y = (function pf(l, a, o) {
                        let u;
                        return (
                          (u =
                            "start" === l
                              ? o
                              : "end" === l
                                ? a.options.reverse
                                  ? a.min
                                  : a.max
                                : Be(l)
                                  ? l.value
                                  : a.getBaseValue()),
                          u
                        );
                      })(o, a, g),
                      w = [];
                    if (u.grid.circular) {
                      const S = a.getPointPositionForValue(0, g);
                      return new Gd({
                        x: S.x,
                        y: S.y,
                        radius: a.getDistanceFromCenterForValue(y),
                      });
                    }
                    for (let S = 0; S < f; ++S)
                      w.push(a.getPointPositionForValue(S, y));
                    return w;
                  })(l)
                : (function sh(l) {
                    const { scale: a = {}, fill: o } = l,
                      u = (function oh(l, a) {
                        let o = null;
                        return (
                          "start" === l
                            ? (o = a.bottom)
                            : "end" === l
                              ? (o = a.top)
                              : Be(l)
                                ? (o = a.getPixelForValue(l.value))
                                : a.getBasePixel && (o = a.getBasePixel()),
                          o
                        );
                      })(o, a);
                    if (Ne(u)) {
                      const f = a.isHorizontal();
                      return { x: f ? u : null, y: f ? null : u };
                    }
                    return null;
                  })(l);
            })(l);
            return f instanceof Gd ? f : Gm(f, u);
          })(a),
          { line: f, scale: g, axis: y } = a,
          w = f.options,
          S = w.fill,
          P = w.backgroundColor,
          { above: Y = P, below: dt = P } = S || {};
        u &&
          f.points.length &&
          (On(l, o),
          (function Qm(l, a) {
            const {
                line: o,
                target: u,
                above: f,
                below: g,
                area: y,
                scale: w,
              } = a,
              S = o._loop ? "angle" : a.axis;
            l.save(),
              "x" === S &&
                g !== f &&
                (lh(l, u, y.top),
                gf(l, { line: o, target: u, color: f, scale: w, property: S }),
                l.restore(),
                l.save(),
                lh(l, u, y.bottom)),
              gf(l, { line: o, target: u, color: g, scale: w, property: S }),
              l.restore();
          })(l, {
            line: f,
            target: u,
            above: Y,
            below: dt,
            area: o,
            scale: g,
            axis: y,
          }),
          Fi(l));
      }
      function lh(l, a, o) {
        const { segments: u, points: f } = a;
        let g = !0,
          y = !1;
        l.beginPath();
        for (const w of u) {
          const { start: S, end: P } = w,
            Y = f[S],
            dt = f[jd(S, P, f)];
          g
            ? (l.moveTo(Y.x, Y.y), (g = !1))
            : (l.lineTo(Y.x, o), l.lineTo(Y.x, Y.y)),
            (y = !!a.pathSegment(l, w, { move: y })),
            y ? l.closePath() : l.lineTo(dt.x, o);
        }
        l.lineTo(a.first().x, o), l.closePath(), l.clip();
      }
      function gf(l, a) {
        const { line: o, target: u, property: f, color: g, scale: y } = a,
          w = (function Ur(l, a, o) {
            const u = l.segments,
              f = l.points,
              g = a.points,
              y = [];
            for (const w of u) {
              let { start: S, end: P } = w;
              P = jd(S, P, f);
              const Y = ih(o, f[S], f[P], w.loop);
              if (!a.segments) {
                y.push({ source: w, target: Y, start: f[S], end: f[P] });
                continue;
              }
              const dt = ol(a, Y);
              for (const Tt of dt) {
                const Ht = ih(o, g[Tt.start], g[Tt.end], Tt.loop),
                  be = Oa(w, f, Ht);
                for (const Ce of be)
                  y.push({
                    source: Ce,
                    target: Tt,
                    start: { [o]: Cl(Y, Ht, "start", Math.max) },
                    end: { [o]: Cl(Y, Ht, "end", Math.min) },
                  });
              }
            }
            return y;
          })(o, u, f);
        for (const { source: S, target: P, start: Y, end: dt } of w) {
          const { style: { backgroundColor: Tt = g } = {} } = S,
            Ht = !0 !== u;
          l.save(),
            (l.fillStyle = Tt),
            _f(l, y, Ht && ih(f, Y, dt)),
            l.beginPath();
          const be = !!o.pathSegment(l, S);
          let Ce;
          if (Ht) {
            be ? l.closePath() : rc(l, u, dt, f);
            const Se = !!u.pathSegment(l, P, { move: be, reverse: !0 });
            (Ce = be && Se), Ce || rc(l, u, Y, f);
          }
          l.closePath(), l.fill(Ce ? "evenodd" : "nonzero"), l.restore();
        }
      }
      function _f(l, a, o) {
        const { top: u, bottom: f } = a.chart.chartArea,
          { property: g, start: y, end: w } = o || {};
        "x" === g && (l.beginPath(), l.rect(y, u, w - y, f - u), l.clip());
      }
      function rc(l, a, o, u) {
        const f = a.interpolate(o, u);
        f && l.lineTo(f.x, f.y);
      }
      var Qc = {
        id: "filler",
        afterDatasetsUpdate(l, a, o) {
          const u = (l.data.datasets || []).length,
            f = [];
          let g, y, w, S;
          for (y = 0; y < u; ++y)
            (g = l.getDatasetMeta(y)),
              (w = g.dataset),
              (S = null),
              w &&
                w.options &&
                w instanceof ia &&
                (S = {
                  visible: l.isDatasetVisible(y),
                  index: y,
                  fill: Wa(w, y, u),
                  chart: l,
                  axis: g.controller.options.indexAxis,
                  scale: g.vScale,
                  line: w,
                }),
              (g.$filler = S),
              f.push(S);
          for (y = 0; y < u; ++y)
            (S = f[y]), S && !1 !== S.fill && (S.fill = Zm(f, y, o.propagate));
        },
        beforeDraw(l, a, o) {
          const u = "beforeDraw" === o.drawTime,
            f = l.getSortedVisibleDatasetMetas(),
            g = l.chartArea;
          for (let y = f.length - 1; y >= 0; --y) {
            const w = f[y].$filler;
            w &&
              (w.line.updateControlPoints(g, w.axis),
              u && w.fill && ah(l.ctx, w, g));
          }
        },
        beforeDatasetsDraw(l, a, o) {
          if ("beforeDatasetsDraw" !== o.drawTime) return;
          const u = l.getSortedVisibleDatasetMetas();
          for (let f = u.length - 1; f >= 0; --f) {
            const g = u[f].$filler;
            mf(g) && ah(l.ctx, g, l.chartArea);
          }
        },
        beforeDatasetDraw(l, a, o) {
          const u = a.meta.$filler;
          !mf(u) ||
            "beforeDatasetDraw" !== o.drawTime ||
            ah(l.ctx, u, l.chartArea);
        },
        defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
      };
      const Zd = (l, a) => {
        let { boxHeight: o = a, boxWidth: u = a } = l;
        return (
          l.usePointStyle &&
            ((o = Math.min(o, a)), (u = l.pointStyleWidth || Math.min(u, a))),
          { boxWidth: u, boxHeight: o, itemHeight: Math.max(a, o) }
        );
      };
      class Yd extends Ds {
        constructor(a) {
          super(),
            (this._added = !1),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1),
            (this.chart = a.chart),
            (this.options = a.options),
            (this.ctx = a.ctx),
            (this.legendItems = void 0),
            (this.columnSizes = void 0),
            (this.lineWidths = void 0),
            (this.maxHeight = void 0),
            (this.maxWidth = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this._margins = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(a, o, u) {
          (this.maxWidth = a),
            (this.maxHeight = o),
            (this._margins = u),
            this.setDimensions(),
            this.buildLabels(),
            this.fit();
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = this._margins.left),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = this._margins.top),
              (this.bottom = this.height));
        }
        buildLabels() {
          const a = this.options.labels || {};
          let o = de(a.generateLabels, [this.chart], this) || [];
          a.filter && (o = o.filter((u) => a.filter(u, this.chart.data))),
            a.sort && (o = o.sort((u, f) => a.sort(u, f, this.chart.data))),
            this.options.reverse && o.reverse(),
            (this.legendItems = o);
        }
        fit() {
          const { options: a, ctx: o } = this;
          if (!a.display) return void (this.width = this.height = 0);
          const u = a.labels,
            f = jn(u.font),
            g = f.size,
            y = this._computeTitleHeight(),
            { boxWidth: w, itemHeight: S } = Zd(u, g);
          let P, Y;
          (o.font = f.string),
            this.isHorizontal()
              ? ((P = this.maxWidth), (Y = this._fitRows(y, g, w, S) + 10))
              : ((Y = this.maxHeight), (P = this._fitCols(y, f, w, S) + 10)),
            (this.width = Math.min(P, a.maxWidth || this.maxWidth)),
            (this.height = Math.min(Y, a.maxHeight || this.maxHeight));
        }
        _fitRows(a, o, u, f) {
          const {
              ctx: g,
              maxWidth: y,
              options: {
                labels: { padding: w },
              },
            } = this,
            S = (this.legendHitBoxes = []),
            P = (this.lineWidths = [0]),
            Y = f + w;
          let dt = a;
          (g.textAlign = "left"), (g.textBaseline = "middle");
          let Tt = -1,
            Ht = -Y;
          return (
            this.legendItems.forEach((be, Ce) => {
              const Se = u + o / 2 + g.measureText(be.text).width;
              (0 === Ce || P[P.length - 1] + Se + 2 * w > y) &&
                ((dt += Y),
                (P[P.length - (Ce > 0 ? 0 : 1)] = 0),
                (Ht += Y),
                Tt++),
                (S[Ce] = { left: 0, top: Ht, row: Tt, width: Se, height: f }),
                (P[P.length - 1] += Se + w);
            }),
            dt
          );
        }
        _fitCols(a, o, u, f) {
          const {
              ctx: g,
              maxHeight: y,
              options: {
                labels: { padding: w },
              },
            } = this,
            S = (this.legendHitBoxes = []),
            P = (this.columnSizes = []),
            Y = y - a;
          let dt = w,
            Tt = 0,
            Ht = 0,
            be = 0,
            Ce = 0;
          return (
            this.legendItems.forEach((Se, ci) => {
              const { itemWidth: ai, itemHeight: Ti } = (function qa(
                l,
                a,
                o,
                u,
                f,
              ) {
                const g = (function Kc(l, a, o, u) {
                    let f = l.text;
                    return (
                      f &&
                        "string" != typeof f &&
                        (f = f.reduce((g, y) => (g.length > y.length ? g : y))),
                      a + o.size / 2 + u.measureText(f).width
                    );
                  })(u, l, a, o),
                  y = (function dh(l, a, o) {
                    let u = l;
                    return "string" != typeof a.text && (u = sc(a, o)), u;
                  })(f, u, a.lineHeight);
                return { itemWidth: g, itemHeight: y };
              })(u, o, g, Se, f);
              ci > 0 &&
                Ht + Ti + 2 * w > Y &&
                ((dt += Tt + w),
                P.push({ width: Tt, height: Ht }),
                (be += Tt + w),
                Ce++,
                (Tt = Ht = 0)),
                (S[ci] = { left: be, top: Ht, col: Ce, width: ai, height: Ti }),
                (Tt = Math.max(Tt, ai)),
                (Ht += Ti + w);
            }),
            (dt += Tt),
            P.push({ width: Tt, height: Ht }),
            dt
          );
        }
        adjustHitBoxes() {
          if (!this.options.display) return;
          const a = this._computeTitleHeight(),
            {
              legendHitBoxes: o,
              options: {
                align: u,
                labels: { padding: f },
                rtl: g,
              },
            } = this,
            y = ys(g, this.left, this.width);
          if (this.isHorizontal()) {
            let w = 0,
              S = yn(u, this.left + f, this.right - this.lineWidths[w]);
            for (const P of o)
              w !== P.row &&
                ((w = P.row),
                (S = yn(u, this.left + f, this.right - this.lineWidths[w]))),
                (P.top += this.top + a + f),
                (P.left = y.leftForLtr(y.x(S), P.width)),
                (S += P.width + f);
          } else {
            let w = 0,
              S = yn(
                u,
                this.top + a + f,
                this.bottom - this.columnSizes[w].height,
              );
            for (const P of o)
              P.col !== w &&
                ((w = P.col),
                (S = yn(
                  u,
                  this.top + a + f,
                  this.bottom - this.columnSizes[w].height,
                ))),
                (P.top = S),
                (P.left += this.left + f),
                (P.left = y.leftForLtr(y.x(P.left), P.width)),
                (S += P.height + f);
          }
        }
        isHorizontal() {
          return (
            "top" === this.options.position ||
            "bottom" === this.options.position
          );
        }
        draw() {
          if (this.options.display) {
            const a = this.ctx;
            On(a, this), this._draw(), Fi(a);
          }
        }
        _draw() {
          const { options: a, columnSizes: o, lineWidths: u, ctx: f } = this,
            { align: g, labels: y } = a,
            w = un.color,
            S = ys(a.rtl, this.left, this.width),
            P = jn(y.font),
            { padding: Y } = y,
            dt = P.size,
            Tt = dt / 2;
          let Ht;
          this.drawTitle(),
            (f.textAlign = S.textAlign("left")),
            (f.textBaseline = "middle"),
            (f.lineWidth = 0.5),
            (f.font = P.string);
          const { boxWidth: be, boxHeight: Ce, itemHeight: Se } = Zd(y, dt),
            Ti = this.isHorizontal(),
            Oi = this._computeTitleHeight();
          (Ht = Ti
            ? {
                x: yn(g, this.left + Y, this.right - u[0]),
                y: this.top + Y + Oi,
                line: 0,
              }
            : {
                x: this.left + Y,
                y: yn(g, this.top + Oi + Y, this.bottom - o[0].height),
                line: 0,
              }),
            Zs(this.ctx, a.textDirection);
          const wi = Se + Y;
          this.legendItems.forEach((Di, Ui) => {
            (f.strokeStyle = Di.fontColor), (f.fillStyle = Di.fontColor);
            const Ni = f.measureText(Di.text).width,
              Ji = S.textAlign(Di.textAlign || (Di.textAlign = y.textAlign)),
              En = be + Tt + Ni;
            let wn = Ht.x,
              Nn = Ht.y;
            S.setWidth(this.width),
              Ti
                ? Ui > 0 &&
                  wn + En + Y > this.right &&
                  ((Nn = Ht.y += wi),
                  Ht.line++,
                  (wn = Ht.x = yn(g, this.left + Y, this.right - u[Ht.line])))
                : Ui > 0 &&
                  Nn + wi > this.bottom &&
                  ((wn = Ht.x = wn + o[Ht.line].width + Y),
                  Ht.line++,
                  (Nn = Ht.y =
                    yn(g, this.top + Oi + Y, this.bottom - o[Ht.line].height))),
              (function (Di, Ui, Ni) {
                if (isNaN(be) || be <= 0 || isNaN(Ce) || Ce < 0) return;
                f.save();
                const Ji = gi(Ni.lineWidth, 1);
                if (
                  ((f.fillStyle = gi(Ni.fillStyle, w)),
                  (f.lineCap = gi(Ni.lineCap, "butt")),
                  (f.lineDashOffset = gi(Ni.lineDashOffset, 0)),
                  (f.lineJoin = gi(Ni.lineJoin, "miter")),
                  (f.lineWidth = Ji),
                  (f.strokeStyle = gi(Ni.strokeStyle, w)),
                  f.setLineDash(gi(Ni.lineDash, [])),
                  y.usePointStyle)
                ) {
                  const En = {
                      radius: (Ce * Math.SQRT2) / 2,
                      pointStyle: Ni.pointStyle,
                      rotation: Ni.rotation,
                      borderWidth: Ji,
                    },
                    wn = S.xPlus(Di, be / 2);
                  Mr(f, En, wn, Ui + Tt, y.pointStyleWidth && be);
                } else {
                  const En = Ui + Math.max((dt - Ce) / 2, 0),
                    wn = S.leftForLtr(Di, be),
                    Nn = xn(Ni.borderRadius);
                  f.beginPath(),
                    Object.values(Nn).some((no) => 0 !== no)
                      ? Vn(f, { x: wn, y: En, w: be, h: Ce, radius: Nn })
                      : f.rect(wn, En, be, Ce),
                    f.fill(),
                    0 !== Ji && f.stroke();
                }
                f.restore();
              })(S.x(wn), Nn, Di),
              (wn = ((l, a, o, u) =>
                l === (u ? "left" : "right")
                  ? o
                  : "center" === l
                    ? (a + o) / 2
                    : a)(Ji, wn + be + Tt, Ti ? wn + En : this.right, a.rtl)),
              (function (Di, Ui, Ni) {
                xo(f, Ni.text, Di, Ui + Se / 2, P, {
                  strikethrough: Ni.hidden,
                  textAlign: S.textAlign(Ni.textAlign),
                });
              })(S.x(wn), Nn, Di),
              Ti
                ? (Ht.x += En + Y)
                : (Ht.y +=
                    "string" != typeof Di.text ? sc(Di, P.lineHeight) + Y : wi);
          }),
            Ys(this.ctx, a.textDirection);
        }
        drawTitle() {
          const a = this.options,
            o = a.title,
            u = jn(o.font),
            f = Wn(o.padding);
          if (!o.display) return;
          const g = ys(a.rtl, this.left, this.width),
            y = this.ctx,
            w = o.position,
            P = f.top + u.size / 2;
          let Y,
            dt = this.left,
            Tt = this.width;
          if (this.isHorizontal())
            (Tt = Math.max(...this.lineWidths)),
              (Y = this.top + P),
              (dt = yn(a.align, dt, this.right - Tt));
          else {
            const be = this.columnSizes.reduce(
              (Ce, Se) => Math.max(Ce, Se.height),
              0,
            );
            Y =
              P +
              yn(
                a.align,
                this.top,
                this.bottom -
                  be -
                  a.labels.padding -
                  this._computeTitleHeight(),
              );
          }
          const Ht = yn(w, dt, dt + Tt);
          (y.textAlign = g.textAlign(An(w))),
            (y.textBaseline = "middle"),
            (y.strokeStyle = o.color),
            (y.fillStyle = o.color),
            (y.font = u.string),
            xo(y, o.text, Ht, Y, u);
        }
        _computeTitleHeight() {
          const a = this.options.title,
            o = jn(a.font),
            u = Wn(a.padding);
          return a.display ? o.lineHeight + u.height : 0;
        }
        _getLegendItemAt(a, o) {
          let u, f, g;
          if (Ot(a, this.left, this.right) && Ot(o, this.top, this.bottom))
            for (g = this.legendHitBoxes, u = 0; u < g.length; ++u)
              if (
                ((f = g[u]),
                Ot(a, f.left, f.left + f.width) &&
                  Ot(o, f.top, f.top + f.height))
              )
                return this.legendItems[u];
          return null;
        }
        handleEvent(a) {
          const o = this.options;
          if (
            !(function Jc(l, a) {
              return !(
                (("mousemove" !== l && "mouseout" !== l) ||
                  (!a.onHover && !a.onLeave)) &&
                (!a.onClick || ("click" !== l && "mouseup" !== l))
              );
            })(a.type, o)
          )
            return;
          const u = this._getLegendItemAt(a.x, a.y);
          if ("mousemove" === a.type || "mouseout" === a.type) {
            const f = this._hoveredItem,
              g = ((l, a) =>
                null !== l &&
                null !== a &&
                l.datasetIndex === a.datasetIndex &&
                l.index === a.index)(f, u);
            f && !g && de(o.onLeave, [a, f, this], this),
              (this._hoveredItem = u),
              u && !g && de(o.onHover, [a, u, this], this);
          } else u && de(o.onClick, [a, u, this], this);
        }
      }
      function sc(l, a) {
        return a * (l.text ? l.text.length : 0);
      }
      var ra = {
        id: "legend",
        _element: Yd,
        start(l, a, o) {
          const u = (l.legend = new Yd({ ctx: l.ctx, options: o, chart: l }));
          Wo.configure(l, u, o), Wo.addBox(l, u);
        },
        stop(l) {
          Wo.removeBox(l, l.legend), delete l.legend;
        },
        beforeUpdate(l, a, o) {
          const u = l.legend;
          Wo.configure(l, u, o), (u.options = o);
        },
        afterUpdate(l) {
          const a = l.legend;
          a.buildLabels(), a.adjustHitBoxes();
        },
        afterEvent(l, a) {
          a.replay || l.legend.handleEvent(a.event);
        },
        defaults: {
          display: !0,
          position: "top",
          align: "center",
          fullSize: !0,
          reverse: !1,
          weight: 1e3,
          onClick(l, a, o) {
            const u = a.datasetIndex,
              f = o.chart;
            f.isDatasetVisible(u)
              ? (f.hide(u), (a.hidden = !0))
              : (f.show(u), (a.hidden = !1));
          },
          onHover: null,
          onLeave: null,
          labels: {
            color: (l) => l.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels(l) {
              const a = l.data.datasets,
                {
                  labels: {
                    usePointStyle: o,
                    pointStyle: u,
                    textAlign: f,
                    color: g,
                    useBorderRadius: y,
                    borderRadius: w,
                  },
                } = l.legend.options;
              return l._getSortedDatasetMetas().map((S) => {
                const P = S.controller.getStyle(o ? 0 : void 0),
                  Y = Wn(P.borderWidth);
                return {
                  text: a[S.index].label,
                  fillStyle: P.backgroundColor,
                  fontColor: g,
                  hidden: !S.visible,
                  lineCap: P.borderCapStyle,
                  lineDash: P.borderDash,
                  lineDashOffset: P.borderDashOffset,
                  lineJoin: P.borderJoinStyle,
                  lineWidth: (Y.width + Y.height) / 4,
                  strokeStyle: P.borderColor,
                  pointStyle: u || P.pointStyle,
                  rotation: P.rotation,
                  textAlign: f || P.textAlign,
                  borderRadius: y && (w || P.borderRadius),
                  datasetIndex: S.index,
                };
              }, this);
            },
          },
          title: {
            color: (l) => l.chart.options.color,
            display: !1,
            position: "center",
            text: "",
          },
        },
        descriptors: {
          _scriptable: (l) => !l.startsWith("on"),
          labels: {
            _scriptable: (l) =>
              !["generateLabels", "filter", "sort"].includes(l),
          },
        },
      };
      class fo extends Ds {
        constructor(a) {
          super(),
            (this.chart = a.chart),
            (this.options = a.options),
            (this.ctx = a.ctx),
            (this._padding = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(a, o) {
          const u = this.options;
          if (((this.left = 0), (this.top = 0), !u.display))
            return void (this.width =
              this.height =
              this.right =
              this.bottom =
                0);
          (this.width = this.right = a), (this.height = this.bottom = o);
          const f = te(u.text) ? u.text.length : 1;
          this._padding = Wn(u.padding);
          const g = f * jn(u.font).lineHeight + this._padding.height;
          this.isHorizontal() ? (this.height = g) : (this.width = g);
        }
        isHorizontal() {
          const a = this.options.position;
          return "top" === a || "bottom" === a;
        }
        _drawArgs(a) {
          const { top: o, left: u, bottom: f, right: g, options: y } = this,
            w = y.align;
          let P,
            Y,
            dt,
            S = 0;
          return (
            this.isHorizontal()
              ? ((Y = yn(w, u, g)), (dt = o + a), (P = g - u))
              : ("left" === y.position
                  ? ((Y = u + a), (dt = yn(w, f, o)), (S = -0.5 * Xt))
                  : ((Y = g - a), (dt = yn(w, o, f)), (S = 0.5 * Xt)),
                (P = f - o)),
            { titleX: Y, titleY: dt, maxWidth: P, rotation: S }
          );
        }
        draw() {
          const a = this.ctx,
            o = this.options;
          if (!o.display) return;
          const u = jn(o.font),
            g = u.lineHeight / 2 + this._padding.top,
            {
              titleX: y,
              titleY: w,
              maxWidth: S,
              rotation: P,
            } = this._drawArgs(g);
          xo(a, o.text, 0, 0, u, {
            color: o.color,
            maxWidth: S,
            rotation: P,
            textAlign: An(o.align),
            textBaseline: "middle",
            translation: [y, w],
          });
        }
      }
      var vf = {
        id: "title",
        _element: fo,
        start(l, a, o) {
          !(function As(l, a) {
            const o = new fo({ ctx: l.ctx, options: a, chart: l });
            Wo.configure(l, o, a), Wo.addBox(l, o), (l.titleBlock = o);
          })(l, o);
        },
        stop(l) {
          Wo.removeBox(l, l.titleBlock), delete l.titleBlock;
        },
        beforeUpdate(l, a, o) {
          const u = l.titleBlock;
          Wo.configure(l, u, o), (u.options = o);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "bold" },
          fullSize: !0,
          padding: 10,
          position: "top",
          text: "",
          weight: 2e3,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const Ml = new WeakMap();
      var El = {
        id: "subtitle",
        start(l, a, o) {
          const u = new fo({ ctx: l.ctx, options: o, chart: l });
          Wo.configure(l, u, o), Wo.addBox(l, u), Ml.set(l, u);
        },
        stop(l) {
          Wo.removeBox(l, Ml.get(l)), Ml.delete(l);
        },
        beforeUpdate(l, a, o) {
          const u = Ml.get(l);
          Wo.configure(l, u, o), (u.options = o);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "normal" },
          fullSize: !0,
          padding: 0,
          position: "top",
          text: "",
          weight: 1500,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const ac = {
        average(l) {
          if (!l.length) return !1;
          let a,
            o,
            u = new Set(),
            f = 0,
            g = 0;
          for (a = 0, o = l.length; a < o; ++a) {
            const w = l[a].element;
            if (w && w.hasValue()) {
              const S = w.tooltipPosition();
              u.add(S.x), (f += S.y), ++g;
            }
          }
          return { x: [...u].reduce((w, S) => w + S) / u.size, y: f / g };
        },
        nearest(l, a) {
          if (!l.length) return !1;
          let g,
            y,
            w,
            o = a.x,
            u = a.y,
            f = Number.POSITIVE_INFINITY;
          for (g = 0, y = l.length; g < y; ++g) {
            const S = l[g].element;
            if (S && S.hasValue()) {
              const Y = ne(a, S.getCenterPoint());
              Y < f && ((f = Y), (w = S));
            }
          }
          if (w) {
            const S = w.tooltipPosition();
            (o = S.x), (u = S.y);
          }
          return { x: o, y: u };
        },
      };
      function fr(l, a) {
        return a && (te(a) ? Array.prototype.push.apply(l, a) : l.push(a)), l;
      }
      function kr(l) {
        return ("string" == typeof l || l instanceof String) &&
          l.indexOf("\n") > -1
          ? l.split("\n")
          : l;
      }
      function uh(l, a) {
        const { element: o, datasetIndex: u, index: f } = a,
          g = l.getDatasetMeta(u).controller,
          { label: y, value: w } = g.getLabelAndValue(f);
        return {
          chart: l,
          label: y,
          parsed: g.getParsed(f),
          raw: l.data.datasets[u].data[f],
          formattedValue: w,
          dataset: g.getDataset(),
          dataIndex: f,
          datasetIndex: u,
          element: o,
        };
      }
      function hh(l, a) {
        const o = l.chart.ctx,
          { body: u, footer: f, title: g } = l,
          { boxWidth: y, boxHeight: w } = a,
          S = jn(a.bodyFont),
          P = jn(a.titleFont),
          Y = jn(a.footerFont),
          dt = g.length,
          Tt = f.length,
          Ht = u.length,
          be = Wn(a.padding);
        let Ce = be.height,
          Se = 0,
          ci = u.reduce(
            (Oi, wi) =>
              Oi + wi.before.length + wi.lines.length + wi.after.length,
            0,
          );
        (ci += l.beforeBody.length + l.afterBody.length),
          dt &&
            (Ce +=
              dt * P.lineHeight +
              (dt - 1) * a.titleSpacing +
              a.titleMarginBottom),
          ci &&
            (Ce +=
              Ht *
                (a.displayColors ? Math.max(w, S.lineHeight) : S.lineHeight) +
              (ci - Ht) * S.lineHeight +
              (ci - 1) * a.bodySpacing),
          Tt &&
            (Ce +=
              a.footerMarginTop +
              Tt * Y.lineHeight +
              (Tt - 1) * a.footerSpacing);
        let ai = 0;
        const Ti = function (Oi) {
          Se = Math.max(Se, o.measureText(Oi).width + ai);
        };
        return (
          o.save(),
          (o.font = P.string),
          ot(l.title, Ti),
          (o.font = S.string),
          ot(l.beforeBody.concat(l.afterBody), Ti),
          (ai = a.displayColors ? y + 2 + a.boxPadding : 0),
          ot(u, (Oi) => {
            ot(Oi.before, Ti), ot(Oi.lines, Ti), ot(Oi.after, Ti);
          }),
          (ai = 0),
          (o.font = Y.string),
          ot(l.footer, Ti),
          o.restore(),
          (Se += be.width),
          { width: Se, height: Ce }
        );
      }
      function Xc(l, a, o, u) {
        const { x: f, width: g } = o,
          {
            width: y,
            chartArea: { left: w, right: S },
          } = l;
        let P = "center";
        return (
          "center" === u
            ? (P = f <= (w + S) / 2 ? "left" : "right")
            : f <= g / 2
              ? (P = "left")
              : f >= y - g / 2 && (P = "right"),
          (function Cr(l, a, o, u) {
            const { x: f, width: g } = u,
              y = o.caretSize + o.caretPadding;
            if (
              ("left" === l && f + g + y > a.width) ||
              ("right" === l && f - g - y < 0)
            )
              return !0;
          })(P, l, a, o) && (P = "center"),
          P
        );
      }
      function $d(l, a, o) {
        const u =
          o.yAlign ||
          a.yAlign ||
          (function bf(l, a) {
            const { y: o, height: u } = a;
            return o < u / 2
              ? "top"
              : o > l.height - u / 2
                ? "bottom"
                : "center";
          })(l, o);
        return { xAlign: o.xAlign || a.xAlign || Xc(l, a, o, u), yAlign: u };
      }
      function Sl(l, a, o, u) {
        const { caretSize: f, caretPadding: g, cornerRadius: y } = l,
          { xAlign: w, yAlign: S } = o,
          P = f + g,
          { topLeft: Y, topRight: dt, bottomLeft: Tt, bottomRight: Ht } = xn(y);
        let be = (function Wd(l, a) {
          let { x: o, width: u } = l;
          return "right" === a ? (o -= u) : "center" === a && (o -= u / 2), o;
        })(a, w);
        const Ce = (function mr(l, a, o) {
          let { y: u, height: f } = l;
          return (
            "top" === a ? (u += o) : (u -= "bottom" === a ? f + o : f / 2), u
          );
        })(a, S, P);
        return (
          "center" === S
            ? "left" === w
              ? (be += P)
              : "right" === w && (be -= P)
            : "left" === w
              ? (be -= Math.max(Y, Tt) + f)
              : "right" === w && (be += Math.max(dt, Ht) + f),
          { x: Te(be, 0, u.width - a.width), y: Te(Ce, 0, u.height - a.height) }
        );
      }
      function lc(l, a, o) {
        const u = Wn(o.padding);
        return "center" === a
          ? l.x + l.width / 2
          : "right" === a
            ? l.x + l.width - u.right
            : l.x + u.left;
      }
      function qd(l) {
        return fr([], kr(l));
      }
      function Qd(l, a) {
        const o =
          a && a.dataset && a.dataset.tooltip && a.dataset.tooltip.callbacks;
        return o ? l.override(o) : l;
      }
      const Kd = {
        beforeTitle: Mi,
        title(l) {
          if (l.length > 0) {
            const a = l[0],
              o = a.chart.data.labels,
              u = o ? o.length : 0;
            if (this && this.options && "dataset" === this.options.mode)
              return a.dataset.label || "";
            if (a.label) return a.label;
            if (u > 0 && a.dataIndex < u) return o[a.dataIndex];
          }
          return "";
        },
        afterTitle: Mi,
        beforeBody: Mi,
        beforeLabel: Mi,
        label(l) {
          if (this && this.options && "dataset" === this.options.mode)
            return l.label + ": " + l.formattedValue || l.formattedValue;
          let a = l.dataset.label || "";
          a && (a += ": ");
          const o = l.formattedValue;
          return ri(o) || (a += o), a;
        },
        labelColor(l) {
          const o = l.chart
            .getDatasetMeta(l.datasetIndex)
            .controller.getStyle(l.dataIndex);
          return {
            borderColor: o.borderColor,
            backgroundColor: o.backgroundColor,
            borderWidth: o.borderWidth,
            borderDash: o.borderDash,
            borderDashOffset: o.borderDashOffset,
            borderRadius: 0,
          };
        },
        labelTextColor() {
          return this.options.bodyColor;
        },
        labelPointStyle(l) {
          const o = l.chart
            .getDatasetMeta(l.datasetIndex)
            .controller.getStyle(l.dataIndex);
          return { pointStyle: o.pointStyle, rotation: o.rotation };
        },
        afterLabel: Mi,
        afterBody: Mi,
        beforeFooter: Mi,
        footer: Mi,
        afterFooter: Mi,
      };
      function Tr(l, a, o, u) {
        const f = l[a].call(o, u);
        return typeof f > "u" ? Kd[a].call(o, u) : f;
      }
      let yf = (() =>
        class l extends Ds {
          static positioners = ac;
          constructor(o) {
            super(),
              (this.opacity = 0),
              (this._active = []),
              (this._eventPosition = void 0),
              (this._size = void 0),
              (this._cachedAnimations = void 0),
              (this._tooltipItems = []),
              (this.$animations = void 0),
              (this.$context = void 0),
              (this.chart = o.chart),
              (this.options = o.options),
              (this.dataPoints = void 0),
              (this.title = void 0),
              (this.beforeBody = void 0),
              (this.body = void 0),
              (this.afterBody = void 0),
              (this.footer = void 0),
              (this.xAlign = void 0),
              (this.yAlign = void 0),
              (this.x = void 0),
              (this.y = void 0),
              (this.height = void 0),
              (this.width = void 0),
              (this.caretX = void 0),
              (this.caretY = void 0),
              (this.labelColors = void 0),
              (this.labelPointStyles = void 0),
              (this.labelTextColors = void 0);
          }
          initialize(o) {
            (this.options = o),
              (this._cachedAnimations = void 0),
              (this.$context = void 0);
          }
          _resolveAnimations() {
            const o = this._cachedAnimations;
            if (o) return o;
            const u = this.chart,
              f = this.options.setContext(this.getContext()),
              g = f.enabled && u.options.animation && f.animations,
              y = new sl(this.chart, g);
            return (
              g._cacheable && (this._cachedAnimations = Object.freeze(y)), y
            );
          }
          getContext() {
            return (
              this.$context ||
              (this.$context = (function fh(l, a, o) {
                return or(l, { tooltip: a, tooltipItems: o, type: "tooltip" });
              })(this.chart.getContext(), this, this._tooltipItems))
            );
          }
          getTitle(o, u) {
            const { callbacks: f } = u,
              g = Tr(f, "beforeTitle", this, o),
              y = Tr(f, "title", this, o),
              w = Tr(f, "afterTitle", this, o);
            let S = [];
            return (
              (S = fr(S, kr(g))), (S = fr(S, kr(y))), (S = fr(S, kr(w))), S
            );
          }
          getBeforeBody(o, u) {
            return qd(Tr(u.callbacks, "beforeBody", this, o));
          }
          getBody(o, u) {
            const { callbacks: f } = u,
              g = [];
            return (
              ot(o, (y) => {
                const w = { before: [], lines: [], after: [] },
                  S = Qd(f, y);
                fr(w.before, kr(Tr(S, "beforeLabel", this, y))),
                  fr(w.lines, Tr(S, "label", this, y)),
                  fr(w.after, kr(Tr(S, "afterLabel", this, y))),
                  g.push(w);
              }),
              g
            );
          }
          getAfterBody(o, u) {
            return qd(Tr(u.callbacks, "afterBody", this, o));
          }
          getFooter(o, u) {
            const { callbacks: f } = u,
              g = Tr(f, "beforeFooter", this, o),
              y = Tr(f, "footer", this, o),
              w = Tr(f, "afterFooter", this, o);
            let S = [];
            return (
              (S = fr(S, kr(g))), (S = fr(S, kr(y))), (S = fr(S, kr(w))), S
            );
          }
          _createItems(o) {
            const u = this._active,
              f = this.chart.data,
              g = [],
              y = [],
              w = [];
            let P,
              Y,
              S = [];
            for (P = 0, Y = u.length; P < Y; ++P) S.push(uh(this.chart, u[P]));
            return (
              o.filter &&
                (S = S.filter((dt, Tt, Ht) => o.filter(dt, Tt, Ht, f))),
              o.itemSort && (S = S.sort((dt, Tt) => o.itemSort(dt, Tt, f))),
              ot(S, (dt) => {
                const Tt = Qd(o.callbacks, dt);
                g.push(Tr(Tt, "labelColor", this, dt)),
                  y.push(Tr(Tt, "labelPointStyle", this, dt)),
                  w.push(Tr(Tt, "labelTextColor", this, dt));
              }),
              (this.labelColors = g),
              (this.labelPointStyles = y),
              (this.labelTextColors = w),
              (this.dataPoints = S),
              S
            );
          }
          update(o, u) {
            const f = this.options.setContext(this.getContext()),
              g = this._active;
            let y,
              w = [];
            if (g.length) {
              const S = ac[f.position].call(this, g, this._eventPosition);
              (w = this._createItems(f)),
                (this.title = this.getTitle(w, f)),
                (this.beforeBody = this.getBeforeBody(w, f)),
                (this.body = this.getBody(w, f)),
                (this.afterBody = this.getAfterBody(w, f)),
                (this.footer = this.getFooter(w, f));
              const P = (this._size = hh(this, f)),
                Y = Object.assign({}, S, P),
                dt = $d(this.chart, f, Y),
                Tt = Sl(f, Y, dt, this.chart);
              (this.xAlign = dt.xAlign),
                (this.yAlign = dt.yAlign),
                (y = {
                  opacity: 1,
                  x: Tt.x,
                  y: Tt.y,
                  width: P.width,
                  height: P.height,
                  caretX: S.x,
                  caretY: S.y,
                });
            } else 0 !== this.opacity && (y = { opacity: 0 });
            (this._tooltipItems = w),
              (this.$context = void 0),
              y && this._resolveAnimations().update(this, y),
              o &&
                f.external &&
                f.external.call(this, {
                  chart: this.chart,
                  tooltip: this,
                  replay: u,
                });
          }
          drawCaret(o, u, f, g) {
            const y = this.getCaretPosition(o, f, g);
            u.lineTo(y.x1, y.y1), u.lineTo(y.x2, y.y2), u.lineTo(y.x3, y.y3);
          }
          getCaretPosition(o, u, f) {
            const { xAlign: g, yAlign: y } = this,
              { caretSize: w, cornerRadius: S } = f,
              {
                topLeft: P,
                topRight: Y,
                bottomLeft: dt,
                bottomRight: Tt,
              } = xn(S),
              { x: Ht, y: be } = o,
              { width: Ce, height: Se } = u;
            let ci, ai, Ti, Oi, wi, Di;
            return (
              "center" === y
                ? ((wi = be + Se / 2),
                  "left" === g
                    ? ((ci = Ht), (ai = ci - w), (Oi = wi + w), (Di = wi - w))
                    : ((ci = Ht + Ce),
                      (ai = ci + w),
                      (Oi = wi - w),
                      (Di = wi + w)),
                  (Ti = ci))
                : ((ai =
                    "left" === g
                      ? Ht + Math.max(P, dt) + w
                      : "right" === g
                        ? Ht + Ce - Math.max(Y, Tt) - w
                        : this.caretX),
                  "top" === y
                    ? ((Oi = be), (wi = Oi - w), (ci = ai - w), (Ti = ai + w))
                    : ((Oi = be + Se),
                      (wi = Oi + w),
                      (ci = ai + w),
                      (Ti = ai - w)),
                  (Di = Oi)),
              { x1: ci, x2: ai, x3: Ti, y1: Oi, y2: wi, y3: Di }
            );
          }
          drawTitle(o, u, f) {
            const g = this.title,
              y = g.length;
            let w, S, P;
            if (y) {
              const Y = ys(f.rtl, this.x, this.width);
              for (
                o.x = lc(this, f.titleAlign, f),
                  u.textAlign = Y.textAlign(f.titleAlign),
                  u.textBaseline = "middle",
                  w = jn(f.titleFont),
                  S = f.titleSpacing,
                  u.fillStyle = f.titleColor,
                  u.font = w.string,
                  P = 0;
                P < y;
                ++P
              )
                u.fillText(g[P], Y.x(o.x), o.y + w.lineHeight / 2),
                  (o.y += w.lineHeight + S),
                  P + 1 === y && (o.y += f.titleMarginBottom - S);
            }
          }
          _drawColorBox(o, u, f, g, y) {
            const w = this.labelColors[f],
              S = this.labelPointStyles[f],
              { boxHeight: P, boxWidth: Y } = y,
              dt = jn(y.bodyFont),
              Tt = lc(this, "left", y),
              Ht = g.x(Tt),
              Ce = u.y + (P < dt.lineHeight ? (dt.lineHeight - P) / 2 : 0);
            if (y.usePointStyle) {
              const Se = {
                  radius: Math.min(Y, P) / 2,
                  pointStyle: S.pointStyle,
                  rotation: S.rotation,
                  borderWidth: 1,
                },
                ci = g.leftForLtr(Ht, Y) + Y / 2,
                ai = Ce + P / 2;
              (o.strokeStyle = y.multiKeyBackground),
                (o.fillStyle = y.multiKeyBackground),
                Pr(o, Se, ci, ai),
                (o.strokeStyle = w.borderColor),
                (o.fillStyle = w.backgroundColor),
                Pr(o, Se, ci, ai);
            } else {
              (o.lineWidth = Be(w.borderWidth)
                ? Math.max(...Object.values(w.borderWidth))
                : w.borderWidth || 1),
                (o.strokeStyle = w.borderColor),
                o.setLineDash(w.borderDash || []),
                (o.lineDashOffset = w.borderDashOffset || 0);
              const Se = g.leftForLtr(Ht, Y),
                ci = g.leftForLtr(g.xPlus(Ht, 1), Y - 2),
                ai = xn(w.borderRadius);
              Object.values(ai).some((Ti) => 0 !== Ti)
                ? (o.beginPath(),
                  (o.fillStyle = y.multiKeyBackground),
                  Vn(o, { x: Se, y: Ce, w: Y, h: P, radius: ai }),
                  o.fill(),
                  o.stroke(),
                  (o.fillStyle = w.backgroundColor),
                  o.beginPath(),
                  Vn(o, { x: ci, y: Ce + 1, w: Y - 2, h: P - 2, radius: ai }),
                  o.fill())
                : ((o.fillStyle = y.multiKeyBackground),
                  o.fillRect(Se, Ce, Y, P),
                  o.strokeRect(Se, Ce, Y, P),
                  (o.fillStyle = w.backgroundColor),
                  o.fillRect(ci, Ce + 1, Y - 2, P - 2));
            }
            o.fillStyle = this.labelTextColors[f];
          }
          drawBody(o, u, f) {
            const { body: g } = this,
              {
                bodySpacing: y,
                bodyAlign: w,
                displayColors: S,
                boxHeight: P,
                boxWidth: Y,
                boxPadding: dt,
              } = f,
              Tt = jn(f.bodyFont);
            let Ht = Tt.lineHeight,
              be = 0;
            const Ce = ys(f.rtl, this.x, this.width),
              Se = function (Ji) {
                u.fillText(Ji, Ce.x(o.x + be), o.y + Ht / 2), (o.y += Ht + y);
              },
              ci = Ce.textAlign(w);
            let ai, Ti, Oi, wi, Di, Ui, Ni;
            for (
              u.textAlign = w,
                u.textBaseline = "middle",
                u.font = Tt.string,
                o.x = lc(this, ci, f),
                u.fillStyle = f.bodyColor,
                ot(this.beforeBody, Se),
                be =
                  S && "right" !== ci
                    ? "center" === w
                      ? Y / 2 + dt
                      : Y + 2 + dt
                    : 0,
                wi = 0,
                Ui = g.length;
              wi < Ui;
              ++wi
            ) {
              for (
                ai = g[wi],
                  Ti = this.labelTextColors[wi],
                  u.fillStyle = Ti,
                  ot(ai.before, Se),
                  Oi = ai.lines,
                  S &&
                    Oi.length &&
                    (this._drawColorBox(u, o, wi, Ce, f),
                    (Ht = Math.max(Tt.lineHeight, P))),
                  Di = 0,
                  Ni = Oi.length;
                Di < Ni;
                ++Di
              )
                Se(Oi[Di]), (Ht = Tt.lineHeight);
              ot(ai.after, Se);
            }
            (be = 0), (Ht = Tt.lineHeight), ot(this.afterBody, Se), (o.y -= y);
          }
          drawFooter(o, u, f) {
            const g = this.footer,
              y = g.length;
            let w, S;
            if (y) {
              const P = ys(f.rtl, this.x, this.width);
              for (
                o.x = lc(this, f.footerAlign, f),
                  o.y += f.footerMarginTop,
                  u.textAlign = P.textAlign(f.footerAlign),
                  u.textBaseline = "middle",
                  w = jn(f.footerFont),
                  u.fillStyle = f.footerColor,
                  u.font = w.string,
                  S = 0;
                S < y;
                ++S
              )
                u.fillText(g[S], P.x(o.x), o.y + w.lineHeight / 2),
                  (o.y += w.lineHeight + f.footerSpacing);
            }
          }
          drawBackground(o, u, f, g) {
            const { xAlign: y, yAlign: w } = this,
              { x: S, y: P } = o,
              { width: Y, height: dt } = f,
              {
                topLeft: Tt,
                topRight: Ht,
                bottomLeft: be,
                bottomRight: Ce,
              } = xn(g.cornerRadius);
            (u.fillStyle = g.backgroundColor),
              (u.strokeStyle = g.borderColor),
              (u.lineWidth = g.borderWidth),
              u.beginPath(),
              u.moveTo(S + Tt, P),
              "top" === w && this.drawCaret(o, u, f, g),
              u.lineTo(S + Y - Ht, P),
              u.quadraticCurveTo(S + Y, P, S + Y, P + Ht),
              "center" === w && "right" === y && this.drawCaret(o, u, f, g),
              u.lineTo(S + Y, P + dt - Ce),
              u.quadraticCurveTo(S + Y, P + dt, S + Y - Ce, P + dt),
              "bottom" === w && this.drawCaret(o, u, f, g),
              u.lineTo(S + be, P + dt),
              u.quadraticCurveTo(S, P + dt, S, P + dt - be),
              "center" === w && "left" === y && this.drawCaret(o, u, f, g),
              u.lineTo(S, P + Tt),
              u.quadraticCurveTo(S, P, S + Tt, P),
              u.closePath(),
              u.fill(),
              g.borderWidth > 0 && u.stroke();
          }
          _updateAnimationTarget(o) {
            const u = this.chart,
              f = this.$animations,
              g = f && f.x,
              y = f && f.y;
            if (g || y) {
              const w = ac[o.position].call(
                this,
                this._active,
                this._eventPosition,
              );
              if (!w) return;
              const S = (this._size = hh(this, o)),
                P = Object.assign({}, w, this._size),
                Y = $d(u, o, P),
                dt = Sl(o, P, Y, u);
              (g._to !== dt.x || y._to !== dt.y) &&
                ((this.xAlign = Y.xAlign),
                (this.yAlign = Y.yAlign),
                (this.width = S.width),
                (this.height = S.height),
                (this.caretX = w.x),
                (this.caretY = w.y),
                this._resolveAnimations().update(this, dt));
            }
          }
          _willRender() {
            return !!this.opacity;
          }
          draw(o) {
            const u = this.options.setContext(this.getContext());
            let f = this.opacity;
            if (!f) return;
            this._updateAnimationTarget(u);
            const g = { width: this.width, height: this.height },
              y = { x: this.x, y: this.y };
            f = Math.abs(f) < 0.001 ? 0 : f;
            const w = Wn(u.padding);
            u.enabled &&
              (this.title.length ||
                this.beforeBody.length ||
                this.body.length ||
                this.afterBody.length ||
                this.footer.length) &&
              (o.save(),
              (o.globalAlpha = f),
              this.drawBackground(y, o, g, u),
              Zs(o, u.textDirection),
              (y.y += w.top),
              this.drawTitle(y, o, u),
              this.drawBody(y, o, u),
              this.drawFooter(y, o, u),
              Ys(o, u.textDirection),
              o.restore());
          }
          getActiveElements() {
            return this._active || [];
          }
          setActiveElements(o, u) {
            const f = this._active,
              g = o.map(({ datasetIndex: S, index: P }) => {
                const Y = this.chart.getDatasetMeta(S);
                if (!Y) throw new Error("Cannot find a dataset at index " + S);
                return { datasetIndex: S, element: Y.data[P], index: P };
              }),
              y = !Z(f, g),
              w = this._positionChanged(g, u);
            (y || w) &&
              ((this._active = g),
              (this._eventPosition = u),
              (this._ignoreReplayEvents = !0),
              this.update(!0));
          }
          handleEvent(o, u, f = !0) {
            if (u && this._ignoreReplayEvents) return !1;
            this._ignoreReplayEvents = !1;
            const g = this.options,
              y = this._active || [],
              w = this._getActiveElements(o, y, u, f),
              S = this._positionChanged(w, o),
              P = u || !Z(w, y) || S;
            return (
              P &&
                ((this._active = w),
                (g.enabled || g.external) &&
                  ((this._eventPosition = { x: o.x, y: o.y }),
                  this.update(!0, u))),
              P
            );
          }
          _getActiveElements(o, u, f, g) {
            const y = this.options;
            if ("mouseout" === o.type) return [];
            if (!g)
              return u.filter(
                (S) =>
                  this.chart.data.datasets[S.datasetIndex] &&
                  void 0 !==
                    this.chart
                      .getDatasetMeta(S.datasetIndex)
                      .controller.getParsed(S.index),
              );
            const w = this.chart.getElementsAtEventForMode(o, y.mode, y, f);
            return y.reverse && w.reverse(), w;
          }
          _positionChanged(o, u) {
            const { caretX: f, caretY: g, options: y } = this,
              w = ac[y.position].call(this, o, u);
            return !1 !== w && (f !== w.x || g !== w.y);
          }
        })();
      var wf = Object.freeze({
        __proto__: null,
        Colors: ff,
        Decimation: is,
        Filler: Qc,
        Legend: ra,
        SubTitle: El,
        Title: vf,
        Tooltip: {
          id: "tooltip",
          _element: yf,
          positioners: ac,
          afterInit(l, a, o) {
            o && (l.tooltip = new yf({ chart: l, options: o }));
          },
          beforeUpdate(l, a, o) {
            l.tooltip && l.tooltip.initialize(o);
          },
          reset(l, a, o) {
            l.tooltip && l.tooltip.initialize(o);
          },
          afterDraw(l) {
            const a = l.tooltip;
            if (a && a._willRender()) {
              const o = { tooltip: a };
              if (
                !1 ===
                l.notifyPlugins("beforeTooltipDraw", { ...o, cancelable: !0 })
              )
                return;
              a.draw(l.ctx), l.notifyPlugins("afterTooltipDraw", o);
            }
          },
          afterEvent(l, a) {
            l.tooltip &&
              l.tooltip.handleEvent(a.event, a.replay, a.inChartArea) &&
              (a.changed = !0);
          },
          defaults: {
            enabled: !0,
            external: null,
            position: "average",
            backgroundColor: "rgba(0,0,0,0.8)",
            titleColor: "#fff",
            titleFont: { weight: "bold" },
            titleSpacing: 2,
            titleMarginBottom: 6,
            titleAlign: "left",
            bodyColor: "#fff",
            bodySpacing: 2,
            bodyFont: {},
            bodyAlign: "left",
            footerColor: "#fff",
            footerSpacing: 2,
            footerMarginTop: 6,
            footerFont: { weight: "bold" },
            footerAlign: "left",
            padding: 6,
            caretPadding: 2,
            caretSize: 5,
            cornerRadius: 6,
            boxHeight: (l, a) => a.bodyFont.size,
            boxWidth: (l, a) => a.bodyFont.size,
            multiKeyBackground: "#fff",
            displayColors: !0,
            boxPadding: 0,
            borderColor: "rgba(0,0,0,0)",
            borderWidth: 0,
            animation: { duration: 400, easing: "easeOutQuart" },
            animations: {
              numbers: {
                type: "number",
                properties: ["x", "y", "width", "height", "caretX", "caretY"],
              },
              opacity: { easing: "linear", duration: 200 },
            },
            callbacks: Kd,
          },
          defaultRoutes: {
            bodyFont: "font",
            footerFont: "font",
            titleFont: "font",
          },
          descriptors: {
            _scriptable: (l) =>
              "filter" !== l && "itemSort" !== l && "external" !== l,
            _indexable: !1,
            callbacks: { _scriptable: !1, _indexable: !1 },
            animation: { _fallback: !1 },
            animations: { _fallback: "animation" },
          },
          additionalOptionScopes: ["interaction"],
        },
      });
      function mh(l) {
        const a = this.getLabels();
        return l >= 0 && l < a.length ? a[l] : l;
      }
      let cc = (() =>
        class l extends Xs {
          static id = "category";
          static defaults = { ticks: { callback: mh } };
          constructor(o) {
            super(o),
              (this._startValue = void 0),
              (this._valueRange = 0),
              (this._addedLabels = []);
          }
          init(o) {
            const u = this._addedLabels;
            if (u.length) {
              const f = this.getLabels();
              for (const { index: g, label: y } of u)
                f[g] === y && f.splice(g, 1);
              this._addedLabels = [];
            }
            super.init(o);
          }
          parse(o, u) {
            if (ri(o)) return null;
            const f = this.getLabels();
            return ((l, a) => (null === l ? null : Te(Math.round(l), 0, a)))(
              (u =
                isFinite(u) && f[u] === o
                  ? u
                  : (function Jd(l, a, o, u) {
                      const f = l.indexOf(a);
                      return -1 === f
                        ? ((l, a, o, u) => (
                            "string" == typeof a
                              ? ((o = l.push(a) - 1),
                                u.unshift({ index: o, label: a }))
                              : isNaN(a) && (o = null),
                            o
                          ))(l, a, o, u)
                        : f !== l.lastIndexOf(a)
                          ? o
                          : f;
                    })(f, o, gi(u, o), this._addedLabels)),
              f.length - 1,
            );
          }
          determineDataLimits() {
            const { minDefined: o, maxDefined: u } = this.getUserBounds();
            let { min: f, max: g } = this.getMinMax(!0);
            "ticks" === this.options.bounds &&
              (o || (f = 0), u || (g = this.getLabels().length - 1)),
              (this.min = f),
              (this.max = g);
          }
          buildTicks() {
            const o = this.min,
              u = this.max,
              f = this.options.offset,
              g = [];
            let y = this.getLabels();
            (y = 0 === o && u === y.length - 1 ? y : y.slice(o, u + 1)),
              (this._valueRange = Math.max(y.length - (f ? 0 : 1), 1)),
              (this._startValue = this.min - (f ? 0.5 : 0));
            for (let w = o; w <= u; w++) g.push({ value: w });
            return g;
          }
          getLabelForValue(o) {
            return mh.call(this, o);
          }
          configure() {
            super.configure(),
              this.isHorizontal() ||
                (this._reversePixels = !this._reversePixels);
          }
          getPixelForValue(o) {
            return (
              "number" != typeof o && (o = this.parse(o)),
              null === o
                ? NaN
                : this.getPixelForDecimal(
                    (o - this._startValue) / this._valueRange,
                  )
            );
          }
          getPixelForTick(o) {
            const u = this.ticks;
            return o < 0 || o > u.length - 1
              ? null
              : this.getPixelForValue(u[o].value);
          }
          getValueForPixel(o) {
            return Math.round(
              this._startValue + this.getDecimalForPixel(o) * this._valueRange,
            );
          }
          getBasePixel() {
            return this.bottom;
          }
        })();
      function tu(l, a, { horizontal: o, minRotation: u }) {
        const f = Yt(u),
          g = (o ? Math.sin(f) : Math.cos(f)) || 0.001;
        return Math.min(a / g, 0.75 * a * ("" + l).length);
      }
      class dc extends Xs {
        constructor(a) {
          super(a),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._endValue = void 0),
            (this._valueRange = 0);
        }
        parse(a, o) {
          return ri(a) ||
            (("number" == typeof a || a instanceof Number) && !isFinite(+a))
            ? null
            : +a;
        }
        handleTickRangeOptions() {
          const { beginAtZero: a } = this.options,
            { minDefined: o, maxDefined: u } = this.getUserBounds();
          let { min: f, max: g } = this;
          const y = (S) => (f = o ? f : S),
            w = (S) => (g = u ? g : S);
          if (a) {
            const S = U(f),
              P = U(g);
            S < 0 && P < 0 ? w(0) : S > 0 && P > 0 && y(0);
          }
          if (f === g) {
            let S = 0 === g ? 1 : Math.abs(0.05 * g);
            w(g + S), a || y(f - S);
          }
          (this.min = f), (this.max = g);
        }
        getTickLimit() {
          const a = this.options.ticks;
          let f,
            { maxTicksLimit: o, stepSize: u } = a;
          return (
            u
              ? ((f = Math.ceil(this.max / u) - Math.floor(this.min / u) + 1),
                f > 1e3 &&
                  (console.warn(
                    `scales.${this.id}.ticks.stepSize: ${u} would result generating up to ${f} ticks. Limiting to 1000.`,
                  ),
                  (f = 1e3)))
              : ((f = this.computeTickLimit()), (o = o || 11)),
            o && (f = Math.min(o, f)),
            f
          );
        }
        computeTickLimit() {
          return Number.POSITIVE_INFINITY;
        }
        buildTicks() {
          const a = this.options,
            o = a.ticks;
          let u = this.getTickLimit();
          u = Math.max(2, u);
          const y = (function Cf(l, a) {
            const o = [],
              {
                bounds: f,
                step: g,
                min: y,
                max: w,
                precision: S,
                count: P,
                maxTicks: Y,
                maxDigits: dt,
                includeBounds: Tt,
              } = l,
              Ht = g || 1,
              be = Y - 1,
              { min: Ce, max: Se } = a,
              ci = !ri(y),
              ai = !ri(w),
              Ti = !ri(P),
              Oi = (Se - Ce) / (dt + 1);
            let Di,
              Ui,
              Ni,
              Ji,
              wi = ct((Se - Ce) / be / Ht) * Ht;
            if (wi < 1e-14 && !ci && !ai) return [{ value: Ce }, { value: Se }];
            (Ji = Math.ceil(Se / wi) - Math.floor(Ce / wi)),
              Ji > be && (wi = ct((Ji * wi) / be / Ht) * Ht),
              ri(S) || ((Di = Math.pow(10, S)), (wi = Math.ceil(wi * Di) / Di)),
              "ticks" === f
                ? ((Ui = Math.floor(Ce / wi) * wi),
                  (Ni = Math.ceil(Se / wi) * wi))
                : ((Ui = Ce), (Ni = Se)),
              ci &&
              ai &&
              g &&
              (function le(l, a) {
                const o = Math.round(l);
                return o - a <= l && o + a >= l;
              })((w - y) / g, wi / 1e3)
                ? ((Ji = Math.round(Math.min((w - y) / wi, Y))),
                  (wi = (w - y) / Ji),
                  (Ui = y),
                  (Ni = w))
                : Ti
                  ? ((Ui = ci ? y : Ui),
                    (Ni = ai ? w : Ni),
                    (Ji = P - 1),
                    (wi = (Ni - Ui) / Ji))
                  : ((Ji = (Ni - Ui) / wi),
                    (Ji = j(Ji, Math.round(Ji), wi / 1e3)
                      ? Math.round(Ji)
                      : Math.ceil(Ji)));
            const En = Math.max(oi(wi), oi(Ui));
            (Di = Math.pow(10, ri(S) ? En : S)),
              (Ui = Math.round(Ui * Di) / Di),
              (Ni = Math.round(Ni * Di) / Di);
            let wn = 0;
            for (
              ci &&
              (Tt && Ui !== y
                ? (o.push({ value: y }),
                  Ui < y && wn++,
                  j(Math.round((Ui + wn * wi) * Di) / Di, y, tu(y, Oi, l)) &&
                    wn++)
                : Ui < y && wn++);
              wn < Ji;
              ++wn
            ) {
              const Nn = Math.round((Ui + wn * wi) * Di) / Di;
              if (ai && Nn > w) break;
              o.push({ value: Nn });
            }
            return (
              ai && Tt && Ni !== w
                ? o.length && j(o[o.length - 1].value, w, tu(w, Oi, l))
                  ? (o[o.length - 1].value = w)
                  : o.push({ value: w })
                : (!ai || Ni === w) && o.push({ value: Ni }),
              o
            );
          })(
            {
              maxTicks: u,
              bounds: a.bounds,
              min: a.min,
              max: a.max,
              precision: o.precision,
              step: o.stepSize,
              count: o.count,
              maxDigits: this._maxDigits(),
              horizontal: this.isHorizontal(),
              minRotation: o.minRotation || 0,
              includeBounds: !1 !== o.includeBounds,
            },
            this._range || this,
          );
          return (
            "ticks" === a.bounds && It(y, this, "value"),
            a.reverse
              ? (y.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            y
          );
        }
        configure() {
          const a = this.ticks;
          let o = this.min,
            u = this.max;
          if ((super.configure(), this.options.offset && a.length)) {
            const f = (u - o) / Math.max(a.length - 1, 1) / 2;
            (o -= f), (u += f);
          }
          (this._startValue = o),
            (this._endValue = u),
            (this._valueRange = u - o);
        }
        getLabelForValue(a) {
          return Jn(a, this.chart.options.locale, this.options.ticks.format);
        }
      }
      const Wi = (l) => Math.floor(vt(l)),
        To = (l, a) => Math.pow(10, Wi(l) + a);
      function Sn(l) {
        return l / Math.pow(10, Wi(l)) == 1;
      }
      function Al(l, a, o) {
        const u = Math.pow(10, o),
          f = Math.floor(l / u);
        return Math.ceil(a / u) - f;
      }
      function eu(l) {
        const a = l.ticks;
        if (a.display && l.display) {
          const o = Wn(a.backdropPadding);
          return gi(a.font && a.font.size, un.font.size) + o.height;
        }
        return 0;
      }
      function Df(l, a, o) {
        return (
          (o = te(o) ? o : [o]),
          { w: _o(l, a.string, o), h: o.length * a.lineHeight }
        );
      }
      function gh(l, a, o, u, f) {
        return l === u || l === f
          ? { start: a - o / 2, end: a + o / 2 }
          : l < u || l > f
            ? { start: a - o, end: a }
            : { start: a, end: a + o };
      }
      function _h(l, a, o, u, f) {
        const g = Math.abs(Math.sin(o)),
          y = Math.abs(Math.cos(o));
        let w = 0,
          S = 0;
        u.start < a.l
          ? ((w = (a.l - u.start) / g), (l.l = Math.min(l.l, a.l - w)))
          : u.end > a.r &&
            ((w = (u.end - a.r) / g), (l.r = Math.max(l.r, a.r + w))),
          f.start < a.t
            ? ((S = (a.t - f.start) / y), (l.t = Math.min(l.t, a.t - S)))
            : f.end > a.b &&
              ((S = (f.end - a.b) / y), (l.b = Math.max(l.b, a.b + S)));
      }
      function Ef(l, a, o) {
        const u = l.drawingArea,
          { extra: f, additionalAngle: g, padding: y, size: w } = o,
          S = l.getPointPosition(a, u + f + y, g),
          P = Math.round(Ae(me(S.angle + ke))),
          Y = (function Sf(l, a, o) {
            return (
              90 === o || 270 === o
                ? (l -= a / 2)
                : (o > 270 || o < 90) && (l -= a),
              l
            );
          })(S.y, w.h, P),
          dt = (function nu(l) {
            return 0 === l || 180 === l ? "center" : l < 180 ? "left" : "right";
          })(P),
          Tt = (function ou(l, a, o) {
            return "right" === o ? (l -= a) : "center" === o && (l -= a / 2), l;
          })(S.x, w.w, dt);
        return {
          visible: !0,
          x: S.x,
          y: Y,
          textAlign: dt,
          left: Tt,
          top: Y,
          right: Tt + w.w,
          bottom: Y + w.h,
        };
      }
      function uc(l, a) {
        if (!a) return !0;
        const { left: o, top: u, right: f, bottom: g } = l;
        return !(
          Vo({ x: o, y: u }, a) ||
          Vo({ x: o, y: g }, a) ||
          Vo({ x: f, y: u }, a) ||
          Vo({ x: f, y: g }, a)
        );
      }
      function id(l, a, o) {
        const { left: u, top: f, right: g, bottom: y } = o,
          { backdropColor: w } = a;
        if (!ri(w)) {
          const S = xn(a.borderRadius),
            P = Wn(a.backdropPadding);
          l.fillStyle = w;
          const Y = u - P.left,
            dt = f - P.top,
            Tt = g - u + P.width,
            Ht = y - f + P.height;
          Object.values(S).some((be) => 0 !== be)
            ? (l.beginPath(),
              Vn(l, { x: Y, y: dt, w: Tt, h: Ht, radius: S }),
              l.fill())
            : l.fillRect(Y, dt, Tt, Ht);
        }
      }
      function ks(l, a, o, u) {
        const { ctx: f } = l;
        if (o) f.arc(l.xCenter, l.yCenter, a, 0, ae);
        else {
          let g = l.getPointPosition(0, a);
          f.moveTo(g.x, g.y);
          for (let y = 1; y < u; y++)
            (g = l.getPointPosition(y, a)), f.lineTo(g.x, g.y);
        }
      }
      const hc = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        pr = Object.keys(hc);
      function Af(l, a) {
        return l - a;
      }
      function cu(l, a) {
        if (ri(a)) return null;
        const o = l._adapter,
          { parser: u, round: f, isoWeekday: g } = l._parseOpts;
        let y = a;
        return (
          "function" == typeof u && (y = u(y)),
          Ne(y) || (y = "string" == typeof u ? o.parse(y, u) : o.parse(y)),
          null === y
            ? null
            : (f &&
                (y =
                  "week" !== f || (!Wt(g) && !0 !== g)
                    ? o.startOf(y, f)
                    : o.startOf(y, "isoWeek", g)),
              +y)
        );
      }
      function du(l, a, o, u) {
        const f = pr.length;
        for (let g = pr.indexOf(l); g < f - 1; ++g) {
          const y = hc[pr[g]];
          if (
            y.common &&
            Math.ceil(
              (o - a) /
                ((y.steps ? y.steps : Number.MAX_SAFE_INTEGER) * y.size),
            ) <= u
          )
            return pr[g];
        }
        return pr[f - 1];
      }
      function yh(l, a, o) {
        if (o) {
          if (o.length) {
            const { lo: u, hi: f } = Ze(o, a);
            l[o[u] >= a ? o[u] : o[f]] = !0;
          }
        } else l[a] = !0;
      }
      function Qa(l, a, o) {
        const u = [],
          f = {},
          g = a.length;
        let y, w;
        for (y = 0; y < g; ++y)
          (w = a[y]), (f[w] = y), u.push({ value: w, major: !1 });
        return 0 !== g && o
          ? (function nd(l, a, o, u) {
              const f = l._adapter,
                g = +f.startOf(a[0].value, u),
                y = a[a.length - 1].value;
              let w, S;
              for (w = g; w <= y; w = +f.add(w, 1, u))
                (S = o[w]), S >= 0 && (a[S].major = !0);
              return a;
            })(l, u, f, o)
          : u;
      }
      let fc = (() =>
        class l extends Xs {
          static id = "time";
          static defaults = {
            bounds: "data",
            adapters: {},
            time: {
              parser: !1,
              unit: !1,
              round: !1,
              isoWeekday: !1,
              minUnit: "millisecond",
              displayFormats: {},
            },
            ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
          };
          constructor(o) {
            super(o),
              (this._cache = { data: [], labels: [], all: [] }),
              (this._unit = "day"),
              (this._majorUnit = void 0),
              (this._offsets = {}),
              (this._normalized = !1),
              (this._parseOpts = void 0);
          }
          init(o, u = {}) {
            const f = o.time || (o.time = {}),
              g = (this._adapter = new yd__date(o.adapters.date));
            g.init(u),
              ut(f.displayFormats, g.formats()),
              (this._parseOpts = {
                parser: f.parser,
                round: f.round,
                isoWeekday: f.isoWeekday,
              }),
              super.init(o),
              (this._normalized = u.normalized);
          }
          parse(o, u) {
            return void 0 === o ? null : cu(this, o);
          }
          beforeLayout() {
            super.beforeLayout(),
              (this._cache = { data: [], labels: [], all: [] });
          }
          determineDataLimits() {
            const o = this.options,
              u = this._adapter,
              f = o.time.unit || "day";
            let {
              min: g,
              max: y,
              minDefined: w,
              maxDefined: S,
            } = this.getUserBounds();
            function P(Y) {
              !w && !isNaN(Y.min) && (g = Math.min(g, Y.min)),
                !S && !isNaN(Y.max) && (y = Math.max(y, Y.max));
            }
            (!w || !S) &&
              (P(this._getLabelBounds()),
              ("ticks" !== o.bounds || "labels" !== o.ticks.source) &&
                P(this.getMinMax(!1))),
              (g = Ne(g) && !isNaN(g) ? g : +u.startOf(Date.now(), f)),
              (y = Ne(y) && !isNaN(y) ? y : +u.endOf(Date.now(), f) + 1),
              (this.min = Math.min(g, y - 1)),
              (this.max = Math.max(g + 1, y));
          }
          _getLabelBounds() {
            const o = this.getLabelTimestamps();
            let u = Number.POSITIVE_INFINITY,
              f = Number.NEGATIVE_INFINITY;
            return (
              o.length && ((u = o[0]), (f = o[o.length - 1])),
              { min: u, max: f }
            );
          }
          buildTicks() {
            const o = this.options,
              u = o.time,
              f = o.ticks,
              g =
                "labels" === f.source
                  ? this.getLabelTimestamps()
                  : this._generate();
            "ticks" === o.bounds &&
              g.length &&
              ((this.min = this._userMin || g[0]),
              (this.max = this._userMax || g[g.length - 1]));
            const y = this.min,
              S = (function Me(l, a, o) {
                let u = 0,
                  f = l.length;
                for (; u < f && l[u] < a; ) u++;
                for (; f > u && l[f - 1] > o; ) f--;
                return u > 0 || f < l.length ? l.slice(u, f) : l;
              })(g, y, this.max);
            return (
              (this._unit =
                u.unit ||
                (f.autoSkip
                  ? du(u.minUnit, this.min, this.max, this._getLabelCapacity(y))
                  : (function vh(l, a, o, u, f) {
                      for (let g = pr.length - 1; g >= pr.indexOf(o); g--) {
                        const y = pr[g];
                        if (hc[y].common && l._adapter.diff(f, u, y) >= a - 1)
                          return y;
                      }
                      return pr[o ? pr.indexOf(o) : 0];
                    })(this, S.length, u.minUnit, this.min, this.max))),
              (this._majorUnit =
                f.major.enabled && "year" !== this._unit
                  ? (function bh(l) {
                      for (let a = pr.indexOf(l) + 1, o = pr.length; a < o; ++a)
                        if (hc[pr[a]].common) return pr[a];
                    })(this._unit)
                  : void 0),
              this.initOffsets(g),
              o.reverse && S.reverse(),
              Qa(this, S, this._majorUnit)
            );
          }
          afterAutoSkip() {
            this.options.offsetAfterAutoskip &&
              this.initOffsets(this.ticks.map((o) => +o.value));
          }
          initOffsets(o = []) {
            let g,
              y,
              u = 0,
              f = 0;
            this.options.offset &&
              o.length &&
              ((g = this.getDecimalForValue(o[0])),
              (u =
                1 === o.length
                  ? 1 - g
                  : (this.getDecimalForValue(o[1]) - g) / 2),
              (y = this.getDecimalForValue(o[o.length - 1])),
              (f =
                1 === o.length
                  ? y
                  : (y - this.getDecimalForValue(o[o.length - 2])) / 2));
            const w = o.length < 3 ? 0.5 : 0.25;
            (u = Te(u, 0, w)),
              (f = Te(f, 0, w)),
              (this._offsets = { start: u, end: f, factor: 1 / (u + 1 + f) });
          }
          _generate() {
            const o = this._adapter,
              u = this.min,
              f = this.max,
              g = this.options,
              y = g.time,
              w = y.unit || du(y.minUnit, u, f, this._getLabelCapacity(u)),
              S = gi(g.ticks.stepSize, 1),
              P = "week" === w && y.isoWeekday,
              Y = Wt(P) || !0 === P,
              dt = {};
            let Ht,
              be,
              Tt = u;
            if (
              (Y && (Tt = +o.startOf(Tt, "isoWeek", P)),
              (Tt = +o.startOf(Tt, Y ? "day" : w)),
              o.diff(f, u, w) > 1e5 * S)
            )
              throw new Error(
                u +
                  " and " +
                  f +
                  " are too far apart with stepSize of " +
                  S +
                  " " +
                  w,
              );
            const Ce = "data" === g.ticks.source && this.getDataTimestamps();
            for (Ht = Tt, be = 0; Ht < f; Ht = +o.add(Ht, S, w), be++)
              yh(dt, Ht, Ce);
            return (
              (Ht === f || "ticks" === g.bounds || 1 === be) && yh(dt, Ht, Ce),
              Object.keys(dt)
                .sort(Af)
                .map((Se) => +Se)
            );
          }
          getLabelForValue(o) {
            const f = this.options.time;
            return this._adapter.format(
              o,
              f.tooltipFormat ? f.tooltipFormat : f.displayFormats.datetime,
            );
          }
          format(o, u) {
            return this._adapter.format(
              o,
              u || this.options.time.displayFormats[this._unit],
            );
          }
          _tickFormatFunction(o, u, f, g) {
            const y = this.options,
              w = y.ticks.callback;
            if (w) return de(w, [o, u, f], this);
            const S = y.time.displayFormats,
              P = this._unit,
              Y = this._majorUnit,
              Tt = Y && S[Y],
              Ht = f[u];
            return this._adapter.format(
              o,
              g || (Y && Tt && Ht && Ht.major ? Tt : P && S[P]),
            );
          }
          generateTickLabels(o) {
            let u, f, g;
            for (u = 0, f = o.length; u < f; ++u)
              (g = o[u]), (g.label = this._tickFormatFunction(g.value, u, o));
          }
          getDecimalForValue(o) {
            return null === o ? NaN : (o - this.min) / (this.max - this.min);
          }
          getPixelForValue(o) {
            const u = this._offsets,
              f = this.getDecimalForValue(o);
            return this.getPixelForDecimal((u.start + f) * u.factor);
          }
          getValueForPixel(o) {
            const u = this._offsets,
              f = this.getDecimalForPixel(o) / u.factor - u.end;
            return this.min + f * (this.max - this.min);
          }
          _getLabelSize(o) {
            const u = this.options.ticks,
              f = this.ctx.measureText(o).width,
              g = Yt(this.isHorizontal() ? u.maxRotation : u.minRotation),
              y = Math.cos(g),
              w = Math.sin(g),
              S = this._resolveTickFontOptions(0).size;
            return { w: f * y + S * w, h: f * w + S * y };
          }
          _getLabelCapacity(o) {
            const u = this.options.time,
              f = u.displayFormats,
              g = f[u.unit] || f.millisecond,
              y = this._tickFormatFunction(
                o,
                0,
                Qa(this, [o], this._majorUnit),
                g,
              ),
              w = this._getLabelSize(y),
              S =
                Math.floor(
                  this.isHorizontal() ? this.width / w.w : this.height / w.h,
                ) - 1;
            return S > 0 ? S : 1;
          }
          getDataTimestamps() {
            let u,
              f,
              o = this._cache.data || [];
            if (o.length) return o;
            const g = this.getMatchingVisibleMetas();
            if (this._normalized && g.length)
              return (this._cache.data =
                g[0].controller.getAllParsedValues(this));
            for (u = 0, f = g.length; u < f; ++u)
              o = o.concat(g[u].controller.getAllParsedValues(this));
            return (this._cache.data = this.normalize(o));
          }
          getLabelTimestamps() {
            const o = this._cache.labels || [];
            let u, f;
            if (o.length) return o;
            const g = this.getLabels();
            for (u = 0, f = g.length; u < f; ++u) o.push(cu(this, g[u]));
            return (this._cache.labels = this._normalized
              ? o
              : this.normalize(o));
          }
          normalize(o) {
            return Yi(o.sort(Af));
          }
        })();
      function kl(l, a, o) {
        let g,
          y,
          w,
          S,
          u = 0,
          f = l.length - 1;
        o
          ? (a >= l[u].pos &&
              a <= l[f].pos &&
              ({ lo: u, hi: f } = ft(l, "pos", a)),
            ({ pos: g, time: w } = l[u]),
            ({ pos: y, time: S } = l[f]))
          : (a >= l[u].time &&
              a <= l[f].time &&
              ({ lo: u, hi: f } = ft(l, "time", a)),
            ({ time: g, pos: w } = l[u]),
            ({ time: y, pos: S } = l[f]));
        const P = y - g;
        return P ? w + ((S - w) * (a - g)) / P : w;
      }
      const hu = [
        Oc,
        df,
        wf,
        Object.freeze({
          __proto__: null,
          CategoryScale: cc,
          LinearScale: class ph extends dc {
            static id = "linear";
            static defaults = { ticks: { callback: he.formatters.numeric } };
            determineDataLimits() {
              const { min: a, max: o } = this.getMinMax(!0);
              (this.min = Ne(a) ? a : 0),
                (this.max = Ne(o) ? o : 1),
                this.handleTickRangeOptions();
            }
            computeTickLimit() {
              const a = this.isHorizontal(),
                o = a ? this.width : this.height,
                u = Yt(this.options.ticks.minRotation),
                f = (a ? Math.sin(u) : Math.cos(u)) || 0.001,
                g = this._resolveTickFontOptions(0);
              return Math.ceil(o / Math.min(40, g.lineHeight / f));
            }
            getPixelForValue(a) {
              return null === a
                ? NaN
                : this.getPixelForDecimal(
                    (a - this._startValue) / this._valueRange,
                  );
            }
            getValueForPixel(a) {
              return (
                this._startValue + this.getDecimalForPixel(a) * this._valueRange
              );
            }
          },
          LogarithmicScale: class ed extends Xs {
            static id = "logarithmic";
            static defaults = {
              ticks: {
                callback: he.formatters.logarithmic,
                major: { enabled: !0 },
              },
            };
            constructor(a) {
              super(a),
                (this.start = void 0),
                (this.end = void 0),
                (this._startValue = void 0),
                (this._valueRange = 0);
            }
            parse(a, o) {
              const u = dc.prototype.parse.apply(this, [a, o]);
              if (0 !== u) return Ne(u) && u > 0 ? u : null;
              this._zero = !0;
            }
            determineDataLimits() {
              const { min: a, max: o } = this.getMinMax(!0);
              (this.min = Ne(a) ? Math.max(0, a) : null),
                (this.max = Ne(o) ? Math.max(0, o) : null),
                this.options.beginAtZero && (this._zero = !0),
                this._zero &&
                  this.min !== this._suggestedMin &&
                  !Ne(this._userMin) &&
                  (this.min =
                    a === To(this.min, 0) ? To(this.min, -1) : To(this.min, 0)),
                this.handleTickRangeOptions();
            }
            handleTickRangeOptions() {
              const { minDefined: a, maxDefined: o } = this.getUserBounds();
              let u = this.min,
                f = this.max;
              const g = (w) => (u = a ? u : w),
                y = (w) => (f = o ? f : w);
              u === f && (u <= 0 ? (g(1), y(10)) : (g(To(u, -1)), y(To(f, 1)))),
                u <= 0 && g(To(f, -1)),
                f <= 0 && y(To(u, 1)),
                (this.min = u),
                (this.max = f);
            }
            buildTicks() {
              const a = this.options,
                u = (function Da(l, { min: a, max: o }) {
                  a = Ri(l.min, a);
                  const u = [],
                    f = Wi(a);
                  let g = (function td(l, a) {
                      let u = Wi(a - l);
                      for (; Al(l, a, u) > 10; ) u++;
                      for (; Al(l, a, u) < 10; ) u--;
                      return Math.min(u, Wi(l));
                    })(a, o),
                    y = g < 0 ? Math.pow(10, Math.abs(g)) : 1;
                  const w = Math.pow(10, g),
                    S = f > g ? Math.pow(10, f) : 0,
                    P = Math.round((a - S) * y) / y,
                    Y = Math.floor((a - S) / w / 10) * w * 10;
                  let dt = Math.floor((P - Y) / Math.pow(10, g)),
                    Tt = Ri(
                      l.min,
                      Math.round((S + Y + dt * Math.pow(10, g)) * y) / y,
                    );
                  for (; Tt < o; )
                    u.push({ value: Tt, major: Sn(Tt), significand: dt }),
                      dt >= 10 ? (dt = dt < 15 ? 15 : 20) : dt++,
                      dt >= 20 && (g++, (dt = 2), (y = g >= 0 ? 1 : y)),
                      (Tt = Math.round((S + Y + dt * Math.pow(10, g)) * y) / y);
                  const Ht = Ri(l.max, Tt);
                  return (
                    u.push({ value: Ht, major: Sn(Ht), significand: dt }), u
                  );
                })({ min: this._userMin, max: this._userMax }, this);
              return (
                "ticks" === a.bounds && It(u, this, "value"),
                a.reverse
                  ? (u.reverse(),
                    (this.start = this.max),
                    (this.end = this.min))
                  : ((this.start = this.min), (this.end = this.max)),
                u
              );
            }
            getLabelForValue(a) {
              return void 0 === a
                ? "0"
                : Jn(a, this.chart.options.locale, this.options.ticks.format);
            }
            configure() {
              const a = this.min;
              super.configure(),
                (this._startValue = vt(a)),
                (this._valueRange = vt(this.max) - vt(a));
            }
            getPixelForValue(a) {
              return (
                (void 0 === a || 0 === a) && (a = this.min),
                null === a || isNaN(a)
                  ? NaN
                  : this.getPixelForDecimal(
                      a === this.min
                        ? 0
                        : (vt(a) - this._startValue) / this._valueRange,
                    )
              );
            }
            getValueForPixel(a) {
              const o = this.getDecimalForPixel(a);
              return Math.pow(10, this._startValue + o * this._valueRange);
            }
          },
          RadialLinearScale: class lu extends dc {
            static id = "radialLinear";
            static defaults = {
              display: !0,
              animate: !0,
              position: "chartArea",
              angleLines: {
                display: !0,
                lineWidth: 1,
                borderDash: [],
                borderDashOffset: 0,
              },
              grid: { circular: !1 },
              startAngle: 0,
              ticks: { showLabelBackdrop: !0, callback: he.formatters.numeric },
              pointLabels: {
                backdropColor: void 0,
                backdropPadding: 2,
                display: !0,
                font: { size: 10 },
                callback: (a) => a,
                padding: 5,
                centerPointLabels: !1,
              },
            };
            static defaultRoutes = {
              "angleLines.color": "borderColor",
              "pointLabels.color": "color",
              "ticks.color": "color",
            };
            static descriptors = { angleLines: { _fallback: "grid" } };
            constructor(a) {
              super(a),
                (this.xCenter = void 0),
                (this.yCenter = void 0),
                (this.drawingArea = void 0),
                (this._pointLabels = []),
                (this._pointLabelItems = []);
            }
            setDimensions() {
              const a = (this._padding = Wn(eu(this.options) / 2)),
                o = (this.width = this.maxWidth - a.width),
                u = (this.height = this.maxHeight - a.height);
              (this.xCenter = Math.floor(this.left + o / 2 + a.left)),
                (this.yCenter = Math.floor(this.top + u / 2 + a.top)),
                (this.drawingArea = Math.floor(Math.min(o, u) / 2));
            }
            determineDataLimits() {
              const { min: a, max: o } = this.getMinMax(!1);
              (this.min = Ne(a) && !isNaN(a) ? a : 0),
                (this.max = Ne(o) && !isNaN(o) ? o : 0),
                this.handleTickRangeOptions();
            }
            computeTickLimit() {
              return Math.ceil(this.drawingArea / eu(this.options));
            }
            generateTickLabels(a) {
              dc.prototype.generateTickLabels.call(this, a),
                (this._pointLabels = this.getLabels()
                  .map((o, u) => {
                    const f = de(
                      this.options.pointLabels.callback,
                      [o, u],
                      this,
                    );
                    return f || 0 === f ? f : "";
                  })
                  .filter((o, u) => this.chart.getDataVisibility(u)));
            }
            fit() {
              const a = this.options;
              a.display && a.pointLabels.display
                ? (function Mf(l) {
                    const a = {
                        l: l.left + l._padding.left,
                        r: l.right - l._padding.right,
                        t: l.top + l._padding.top,
                        b: l.bottom - l._padding.bottom,
                      },
                      o = Object.assign({}, a),
                      u = [],
                      f = [],
                      g = l._pointLabels.length,
                      y = l.options.pointLabels,
                      w = y.centerPointLabels ? Xt / g : 0;
                    for (let S = 0; S < g; S++) {
                      const P = y.setContext(l.getPointLabelContext(S));
                      f[S] = P.padding;
                      const Y = l.getPointPosition(S, l.drawingArea + f[S], w),
                        dt = jn(P.font),
                        Tt = Df(l.ctx, dt, l._pointLabels[S]);
                      u[S] = Tt;
                      const Ht = me(l.getIndexAngle(S) + w),
                        be = Math.round(Ae(Ht));
                      _h(
                        o,
                        a,
                        Ht,
                        gh(be, Y.x, Tt.w, 0, 180),
                        gh(be, Y.y, Tt.h, 90, 270),
                      );
                    }
                    l.setCenterPoint(
                      a.l - o.l,
                      o.r - a.r,
                      a.t - o.t,
                      o.b - a.b,
                    ),
                      (l._pointLabelItems = (function iu(l, a, o) {
                        const u = [],
                          f = l._pointLabels.length,
                          g = l.options,
                          { centerPointLabels: y, display: w } = g.pointLabels,
                          S = {
                            extra: eu(g) / 2,
                            additionalAngle: y ? Xt / f : 0,
                          };
                        let P;
                        for (let Y = 0; Y < f; Y++) {
                          (S.padding = o[Y]), (S.size = a[Y]);
                          const dt = Ef(l, Y, S);
                          u.push(dt),
                            "auto" === w &&
                              ((dt.visible = uc(dt, P)),
                              dt.visible && (P = dt));
                        }
                        return u;
                      })(l, u, f));
                  })(this)
                : this.setCenterPoint(0, 0, 0, 0);
            }
            setCenterPoint(a, o, u, f) {
              (this.xCenter += Math.floor((a - o) / 2)),
                (this.yCenter += Math.floor((u - f) / 2)),
                (this.drawingArea -= Math.min(
                  this.drawingArea / 2,
                  Math.max(a, o, u, f),
                ));
            }
            getIndexAngle(a) {
              return me(
                a * (ae / (this._pointLabels.length || 1)) +
                  Yt(this.options.startAngle || 0),
              );
            }
            getDistanceFromCenterForValue(a) {
              if (ri(a)) return NaN;
              const o = this.drawingArea / (this.max - this.min);
              return this.options.reverse
                ? (this.max - a) * o
                : (a - this.min) * o;
            }
            getValueForDistanceFromCenter(a) {
              if (ri(a)) return NaN;
              const o = a / (this.drawingArea / (this.max - this.min));
              return this.options.reverse ? this.max - o : this.min + o;
            }
            getPointLabelContext(a) {
              const o = this._pointLabels || [];
              if (a >= 0 && a < o.length) {
                const u = o[a];
                return (function au(l, a, o) {
                  return or(l, { label: o, index: a, type: "pointLabel" });
                })(this.getContext(), a, u);
              }
            }
            getPointPosition(a, o, u = 0) {
              const f = this.getIndexAngle(a) - ke + u;
              return {
                x: Math.cos(f) * o + this.xCenter,
                y: Math.sin(f) * o + this.yCenter,
                angle: f,
              };
            }
            getPointPositionForValue(a, o) {
              return this.getPointPosition(
                a,
                this.getDistanceFromCenterForValue(o),
              );
            }
            getBasePosition(a) {
              return this.getPointPositionForValue(a || 0, this.getBaseValue());
            }
            getPointLabelPosition(a) {
              const {
                left: o,
                top: u,
                right: f,
                bottom: g,
              } = this._pointLabelItems[a];
              return { left: o, top: u, right: f, bottom: g };
            }
            drawBackground() {
              const {
                backgroundColor: a,
                grid: { circular: o },
              } = this.options;
              if (a) {
                const u = this.ctx;
                u.save(),
                  u.beginPath(),
                  ks(
                    this,
                    this.getDistanceFromCenterForValue(this._endValue),
                    o,
                    this._pointLabels.length,
                  ),
                  u.closePath(),
                  (u.fillStyle = a),
                  u.fill(),
                  u.restore();
              }
            }
            drawGrid() {
              const a = this.ctx,
                o = this.options,
                { angleLines: u, grid: f, border: g } = o,
                y = this._pointLabels.length;
              let w, S, P;
              if (
                (o.pointLabels.display &&
                  (function ru(l, a) {
                    const {
                      ctx: o,
                      options: { pointLabels: u },
                    } = l;
                    for (let f = a - 1; f >= 0; f--) {
                      const g = l._pointLabelItems[f];
                      if (!g.visible) continue;
                      const y = u.setContext(l.getPointLabelContext(f));
                      id(o, y, g);
                      const w = jn(y.font),
                        { x: S, y: P, textAlign: Y } = g;
                      xo(o, l._pointLabels[f], S, P + w.lineHeight / 2, w, {
                        color: y.color,
                        textAlign: Y,
                        textBaseline: "middle",
                      });
                    }
                  })(this, y),
                f.display &&
                  this.ticks.forEach((Y, dt) => {
                    if (0 !== dt || (0 === dt && this.min < 0)) {
                      S = this.getDistanceFromCenterForValue(Y.value);
                      const Tt = this.getContext(dt),
                        Ht = f.setContext(Tt),
                        be = g.setContext(Tt);
                      !(function su(l, a, o, u, f) {
                        const g = l.ctx,
                          y = a.circular,
                          { color: w, lineWidth: S } = a;
                        (!y && !u) ||
                          !w ||
                          !S ||
                          o < 0 ||
                          (g.save(),
                          (g.strokeStyle = w),
                          (g.lineWidth = S),
                          g.setLineDash(f.dash),
                          (g.lineDashOffset = f.dashOffset),
                          g.beginPath(),
                          ks(l, o, y, u),
                          g.closePath(),
                          g.stroke(),
                          g.restore());
                      })(this, Ht, S, y, be);
                    }
                  }),
                u.display)
              ) {
                for (a.save(), w = y - 1; w >= 0; w--) {
                  const Y = u.setContext(this.getPointLabelContext(w)),
                    { color: dt, lineWidth: Tt } = Y;
                  !Tt ||
                    !dt ||
                    ((a.lineWidth = Tt),
                    (a.strokeStyle = dt),
                    a.setLineDash(Y.borderDash),
                    (a.lineDashOffset = Y.borderDashOffset),
                    (S = this.getDistanceFromCenterForValue(
                      o.ticks.reverse ? this.min : this.max,
                    )),
                    (P = this.getPointPosition(w, S)),
                    a.beginPath(),
                    a.moveTo(this.xCenter, this.yCenter),
                    a.lineTo(P.x, P.y),
                    a.stroke());
                }
                a.restore();
              }
            }
            drawBorder() {}
            drawLabels() {
              const a = this.ctx,
                o = this.options,
                u = o.ticks;
              if (!u.display) return;
              const f = this.getIndexAngle(0);
              let g, y;
              a.save(),
                a.translate(this.xCenter, this.yCenter),
                a.rotate(f),
                (a.textAlign = "center"),
                (a.textBaseline = "middle"),
                this.ticks.forEach((w, S) => {
                  if (0 === S && this.min >= 0 && !o.reverse) return;
                  const P = u.setContext(this.getContext(S)),
                    Y = jn(P.font);
                  if (
                    ((g = this.getDistanceFromCenterForValue(
                      this.ticks[S].value,
                    )),
                    P.showLabelBackdrop)
                  ) {
                    (a.font = Y.string),
                      (y = a.measureText(w.label).width),
                      (a.fillStyle = P.backdropColor);
                    const dt = Wn(P.backdropPadding);
                    a.fillRect(
                      -y / 2 - dt.left,
                      -g - Y.size / 2 - dt.top,
                      y + dt.width,
                      Y.size + dt.height,
                    );
                  }
                  xo(a, w.label, 0, -g, Y, {
                    color: P.color,
                    strokeColor: P.textStrokeColor,
                    strokeWidth: P.textStrokeWidth,
                  });
                }),
                a.restore();
            }
            drawTitle() {}
          },
          TimeScale: fc,
          TimeSeriesScale: class od extends fc {
            static id = "timeseries";
            static defaults = fc.defaults;
            constructor(a) {
              super(a),
                (this._table = []),
                (this._minPos = void 0),
                (this._tableRange = void 0);
            }
            initOffsets() {
              const a = this._getTimestampsForTable(),
                o = (this._table = this.buildLookupTable(a));
              (this._minPos = kl(o, this.min)),
                (this._tableRange = kl(o, this.max) - this._minPos),
                super.initOffsets(a);
            }
            buildLookupTable(a) {
              const { min: o, max: u } = this,
                f = [],
                g = [];
              let y, w, S, P, Y;
              for (y = 0, w = a.length; y < w; ++y)
                (P = a[y]), P >= o && P <= u && f.push(P);
              if (f.length < 2)
                return [
                  { time: o, pos: 0 },
                  { time: u, pos: 1 },
                ];
              for (y = 0, w = f.length; y < w; ++y)
                (Y = f[y + 1]),
                  (S = f[y - 1]),
                  (P = f[y]),
                  Math.round((Y + S) / 2) !== P &&
                    g.push({ time: P, pos: y / (w - 1) });
              return g;
            }
            _generate() {
              const a = this.min,
                o = this.max;
              let u = super.getDataTimestamps();
              return (
                (!u.includes(a) || !u.length) && u.splice(0, 0, a),
                (!u.includes(o) || 1 === u.length) && u.push(o),
                u.sort((f, g) => f - g)
              );
            }
            _getTimestampsForTable() {
              let a = this._cache.all || [];
              if (a.length) return a;
              const o = this.getDataTimestamps(),
                u = this.getLabelTimestamps();
              return (
                (a =
                  o.length && u.length
                    ? this.normalize(o.concat(u))
                    : o.length
                      ? o
                      : u),
                (a = this._cache.all = a),
                a
              );
            }
            getDecimalForValue(a) {
              return (kl(this._table, a) - this._minPos) / this._tableRange;
            }
            getValueForPixel(a) {
              const o = this._offsets,
                u = this.getDecimalForPixel(a) / o.factor - o.end;
              return kl(this._table, u * this._tableRange + this._minPos, !0);
            }
          },
        }),
      ];
    },
    7582: (ui, Zt, D) => {
      D.d(Zt, {
        FC: () => _t,
        Jh: () => jt,
        KL: () => Pt,
        ZT: () => x,
        _T: () => p,
        ev: () => Re,
        mG: () => A,
        pi: () => C,
        qq: () => wt,
      });
      var s = function (Ie, Fe) {
        return (s =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (xe, Ue) {
              xe.__proto__ = Ue;
            }) ||
          function (xe, Ue) {
            for (var Ft in Ue)
              Object.prototype.hasOwnProperty.call(Ue, Ft) && (xe[Ft] = Ue[Ft]);
          })(Ie, Fe);
      };
      function x(Ie, Fe) {
        if ("function" != typeof Fe && null !== Fe)
          throw new TypeError(
            "Class extends value " +
              String(Fe) +
              " is not a constructor or null",
          );
        function xe() {
          this.constructor = Ie;
        }
        s(Ie, Fe),
          (Ie.prototype =
            null === Fe
              ? Object.create(Fe)
              : ((xe.prototype = Fe.prototype), new xe()));
      }
      var C = function () {
        return (
          (C =
            Object.assign ||
            function (Fe) {
              for (var xe, Ue = 1, Ft = arguments.length; Ue < Ft; Ue++)
                for (var Mt in (xe = arguments[Ue]))
                  Object.prototype.hasOwnProperty.call(xe, Mt) &&
                    (Fe[Mt] = xe[Mt]);
              return Fe;
            }),
          C.apply(this, arguments)
        );
      };
      function p(Ie, Fe) {
        var xe = {};
        for (var Ue in Ie)
          Object.prototype.hasOwnProperty.call(Ie, Ue) &&
            Fe.indexOf(Ue) < 0 &&
            (xe[Ue] = Ie[Ue]);
        if (null != Ie && "function" == typeof Object.getOwnPropertySymbols) {
          var Ft = 0;
          for (Ue = Object.getOwnPropertySymbols(Ie); Ft < Ue.length; Ft++)
            Fe.indexOf(Ue[Ft]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(Ie, Ue[Ft]) &&
              (xe[Ue[Ft]] = Ie[Ue[Ft]]);
        }
        return xe;
      }
      function A(Ie, Fe, xe, Ue) {
        return new (xe || (xe = Promise))(function (Mt, we) {
          function Vt(li) {
            try {
              Le(Ue.next(li));
            } catch (ii) {
              we(ii);
            }
          }
          function re(li) {
            try {
              Le(Ue.throw(li));
            } catch (ii) {
              we(ii);
            }
          }
          function Le(li) {
            li.done
              ? Mt(li.value)
              : (function Ft(Mt) {
                  return Mt instanceof xe
                    ? Mt
                    : new xe(function (we) {
                        we(Mt);
                      });
                })(li.value).then(Vt, re);
          }
          Le((Ue = Ue.apply(Ie, Fe || [])).next());
        });
      }
      function jt(Ie, Fe) {
        var Ue,
          Ft,
          Mt,
          we,
          xe = {
            label: 0,
            sent: function () {
              if (1 & Mt[0]) throw Mt[1];
              return Mt[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (we = { next: Vt(0), throw: Vt(1), return: Vt(2) }),
          "function" == typeof Symbol &&
            (we[Symbol.iterator] = function () {
              return this;
            }),
          we
        );
        function Vt(Le) {
          return function (li) {
            return (function re(Le) {
              if (Ue) throw new TypeError("Generator is already executing.");
              for (; we && ((we = 0), Le[0] && (xe = 0)), xe; )
                try {
                  if (
                    ((Ue = 1),
                    Ft &&
                      (Mt =
                        2 & Le[0]
                          ? Ft.return
                          : Le[0]
                            ? Ft.throw || ((Mt = Ft.return) && Mt.call(Ft), 0)
                            : Ft.next) &&
                      !(Mt = Mt.call(Ft, Le[1])).done)
                  )
                    return Mt;
                  switch (
                    ((Ft = 0), Mt && (Le = [2 & Le[0], Mt.value]), Le[0])
                  ) {
                    case 0:
                    case 1:
                      Mt = Le;
                      break;
                    case 4:
                      return xe.label++, { value: Le[1], done: !1 };
                    case 5:
                      xe.label++, (Ft = Le[1]), (Le = [0]);
                      continue;
                    case 7:
                      (Le = xe.ops.pop()), xe.trys.pop();
                      continue;
                    default:
                      if (
                        !(Mt =
                          (Mt = xe.trys).length > 0 && Mt[Mt.length - 1]) &&
                        (6 === Le[0] || 2 === Le[0])
                      ) {
                        xe = 0;
                        continue;
                      }
                      if (
                        3 === Le[0] &&
                        (!Mt || (Le[1] > Mt[0] && Le[1] < Mt[3]))
                      ) {
                        xe.label = Le[1];
                        break;
                      }
                      if (6 === Le[0] && xe.label < Mt[1]) {
                        (xe.label = Mt[1]), (Mt = Le);
                        break;
                      }
                      if (Mt && xe.label < Mt[2]) {
                        (xe.label = Mt[2]), xe.ops.push(Le);
                        break;
                      }
                      Mt[2] && xe.ops.pop(), xe.trys.pop();
                      continue;
                  }
                  Le = Fe.call(Ie, xe);
                } catch (li) {
                  (Le = [6, li]), (Ft = 0);
                } finally {
                  Ue = Mt = 0;
                }
              if (5 & Le[0]) throw Le[1];
              return { value: Le[0] ? Le[1] : void 0, done: !0 };
            })([Le, li]);
          };
        }
      }
      function Re(Ie, Fe, xe) {
        if (xe || 2 === arguments.length)
          for (var Mt, Ue = 0, Ft = Fe.length; Ue < Ft; Ue++)
            (Mt || !(Ue in Fe)) &&
              (Mt || (Mt = Array.prototype.slice.call(Fe, 0, Ue)),
              (Mt[Ue] = Fe[Ue]));
        return Ie.concat(Mt || Array.prototype.slice.call(Fe));
      }
      function wt(Ie) {
        return this instanceof wt ? ((this.v = Ie), this) : new wt(Ie);
      }
      function _t(Ie, Fe, xe) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var Ft,
          Ue = xe.apply(Ie, Fe || []),
          Mt = [];
        return (
          (Ft = {}),
          Vt("next"),
          Vt("throw"),
          Vt("return", function we(fi) {
            return function (ri) {
              return Promise.resolve(ri).then(fi, ii);
            };
          }),
          (Ft[Symbol.asyncIterator] = function () {
            return this;
          }),
          Ft
        );
        function Vt(fi, ri) {
          Ue[fi] &&
            ((Ft[fi] = function (te) {
              return new Promise(function (Be, Ne) {
                Mt.push([fi, te, Be, Ne]) > 1 || re(fi, te);
              });
            }),
            ri && (Ft[fi] = ri(Ft[fi])));
        }
        function re(fi, ri) {
          try {
            !(function Le(fi) {
              fi.value instanceof wt
                ? Promise.resolve(fi.value.v).then(li, ii)
                : Mi(Mt[0][2], fi);
            })(Ue[fi](ri));
          } catch (te) {
            Mi(Mt[0][3], te);
          }
        }
        function li(fi) {
          re("next", fi);
        }
        function ii(fi) {
          re("throw", fi);
        }
        function Mi(fi, ri) {
          fi(ri), Mt.shift(), Mt.length && re(Mt[0][0], Mt[0][1]);
        }
      }
      function Pt(Ie) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var xe,
          Fe = Ie[Symbol.asyncIterator];
        return Fe
          ? Fe.call(Ie)
          : ((Ie = (function De(Ie) {
              var Fe = "function" == typeof Symbol && Symbol.iterator,
                xe = Fe && Ie[Fe],
                Ue = 0;
              if (xe) return xe.call(Ie);
              if (Ie && "number" == typeof Ie.length)
                return {
                  next: function () {
                    return (
                      Ie && Ue >= Ie.length && (Ie = void 0),
                      { value: Ie && Ie[Ue++], done: !Ie }
                    );
                  },
                };
              throw new TypeError(
                Fe
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined.",
              );
            })(Ie)),
            (xe = {}),
            Ue("next"),
            Ue("throw"),
            Ue("return"),
            (xe[Symbol.asyncIterator] = function () {
              return this;
            }),
            xe);
        function Ue(Mt) {
          xe[Mt] =
            Ie[Mt] &&
            function (we) {
              return new Promise(function (Vt, re) {
                !(function Ft(Mt, we, Vt, re) {
                  Promise.resolve(re).then(function (Le) {
                    Mt({ value: Le, done: Vt });
                  }, we);
                })(Vt, re, (we = Ie[Mt](we)).done, we.value);
              });
            };
        }
      }
      "function" == typeof SuppressedError && SuppressedError;
    },
  },
  (ui) => {
    ui((ui.s = 7743));
  },
]);
